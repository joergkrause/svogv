var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AutoFormComponent.html",[0,0.856,1,1.569]],["body/components/AutoFormComponent.html",[0,1.372,1,2.429,2,1.159,3,0.303,4,1.806,5,1.945,6,1.343,7,1.107,8,0.504,9,0.85,10,0.35,11,1.343,12,1.011,13,0.34,14,2.335,15,0.236,16,2.17,17,2.651,18,2.583,19,2.934,20,2.22,21,1.816,22,2.507,23,1.644,24,2.583,25,3.467,26,2.888,27,1.961,28,1.376,29,1.27,30,2.222,31,1.502,32,1.961,33,2.335,34,2.17,35,1.983,36,1.961,37,2.814,38,1.216,39,3.136,40,2.838,41,2.507,42,1.644,43,2.507,44,0.034,45,3.467,46,2.888,47,2.888,48,3.467,49,3.467,50,5.124,51,5.124,52,1.641,53,2.888,54,2.507,55,2.507,56,2.507,57,2.222,58,2.888,59,3.467,60,2.38,61,3.467,62,0.378,63,0.98,64,2.161,65,3.135,66,3.053,67,0.897,68,3.813,69,2.814,70,1.995,71,3.204,72,4.136,73,1.383,74,1.148,75,2.335,76,0.427,77,2.335,78,2.888,79,2.298,80,0.978,81,0.505,82,1.383,83,2.335,84,3.467,85,1.667,86,1.995,87,2.222,88,3.467,89,2.507,90,0.621,91,2.335,92,0.821,93,1.291,94,2.335,95,0.85,96,1.995,97,2.335,98,2.335,99,1.011,100,0.717,101,1.496,102,1.644,103,1.995,104,1.262,105,1.945,106,1.806,107,1.107,108,1.688,109,1.995,110,1.496,111,1.107,112,1.806,113,1.011,114,0.627,115,1.496,116,2.222,117,1.791,118,1.011,119,1.945,120,1.945,121,1.945,122,1.107,123,1.945,124,0.926,125,1.945,126,1.343,127,1.216,128,1.343,129,1.496,130,1.214,131,2.888,132,0.897,133,1.806,134,1.502,135,1.376,136,3.31,137,1.496,138,2.335,139,0.741,140,0.476,141,2.335,142,1.688,143,1.343,144,1.945,145,2.335,146,1.945,147,0.781,148,2.888,149,1.343,150,1.011,151,1.496,152,1.343,153,1.945,154,1.107,155,0.85,156,1.216,157,0.85,158,1.216,159,1.496,160,1.635,161,1.688,162,1.995,163,1.688,164,1.496,165,1.496,166,2.507,167,1.644,168,1.029,169,1.688,170,1.688,171,1.688,172,1.688,173,1.688,174,1.688,175,1.688,176,1.945,177,1.496,178,1.945,179,1.688,180,1.945,181,1.945,182,1.945,183,2.888,184,2.888,185,1.945,186,1.945,187,1.688,188,1.945,189,1.945,190,1.945,191,1.376,192,1.184,193,1.945,194,2.222,195,1.688,196,2.888,197,1.945,198,2.888,199,1.945,200,1.496,201,1.945,202,1.945,203,1.945,204,1.688,205,1.011,206,1.688,207,1.688,208,1.688,209,1.107,210,1.945,211,1.107,212,1.343,213,1.216,214,1.688,215,1.107,216,0.85,217,1.502,218,1.216,219,0.717,220,1.496,221,1.343,222,1.945,223,1.011,224,0.926,225,1.791,226,1.343,227,2.335,228,4.269,229,2.507,230,2.335,231,1.641,232,3.467,233,1.688,234,1.107,235,1.941,236,3.467,237,4.269,238,4.269,239,1.496,240,1.343,241,1.107,242,4.136,243,2.335,244,2.335,245,1.343,246,3.813,247,4.136,248,4.577,249,4.136,250,4.577,251,1.216,252,2.335,253,2.335,254,2.335,255,2.335,256,2.335,257,1.216,258,2.547,259,1.945,260,1.496,261,2.335,262,1.644,263,1.343,264,2.507,265,2.335,266,3.467,267,3.467,268,3.467,269,2.335,270,0.926,271,2.335,272,0.781,273,1.945,274,1.343,275,1.107,276,1.945,277,2.335,278,2.335,279,2.335,280,2.335,281,0.926,282,1.644,283,2.335,284,2.507,285,2.888,286,3.467,287,2.335,288,1.011,289,2.335,290,3.467,291,1.806,292,1.107,293,1.688,294,2.634,295,1.343,296,1.343,297,1.216,298,1.343,299,1.216,300,1.011,301,1.343,302,1.107,303,1.343,304,1.216,305,1.343,306,1.216,307,1.343,308,1.343,309,1.343,310,0.012,311,0.018,312,0.012]],["title/classes/DataGridHeaderModel.html",[140,0.381,313,2.393]],["body/classes/DataGridHeaderModel.html",[3,0.417,8,0.467,9,1.583,10,0.324,13,0.467,15,0.438,29,1.696,42,2.061,44,0.034,62,0.519,63,1.251,64,2.229,73,1.073,74,1.335,76,0.538,80,1.692,81,0.695,82,1.648,90,1.112,93,1.605,100,1.335,114,0.655,128,2.501,130,1.03,132,0.83,139,0.575,140,0.369,154,2.061,155,1.924,157,2.185,160,1.073,168,1.128,217,2.391,219,1.514,229,4.115,251,2.264,270,1.725,282,2.698,310,0.017,311,0.022,312,0.017,313,3.143,314,1.169,315,3.209,316,4.346,317,2.504,318,2.617,319,4.106,320,2.448,321,3.564,322,4.741,323,3.159,324,2.836,325,4.929,326,1.88,327,2.567,328,2.673,329,3.209,330,4.346,331,1.308,332,2.337,333,4.929,334,4.929,335,4.106,336,4.106,337,3.564,338,3.159,339,1.648,340,2.337,341,3.159,342,2.337,343,5.283,344,3.209,345,3.143,346,4.346,347,2.501,348,3.209,349,2.061,350,2.786,351,2.501,352,3.209,353,3.159,354,3.209,355,2.786,356,3.621,357,3.621,358,3.209,359,2.786,360,2.786,361,4.346,362,2.786,363,3.209,364,1.725,365,2.786,366,3.564,367,3.209,368,2.501,369,3.621,370,3.143,371,2.786,372,3.621,373,2.061,374,3.209,375,3.04,376,3.209,377,3.209,378,3.209,379,2.321]],["title/classes/DataGridModel.html",[140,0.381,380,2.757]],["body/classes/DataGridModel.html",[3,0.241,8,0.269,10,0.187,13,0.269,15,0.409,20,1.258,28,0.735,31,1.258,44,0.034,62,0.3,63,1.044,64,2.28,67,0.751,73,0.619,74,1.328,76,0.537,80,1.243,81,1.153,82,1.199,90,0.907,92,1.342,95,1.896,96,1.672,99,1.553,102,0.878,104,0.674,110,2.999,111,2.09,112,2.296,113,1.258,114,0.635,130,0.961,132,0.479,137,1.187,139,0.52,140,0.507,147,0.619,149,1.672,151,1.862,156,0.965,157,1.605,159,1.557,160,1.357,168,1.015,192,1.31,217,1.553,220,1.862,226,1.672,229,2.101,231,1.856,235,2.115,245,1.066,251,1.867,262,0.878,263,1.672,264,2.935,270,2.115,272,0.971,274,1.066,281,1.75,282,2.319,288,2.353,292,0.878,310,0.01,311,0.015,312,0.01,313,3.537,314,0.674,317,1.924,322,1.543,323,2.602,327,0.965,331,1.2,332,1.377,341,1.187,342,1.924,350,3.736,351,1.672,353,1.187,355,1.187,365,1.862,372,2.42,375,2.335,379,2.101,380,2.42,381,1.543,382,2.905,383,2.905,384,2.42,385,1.513,386,4.059,387,4.599,388,4.059,389,0.971,390,2.905,391,2.297,392,2.42,393,2.42,394,3.381,395,4.678,396,2.42,397,1.978,398,3.584,399,3.584,400,3.584,401,3.584,402,3.584,403,4.891,404,3.584,405,3.584,406,3.584,407,2.905,408,2.905,409,2.905,410,4.059,411,2.905,412,2.101,413,3.584,414,3.584,415,3.584,416,3.584,417,2.905,418,2.42,419,3.381,420,2.905,421,3.584,422,3.584,423,2.905,424,3.992,425,2.905,426,1.852,427,1.852,428,2.256,429,1.852,430,1.924,431,2.935,432,4.059,433,3.897,434,2.935,435,1.852,436,1.852,437,1.852,438,3.381,439,2.905,440,3.381,441,1.862,442,1.862,443,2.42,444,1.852,445,3.853,446,2.905,447,1.852,448,2.42,449,2.905,450,1.058,451,1.862,452,2.602,453,4.059,454,2.692,455,2.826,456,4.678,457,2.905,458,1.852,459,2.905,460,1.852,461,2.602,462,2.935,463,4.059,464,4.059,465,4.059,466,5.064,467,2.905,468,1.852,469,2.905,470,1.852,471,2.905,472,2.42,473,1.862,474,1.513,475,1.672,476,1.513,477,1.862,478,2.905,479,1.852,480,2.905,481,5.064,482,1.852,483,1.852,484,2.114,485,2.905,486,1.513,487,2.905,488,2.905,489,2.592,490,2.297,491,2.905,492,1.672,493,1.672,494,1.672,495,2.905,496,3.673,497,2.905,498,2.905,499,0.735,500,1.852,501,1.852,502,2.905,503,1.377,504,1.852,505,1.852,506,1.852,507,1.852,508,1.852,509,1.852,510,1.852,511,1.852,512,1.852,513,1.852,514,1.852,515,1.852,516,1.852,517,1.852,518,1.852,519,1.852,520,1.852,521,1.852,522,1.852,523,1.852,524,2.42,525,1.852,526,1.852,527,1.513,528,1.513,529,1.852,530,1.852,531,1.852,532,1.852,533,1.187,534,1.339,535,0.965,536,1.543,537,1.852,538,1.852,539,1.852,540,2.905,541,4.059,542,3.584,543,1.339,544,1.543,545,1.852,546,0.878,547,1.852,548,1.852,549,1.852,550,2.905,551,2.905,552,1.852,553,1.339,554,1.852,555,2.905,556,1.852,557,1.543,558,1.852,559,1.339,560,2.905,561,2.905,562,2.905,563,1.543,564,1.066,565,1.339,566,1.852,567,1.852,568,2.905,569,2.905,570,1.852,571,3.381,572,2.905,573,2.905,574,2.905,575,1.852,576,1.852,577,0.674,578,1.852,579,1.339,580,1.513,581,1.852,582,3.662,583,1.852,584,1.543,585,1.852,586,2.905,587,1.852,588,2.42,589,1.852,590,1.852,591,1.852,592,2.905,593,1.852,594,1.852,595,1.339,596,1.187,597,1.852,598,1.339,599,1.852,600,1.852,601,1.543,602,1.852,603,1.852,604,1.852,605,1.852,606,1.852,607,1.852,608,1.852,609,1.852,610,1.852,611,1.852]],["title/components/DataGridPaginationComponent.html",[0,0.856,299,1.724]],["body/components/DataGridPaginationComponent.html",[0,1.539,1,1.379,2,1.359,3,0.378,6,1.674,7,1.379,8,0.591,9,1.059,10,0.294,11,1.674,12,1.26,13,0.423,15,0.294,16,1.926,34,2.403,35,1.76,36,1.926,37,2.694,38,1.515,39,3.328,40,3.012,44,0.034,52,1.155,58,4.441,60,2.338,62,0.758,63,0.962,67,1.051,69,2.916,70,2.338,74,1.288,76,0.513,80,1.32,81,0.63,85,1.479,90,0.838,92,1.2,95,1.845,96,2.338,112,2.116,114,0.614,130,0.689,132,0.753,139,0.521,140,0.335,147,1.359,155,1.479,159,1.736,160,0.973,168,0.838,191,1.612,192,1.051,225,2.028,231,1.155,235,1.612,270,1.858,272,0.973,288,1.76,291,2.639,292,1.379,293,2.104,294,2.916,295,1.674,296,1.674,297,1.515,298,1.674,299,2.639,300,2.028,301,1.674,302,1.379,303,1.674,304,1.515,305,1.674,306,1.515,307,1.674,308,1.674,309,1.674,310,0.021,311,0.021,312,0.015,331,1.109,342,1.926,345,2.938,349,1.926,412,2.938,418,3.9,428,2.028,430,2.618,431,3.385,434,2.938,443,3.385,476,1.515,499,1.155,612,2.909,613,5.055,614,3.385,615,2.938,616,4.063,617,2.604,618,2.639,619,1.926,620,2.604,621,2.938,622,4.063,623,4.063,624,4.682,625,4.063,626,3.385,627,4.063,628,4.063,629,4.682,630,4.682,631,1.926,632,4.063,633,2.938,634,4.682,635,4.063,636,4.063,637,2.909,638,2.338,639,4.063,640,3.385,641,2.909,642,2.604,643,1.76,644,2.338,645,5.068,646,5.068,647,4.063,648,2.909,649,3.385,650,2.938,651,2.604,652,3.385,653,4.063,654,2.909,655,2.604,656,2.909,657,4.063,658,3.001,659,2.909,660,2.604,661,4.063,662,4.682,663,2.909,664,5.331,665,2.909,666,2.909,667,2.909,668,2.909,669,2.909,670,4.063,671,2.604,672,4.063,673,2.909,674,4.063,675,1.515,676,5.068,677,2.909,678,2.909,679,2.909,680,2.909,681,4.682,682,1.26,683,2.424,684,2.424,685,5.331,686,2.909,687,2.938,688,1.674,689,2.909,690,2.909]],["title/interfaces/DatagridStyles.html",[691,1.569,692,2.757]],["body/interfaces/DatagridStyles.html",[3,0.546,8,0.611,10,0.424,13,0.611,15,0.424,44,0.034,62,0.68,63,1.225,76,0.557,90,1.17,114,0.483,139,0.926,147,1.956,168,0.926,258,3.047,310,0.022,311,0.027,312,0.022,317,2.774,342,2.452,366,4.776,564,3.367,691,1.991,692,4.309,693,2.692,694,3.499,695,5.173,696,2.977,697,5.851,698,4.874,699,5.851,700,5.851,701,5.851,702,4.874]],["title/components/EditorComponent.html",[0,0.856,302,1.569]],["body/components/EditorComponent.html",[0,1.119,1,0.844,2,0.942,3,0.231,4,1.467,5,1.483,8,0.41,9,0.648,10,0.284,11,1.025,12,0.771,13,0.259,15,0.18,16,1.335,17,1.141,18,2.181,20,2.087,21,1.118,22,2.037,24,2.051,27,1.335,28,1.118,29,1.868,32,0.844,34,1.335,35,1.22,36,1.656,37,2.49,38,0.927,39,2.875,40,2.602,42,1.335,44,0.034,47,2.346,52,0.707,53,2.346,57,1.805,60,2.011,62,0.288,63,0.941,64,2.23,66,1.025,67,0.729,69,2.285,70,1.621,71,2.96,73,1.168,74,1.287,76,0.519,79,2.087,80,1.618,81,1.311,82,1.611,85,1.026,87,1.805,89,2.872,90,0.775,92,0.941,93,0.985,95,1.272,96,2.011,99,1.22,100,0.547,101,1.141,102,1.883,103,1.621,104,1.026,105,1.483,106,1.467,107,0.844,108,1.288,109,1.621,110,1.141,111,0.844,112,1.467,113,0.771,114,0.66,115,1.141,116,1.805,117,2.087,118,0.771,119,1.483,120,1.483,121,1.483,122,0.844,123,1.483,124,0.707,125,1.483,126,2.011,127,0.927,128,1.025,129,1.141,130,1.09,131,2.346,132,0.729,133,1.467,134,1.514,135,1.118,136,2.872,137,1.141,139,0.626,140,0.402,142,1.288,143,1.025,144,1.483,146,1.483,147,1.168,148,2.346,149,1.025,150,0.771,151,1.141,152,1.025,153,1.483,154,0.844,155,0.648,156,0.927,157,1.446,158,1.467,159,1.516,160,1.762,161,1.288,162,1.621,163,1.288,164,1.141,165,1.141,166,2.037,167,1.335,168,1.058,169,1.288,170,1.288,171,1.288,172,1.288,173,1.288,174,1.288,175,1.288,176,1.483,177,1.141,178,1.483,179,1.288,180,1.483,181,1.483,182,1.483,183,2.346,184,2.346,185,1.483,186,1.483,187,1.288,188,1.483,189,1.483,190,1.483,191,1.387,192,0.904,193,1.483,194,1.805,195,1.288,196,2.346,197,1.483,198,2.346,199,1.483,200,1.141,201,1.483,202,1.483,203,1.483,204,2.527,205,0.771,206,1.288,207,1.288,208,1.288,209,2.181,210,1.483,211,0.844,212,1.025,213,0.927,214,1.288,215,0.844,216,0.648,217,1.874,218,1.82,219,1.073,220,1.141,221,1.025,222,1.483,223,0.771,224,0.707,225,2.46,228,3.604,231,1.826,235,1.118,237,1.483,238,1.483,241,1.656,251,1.467,258,1.467,262,1.335,281,0.707,284,3.129,285,1.483,288,1.72,291,1.467,292,1.656,294,2.285,295,1.025,296,1.025,297,0.927,298,1.025,299,0.927,300,0.771,301,1.025,302,2.051,303,1.025,304,0.927,305,1.025,306,0.927,307,1.025,308,1.025,309,1.025,310,0.009,311,0.014,312,0.009,318,2.051,324,1.025,326,1.329,331,0.828,339,1.447,349,0.844,360,2.546,364,0.707,365,1.141,397,1.272,450,1.446,454,2.49,473,1.805,489,1.288,490,1.141,535,1.467,543,1.288,557,2.346,579,2.037,580,2.253,596,1.805,598,3.129,601,2.911,631,2.369,642,1.141,643,0.771,671,1.805,675,0.927,702,2.346,703,1.781,704,2.346,705,2.011,706,4.6,707,4.6,708,2.816,709,2.346,710,2.546,711,2.816,712,2.816,713,2.816,714,2.816,715,2.889,716,4.326,717,2.346,718,2.816,719,2.816,720,2.816,721,2.346,722,2.816,723,2.816,724,2.816,725,2.816,726,2.816,727,2.816,728,2.911,729,2.527,730,2.816,731,2.816,732,3.494,733,3.494,734,4.326,735,3.494,736,2.285,737,3.494,738,2.49,739,2.816,740,1.781,741,3.972,742,1.781,743,1.781,744,1.621,745,3.972,746,1.781,747,1.621,748,2.816,749,1.805,750,1.781,751,2.346,752,1.781,753,2.816,754,2.816,755,2.346,756,2.037,757,1.781,758,1.82,759,1.805,760,2.816,761,2.037,762,1.781,763,1.781,764,1.805,765,1.781,766,1.781,767,1.781,768,1.781,769,1.781,770,2.011,771,2.546,772,2.816,773,1.781,774,2.816,775,1.781,776,1.781,777,2.816,778,1.781,779,1.781,780,1.781,781,1.805,782,2.816,783,1.483,784,1.781,785,1.781,786,1.781,787,1.141,788,2.816,789,1.781,790,1.781,791,1.781,792,1.781,793,2.816,794,1.781,795,1.781,796,1.781,797,2.816,798,1.781,799,1.781,800,1.483,801,1.288,802,3.972,803,4.996,804,1.483,805,1.025,806,1.288,807,2.816,808,1.781,809,2.346,810,2.816,811,1.781,812,1.288,813,2.816,814,1.781,815,1.781,816,2.816,817,1.781,818,1.781,819,1.781,820,1.781,821,1.781,822,1.781,823,1.781,824,1.781,825,2.816,826,0.927,827,1.781,828,2.816,829,1.781,830,1.781,831,0.771,832,1.781,833,1.781,834,3.972,835,1.781,836,1.781]],["title/interfaces/FormValidatorModel.html",[691,1.569,837,2.393]],["body/interfaces/FormValidatorModel.html",[3,0.357,8,0.4,9,1.421,10,0.277,13,0.4,15,0.527,18,1.303,20,1.691,21,1.091,24,1.851,29,1.666,30,2.502,31,1.191,32,1.303,34,2.152,44,0.034,74,0.595,76,0.553,79,1.191,80,1.101,81,0.595,82,1.305,85,1.653,86,1.582,92,0.651,93,1.529,100,1.199,102,1.851,104,1.001,109,2.246,114,0.624,118,1.966,124,1.091,139,1.111,155,1.421,157,1.421,159,1.678,167,1.851,168,1.099,191,1.961,194,3.168,205,1.691,209,2.152,211,1.303,216,1.001,217,1.691,218,1.432,219,1.199,226,1.582,231,1.549,234,1.851,241,1.303,281,1.801,310,0.014,311,0.02,312,0.014,318,1.303,320,1.091,321,1.988,324,1.582,326,0.844,332,1.851,339,0.919,359,2.502,362,1.762,370,2.823,373,1.303,375,2.612,385,1.432,397,1.001,441,1.762,442,1.762,493,2.612,494,2.612,503,1.303,528,2.033,535,1.432,546,2.152,577,1.421,631,1.851,658,2.502,660,2.502,675,1.432,691,1.303,693,1.762,710,1.762,715,1.432,736,2.246,738,1.582,758,2.033,770,1.582,805,1.582,831,1.691,837,2.823,838,2.29,839,2.246,840,3.252,841,3.903,842,2.823,843,2.502,844,2.246,845,3.252,846,3.903,847,3.903,848,3.903,849,2.502,850,2.749,851,3.283,852,3.283,853,3.283,854,3.283,855,3.283,856,3.283,857,3.283,858,3.283,859,3.283,860,3.283,861,3.283,862,3.283,863,2.749,864,1.762,865,1.988,866,1.762,867,2.246,868,2.749,869,2.29,870,1.988,871,2.823,872,1.988,873,2.29,874,2.749,875,1.988,876,2.29,877,2.502,878,1.988,879,2.29,880,1.303,881,4.942,882,2.749,883,2.749,884,2.749,885,2.749,886,1.582,887,1.762,888,1.762,889,1.762,890,2.749,891,3.903,892,2.749,893,2.749,894,2.29,895,1.988,896,2.246,897,2.823,898,1.582,899,2.29,900,3.252,901,2.29,902,1.432,903,2.29,904,4.831,905,1.851,906,2.749,907,1.762,908,3.782,909,1.582,910,1.762,911,1.582,912,2.29,913,2.29,914,2.29,915,2.29,916,2.29,917,1.762,918,2.29,919,2.29,920,2.749,921,2.749]],["title/injectables/FormValidatorService.html",[134,1.434,922,2.122]],["body/injectables/FormValidatorService.html",[3,0.371,8,0.415,10,0.288,13,0.415,15,0.404,16,1.901,19,3.394,20,2.442,21,1.133,24,2.673,27,1.901,31,2.007,32,1.901,35,1.237,44,0.034,62,0.462,63,1.3,64,1.687,65,1.83,67,1.037,71,3.508,73,0.955,74,1.003,76,0.51,90,0.718,92,0.95,102,2.51,106,2.088,108,2.899,113,2.177,114,0.461,126,2.892,130,1.19,132,0.738,133,1.487,134,2.007,139,0.511,140,0.533,149,2.307,150,1.737,151,2.57,155,1.928,159,1.131,160,0.955,191,1.839,192,1.3,216,1.83,218,2.859,224,1.591,226,2.892,231,1.133,234,1.353,235,2.484,245,1.643,258,2.088,270,1.591,272,1.681,274,1.643,281,1.591,288,1.737,310,0.015,311,0.021,312,0.015,331,0.95,364,1.591,368,2.307,375,1.643,389,1.77,397,1.687,424,3.634,450,1.46,489,2.899,490,2.57,543,2.899,546,1.353,553,2.899,584,3.34,682,1.237,728,3.34,826,1.487,831,1.737,839,2.892,849,2.57,896,2.307,905,1.353,909,1.643,911,1.643,917,3.221,922,2.57,923,2.854,924,2.854,925,3.86,926,3.34,927,2.307,928,2.57,929,4.009,930,4.009,931,5.49,932,2.854,933,5.49,934,4.009,935,4.009,936,2.854,937,2.57,938,4.187,939,2.854,940,2.378,941,2.854,942,2.378,943,2.854,944,2.854,945,2.854,946,2.854,947,4.009,948,5.294,949,4.009,950,2.899,951,3.34,952,2.899,953,4.009,954,2.064,955,2.854,956,2.854,957,2.854,958,4.009,959,4.009,960,2.854,961,5.638,962,2.854,963,2.854,964,2.854,965,4.009,966,2.854,967,2.854,968,2.854,969,2.854,970,2.854,971,4.009,972,2.854,973,2.854,974,2.854,975,2.854,976,2.854,977,4.009,978,2.854,979,2.854,980,2.854,981,2.854,982,2.854,983,4.009,984,2.854,985,4.009,986,2.854,987,2.854,988,2.854,989,3.351,990,2.854,991,2.854,992,2.854,993,2.854,994,2.854,995,2.854,996,4.009,997,2.854,998,2.854,999,2.854,1000,2.854,1001,2.854,1002,4.634,1003,4.634,1004,4.634,1005,2.854,1006,2.854,1007,4.009,1008,2.854,1009,2.378,1010,1.643,1011,2.378,1012,2.854,1013,2.378,1014,2.064,1015,4.009,1016,2.854,1017,2.854,1018,2.854]],["title/pipes/FormatDataPipe.html",[320,1.313,1019,2.757]],["body/pipes/FormatDataPipe.html",[3,0.566,8,0.634,10,0.44,13,0.634,15,0.44,36,2.067,38,2.27,44,0.034,64,1.587,67,1.128,74,1.233,76,0.53,81,1.145,90,0.781,92,1.033,100,1.626,114,0.656,130,1.033,132,1.128,139,0.781,140,0.502,143,2.508,235,1.73,288,2.292,310,0.022,311,0.027,312,0.022,320,2.519,331,1.033,337,3.827,342,2.509,349,2.509,595,3.152,867,3.045,888,3.392,1019,4.409,1020,4.359,1021,3.045,1022,3.827,1023,5.292,1024,5.292,1025,4.409,1026,5.292,1027,5.292,1028,4.359,1029,5.292,1030,6.071,1031,5.926,1032,4.359,1033,5.698,1034,5.292,1035,4.359,1036,4.359,1037,4.359,1038,4.359]],["title/modules/SvogvModule.html",[127,1.724,902,1.724]],["body/modules/SvogvModule.html",[3,0.543,8,0.608,10,0.422,13,0.608,15,0.422,44,0.034,52,1.658,64,1.522,67,1.081,74,0.904,92,0.99,116,3.306,127,3.284,130,1.467,132,1.081,133,2.177,134,2.647,135,2.046,139,0.748,140,0.481,235,2.046,288,1.81,310,0.022,311,0.027,312,0.022,503,2.445,643,1.81,812,3.729,902,2.913,1039,3.022,1040,1.81,1041,4.66,1042,4.865,1043,4.296,1044,3.481,1045,3.481,1046,3.481,1047,4.998,1048,4.296,1049,3.481,1050,1.981,1051,3.481,1052,4.296,1053,5.593,1054,4.179,1055,5.593,1056,5.593,1057,5.157,1058,3.022,1059,5.157,1060,5.157,1061,3.022,1062,4.179,1063,4.179,1064,4.179,1065,4.296,1066,4.179,1067,4.179,1068,4.66,1069,3.481,1070,3.481,1071,3.481,1072,3.481,1073,3.481,1074,3.481,1075,4.66,1076,4.179]],["title/classes/TextTreeNodeModel.html",[140,0.381,1077,2.393]],["body/classes/TextTreeNodeModel.html",[3,0.494,8,0.553,10,0.383,13,0.553,15,0.383,21,1.507,23,1.801,29,1.167,44,0.034,62,0.615,63,1.15,67,1.256,73,1.27,74,1.369,76,0.552,80,1.071,90,1.01,92,1.268,93,1.37,95,1.383,114,0.686,130,1.15,139,0.68,140,0.437,158,2.788,159,1.071,168,1.068,215,1.801,272,1.624,310,0.02,311,0.025,312,0.02,314,1.383,326,1.886,328,4.046,331,1.337,339,1.27,397,1.768,428,1.645,499,1.927,577,1.383,638,2.794,809,3.164,1077,3.512,1078,3.798,1079,1.887,1080,4.046,1081,3.409,1082,3.512,1083,2.794,1084,2.314,1085,3.512,1086,3.113,1087,2.529,1088,3.247,1089,3.823,1090,4.856,1091,2.746,1092,5.206,1093,3.164,1094,3.164,1095,2.746,1096,3.164,1097,3.164,1098,2.746,1099,2.746,1100,3.164,1101,3.164,1102,3.164,1103,2.746,1104,3.164,1105,2.434,1106,2.794,1107,3.164,1108,2.434,1109,3.164,1110,2.434,1111,3.164,1112,3.164,1113,3.798,1114,3.798]],["title/interfaces/TreeNodeBaseModel.html",[691,1.569,1106,1.905]],["body/interfaces/TreeNodeBaseModel.html",[3,0.563,8,0.63,10,0.437,13,0.63,15,0.437,44,0.034,62,0.701,63,1.249,67,1.363,74,1.23,76,0.538,90,1.017,92,1.346,93,1.668,95,1.919,114,0.654,130,1.026,139,0.775,140,0.607,272,1.763,310,0.022,311,0.027,312,0.022,331,1.346,373,2.499,638,3.402,691,2.053,693,2.776,1079,1.9,1083,3.402,1084,2.346,1086,3.379,1087,2.745,1088,3.402,1105,3.379,1106,3.77,1108,3.379,1110,2.776,1115,4.331,1116,5.271,1117,4.331,1118,4.331,1119,4.331]],["title/classes/TreeNodeComponentModel.html",[140,0.381,1120,2.757]],["body/classes/TreeNodeComponentModel.html",[0,1.54,3,0.491,8,0.55,10,0.381,13,0.55,15,0.381,21,1.499,23,1.79,29,1.16,44,0.034,62,0.611,63,1.146,67,1.252,73,1.263,74,1.368,76,0.565,90,1.008,92,1.265,93,1.365,95,1.375,104,1.762,114,0.685,129,3.102,130,1.265,132,0.977,139,0.676,140,0.435,158,2.781,159,1.065,168,0.676,215,1.79,272,1.618,310,0.019,311,0.025,312,0.019,314,1.375,331,1.334,397,1.762,428,1.636,499,1.92,577,1.375,638,2.784,1079,1.883,1080,4.031,1081,3.408,1082,3.499,1083,2.784,1084,2.31,1085,3.499,1086,3.102,1087,2.52,1088,3.24,1089,3.818,1091,2.731,1092,5.202,1093,3.146,1094,3.146,1095,2.731,1096,3.146,1097,3.146,1098,2.731,1099,2.731,1100,3.146,1101,3.146,1102,3.146,1103,2.731,1104,3.146,1105,2.421,1106,2.784,1107,3.146,1108,2.421,1109,3.146,1110,2.421,1111,3.146,1112,3.146,1120,4.031,1121,3.776,1122,3.499,1123,4.839,1124,4.839,1125,3.776]],["title/classes/TreeNodeModel.html",[140,0.381,1081,1.724]],["body/classes/TreeNodeModel.html",[3,0.384,8,0.43,10,0.298,12,2.21,13,0.43,15,0.298,21,1.63,23,1.948,29,1.262,36,1.948,44,0.034,62,0.478,63,0.973,67,1.063,73,0.988,74,1.365,76,0.526,81,0.889,82,0.988,90,0.96,92,1.209,93,1.663,95,1.719,114,0.668,130,1.118,132,0.765,139,0.529,140,0.543,158,2.793,159,1.332,160,0.988,168,0.736,192,1.221,215,1.948,231,1.874,235,1.63,251,1.539,270,1.63,272,1.374,284,2.971,288,2.636,310,0.015,311,0.021,312,0.015,314,1.076,331,1.27,339,0.988,351,2.364,373,1.948,397,1.719,412,2.971,428,2.21,430,1.401,499,1.63,524,2.462,577,1.496,582,2.971,638,2.717,804,3.422,1079,1.374,1081,3.354,1082,3.414,1083,2.936,1084,2.128,1085,3.414,1086,2.633,1087,2.14,1089,3.977,1091,3.69,1095,2.971,1098,2.971,1099,4.014,1103,2.971,1105,2.633,1106,3.194,1108,2.633,1110,1.895,1126,2.956,1127,3.271,1128,4.722,1129,3.027,1130,4.722,1131,4.722,1132,4.722,1133,4.722,1134,3.422,1135,4.108,1136,2.956,1137,2.956,1138,2.956,1139,2.956,1140,2.956,1141,2.956,1142,2.956,1143,2.956,1144,2.956,1145,2.956,1146,2.956,1147,2.956,1148,2.956,1149,2.956,1150,2.956,1151,2.956,1152,2.956,1153,2.956,1154,2.956,1155,2.956,1156,2.956,1157,2.956,1158,2.956,1159,2.956,1160,2.956,1161,2.956,1162,2.956,1163,4.722,1164,2.956,1165,5.551,1166,2.956,1167,2.956,1168,2.137,1169,2.956,1170,4.108,1171,2.956,1172,2.956,1173,2.956,1174,2.956,1175,2.956,1176,4.108,1177,2.956,1178,2.956,1179,4.108,1180,2.956,1181,2.956,1182,5.103,1183,2.956,1184,2.956,1185,1.895,1186,2.137,1187,2.956,1188,4.108,1189,4.108,1190,4.108]],["title/classes/TreeNodeOptions.html",[140,0.381,1088,1.905]],["body/classes/TreeNodeOptions.html",[3,0.561,8,0.629,10,0.436,13,0.629,15,0.436,44,0.033,62,0.699,63,1.247,73,1.445,74,1.38,76,0.556,90,0.773,93,1.601,114,0.497,139,0.773,140,0.497,154,2.048,160,1.445,168,1.103,270,1.714,310,0.022,311,0.027,312,0.022,314,1.573,326,1.327,331,1.023,341,2.769,351,2.486,360,2.769,364,2.252,499,1.714,535,2.25,709,3.599,1079,1.898,1084,2.088,1088,3.266,1134,3.599,1191,3.599,1192,4.728,1193,4.384,1194,4.384,1195,5.908,1196,4.384,1197,3.787,1198,5.263,1199,4.384,1200,5.263,1201,5.263,1202,4.32,1203,4.384,1204,4.32,1205,4.32,1206,3.124,1207,4.32,1208,4.32,1209,4.32,1210,4.32,1211,4.32,1212,4.32,1213,3.599,1214,4.32,1215,3.599,1216,4.32,1217,3.124]],["title/components/TreeViewComponent.html",[0,0.856,304,1.724]],["body/components/TreeViewComponent.html",[0,1.445,1,1.576,2,1.488,3,0.432,6,1.913,7,1.576,8,0.648,9,1.21,10,0.335,11,1.913,12,2.42,13,0.484,15,0.335,16,2.11,34,2.11,35,1.928,38,1.731,39,3.434,40,3.108,42,2.541,44,0.034,52,1.319,55,3.219,60,2.561,62,0.538,67,1.151,70,2.561,73,1.678,74,1.322,76,0.527,85,1.621,90,0.96,92,1.269,95,1.951,114,0.662,122,2.11,130,1.054,132,0.86,139,0.595,140,0.383,192,1.386,225,1.928,226,1.913,291,2.318,292,1.576,293,2.404,294,3.084,295,1.913,296,1.913,297,1.731,298,1.913,299,1.731,300,1.44,301,1.913,302,1.576,303,1.913,304,2.791,305,1.913,306,1.731,307,1.913,308,1.913,309,1.913,310,0.017,311,0.023,312,0.017,314,1.621,326,1.367,331,1.269,389,1.488,419,3.708,428,2.703,596,2.853,618,2.318,633,3.219,652,3.708,671,3.581,721,3.708,758,2.318,1079,1.923,1081,3.295,1089,3.581,1197,2.853,1206,3.219,1218,3.324,1219,3.686,1220,3.708,1221,4.451,1222,4.451,1223,3.875,1224,4.451,1225,3.219,1226,4.451,1227,3.708,1228,3.324,1229,4.451,1230,3.708,1231,4.451,1232,2.853,1233,4.451,1234,4.451,1235,3.708,1236,3.708,1237,3.708,1238,3.708,1239,4.18,1240,4.18,1241,4.18,1242,4.18,1243,4.451,1244,3.324,1245,3.324,1246,3.324,1247,3.324,1248,3.708,1249,3.324,1250,3.708,1251,3.324,1252,3.708,1253,3.324,1254,3.708,1255,3.324,1256,2.404,1257,3.324,1258,2.769,1259,2.769,1260,2.769,1261,2.769]],["title/components/TreeViewNodeComponent.html",[0,0.856,306,1.724]],["body/components/TreeViewNodeComponent.html",[0,1.287,1,0.919,2,1.007,3,0.252,8,0.438,9,0.706,10,0.196,11,1.116,12,1.304,13,0.282,15,0.196,29,1.278,36,1.428,37,2.124,38,1.01,39,2.96,40,2.679,42,1.428,44,0.034,52,0.77,57,1.243,60,1.733,62,0.314,63,0.713,64,2.156,67,0.779,69,2.394,70,1.733,73,0.648,74,1.331,76,0.528,80,1.271,81,1.032,82,0.648,85,1.096,90,0.921,92,1.279,93,1.271,95,2.105,102,1.973,103,1.733,104,1.096,114,0.621,117,2.228,130,0.713,132,0.502,139,0.347,140,0.592,143,1.116,154,0.919,160,0.648,168,0.946,192,1.233,215,1.428,225,2.066,231,1.892,234,1.428,240,1.733,251,1.568,276,1.616,291,1.923,292,0.919,294,2.394,295,1.116,296,1.116,297,1.01,298,1.116,299,1.01,300,0.84,301,1.116,302,0.919,303,1.116,304,1.01,305,1.116,306,2.167,307,2.124,308,1.116,309,1.116,310,0.01,311,0.015,312,0.01,331,1.218,339,1.234,340,1.428,373,0.919,385,1.01,397,2.06,428,2.609,430,1.428,431,4.037,544,3.467,559,1.402,618,1.923,626,2.509,633,2.177,642,2.366,671,3.626,684,1.616,696,1.733,755,2.509,764,1.93,826,1.568,842,2.177,843,1.93,937,1.93,1009,1.616,1052,4.4,1077,2.669,1079,1.867,1081,3.062,1083,1.116,1084,1.788,1129,2.888,1186,2.177,1192,3.075,1193,2.509,1194,1.616,1196,3.075,1197,1.93,1199,2.509,1206,2.669,1217,1.402,1219,1.93,1220,2.509,1223,2.669,1235,2.509,1236,2.509,1237,2.509,1238,2.509,1239,3.753,1240,3.753,1241,3.753,1242,3.753,1248,2.509,1250,2.509,1252,2.509,1254,2.509,1256,1.402,1258,1.616,1259,1.616,1260,1.616,1261,1.616,1262,1.939,1263,2.177,1264,1.93,1265,4.161,1266,3.011,1267,2.177,1268,3.011,1269,3.011,1270,3.011,1271,3.691,1272,3.691,1273,3.691,1274,3.691,1275,3.691,1276,3.691,1277,3.691,1278,3.691,1279,4.161,1280,3.011,1281,4.161,1282,3.011,1283,3.011,1284,1.939,1285,4.161,1286,3.691,1287,4.161,1288,1.939,1289,3.011,1290,1.939,1291,3.011,1292,1.939,1293,4.161,1294,1.939,1295,3.011,1296,3.011,1297,1.939,1298,3.075,1299,1.939,1300,1.939,1301,3.011,1302,1.939,1303,1.939,1304,3.011,1305,1.939,1306,3.011,1307,1.939,1308,1.939,1309,1.939,1310,1.939,1311,1.939,1312,1.939,1313,1.939,1314,4.976,1315,3.011,1316,1.939,1317,1.939,1318,1.939,1319,1.939,1320,1.939,1321,1.939,1322,1.939,1323,1.939,1324,1.939,1325,1.939,1326,1.939,1327,1.939,1328,1.939,1329,3.691,1330,1.939,1331,1.939,1332,3.011,1333,1.939,1334,1.939,1335,1.116,1336,1.116,1337,5.583,1338,1.939,1339,1.939,1340,1.939,1341,1.939,1342,3.011,1343,3.691,1344,1.939,1345,3.011,1346,1.939,1347,1.939,1348,3.011,1349,1.939,1350,5.497,1351,4.161,1352,5.398,1353,5.282,1354,5.398,1355,5.282,1356,1.939,1357,1.939,1358,3.011,1359,3.011,1360,1.939,1361,1.939,1362,1.939,1363,1.939,1364,3.011,1365,1.939,1366,3.691,1367,1.939,1368,3.011,1369,1.939,1370,1.939,1371,3.691,1372,3.011,1373,3.011,1374,4.161,1375,4.161,1376,3.011,1377,3.691,1378,1.939,1379,1.939,1380,3.011]],["title/changelog.html",[1381,1.613,1382,1.46,1383,2.804]],["body/changelog.html",[0,0.762,2,1.576,3,0.383,4,1.534,6,1.695,7,2.415,10,0.514,18,2.234,20,2.041,23,2.234,27,2.234,28,1.626,29,0.905,31,2.041,40,1.534,41,2.13,42,1.943,44,0.021,65,1.888,71,1.695,76,0.358,79,1.276,80,0.831,81,0.887,85,1.855,99,1.276,100,1.565,103,2.712,104,1.072,107,1.396,111,1.396,113,1.276,114,0.339,117,1.276,118,1.276,122,1.396,135,2.022,142,2.13,147,1.37,150,1.276,156,1.534,157,1.072,159,1.329,163,2.13,167,1.943,168,0.734,170,2.13,187,2.13,191,1.169,192,1.219,200,1.888,212,1.695,213,2.134,214,2.13,216,1.072,217,1.276,219,0.905,223,2.552,224,1.169,225,1.276,234,1.396,241,1.396,245,1.695,257,2.455,260,2.627,262,1.396,272,1.37,275,1.396,281,1.87,282,2.234,300,2.32,310,0.015,311,0.021,312,0.021,314,1.072,317,2.234,318,1.396,320,1.169,327,1.534,338,1.888,340,1.943,342,1.396,345,2.13,347,1.695,350,1.888,353,2.627,365,1.888,368,2.358,371,1.888,373,1.396,385,2.134,389,1.37,391,2.627,430,1.396,434,2.13,445,2.13,448,3.414,450,1.716,452,2.627,474,2.134,475,3.082,476,2.455,477,1.888,484,1.534,486,1.534,492,1.695,527,1.534,528,1.534,546,1.396,564,1.695,565,3.408,577,1.072,613,2.454,617,1.888,619,1.943,631,1.943,644,1.695,655,2.627,658,1.888,660,1.888,675,2.654,682,1.775,687,2.13,688,2.358,696,1.695,705,1.695,715,1.534,756,2.13,770,1.695,781,1.888,787,1.888,839,1.695,844,1.695,877,1.888,880,1.396,905,1.943,909,1.695,911,1.695,928,1.888,937,1.888,950,2.13,1010,1.695,1040,1.775,1050,1.396,1087,1.534,1129,2.627,1168,2.13,1219,2.627,1263,2.13,1267,2.13,1384,2.945,1385,5.095,1386,5.355,1387,3.873,1388,2.945,1389,2.13,1390,4.098,1391,2.13,1392,2.13,1393,2.945,1394,2.454,1395,4.713,1396,2.454,1397,2.945,1398,3.408,1399,2.454,1400,4.098,1401,2.945,1402,1.888,1403,1.888,1404,2.945,1405,2.234,1406,2.945,1407,2.945,1408,2.454,1409,4.713,1410,2.13,1411,2.454,1412,3.926,1413,2.945,1414,2.945,1415,2.13,1416,3.273,1417,4.713,1418,2.945,1419,3.926,1420,2.945,1421,2.945,1422,2.454,1423,2.963,1424,2.945,1425,2.945,1426,2.945,1427,2.945,1428,2.454,1429,2.945,1430,2.454,1431,2.945,1432,4.098,1433,4.098,1434,3.414,1435,1.888,1436,2.945,1437,2.454,1438,4.098,1439,2.712,1440,2.945,1441,2.945,1442,4.713,1443,2.945,1444,1.888,1445,2.945,1446,4.098,1447,2.13,1448,2.454,1449,1.888,1450,2.134,1451,4.461,1452,4.098,1453,2.207,1454,2.945,1455,1.888,1456,1.888,1457,4.244,1458,2.945,1459,2.945,1460,4.713,1461,4.098,1462,2.945,1463,4.098,1464,2.945,1465,1.695,1466,2.945,1467,1.695,1468,2.945,1469,2.945,1470,2.945,1471,2.945,1472,2.945,1473,2.454,1474,3.414,1475,4.098,1476,2.945,1477,2.945,1478,2.454,1479,2.945,1480,2.945,1481,2.13,1482,2.454,1483,2.454,1484,3.414,1485,3.414,1486,2.945,1487,3.414,1488,2.945,1489,2.945,1490,2.13,1491,3.414,1492,2.945,1493,2.945,1494,2.945,1495,2.945,1496,1.888,1497,2.454,1498,1.888,1499,2.945,1500,2.945,1501,3.873,1502,4.098,1503,2.945,1504,2.454,1505,2.454,1506,2.945,1507,2.13,1508,2.945,1509,4.098,1510,2.454,1511,2.945,1512,2.945,1513,2.945,1514,2.945,1515,2.945,1516,2.945,1517,2.945,1518,2.454,1519,2.945,1520,2.945,1521,4.098,1522,2.13,1523,1.888,1524,2.454,1525,2.945,1526,2.945,1527,2.945,1528,2.454,1529,1.888,1530,2.945,1531,2.945,1532,2.945,1533,3.414,1534,4.098,1535,2.454,1536,2.945,1537,2.945,1538,2.945,1539,2.945,1540,2.454,1541,2.945,1542,2.945,1543,2.454,1544,2.454,1545,2.454,1546,1.888,1547,2.945,1548,2.945,1549,2.945,1550,2.945]],["title/contributing.html",[1381,1.613,1382,1.46,1551,2.027]],["body/contributing.html",[3,0.297,4,2.128,6,1.317,8,0.497,10,0.585,13,0.333,15,0.231,23,1.619,24,1.619,28,1.622,30,1.467,34,1.937,35,0.991,44,0.026,64,0.833,67,0.592,76,0.298,78,1.906,79,0.991,87,1.467,90,0.612,99,1.77,100,1.562,104,0.833,111,1.085,113,0.991,117,1.77,118,0.991,124,0.908,135,2.197,147,1.367,150,1.48,162,1.317,177,2.189,192,1.363,204,2.47,205,1.48,208,1.655,211,1.085,213,1.192,219,1.049,223,1.77,224,0.908,240,2.352,258,1.192,259,4.039,260,1.467,262,1.085,263,1.317,272,0.765,273,1.906,275,1.619,310,0.012,311,0.018,312,0.012,317,2.299,326,0.703,339,0.765,362,2.189,369,1.906,379,1.655,389,0.765,433,3.775,438,2.845,450,0.833,451,2.189,474,1.192,475,1.965,484,1.192,492,2.352,565,2.47,580,1.779,643,1.48,644,2.79,650,2.47,655,3.79,675,2.98,682,0.991,698,3.404,744,1.317,747,1.317,749,1.467,756,2.47,758,1.192,801,2.47,826,1.192,831,1.48,849,2.62,867,1.317,872,1.655,886,1.965,888,1.467,896,3.186,898,1.317,928,1.467,989,2.47,1010,1.317,1014,3.277,1040,0.991,1050,1.085,1185,2.62,1225,1.655,1232,2.189,1267,1.655,1298,1.906,1336,1.317,1387,2.47,1389,1.655,1398,2.955,1402,2.189,1403,2.189,1405,1.937,1415,1.655,1439,1.317,1450,1.779,1453,1.963,1457,2.845,1465,1.965,1481,2.47,1496,1.467,1505,2.845,1507,1.655,1523,1.467,1529,2.189,1540,4.39,1544,4.039,1546,3.108,1551,1.655,1552,2.288,1553,1.906,1554,4.513,1555,2.47,1556,4.087,1557,4.849,1558,4.087,1559,4.087,1560,4.039,1561,4.39,1562,1.906,1563,4.39,1564,3.415,1565,3.415,1566,4.087,1567,6.163,1568,3.415,1569,4.849,1570,4.087,1571,4.513,1572,1.906,1573,2.845,1574,2.905,1575,2.288,1576,1.906,1577,2.288,1578,2.288,1579,2.288,1580,1.467,1581,2.288,1582,2.288,1583,2.288,1584,2.288,1585,2.288,1586,2.288,1587,2.288,1588,5.857,1589,1.655,1590,2.288,1591,4.532,1592,3.614,1593,2.905,1594,2.845,1595,2.288,1596,1.906,1597,3.415,1598,3.415,1599,2.288,1600,4.532,1601,2.288,1602,2.288,1603,4.087,1604,2.955,1605,2.288,1606,4.087,1607,2.288,1608,4.532,1609,5.722,1610,4.613,1611,5.537,1612,2.288,1613,3.415,1614,2.288,1615,2.288,1616,1.906,1617,3.415,1618,2.845,1619,2.288,1620,2.288,1621,3.415,1622,1.906,1623,2.288,1624,2.288,1625,1.655,1626,2.288,1627,2.288,1628,2.288,1629,2.288,1630,2.288,1631,2.288,1632,3.415,1633,3.404,1634,2.288,1635,2.288,1636,2.288,1637,2.288,1638,2.288,1639,2.288,1640,3.415,1641,2.288,1642,2.47,1643,2.288,1644,2.288,1645,2.288,1646,3.415,1647,3.415,1648,2.955,1649,2.288,1650,2.288,1651,2.288,1652,1.467,1653,2.288,1654,2.288,1655,1.906,1656,1.655,1657,2.288,1658,1.906,1659,2.288,1660,2.288,1661,1.906,1662,3.415,1663,1.906,1664,2.288,1665,4.087,1666,1.906,1667,2.47,1668,2.288,1669,2.288,1670,2.288,1671,1.906,1672,1.906,1673,1.906,1674,2.288,1675,2.288,1676,2.288,1677,2.288,1678,2.288,1679,3.415,1680,1.655,1681,1.906,1682,2.288,1683,1.655,1684,2.288,1685,4.087,1686,2.288,1687,2.288,1688,4.087,1689,2.189,1690,3.415,1691,3.415,1692,2.288,1693,4.236,1694,5.795,1695,3.415,1696,5.086,1697,2.288,1698,1.906,1699,3.678,1700,2.288,1701,2.288,1702,2.288,1703,2.288,1704,2.288,1705,2.288,1706,4.087,1707,4.039,1708,2.288,1709,1.906,1710,3.415,1711,2.288,1712,1.906,1713,2.288,1714,2.288,1715,1.467,1716,2.288,1717,2.288,1718,2.288,1719,2.47,1720,3.415,1721,2.288,1722,2.288,1723,1.906,1724,2.288,1725,2.288,1726,2.288,1727,3.415,1728,1.906,1729,2.288,1730,2.288,1731,3.415,1732,2.288,1733,4.087,1734,1.906,1735,1.467,1736,2.845,1737,2.288,1738,2.288,1739,2.288,1740,1.467,1741,2.288,1742,2.288,1743,2.288,1744,2.288,1745,2.288,1746,2.288,1747,1.906,1748,2.288,1749,2.288,1750,2.288,1751,2.288,1752,1.317,1753,2.288,1754,2.47,1755,2.288,1756,2.288,1757,1.906,1758,2.288,1759,2.288,1760,1.655,1761,2.288,1762,2.288,1763,2.288,1764,1.906,1765,4.532,1766,1.655,1767,4.532,1768,4.532,1769,2.288,1770,1.655,1771,1.467,1772,1.655,1773,3.415,1774,3.415,1775,3.415,1776,1.906,1777,2.288,1778,3.415,1779,2.288,1780,2.288,1781,2.288,1782,1.655,1783,3.415,1784,2.288,1785,2.288,1786,2.47,1787,2.288,1788,2.288,1789,2.288,1790,1.906,1791,2.288,1792,1.906,1793,1.906,1794,2.288,1795,1.906,1796,1.906,1797,1.906,1798,2.288,1799,1.655,1800,2.288,1801,1.317,1802,2.288,1803,1.906,1804,1.906,1805,2.288,1806,2.288,1807,3.415,1808,2.288,1809,2.288,1810,2.288,1811,3.415,1812,2.47,1813,3.415,1814,2.288,1815,2.288,1816,2.288,1817,2.288,1818,2.288,1819,1.655,1820,2.288,1821,2.288,1822,2.288,1823,2.288,1824,2.288,1825,2.288,1826,1.655,1827,2.288,1828,1.655,1829,2.288,1830,2.288,1831,2.288,1832,2.288,1833,1.906,1834,2.288,1835,2.288]],["title/dependencies.html",[1040,1.715,1836,1.613]],["body/dependencies.html",[44,0.034,57,3.076,132,1.241,133,2.499,310,0.025,311,0.029,312,0.025,643,2.079,1021,2.761,1040,2.079,1058,3.47,1061,3.47,1335,2.761,1837,6.366,1838,3.998,1839,4.668,1840,3.224,1841,4.799,1842,3.47,1843,3.998,1844,4.799,1845,4.799,1846,3.998,1847,4.799,1848,4.799,1849,4.799,1850,3.998,1851,4.799]],["title/miscellaneous/enumerations.html",[1852,1.215,1853,3.298]],["body/miscellaneous/enumerations.html",[44,0.031,62,0.794,81,1.062,160,1.64,168,0.878,282,2.325,310,0.025,311,0.029,312,0.025,351,2.822,355,3.144,381,4.086,445,4.331,484,2.555,496,4.086,533,3.144,534,3.547,536,4.086,1079,1.64,1129,3.144,1191,4.086,1203,4.086,1215,4.086,1217,4.104,1528,4.086,1852,2.125,1853,4.086,1854,4.905,1855,4.905,1856,4.905]],["title/miscellaneous/functions.html",[347,2.278,1852,1.215]],["body/miscellaneous/functions.html",[1,1.668,9,1.281,10,0.355,15,0.625,16,1.129,24,2.447,27,1.668,28,1.834,29,1.867,31,1.524,32,1.129,44,0.033,52,0.945,54,1.722,62,0.385,63,0.991,66,2.024,76,0.307,79,2.136,80,1.506,81,0.906,82,1.177,85,0.867,90,1.117,93,0.992,100,1.285,106,1.24,107,1.129,113,1.032,114,0.736,115,2.255,117,2.236,118,2.374,122,1.129,124,0.945,128,1.37,152,1.37,155,0.867,157,1.524,159,1.506,162,1.37,164,1.526,165,1.526,167,1.984,168,0.883,191,1.957,209,2.191,211,1.129,213,1.832,217,1.812,219,1.081,220,1.526,224,1.396,225,1.032,234,1.129,239,1.526,240,1.37,241,2.598,258,1.24,272,0.796,281,2.448,282,1.984,292,1.129,297,1.832,300,1.032,302,1.129,310,0.012,311,0.018,312,0.018,317,1.668,318,1.668,320,1.66,321,2.544,323,2.255,324,2.408,326,1.081,327,2.179,331,1.467,332,1.129,336,1.984,338,2.682,339,0.796,340,1.668,341,1.526,347,1.37,353,2.255,355,2.255,357,1.984,364,1.396,368,3.362,371,1.526,387,1.984,389,1.545,391,1.526,424,2.544,441,1.526,450,0.867,452,2.255,454,2.837,462,1.722,473,2.255,476,1.24,486,1.24,493,2.659,494,2.837,499,2.319,503,1.129,527,1.832,528,1.24,546,2.447,577,0.867,582,1.722,595,1.722,618,1.24,619,1.668,631,2.531,644,1.37,658,2.255,660,1.526,682,1.032,705,3.154,715,2.179,729,2.544,736,2.837,738,2.408,747,2.837,764,1.526,770,2.659,805,2.024,831,1.812,839,2.024,842,1.722,864,2.682,870,1.722,871,3.026,877,1.526,886,2.024,889,1.526,896,3.362,897,4.306,898,2.024,905,2.191,907,2.682,909,2.408,910,2.255,911,2.659,913,1.984,917,2.255,918,1.984,919,3.486,925,2.931,928,2.682,940,2.931,942,2.931,950,1.722,952,1.722,989,1.722,1021,1.37,1025,1.984,1050,1.129,1232,1.526,1264,1.526,1389,1.722,1391,1.722,1392,2.544,1405,1.129,1412,1.984,1453,1.032,1522,3.342,1524,1.984,1529,1.526,1625,1.722,1680,1.722,1754,3.342,1790,1.984,1819,2.544,1852,1.032,1857,5.481,1858,3.518,1859,4.662,1860,2.931,1861,3.518,1862,3.518,1863,3.486,1864,3.518,1865,2.931,1866,3.518,1867,3.518,1868,3.518,1869,3.518,1870,3.518,1871,3.518,1872,3.518,1873,2.931,1874,3.518,1875,3.518,1876,2.931,1877,2.381,1878,2.381,1879,5.481,1880,2.381,1881,1.984,1882,3.518,1883,2.381,1884,2.381,1885,4.662,1886,2.381,1887,2.381,1888,2.381,1889,2.381,1890,2.931,1891,2.381,1892,2.381,1893,3.518,1894,1.984,1895,1.526,1896,2.381,1897,2.381,1898,3.518,1899,2.931,1900,2.381,1901,3.518,1902,2.381,1903,2.931,1904,2.381,1905,1.984,1906,1.722,1907,1.984,1908,2.931,1909,2.381,1910,2.931,1911,3.518,1912,2.381,1913,3.518,1914,2.381,1915,2.381,1916,2.381,1917,2.381,1918,4.621,1919,3.518,1920,2.381,1921,2.381,1922,2.381,1923,2.381,1924,2.381,1925,2.381,1926,1.984,1927,2.931,1928,2.381,1929,4.184,1930,2.381,1931,2.381,1932,2.381,1933,2.381,1934,2.381,1935,2.381,1936,2.381,1937,2.381,1938,2.381,1939,2.381,1940,2.381,1941,2.381,1942,2.381,1943,2.381,1944,2.381,1945,2.381,1946,2.381,1947,1.984,1948,2.381,1949,2.381,1950,1.984,1951,2.381,1952,2.381,1953,2.381,1954,1.984,1955,2.381,1956,3.518,1957,2.381,1958,2.381,1959,2.381,1960,2.381,1961,3.518,1962,2.381,1963,2.381,1964,2.381,1965,2.381,1966,2.381]],["title/index.html",[62,0.454,1381,1.613,1382,1.46]],["body/index.html",[0,1.408,2,1.754,3,0.449,7,2.426,8,0.405,9,1.259,10,0.397,12,1.98,15,0.177,16,1.867,17,2.217,18,2.271,19,1.784,20,2.452,21,0.696,22,1.268,23,0.831,24,2.757,27,1.867,28,1.563,29,1.611,31,1.205,32,0.831,34,0.831,35,1.498,36,0.831,37,1.009,41,2.501,42,1.319,43,1.268,44,0.033,46,1.461,54,2.012,55,1.268,63,0.659,65,1.124,66,1.009,69,1.009,71,2.471,76,0.418,79,1.98,80,0.975,81,0.38,82,0.586,85,1.013,89,1.268,90,0.314,93,0.495,100,1.404,102,1.867,103,1.99,104,1.434,106,1.449,107,0.831,109,1.009,110,2.217,111,2.167,112,1.449,113,1.205,114,0.398,115,1.784,116,1.124,117,1.706,118,1.86,122,0.831,124,0.696,126,1.99,128,1.009,129,1.124,130,1.017,134,1.706,135,1.972,136,2.501,137,1.124,139,0.705,140,0.526,143,1.009,147,0.93,150,1.98,154,2.167,155,1.664,157,1.434,158,0.913,159,1.11,160,0.586,161,1.268,162,2.266,164,1.784,165,1.124,166,2.012,167,2.271,168,0.818,169,1.268,171,1.268,172,1.268,173,1.268,174,1.268,175,1.268,177,1.784,179,1.268,191,1.104,192,0.454,200,1.124,205,0.76,209,0.831,211,0.831,212,1.009,215,1.64,216,1.664,217,1.706,218,0.913,219,1.644,221,1.009,223,2.519,224,0.696,225,1.86,239,1.124,240,2.266,241,1.867,257,0.913,274,1.009,275,2.167,281,1.104,300,1.205,310,0.009,311,0.014,312,0.009,314,0.639,317,1.319,318,0.831,320,1.373,324,1.601,326,1.471,327,1.449,331,0.415,332,1.319,335,1.461,338,1.124,339,1.528,340,1.867,342,2.356,347,1.009,349,2.271,350,1.784,356,1.461,359,1.784,360,1.124,362,1.124,364,1.373,368,1.601,371,1.124,384,1.461,385,1.449,389,1.317,391,1.124,392,1.461,396,1.461,428,0.76,430,0.831,450,2.082,451,1.124,452,1.784,454,1.009,455,1.124,461,1.124,473,1.124,474,1.449,476,2.237,477,1.784,484,1.802,486,2.051,493,1.99,494,1.009,499,2.378,503,0.831,527,0.913,528,2.237,533,1.124,534,1.268,535,1.802,546,1.319,553,1.268,559,1.268,571,1.461,577,0.639,579,2.012,580,1.802,596,1.124,598,2.012,615,1.268,618,0.913,619,2.036,620,1.784,621,1.268,631,2.036,643,1.706,650,1.268,655,1.784,682,1.498,688,1.601,691,1.319,696,2.471,704,1.461,705,3.18,710,1.784,715,1.449,729,2.847,736,1.601,738,1.009,744,1.99,747,1.601,749,1.124,751,1.461,758,0.913,759,1.124,761,2.012,764,1.784,770,1.009,771,1.124,781,1.784,783,1.461,787,2.524,805,1.99,806,2.847,812,1.268,826,1.802,831,0.76,837,1.268,839,1.009,840,2.881,843,1.124,844,1.009,849,1.784,851,1.268,852,1.268,853,1.268,854,1.268,855,1.268,856,1.268,857,1.268,858,1.268,859,1.268,860,1.268,861,1.268,862,1.268,864,1.124,866,1.124,867,1.009,878,1.268,880,1.319,886,1.009,887,1.784,889,1.784,905,0.831,907,1.784,909,2.266,910,1.784,911,1.601,917,1.124,922,2.217,927,1.009,937,1.124,938,1.461,952,2.012,1010,1.99,1011,1.461,1014,1.268,1021,1.601,1065,1.461,1079,1.157,1084,1.704,1127,1.124,1185,1.124,1186,1.268,1197,1.124,1219,1.784,1223,1.268,1225,1.268,1227,1.461,1232,2.524,1256,1.268,1264,1.784,1335,1.009,1336,1.009,1381,1.009,1382,0.913,1387,2.847,1391,2.012,1392,2.012,1398,1.268,1399,1.461,1402,1.124,1403,1.124,1405,1.64,1415,2.012,1416,1.009,1419,1.461,1422,1.461,1435,1.784,1439,1.009,1444,2.524,1447,2.012,1449,1.784,1450,1.449,1453,2.075,1455,2.217,1456,2.217,1465,1.009,1467,1.601,1473,1.461,1482,3.28,1483,2.881,1484,2.318,1487,2.318,1490,1.268,1496,1.784,1498,1.784,1504,1.461,1507,1.268,1522,2.012,1523,3.07,1535,1.461,1543,1.461,1546,1.784,1551,1.268,1553,1.461,1561,2.881,1563,1.461,1571,1.461,1572,1.461,1574,2.524,1580,1.124,1589,1.268,1592,2.217,1593,1.124,1596,1.461,1604,1.268,1616,1.461,1618,1.461,1622,1.461,1633,1.461,1648,1.268,1652,1.124,1655,1.461,1656,1.268,1671,1.461,1698,1.461,1699,2.012,1712,2.318,1715,2.524,1728,1.461,1734,1.461,1735,1.124,1740,3.281,1752,1.601,1757,1.461,1760,1.268,1771,1.784,1782,2.012,1801,2.756,1826,1.268,1828,1.268,1840,1.601,1842,2.501,1863,1.461,1881,1.461,1890,1.461,1894,1.461,1895,1.124,1899,1.461,1903,1.461,1906,2.501,1908,1.461,1910,2.318,1926,1.461,1927,1.461,1950,1.461,1954,1.461,1967,1.754,1968,1.754,1969,1.754,1970,3.305,1971,1.461,1972,2.501,1973,1.268,1974,1.754,1975,1.461,1976,1.754,1977,1.461,1978,1.124,1979,1.268,1980,1.754,1981,1.754,1982,1.754,1983,1.754,1984,1.754,1985,1.461,1986,1.268,1987,1.461,1988,1.754,1989,1.754,1990,1.754,1991,3.459,1992,1.754,1993,1.461,1994,2.318,1995,1.754,1996,3.459,1997,1.754,1998,1.754,1999,1.754,2000,1.754,2001,1.754,2002,1.754,2003,1.754,2004,1.754,2005,1.754,2006,1.754,2007,2.782,2008,1.461,2009,1.754,2010,1.754,2011,1.754,2012,1.461,2013,1.754,2014,2.782,2015,2.782,2016,1.754,2017,1.754,2018,1.754,2019,1.754,2020,1.754,2021,1.754,2022,1.754,2023,2.782,2024,1.754,2025,2.012,2026,1.754,2027,2.318,2028,1.754,2029,1.754,2030,1.754,2031,1.754,2032,1.754,2033,1.754,2034,1.754,2035,2.501,2036,1.754,2037,1.754,2038,2.782,2039,1.754,2040,1.754,2041,1.754,2042,1.461,2043,2.782,2044,1.754,2045,1.754,2046,1.461,2047,2.782,2048,1.754,2049,1.461,2050,1.754,2051,1.268,2052,1.754,2053,1.754,2054,3.577,2055,1.754,2056,1.754,2057,1.268,2058,1.754,2059,1.754,2060,1.754,2061,1.754,2062,1.754,2063,1.754,2064,1.754,2065,1.754,2066,2.782,2067,1.754,2068,1.461,2069,1.461,2070,1.754,2071,1.754,2072,1.461,2073,1.754,2074,1.754,2075,1.461,2076,1.754,2077,1.754,2078,1.754,2079,1.754,2080,2.318,2081,1.754,2082,1.754,2083,1.754,2084,1.754,2085,1.754,2086,1.754,2087,1.754,2088,1.754,2089,2.782,2090,1.754,2091,1.754,2092,1.754,2093,1.754,2094,1.754,2095,1.754,2096,1.754,2097,1.754,2098,1.754,2099,1.754,2100,1.754,2101,1.754,2102,1.754,2103,1.754,2104,1.754,2105,1.754,2106,1.754,2107,1.754,2108,1.754,2109,1.754,2110,1.754,2111,1.461,2112,1.754,2113,1.754,2114,1.268,2115,1.754,2116,1.754,2117,1.461,2118,2.217,2119,1.754,2120,1.754,2121,1.754,2122,2.318,2123,1.754,2124,2.318,2125,2.782,2126,1.461,2127,2.501,2128,1.461,2129,1.754,2130,1.754,2131,1.754,2132,1.461,2133,1.754,2134,1.461,2135,1.754,2136,1.754,2137,1.754,2138,1.754,2139,1.754,2140,1.754,2141,1.461,2142,1.268,2143,1.268,2144,1.268,2145,1.754,2146,1.268,2147,1.754,2148,1.461,2149,1.754,2150,1.754,2151,2.318,2152,1.754,2153,1.754,2154,1.461,2155,1.461,2156,1.268,2157,1.754,2158,1.461,2159,1.268,2160,1.754,2161,1.461,2162,1.461,2163,1.268,2164,1.461,2165,1.268,2166,1.461,2167,1.461,2168,1.268,2169,1.461,2170,1.461,2171,1.461,2172,1.461,2173,2.782,2174,1.124,2175,1.754,2176,1.461,2177,1.754,2178,1.754,2179,2.782,2180,2.782,2181,1.754,2182,1.461,2183,1.461,2184,2.782,2185,1.754,2186,1.754,2187,2.782,2188,1.754,2189,1.754,2190,1.754,2191,1.461,2192,1.754,2193,1.461,2194,1.754,2195,1.461,2196,1.754,2197,1.754,2198,1.461,2199,3.937,2200,1.754,2201,1.754,2202,1.754,2203,2.782,2204,1.754,2205,1.754,2206,1.754,2207,1.754]],["title/license.html",[1381,1.613,1382,1.46,1689,1.797]],["body/license.html",[44,0.028,86,2.673,100,1.799,310,0.024,311,0.028,312,0.024,349,2.202,430,2.202,454,3.163,749,2.977,759,2.977,1022,3.359,1050,2.202,1336,2.673,1394,3.869,1474,3.869,1576,3.869,1594,3.869,1689,2.977,1766,3.359,1793,3.869,1803,3.869,2051,3.359,2128,4.58,2146,3.359,2156,3.975,2158,3.869,2159,3.359,2208,5.497,2209,3.869,2210,4.645,2211,5.497,2212,4.645,2213,4.645,2214,4.645,2215,5.042,2216,4.645,2217,4.645,2218,4.645,2219,5.497,2220,4.645,2221,4.645,2222,5.497,2223,4.645,2224,4.645,2225,4.645,2226,4.645,2227,4.645,2228,4.645,2229,4.645,2230,5.497,2231,4.645,2232,4.645,2233,4.645,2234,4.645,2235,4.645,2236,4.645,2237,4.645,2238,4.645]],["title/modules.html",[1039,3.209]],["body/modules.html",[44,0.03,127,2.648,310,0.026,311,0.03,312,0.026,619,2.41,1039,3.676,1430,4.235,1840,2.926,2239,5.084]],["title/overview.html",[1652,2.845]],["body/overview.html",[2,1.614,44,0.032,52,1.915,127,3.29,134,2.577,270,2.361,310,0.025,311,0.029,312,0.025,314,1.757,320,1.915,643,2.091,687,3.49,688,3.235,693,3.094,902,2.928,922,3.094,1040,2.091,1041,4.021,1042,4.021,1043,4.021,1044,4.021,1045,4.021,1046,4.021,1047,4.956,1048,4.684,1049,4.021,1050,2.288,1652,3.094]],["title/miscellaneous/typealiases.html",[1852,1.215,2240,3.959]],["body/miscellaneous/typealiases.html",[9,1.737,15,0.373,18,1.751,21,1.893,29,1.776,30,2.367,31,1.6,32,2.261,43,2.67,44,0.027,52,1.465,62,0.598,66,2.125,68,3.076,76,0.567,80,1.345,81,0.799,82,1.595,85,2.033,86,2.125,92,0.875,93,1.345,96,3.695,104,1.345,114,0.549,118,1.6,124,1.465,157,1.345,159,1.49,167,1.751,168,1,191,1.893,194,3.386,205,2.066,209,2.505,211,1.751,216,1.345,218,1.923,219,1.465,231,1.893,234,2.505,241,1.751,257,1.923,281,1.465,310,0.019,311,0.025,312,0.019,318,2.261,320,1.465,326,1.134,339,1.235,359,2.367,366,3.449,370,3.449,373,1.751,375,3.04,385,2.484,397,1.345,441,2.367,442,2.367,486,1.923,493,3.04,494,2.744,503,1.751,533,2.367,535,1.923,546,1.751,631,1.751,675,1.923,694,3.076,710,2.367,715,1.923,736,2.125,738,2.125,747,2.125,758,2.484,805,2.125,831,2.066,838,3.076,851,3.449,852,3.449,853,3.449,854,3.449,855,3.449,856,3.449,857,3.449,858,3.449,859,3.449,860,3.449,861,3.449,862,3.449,864,2.367,865,3.449,866,2.367,867,2.744,869,3.076,870,2.67,871,3.449,872,2.67,873,3.076,875,2.67,876,3.076,877,3.057,878,2.67,879,3.973,880,1.751,886,2.125,887,2.367,888,2.367,889,2.367,894,3.973,895,2.67,896,2.744,897,2.67,898,2.125,899,3.076,900,3.076,901,3.076,902,1.923,903,3.076,904,3.973,905,1.751,907,2.367,908,4.401,910,2.367,912,3.076,914,3.973,915,3.076,916,3.076,1405,1.751,1453,1.6,1852,1.6,1895,2.367,2241,3.693,2242,6.403,2243,3.693,2244,3.693,2245,3.693,2246,3.693,2247,3.693]],["title/miscellaneous/variables.html",[1852,1.215,2248,3.298]],["body/miscellaneous/variables.html",[44,0.034,62,0.67,76,0.556,80,1.811,81,1.39,82,1.384,134,1.792,168,1.118,246,4.639,310,0.021,311,0.026,312,0.021,319,4.639,323,2.652,327,2.9,440,4.27,588,4.639,1051,3.447,1068,4.27,1069,3.447,1070,3.447,1071,3.447,1072,3.447,1073,3.447,1074,3.447,1075,4.27,1434,4.27,1852,1.792,1859,5.148,1860,4.848,1865,4.27,1873,4.639,1876,4.27,1885,4.848,2248,3.447,2249,5.125,2250,5.125,2251,5.568,2252,5.568,2253,5.568,2254,5.125,2255,5.125,2256,5.125,2257,5.125,2258,4.137,2259,4.137,2260,4.137,2261,4.137,2262,4.137,2263,3.447,2264,4.137]],["title/additional-documentation/package-construction.html",[364,0.965,651,1.559,1428,2.026,1836,1.399]],["body/additional-documentation/package-construction.html",[0,0.97,2,1.255,4,1.954,7,1.779,8,0.378,10,0.486,12,1.127,13,0.378,15,0.262,17,1.667,18,1.779,28,1.489,35,1.127,44,0.027,56,1.881,76,0.227,79,1.625,99,1.127,100,1.569,101,1.667,111,1.233,114,0.432,122,1.233,124,2.112,126,2.159,135,1.912,147,1.611,149,1.496,150,1.907,152,1.496,154,1.779,155,1.366,156,1.354,157,0.947,192,1.138,195,1.881,205,2.087,206,1.881,212,1.496,216,1.603,219,1.352,221,2.773,223,2.306,224,2.027,233,1.881,245,1.496,257,2.51,262,1.233,263,1.496,270,1.032,274,1.496,275,2.601,291,1.354,310,0.013,311,0.019,312,0.013,326,1.152,332,1.233,337,1.881,339,1.472,340,1.779,349,1.233,389,1.611,393,2.166,394,2.166,397,0.947,450,2.084,455,1.667,461,1.667,474,1.354,475,2.159,476,1.354,477,2.405,484,1.354,490,1.667,492,1.496,499,1.032,503,1.233,527,1.354,564,1.496,577,0.947,580,1.354,617,1.667,618,1.354,619,1.233,620,1.667,642,1.667,643,1.127,644,1.496,682,2.306,744,2.533,771,1.667,787,1.667,801,1.881,806,1.881,826,2.292,844,1.496,845,2.166,865,2.713,880,1.779,898,1.496,927,2.159,954,1.881,1010,1.496,1040,1.127,1079,1.709,1084,1.032,1087,1.354,1122,1.881,1127,1.667,1168,1.881,1185,3.089,1213,2.166,1335,1.496,1396,2.166,1408,2.166,1410,2.713,1416,2.533,1423,1.881,1435,3.275,1439,1.496,1444,2.405,1447,1.881,1448,2.166,1449,2.405,1450,2.858,1453,1.625,1455,2.405,1456,2.405,1465,2.159,1467,2.159,1481,1.881,1485,2.166,1496,1.667,1498,3.412,1501,1.881,1518,2.166,1533,2.166,1555,3.183,1560,2.166,1574,1.667,1580,3.275,1592,3.089,1593,2.405,1642,2.713,1648,1.881,1656,1.881,1663,2.166,1666,3.126,1667,3.183,1672,2.166,1673,2.166,1680,1.881,1681,2.166,1683,2.713,1693,3.183,1715,1.667,1719,4.138,1723,2.166,1735,3.412,1740,2.405,1752,1.496,1770,1.881,1771,2.405,1772,3.694,1776,2.166,1786,1.881,1795,2.166,1799,1.881,1801,2.94,1812,1.881,1826,1.881,1828,1.881,1836,3.232,1840,1.496,1895,1.667,1907,2.166,1947,3.126,1970,2.713,1971,2.166,1972,4.372,1973,2.713,1977,2.166,1978,1.667,1979,2.713,1985,2.166,1986,1.881,1987,2.166,1994,2.166,2025,2.713,2027,2.166,2049,2.166,2051,1.881,2054,3.126,2057,3.183,2069,2.166,2080,2.166,2111,3.126,2114,1.881,2118,2.821,2122,2.166,2127,3.484,2142,2.713,2143,3.694,2144,2.713,2148,2.166,2151,3.667,2155,2.166,2163,1.881,2165,1.881,2174,2.821,2182,2.166,2183,2.166,2195,2.166,2198,3.126,2265,2.601,2266,2.601,2267,2.601,2268,3.126,2269,2.601,2270,2.601,2271,2.601,2272,2.601,2273,2.166,2274,2.601,2275,2.601,2276,3.752,2277,2.601,2278,2.601,2279,2.601,2280,2.601,2281,3.752,2282,2.601,2283,3.126,2284,2.166,2285,2.601,2286,3.752,2287,2.601,2288,3.667,2289,2.601,2290,2.601,2291,2.601,2292,2.601,2293,2.601,2294,2.601,2295,2.601,2296,2.601,2297,2.601,2298,2.601,2299,2.601,2300,2.601,2301,2.601,2302,2.166,2303,2.601,2304,2.601,2305,2.601,2306,2.601,2307,2.166,2308,3.126,2309,2.166,2310,2.166,2311,2.601,2312,2.601,2313,2.601,2314,3.752,2315,2.601,2316,2.601,2317,2.601,2318,2.601,2319,2.601,2320,2.601,2321,2.601,2322,2.601,2323,2.601,2324,3.126,2325,2.601,2326,2.166,2327,2.166,2328,2.166,2329,2.601,2330,3.126,2331,2.166,2332,3.126,2333,4.401,2334,2.601,2335,3.752,2336,2.601,2337,2.601,2338,2.601,2339,2.166,2340,2.601,2341,2.601,2342,2.601,2343,2.601,2344,3.752,2345,2.601,2346,2.601,2347,2.601,2348,4.401,2349,2.601,2350,2.601,2351,2.601,2352,2.601,2353,3.752,2354,2.601,2355,2.601,2356,3.752,2357,3.126,2358,2.601,2359,2.601,2360,2.601,2361,2.601,2362,2.166,2363,2.601,2364,2.166,2365,2.601,2366,2.601,2367,2.601,2368,2.601,2369,4.434,2370,2.166,2371,2.601,2372,2.166,2373,2.166,2374,2.601,2375,2.601,2376,2.601,2377,2.601,2378,2.601,2379,2.601,2380,2.601,2381,2.601,2382,2.601,2383,2.601,2384,2.601,2385,3.126,2386,3.752,2387,2.601,2388,3.126,2389,2.166,2390,2.601,2391,3.752,2392,2.601,2393,2.601,2394,2.601,2395,2.601,2396,2.601,2397,2.601,2398,2.601,2399,2.601,2400,2.601,2401,2.601,2402,2.601,2403,2.601,2404,2.601,2405,3.752,2406,2.601,2407,2.601,2408,2.601,2409,2.601,2410,2.166,2411,2.601,2412,2.601,2413,2.601,2414,3.752,2415,2.601,2416,2.166,2417,2.601,2418,2.601,2419,2.601,2420,2.601,2421,2.601,2422,3.752,2423,2.601,2424,2.601,2425,2.601,2426,2.601,2427,2.166,2428,2.601,2429,2.601,2430,2.166,2431,2.601,2432,2.601,2433,2.601,2434,2.601,2435,2.601,2436,2.601,2437,2.601,2438,2.601,2439,2.601,2440,2.601,2441,2.601]],["title/additional-documentation/package-construction/create-an-npm-package.html",[364,0.852,389,0.718,651,1.376,1801,1.236,1836,1.236]],["body/additional-documentation/package-construction/create-an-npm-package.html",[2,0.751,3,0.438,4,2.506,7,2.483,10,0.408,13,0.735,15,0.453,19,2.159,20,1.459,26,1.871,27,1.916,28,1.604,44,0.033,56,3.247,64,0.818,76,0.294,81,0.486,86,1.293,99,0.973,100,1.609,101,1.44,106,1.755,107,1.597,109,1.293,112,1.755,114,0.517,117,0.973,124,1.909,132,0.581,133,1.17,135,0.891,147,1.752,150,2.5,152,1.939,155,0.818,156,1.17,192,1.046,205,0.973,207,1.624,209,1.065,213,2.506,216,1.227,219,1.242,221,2.326,223,2.084,224,1.337,233,1.624,235,0.891,239,1.44,257,2.806,260,2.591,262,1.065,263,1.293,264,1.624,275,1.916,282,1.916,310,0.012,311,0.017,312,0.012,326,1.035,332,1.065,340,1.597,389,1.802,442,1.44,450,1.962,455,1.44,461,2.159,462,1.624,472,1.871,474,1.17,475,1.293,492,1.293,527,1.17,528,1.17,563,3.367,577,1.472,580,1.755,614,2.806,615,1.624,619,1.916,620,2.159,640,1.871,649,2.806,682,2.387,683,4.208,688,1.293,696,2.907,705,2.584,717,2.806,744,3.014,759,2.591,761,2.923,771,1.44,781,1.44,800,2.806,831,0.973,844,1.293,866,1.44,875,1.624,880,2.661,895,1.624,902,1.17,905,1.065,926,1.871,927,1.939,951,3.367,954,1.624,1013,1.871,1021,1.293,1040,1.459,1058,1.624,1061,1.624,1079,1.352,1084,0.891,1122,2.436,1127,1.44,1230,1.871,1263,1.624,1264,1.44,1336,1.293,1382,1.17,1402,3.084,1405,1.597,1411,1.871,1416,3.014,1435,1.44,1437,1.871,1439,1.939,1444,3.532,1449,2.159,1450,3.138,1451,3.367,1453,1.751,1455,2.879,1465,3.419,1467,1.293,1478,1.871,1491,2.806,1498,3.532,1510,1.871,1529,2.591,1545,1.871,1546,2.591,1554,1.871,1555,1.624,1562,2.806,1573,1.871,1574,2.159,1580,1.44,1589,1.624,1592,3.084,1593,3.084,1604,1.624,1610,1.871,1625,1.624,1642,1.624,1661,4.364,1667,1.624,1683,1.624,1689,2.591,1693,2.923,1699,3.247,1707,1.871,1709,1.871,1715,2.879,1719,3.479,1736,2.806,1740,2.159,1747,2.806,1752,1.939,1754,1.624,1760,1.624,1764,1.871,1766,2.436,1771,1.44,1772,2.923,1782,3.653,1786,2.436,1796,2.806,1797,1.871,1799,4.297,1801,3.506,1804,2.806,1812,2.436,1819,1.624,1833,1.871,1836,2.768,1838,1.871,1839,2.806,1840,1.939,1842,2.923,1843,2.806,1846,1.871,1850,1.871,1905,1.871,1906,2.923,1970,2.436,1972,2.436,1975,1.871,1978,1.44,1986,2.436,1993,1.871,2008,1.871,2012,2.806,2025,2.436,2035,1.624,2042,1.871,2046,1.871,2057,3.247,2068,1.871,2072,1.871,2118,2.159,2124,2.806,2127,2.436,2132,1.871,2134,1.871,2141,3.741,2142,3.247,2143,4.174,2144,2.436,2146,2.436,2154,2.806,2156,1.624,2168,1.624,2174,1.44,2263,1.871,2273,2.806,2283,3.741,2284,2.806,2288,1.871,2310,1.871,2324,1.871,2326,1.871,2327,1.871,2328,1.871,2330,2.806,2331,3.367,2332,1.871,2357,1.871,2362,1.871,2364,4.364,2369,2.806,2370,2.806,2372,1.871,2373,1.871,2385,2.806,2388,1.871,2389,1.871,2410,2.806,2416,3.367,2427,1.871,2430,1.871,2442,2.246,2443,3.369,2444,4.042,2445,2.246,2446,3.369,2447,2.246,2448,2.246,2449,3.369,2450,2.246,2451,2.246,2452,2.246,2453,2.246,2454,2.246,2455,2.246,2456,2.246,2457,2.246,2458,2.246,2459,3.369,2460,2.246,2461,2.246,2462,2.246,2463,2.246,2464,4.042,2465,2.246,2466,2.246,2467,2.246,2468,4.042,2469,2.246,2470,3.369,2471,2.246,2472,2.246,2473,2.246,2474,2.246,2475,2.246,2476,2.246,2477,2.246,2478,2.246,2479,2.246,2480,2.246,2481,2.246,2482,4.042,2483,2.246,2484,2.246,2485,2.246,2486,2.246,2487,3.369,2488,2.246,2489,2.246,2490,4.491,2491,2.246,2492,2.246,2493,2.246,2494,2.246,2495,3.369,2496,4.042,2497,3.369,2498,2.246,2499,2.246,2500,2.246,2501,2.246,2502,2.246,2503,2.246,2504,2.246,2505,2.246,2506,2.246,2507,2.246,2508,2.246,2509,2.246,2510,2.246,2511,2.246,2512,2.246,2513,2.246,2514,2.246,2515,2.246,2516,2.246,2517,2.246,2518,4.491,2519,4.042,2520,4.042,2521,2.246,2522,2.246,2523,2.246,2524,2.246,2525,2.246,2526,2.246,2527,2.246,2528,2.246,2529,2.246,2530,2.246,2531,2.246,2532,2.246,2533,2.246,2534,2.246,2535,2.246,2536,2.246,2537,2.246,2538,3.369,2539,4.042,2540,3.369,2541,3.369,2542,3.369,2543,3.369,2544,2.246,2545,2.246,2546,2.246,2547,2.246,2548,2.246,2549,2.246,2550,2.246,2551,2.246,2552,2.246,2553,2.246,2554,2.246,2555,2.246,2556,2.246,2557,2.246,2558,2.246,2559,3.369,2560,2.246,2561,2.246,2562,2.246,2563,2.246,2564,2.246,2565,2.246,2566,2.246,2567,2.246,2568,2.246,2569,2.246,2570,2.246,2571,2.246,2572,2.246,2573,2.246,2574,2.246,2575,2.246,2576,3.369,2577,2.246,2578,2.246,2579,2.246]],["title/additional-documentation/about.html",[364,1.313,651,2.122]],["body/additional-documentation/about.html",[2,1.406,44,0.031,87,3.318,99,1.822,107,2.454,135,1.669,147,1.731,192,1.339,216,1.531,219,1.292,223,2.604,275,2.454,310,0.022,311,0.027,312,0.022,389,1.406,450,1.531,451,2.696,486,2.19,564,2.42,617,2.696,621,3.041,843,2.696,880,2.454,887,3.318,927,2.42,1022,3.041,1050,1.994,1335,2.42,1403,2.696,1405,1.994,1410,3.041,1416,2.979,1423,3.744,1450,2.696,1453,1.822,1456,2.696,1467,3.228,1490,3.041,1497,3.503,1501,3.041,1523,2.696,1658,4.313,1735,2.696,1752,2.42,1770,3.744,1792,3.503,1973,3.744,1978,2.696,1979,3.041,2035,3.041,2075,3.503,2114,3.041,2117,3.503,2118,3.318,2126,3.503,2159,3.041,2161,3.503,2162,3.503,2163,4.056,2164,4.313,2165,3.744,2166,3.503,2167,3.503,2168,4.056,2169,4.673,2170,3.503,2171,3.503,2172,3.503,2174,3.318,2176,3.503,2191,3.503,2193,3.503,2209,3.503,2215,3.503,2268,3.503,2302,4.313,2307,3.503,2308,3.503,2309,4.313,2339,4.313,2580,4.205,2581,4.205,2582,4.205,2583,4.205,2584,4.205,2585,4.205,2586,5.609,2587,4.205,2588,4.205,2589,4.205,2590,5.177,2591,4.205,2592,4.205,2593,4.205,2594,4.205,2595,4.205,2596,4.205,2597,4.205,2598,4.205,2599,4.205,2600,4.205,2601,4.205,2602,4.205,2603,4.205,2604,4.205,2605,4.205,2606,4.205]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["0",{"_index":160,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["0.0.1",{"_index":2537,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.0.23",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":1384,"title":{},"body":{"changelog.html":{}}}],["0.11.3",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["0.19.38",{"_index":2503,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.2.1",{"_index":1441,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":1459,"title":{},"body":{"changelog.html":{}}}],["0.3",{"_index":2003,"title":{},"body":{"index.html":{}}}],["0.3.5",{"_index":1473,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.6",{"_index":1482,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.6.0",{"_index":1478,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.7",{"_index":1483,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.7.0",{"_index":1500,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":1508,"title":{},"body":{"changelog.html":{}}}],["0.7.2",{"_index":1513,"title":{},"body":{"changelog.html":{}}}],["0.7.3",{"_index":1518,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["0.7.4",{"_index":2079,"title":{},"body":{"index.html":{}}}],["0.7.5",{"_index":2082,"title":{},"body":{"index.html":{}}}],["0.8.0",{"_index":1530,"title":{},"body":{"changelog.html":{}}}],["0.8.16",{"_index":2504,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.9.0",{"_index":1536,"title":{},"body":{"changelog.html":{}}}],["000",{"_index":1375,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["01",{"_index":1386,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1520,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1538,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1509,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1519,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1531,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1442,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":270,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"overview.html":{},"additional-documentation/package-construction.html":{}}}],["1.0",{"_index":1504,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.132",{"_index":2406,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1.607",{"_index":2395,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1.987",{"_index":2390,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["10",{"_index":553,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{}}}],["100",{"_index":204,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"contributing.html":{}}}],["10px",{"_index":51,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["11",{"_index":2013,"title":{},"body":{"index.html":{}}}],["11.0.2",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["113",{"_index":2605,"title":{},"body":{"additional-documentation/about.html":{}}}],["12",{"_index":182,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["12683",{"_index":2606,"title":{},"body":{"additional-documentation/about.html":{}}}],["13",{"_index":1532,"title":{},"body":{"changelog.html":{}}}],["13.596",{"_index":2394,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["13569",{"_index":2401,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["14",{"_index":1443,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1460,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":718,"title":{},"body":{"components/EditorComponent.html":{}}}],["1607",{"_index":2402,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["170",{"_index":2391,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1987",{"_index":2399,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1em",{"_index":59,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["1px",{"_index":47,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["1st",{"_index":2277,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["2",{"_index":1435,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["2.0.3",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1661,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["2.4.1",{"_index":2501,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["2.x",{"_index":2280,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["20",{"_index":163,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{}}}],["2016",{"_index":2210,"title":{},"body":{"license.html":{}}}],["2017",{"_index":1385,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":1474,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":1501,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["2020",{"_index":1537,"title":{},"body":{"changelog.html":{}}}],["20px",{"_index":720,"title":{},"body":{"components/EditorComponent.html":{}}}],["24",{"_index":187,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{}}}],["25px",{"_index":1233,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["3",{"_index":687,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"overview.html":{}}}],["3.1.0",{"_index":2500,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["3.8.0",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":170,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{}}}],["30.107",{"_index":2383,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["300",{"_index":1995,"title":{},"body":{"index.html":{}}}],["3000",{"_index":2578,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["30107",{"_index":2397,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["31",{"_index":1502,"title":{},"body":{"changelog.html":{}}}],["313",{"_index":2407,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["33",{"_index":176,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["39",{"_index":1998,"title":{},"body":{"index.html":{}}}],["4",{"_index":787,"title":{},"body":{"components/EditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["4.233",{"_index":2384,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["4.5.3",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":181,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["4233",{"_index":2398,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["45690",{"_index":2403,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["46.822",{"_index":2374,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["4px",{"_index":722,"title":{},"body":{"components/EditorComponent.html":{}}}],["5",{"_index":1479,"title":{},"body":{"changelog.html":{}}}],["5.4.1",{"_index":2550,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["5.4.2",{"_index":2502,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["50",{"_index":189,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["6",{"_index":688,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["6.323",{"_index":2375,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["6.6.3",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":195,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"additional-documentation/package-construction.html":{}}}],["6010",{"_index":2404,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["7",{"_index":1484,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["7.0.0",{"_index":1512,"title":{},"body":{"changelog.html":{}}}],["7.x",{"_index":2279,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["70",{"_index":197,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["8",{"_index":1535,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["80",{"_index":201,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["88",{"_index":183,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["9",{"_index":1539,"title":{},"body":{"changelog.html":{}}}],["__displayorder__${controlname",{"_index":252,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__groupdesc__${controlname",{"_index":256,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__groupname__${controlname",{"_index":254,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__grouporder__${controlname",{"_index":255,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__hascompareproperty__${propname",{"_index":997,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasmaxlength__${propname",{"_index":966,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasminlength__${propname",{"_index":972,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__haspattern__${propname",{"_index":978,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasrangefrom__${propname",{"_index":984,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasrangeto__${propname",{"_index":986,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__isgrouped__${controlname",{"_index":253,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__isrequired__${propname",{"_index":960,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["_headers",{"_index":398,"title":{},"body":{"classes/DataGridModel.html":{}}}],["_items",{"_index":399,"title":{},"body":{"classes/DataGridModel.html":{}}}],["_state",{"_index":1082,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["a[colname",{"_index":568,"title":{},"body":{"classes/DataGridModel.html":{}}}],["ability",{"_index":2455,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["above",{"_index":749,"title":{},"body":{"components/EditorComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["absolute",{"_index":1601,"title":{},"body":{"contributing.html":{}}}],["absolutely",{"_index":2022,"title":{},"body":{"index.html":{}}}],["ac",{"_index":40,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{}}}],["accept",{"_index":1617,"title":{},"body":{"contributing.html":{}}}],["accepted",{"_index":1632,"title":{},"body":{"contributing.html":{}}}],["accepts",{"_index":2086,"title":{},"body":{"index.html":{}}}],["access",{"_index":1011,"title":{},"body":{"injectables/FormValidatorService.html":{},"index.html":{}}}],["accessors",{"_index":412,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"classes/TreeNodeModel.html":{}}}],["according",{"_index":642,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"additional-documentation/package-construction.html":{}}}],["accordingly",{"_index":926,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["account",{"_index":2422,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["achieve",{"_index":2363,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["actexttreenode",{"_index":1265,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["action",{"_index":2128,"title":{},"body":{"index.html":{},"license.html":{}}}],["actioncell",{"_index":697,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["active",{"_index":194,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["actively",{"_index":2452,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["actreenodeoptions",{"_index":1266,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["actual",{"_index":503,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"modules/SvogvModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["actual_component",{"_index":309,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["actually",{"_index":937,"title":{},"body":{"injectables/FormValidatorService.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{}}}],["add",{"_index":272,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["add(node",{"_index":1116,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["add(nodes",{"_index":1103,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["addcolumn",{"_index":406,"title":{},"body":{"classes/DataGridModel.html":{}}}],["addcolumn(colname",{"_index":446,"title":{},"body":{"classes/DataGridModel.html":{}}}],["addcolumnlater",{"_index":479,"title":{},"body":{"classes/DataGridModel.html":{}}}],["addcolumn}later",{"_index":570,"title":{},"body":{"classes/DataGridModel.html":{}}}],["added",{"_index":1521,"title":{},"body":{"changelog.html":{}}}],["adding",{"_index":451,"title":{},"body":{"classes/DataGridModel.html":{},"contributing.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["additional",{"_index":364,"title":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["additionally",{"_index":1524,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["address",{"_index":165,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["adds",{"_index":1790,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{}}}],["adherence",{"_index":1711,"title":{},"body":{"contributing.html":{}}}],["admit",{"_index":1493,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":2035,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["advantages",{"_index":1980,"title":{},"body":{"index.html":{}}}],["affect",{"_index":1783,"title":{},"body":{"contributing.html":{}}}],["affected",{"_index":1659,"title":{},"body":{"contributing.html":{}}}],["again",{"_index":477,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["against",{"_index":1899,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["age",{"_index":186,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["agreement",{"_index":1690,"title":{},"body":{"contributing.html":{}}}],["ahead",{"_index":1620,"title":{},"body":{"contributing.html":{}}}],["alexa",{"_index":2206,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":2241,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":724,"title":{},"body":{"components/EditorComponent.html":{}}}],["allow",{"_index":1625,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["allowed",{"_index":908,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":888,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["alpha",{"_index":1395,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":263,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["alternative",{"_index":2426,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["alternatively",{"_index":2030,"title":{},"body":{"index.html":{}}}],["alternatives",{"_index":2365,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["always",{"_index":276,"title":{},"body":{"components/AutoFormComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["amount",{"_index":2357,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["amp",{"_index":782,"title":{},"body":{"components/EditorComponent.html":{}}}],["analogclock",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["ancient",{"_index":2587,"title":{},"body":{"additional-documentation/about.html":{}}}],["and/or",{"_index":2213,"title":{},"body":{"license.html":{}}}],["angular",{"_index":223,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["angular's",{"_index":2036,"title":{},"body":{"index.html":{}}}],["angular/cli",{"_index":1976,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1058,"title":{},"body":{"modules/SvogvModule.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/compiler",{"_index":1838,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/core",{"_index":132,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/forms",{"_index":133,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"modules/SvogvModule.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/http",{"_index":2499,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/platform",{"_index":1839,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/router",{"_index":1061,"title":{},"body":{"modules/SvogvModule.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular2",{"_index":2492,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular4",{"_index":2493,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angularjs",{"_index":2177,"title":{},"body":{"index.html":{}}}],["annotations",{"_index":2014,"title":{},"body":{"index.html":{}}}],["anote",{"_index":1714,"title":{},"body":{"contributing.html":{}}}],["another",{"_index":1449,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["answer",{"_index":1583,"title":{},"body":{"contributing.html":{}}}],["answered",{"_index":1638,"title":{},"body":{"contributing.html":{}}}],["answers",{"_index":2433,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["any).__editormodel__",{"_index":238,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["anything",{"_index":1805,"title":{},"body":{"contributing.html":{}}}],["anyway",{"_index":1950,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["apache",{"_index":2480,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["apart",{"_index":2439,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["api",{"_index":3,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["app",{"_index":2127,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["app's",{"_index":2287,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["appear",{"_index":86,"title":{},"body":{"components/AutoFormComponent.html":{},"interfaces/FormValidatorModel.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["appearance",{"_index":215,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["appears",{"_index":747,"title":{},"body":{"components/EditorComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["application",{"_index":1955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applications",{"_index":383,"title":{},"body":{"classes/DataGridModel.html":{}}}],["applied",{"_index":370,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["applies",{"_index":1908,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["apply",{"_index":1903,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["appreciated",{"_index":2186,"title":{},"body":{"index.html":{}}}],["approach",{"_index":1985,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["appropriate",{"_index":1698,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["apps",{"_index":2114,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["archive",{"_index":1636,"title":{},"body":{"contributing.html":{}}}],["area",{"_index":1332,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["arising",{"_index":2238,"title":{},"body":{"license.html":{}}}],["around",{"_index":2305,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["array",{"_index":231,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["array.prototype.sort",{"_index":357,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/functions.html":{}}}],["array[0",{"_index":795,"title":{},"body":{"components/EditorComponent.html":{}}}],["ascending",{"_index":496,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["asp.net",{"_index":2196,"title":{},"body":{"index.html":{}}}],["assume",{"_index":274,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["assure",{"_index":2132,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["assures",{"_index":1918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["atom",{"_index":2368,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["attribute",{"_index":335,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"index.html":{}}}],["audience",{"_index":1967,"title":{},"body":{"index.html":{}}}],["author",{"_index":2156,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["auto",{"_index":54,"title":{},"body":{"components/AutoFormComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["autoform",{"_index":41,"title":{},"body":{"components/AutoFormComponent.html":{},"changelog.html":{},"index.html":{}}}],["autoform&gt",{"_index":893,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["autoform'},{'name",{"_index":296,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["autoform.component.html",{"_index":61,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["autoformcomponent",{"_index":1,"title":{"components/AutoFormComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["autoforms",{"_index":869,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["automate",{"_index":1975,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["automatically",{"_index":886,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["available",{"_index":1523,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["avoid",{"_index":1942,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aware",{"_index":2034,"title":{},"body":{"index.html":{}}}],["awesome",{"_index":1335,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["aws",{"_index":2203,"title":{},"body":{"index.html":{}}}],["azure",{"_index":2199,"title":{},"body":{"index.html":{}}}],["a}validator",{"_index":929,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["b",{"_index":379,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"contributing.html":{}}}],["b[colname",{"_index":569,"title":{},"body":{"classes/DataGridModel.html":{}}}],["back",{"_index":2274,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["backcolor",{"_index":1192,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["backend",{"_index":621,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["background",{"_index":2265,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["bad",{"_index":2359,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["baded",{"_index":786,"title":{},"body":{"components/EditorComponent.html":{}}}],["base",{"_index":373,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":122,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["basic",{"_index":844,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["becomes",{"_index":2318,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["before",{"_index":1546,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["begin",{"_index":1776,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["beginners",{"_index":2429,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["behavior",{"_index":23,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["being",{"_index":117,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["believe",{"_index":2150,"title":{},"body":{"index.html":{}}}],["below",{"_index":2073,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":2354,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["berlin",{"_index":2161,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["best",{"_index":1602,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":1555,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["between",{"_index":1399,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["big",{"_index":1485,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["binding",{"_index":2059,"title":{},"body":{"index.html":{}}}],["birthday",{"_index":190,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["bit",{"_index":2169,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["bitbucket",{"_index":2428,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["block",{"_index":717,"title":{},"body":{"components/EditorComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["body",{"_index":1765,"title":{},"body":{"contributing.html":{}}}],["book",{"_index":2598,"title":{},"body":{"additional-documentation/about.html":{}}}],["bool",{"_index":2087,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":93,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":643,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"modules/SvogvModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/package-construction.html":{}}}],["border",{"_index":45,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["boring",{"_index":2418,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["both",{"_index":1458,"title":{},"body":{"changelog.html":{}}}],["bound",{"_index":1222,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["bower_components",{"_index":2392,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["box",{"_index":2098,"title":{},"body":{"index.html":{}}}],["boxes",{"_index":876,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["brainer",{"_index":2323,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["branch",{"_index":1694,"title":{},"body":{"contributing.html":{}}}],["brave",{"_index":2338,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["breadcrumb",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":1398,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["brings",{"_index":2309,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["bro",{"_index":2378,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["broccoli",{"_index":1800,"title":{},"body":{"contributing.html":{}}}],["brought",{"_index":2595,"title":{},"body":{"additional-documentation/about.html":{}}}],["browse",{"_index":2239,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1840,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["browser's",{"_index":2298,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["browsers",{"_index":1665,"title":{},"body":{"contributing.html":{}}}],["bug",{"_index":1540,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["bugs",{"_index":1562,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["build",{"_index":150,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["build(target",{"_index":935,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["building",{"_index":2292,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["builds",{"_index":2534,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["bundle",{"_index":1991,"title":{},"body":{"index.html":{}}}],["bundles",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["bundles/svogv.umd.js",{"_index":2486,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["business",{"_index":2166,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["button",{"_index":434,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"changelog.html":{}}}],["buttons",{"_index":345,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/DataGridPaginationComponent.html":{},"changelog.html":{}}}],["buy",{"_index":2340,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["c",{"_index":2209,"title":{},"body":{"license.html":{},"additional-documentation/about.html":{}}}],["c:\\app",{"_index":2415,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["cal",{"_index":2100,"title":{},"body":{"index.html":{}}}],["calculated",{"_index":639,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["calendar",{"_index":805,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["calender",{"_index":2097,"title":{},"body":{"index.html":{}}}],["call",{"_index":149,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"additional-documentation/package-construction.html":{}}}],["callback",{"_index":355,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":461,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["caller",{"_index":464,"title":{},"body":{"classes/DataGridModel.html":{}}}],["calling",{"_index":478,"title":{},"body":{"classes/DataGridModel.html":{}}}],["can't",{"_index":1680,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["cancel",{"_index":784,"title":{},"body":{"components/EditorComponent.html":{}}}],["cansort",{"_index":1944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":1582,"title":{},"body":{"contributing.html":{}}}],["capitalize",{"_index":1814,"title":{},"body":{"contributing.html":{}}}],["care",{"_index":2144,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["casde",{"_index":1948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":1529,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["cases",{"_index":1700,"title":{},"body":{"contributing.html":{}}}],["cast",{"_index":949,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["catch",{"_index":955,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["causing",{"_index":1684,"title":{},"body":{"contributing.html":{}}}],["cd",{"_index":2416,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["cell",{"_index":2074,"title":{},"body":{"index.html":{}}}],["cell's",{"_index":2078,"title":{},"body":{"index.html":{}}}],["cells",{"_index":1954,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["center",{"_index":2483,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["certain",{"_index":361,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["chain",{"_index":2284,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["chances",{"_index":1650,"title":{},"body":{"contributing.html":{}}}],["change",{"_index":675,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["change.currentvalue",{"_index":677,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["changed",{"_index":650,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"contributing.html":{},"index.html":{}}}],["changelog",{"_index":1383,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":655,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["changes['maxpageindex",{"_index":674,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["changing",{"_index":472,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["chapter",{"_index":2520,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["character",{"_index":753,"title":{},"body":{"components/EditorComponent.html":{}}}],["characters",{"_index":1754,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["chars",{"_index":1390,"title":{},"body":{"changelog.html":{}}}],["chat",{"_index":1586,"title":{},"body":{"contributing.html":{}}}],["cheap",{"_index":2345,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["check",{"_index":262,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["checkable",{"_index":1193,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["checkbox",{"_index":2089,"title":{},"body":{"index.html":{}}}],["checkboxes",{"_index":1227,"title":{},"body":{"components/TreeViewComponent.html":{},"index.html":{}}}],["checkchanged",{"_index":1239,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["checked",{"_index":1203,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["checkout",{"_index":1695,"title":{},"body":{"contributing.html":{}}}],["checks",{"_index":2047,"title":{},"body":{"index.html":{}}}],["children",{"_index":1083,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{}}}],["choice",{"_index":2466,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["choose",{"_index":2333,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["chore",{"_index":1802,"title":{},"body":{"contributing.html":{}}}],["ci",{"_index":1795,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["cla",{"_index":1569,"title":{},"body":{"contributing.html":{}}}],["clarifies",{"_index":1468,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":140,"title":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{}},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["classes",{"_index":314,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["classic",{"_index":2121,"title":{},"body":{"index.html":{}}}],["clean",{"_index":1542,"title":{},"body":{"changelog.html":{}}}],["cleaner",{"_index":2319,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["clear",{"_index":2294,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["cli",{"_index":1487,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["click",{"_index":1298,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"contributing.html":{}}}],["clicked",{"_index":1293,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["clicking",{"_index":652,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{}}}],["clicks",{"_index":432,"title":{},"body":{"classes/DataGridModel.html":{}}}],["client",{"_index":443,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{}}}],["clone",{"_index":2131,"title":{},"body":{"index.html":{}}}],["close",{"_index":783,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{}}}],["closed",{"_index":1686,"title":{},"body":{"contributing.html":{}}}],["closer",{"_index":2295,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["closes",{"_index":1820,"title":{},"body":{"contributing.html":{}}}],["cloud",{"_index":2198,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["clsicon",{"_index":1271,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["cluster_svogvmodule",{"_index":1044,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["cluster_svogvmodule_declarations",{"_index":1045,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["cluster_svogvmodule_providers",{"_index":1046,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["code",{"_index":10,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["codepen",{"_index":1597,"title":{},"body":{"contributing.html":{}}}],["coding",{"_index":1566,"title":{},"body":{"contributing.html":{}}}],["coffeescript",{"_index":2306,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["col",{"_index":571,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["col.hidden",{"_index":574,"title":{},"body":{"classes/DataGridModel.html":{}}}],["collapsable",{"_index":1194,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["collapsechanged",{"_index":1240,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["collapseclasses",{"_index":1272,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["collapsed",{"_index":1349,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["collapses",{"_index":1295,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["collection",{"_index":453,"title":{},"body":{"classes/DataGridModel.html":{}}}],["colname",{"_index":456,"title":{},"body":{"classes/DataGridModel.html":{}}}],["colon",{"_index":754,"title":{},"body":{"components/EditorComponent.html":{}}}],["colons",{"_index":1788,"title":{},"body":{"contributing.html":{}}}],["color",{"_index":1195,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["colors",{"_index":1268,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["column",{"_index":350,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"index.html":{}}}],["columns",{"_index":452,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["columsn",{"_index":1941,"title":{},"body":{"miscellaneous/functions.html":{}}}],["combinations",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":2273,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["comes",{"_index":212,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["command",{"_index":1715,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["commands",{"_index":2484,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["commercial",{"_index":2153,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1567,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":2271,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["commonmodule",{"_index":1057,"title":{},"body":{"modules/SvogvModule.html":{}}}],["community",{"_index":1585,"title":{},"body":{"contributing.html":{}}}],["companies",{"_index":2343,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["compare",{"_index":905,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["compare('passwordtwo",{"_index":199,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["compare(withproperty",{"_index":1880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compare.decorator.ts",{"_index":1858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compared",{"_index":1882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compares",{"_index":1881,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["comparetype",{"_index":856,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["comparision",{"_index":534,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["competing",{"_index":1470,"title":{},"body":{"changelog.html":{}}}],["compilation",{"_index":2566,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["compiler",{"_index":2562,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["compilers",{"_index":2303,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["complement",{"_index":2112,"title":{},"body":{"index.html":{}}}],["complete",{"_index":17,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["completely",{"_index":2600,"title":{},"body":{"additional-documentation/about.html":{}}}],["complex",{"_index":1421,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":0,"title":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"classes/TreeNodeComponentModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["component's",{"_index":129,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"classes/TreeNodeComponentModel.html":{},"index.html":{}}}],["component_template",{"_index":295,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["concept",{"_index":2291,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["concise",{"_index":2329,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["concrete",{"_index":2413,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["conduct",{"_index":1558,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":2523,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["configuration",{"_index":1796,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["configure",{"_index":2106,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":2315,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["connect",{"_index":346,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["connection",{"_index":2051,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/package-construction.html":{}}}],["connects",{"_index":2058,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":2229,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1621,"title":{},"body":{"contributing.html":{}}}],["considering",{"_index":2349,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["consistency",{"_index":1742,"title":{},"body":{"contributing.html":{}}}],["consists",{"_index":1764,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["console.error('invalid",{"_index":957,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["console.log('formatdatapipe:nopipetoken",{"_index":1035,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["console.log('formatdatapipe:pipetoken",{"_index":1036,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["const",{"_index":235,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TreeNodeModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["construction",{"_index":1428,"title":{"additional-documentation/package-construction.html":{}},"body":{"changelog.html":{}}}],["constructor",{"_index":73,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["constructor(@inject(formbuilder",{"_index":944,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["constructor(component",{"_index":1123,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["constructor(el",{"_index":1284,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["constructor(fb",{"_index":932,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["constructor(items",{"_index":423,"title":{},"body":{"classes/DataGridModel.html":{}}}],["constructor(options",{"_index":1134,"title":{},"body":{"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{}}}],["constructor(private",{"_index":143,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"pipes/FormatDataPipe.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["constructor(public",{"_index":376,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["constructor(text",{"_index":328,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/TextTreeNodeModel.html":{}}}],["contact",{"_index":1572,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["contain",{"_index":1819,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["contains",{"_index":928,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["content",{"_index":710,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["context",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":245,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["continuees",{"_index":2532,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["continues",{"_index":1396,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["contract",{"_index":2235,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":1818,"title":{},"body":{"contributing.html":{}}}],["contribute",{"_index":1553,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["contributing",{"_index":1551,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":1730,"title":{},"body":{"contributing.html":{}}}],["contributions",{"_index":1619,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1556,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":21,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["controlled",{"_index":533,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["controller",{"_index":2301,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["controlling",{"_index":382,"title":{},"body":{"classes/DataGridModel.html":{}}}],["controlname",{"_index":242,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["controls",{"_index":234,"title":{},"body":{"components/AutoFormComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["conventions",{"_index":1710,"title":{},"body":{"contributing.html":{}}}],["convert",{"_index":1547,"title":{},"body":{"changelog.html":{}}}],["coordinate",{"_index":1626,"title":{},"body":{"contributing.html":{}}}],["copies",{"_index":2220,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2212,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2208,"title":{},"body":{"license.html":{}}}],["core",{"_index":1842,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["corporations",{"_index":1831,"title":{},"body":{"contributing.html":{}}}],["correcting",{"_index":1794,"title":{},"body":{"contributing.html":{}}}],["cosmosdb",{"_index":2200,"title":{},"body":{"index.html":{}}}],["count",{"_index":393,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction.html":{}}}],["counting",{"_index":2393,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["course",{"_index":2049,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["covered",{"_index":2519,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["craft",{"_index":1630,"title":{},"body":{"contributing.html":{}}}],["crafted",{"_index":1634,"title":{},"body":{"contributing.html":{}}}],["crap",{"_index":2588,"title":{},"body":{"additional-documentation/about.html":{}}}],["create",{"_index":389,"title":{"additional-documentation/package-construction/create-an-npm-package.html":{}},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["created",{"_index":106,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["createheadersfortype",{"_index":407,"title":{},"body":{"classes/DataGridModel.html":{}}}],["createheadersfortype(type",{"_index":457,"title":{},"body":{"classes/DataGridModel.html":{}}}],["creates",{"_index":16,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["creating",{"_index":927,"title":{},"body":{"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["creation",{"_index":1987,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["css",{"_index":1230,"title":{},"body":{"components/TreeViewComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ctor",{"_index":330,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["ctrl",{"_index":1015,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["current",{"_index":111,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["currently",{"_index":527,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["currentpageindex",{"_index":400,"title":{},"body":{"classes/DataGridModel.html":{}}}],["currentpagenumber",{"_index":629,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["currentrowend",{"_index":416,"title":{},"body":{"classes/DataGridModel.html":{}}}],["currentrowstart",{"_index":415,"title":{},"body":{"classes/DataGridModel.html":{}}}],["cursor",{"_index":725,"title":{},"body":{"components/EditorComponent.html":{}}}],["curve",{"_index":2312,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["custom",{"_index":368,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["customers",{"_index":2181,"title":{},"body":{"index.html":{}}}],["customizable",{"_index":2050,"title":{},"body":{"index.html":{}}}],["d",{"_index":1738,"title":{},"body":{"contributing.html":{}}}],["damages",{"_index":2230,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":2138,"title":{},"body":{"index.html":{}}}],["data",{"_index":349,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"pipes/FormatDataPipe.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction.html":{}}}],["datagrid",{"_index":300,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["datagrid\">does",{"_index":1939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datagrid'},{'name",{"_index":298,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["datagridcomponent",{"_index":297,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["datagridheader.model",{"_index":532,"title":{},"body":{"classes/DataGridModel.html":{}}}],["datagridheadermodel",{"_index":313,"title":{"classes/DataGridHeaderModel.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["datagridheadermodel(propname",{"_index":590,"title":{},"body":{"classes/DataGridModel.html":{}}}],["datagridmodel",{"_index":380,"title":{"classes/DataGridModel.html":{}},"body":{"classes/DataGridModel.html":{}}}],["datagridpagination.component.html",{"_index":628,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["datagridpagination.component.scss",{"_index":627,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["datagridpaginationcomponent",{"_index":299,"title":{"components/DataGridPaginationComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["datagridstyle.model",{"_index":374,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["datagridstyles",{"_index":692,"title":{"interfaces/DatagridStyles.html":{}},"body":{"interfaces/DatagridStyles.html":{}}}],["datatype",{"_index":1949,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":191,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["date.parse(f.tostring",{"_index":993,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["date.parse(t.tostring",{"_index":994,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["datepicker",{"_index":1808,"title":{},"body":{"contributing.html":{}}}],["dates",{"_index":1927,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["days",{"_index":2167,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["dealt",{"_index":1651,"title":{},"body":{"contributing.html":{}}}],["debugging",{"_index":1440,"title":{},"body":{"changelog.html":{}}}],["decided",{"_index":2182,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["decision",{"_index":2451,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["declarations",{"_index":1041,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["decorated",{"_index":32,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decorator",{"_index":281,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decorators",{"_index":20,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dedicated",{"_index":1462,"title":{},"body":{"changelog.html":{}}}],["deeply",{"_index":2149,"title":{},"body":{"index.html":{}}}],["default",{"_index":80,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":2044,"title":{},"body":{"index.html":{}}}],["define",{"_index":1893,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":74,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["definition",{"_index":812,"title":{},"body":{"components/EditorComponent.html":{},"modules/SvogvModule.html":{},"index.html":{}}}],["delete",{"_index":433,"title":{},"body":{"classes/DataGridModel.html":{},"contributing.html":{}}}],["deleteitem",{"_index":408,"title":{},"body":{"classes/DataGridModel.html":{}}}],["deleteitem(item",{"_index":459,"title":{},"body":{"classes/DataGridModel.html":{}}}],["deliver",{"_index":2110,"title":{},"body":{"index.html":{}}}],["demo",{"_index":7,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["demoall",{"_index":2538,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dependencies",{"_index":1040,"title":{"dependencies.html":{}},"body":{"modules/SvogvModule.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dependency",{"_index":2023,"title":{},"body":{"index.html":{}}}],["dependent",{"_index":2083,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1951,"title":{},"body":{"miscellaneous/functions.html":{}}}],["depends",{"_index":2447,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["deploy",{"_index":2330,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["desc",{"_index":229,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["descended",{"_index":495,"title":{},"body":{"classes/DataGridModel.html":{}}}],["descending",{"_index":536,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":316,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["described",{"_index":1704,"title":{},"body":{"contributing.html":{}}}],["describes",{"_index":865,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["description",{"_index":15,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["descriptions",{"_index":847,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["descriptive",{"_index":1709,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["descrption",{"_index":1676,"title":{},"body":{"contributing.html":{}}}],["design",{"_index":1971,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["designed",{"_index":2105,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1824,"title":{},"body":{"contributing.html":{}}}],["detailled",{"_index":848,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["details",{"_index":1749,"title":{},"body":{"contributing.html":{}}}],["determine",{"_index":2066,"title":{},"body":{"index.html":{}}}],["dev",{"_index":2187,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2328,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["developer",{"_index":1705,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1973,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["development",{"_index":1580,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["diagnose",{"_index":1605,"title":{},"body":{"contributing.html":{}}}],["dialog",{"_index":1809,"title":{},"body":{"contributing.html":{}}}],["dictionary",{"_index":1952,"title":{},"body":{"miscellaneous/functions.html":{}}}],["didn't",{"_index":1511,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":2109,"title":{},"body":{"index.html":{}}}],["different",{"_index":845,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"additional-documentation/package-construction.html":{}}}],["dir",{"_index":481,"title":{},"body":{"classes/DataGridModel.html":{}}}],["direct",{"_index":1576,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["direction",{"_index":445,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["direction.ascending",{"_index":561,"title":{},"body":{"classes/DataGridModel.html":{}}}],["direction.descending",{"_index":562,"title":{},"body":{"classes/DataGridModel.html":{}}}],["directive",{"_index":292,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["directives",{"_index":308,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["directly",{"_index":369,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"contributing.html":{}}}],["disabled",{"_index":1528,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["disc",{"_index":2408,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["disclaims",{"_index":2221,"title":{},"body":{"license.html":{}}}],["discussed",{"_index":1624,"title":{},"body":{"contributing.html":{}}}],["discussion",{"_index":1578,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":217,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["display('age",{"_index":180,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["display('birthday",{"_index":188,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["display('done",{"_index":203,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["display('e",{"_index":161,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["display('is",{"_index":193,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["display('password",{"_index":196,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["display('phone",{"_index":169,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["display('user",{"_index":175,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["display(name",{"_index":1886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["display.decorator.ts",{"_index":1860,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["display.desc(type",{"_index":587,"title":{},"body":{"classes/DataGridModel.html":{}}}],["display.name(type",{"_index":585,"title":{},"body":{"classes/DataGridModel.html":{}}}],["displaydesc",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displaygroup",{"_index":864,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["displaygroup('password",{"_index":198,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["displaygroup('personal",{"_index":184,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["displaygroup(name",{"_index":1892,"title":{},"body":{"miscellaneous/functions.html":{}}}],["displaygroup.decorator.ts",{"_index":1861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["displaygrouptype",{"_index":852,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["displayname",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayorder",{"_index":246,"title":{},"body":{"components/AutoFormComponent.html":{},"miscellaneous/variables.html":{}}}],["displaytype",{"_index":851,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["dist",{"_index":2388,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["distinct",{"_index":2457,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["distribute",{"_index":2214,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2425,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["dive",{"_index":2506,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["docs",{"_index":1782,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["document",{"_index":1826,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["documentation",{"_index":4,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["documentation's",{"_index":2514,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["documented",{"_index":1748,"title":{},"body":{"contributing.html":{}}}],["doing",{"_index":2355,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["dom",{"_index":11,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["don't",{"_index":1185,"title":{},"body":{"classes/TreeNodeModel.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["done",{"_index":207,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dot",{"_index":1816,"title":{},"body":{"contributing.html":{}}}],["down",{"_index":2387,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["drawback",{"_index":2371,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["driven",{"_index":866,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["drop",{"_index":2184,"title":{},"body":{"index.html":{}}}],["dropdown",{"_index":2099,"title":{},"body":{"index.html":{}}}],["dropmenu",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["dude",{"_index":2377,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["due",{"_index":872,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["duplicate",{"_index":1646,"title":{},"body":{"contributing.html":{}}}],["duplication",{"_index":1629,"title":{},"body":{"contributing.html":{}}}],["durandal",{"_index":2582,"title":{},"body":{"additional-documentation/about.html":{}}}],["dynamic",{"_index":1021,"title":{},"body":{"pipes/FormatDataPipe.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dynamically",{"_index":1981,"title":{},"body":{"index.html":{}}}],["e",{"_index":164,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["e.g",{"_index":1660,"title":{},"body":{"contributing.html":{}}}],["e.key",{"_index":285,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["each",{"_index":30,"title":{},"body":{"components/AutoFormComponent.html":{},"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["early",{"_index":1403,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["easier",{"_index":1770,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["easy",{"_index":1010,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["ecosystem",{"_index":2151,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["edge",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["edit",{"_index":110,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["edited",{"_index":1718,"title":{},"body":{"contributing.html":{}}}],["edititem",{"_index":409,"title":{},"body":{"classes/DataGridModel.html":{}}}],["edititem(item",{"_index":467,"title":{},"body":{"classes/DataGridModel.html":{}}}],["editor",{"_index":18,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["editor'},{'name",{"_index":303,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["editor.component.html",{"_index":727,"title":{},"body":{"components/EditorComponent.html":{}}}],["editorautoform.component.html",{"_index":138,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["editorautoformcomponent",{"_index":141,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["editorcomponent",{"_index":302,"title":{"components/EditorComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["editorcomponent\">editorcomponent",{"_index":1915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorform.component.html",{"_index":789,"title":{},"body":{"components/EditorComponent.html":{}}}],["editorformcomponent",{"_index":790,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel",{"_index":797,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__displaydesc__${this.name",{"_index":811,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__displayname__${this.name",{"_index":808,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__hasrangefrom__${this.name",{"_index":813,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__hasrangeto__${this.name",{"_index":816,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__hastemplatehint__${this.name",{"_index":822,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__haswatermark__${this.name",{"_index":819,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__ishidden__${this.name",{"_index":827,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__isreadonly__${this.name",{"_index":828,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__templatehint__${this.name",{"_index":823,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__templatehintparams__${this.name",{"_index":825,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__watermark__${this.name",{"_index":821,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[this.name",{"_index":802,"title":{},"body":{"components/EditorComponent.html":{}}}],["editoromponent",{"_index":780,"title":{},"body":{"components/EditorComponent.html":{}}}],["editors",{"_index":65,"title":{},"body":{"components/AutoFormComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{}}}],["editusercomponent",{"_index":2037,"title":{},"body":{"index.html":{}}}],["effort",{"_index":1642,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["efforts",{"_index":1627,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":1289,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["element",{"_index":85,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["element's",{"_index":1891,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elementary",{"_index":798,"title":{},"body":{"components/EditorComponent.html":{}}}],["elementref",{"_index":1285,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["elements",{"_index":385,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["email",{"_index":167,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["email(msg",{"_index":1897,"title":{},"body":{"miscellaneous/functions.html":{}}}],["email.decorator.ts",{"_index":1862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emailtype",{"_index":861,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["embraces",{"_index":2278,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["emit",{"_index":1369,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["empty",{"_index":771,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["encapsulates",{"_index":2282,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["end",{"_index":87,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"contributing.html":{},"additional-documentation/about.html":{}}}],["engine",{"_index":2419,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["engines",{"_index":2549,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["enormous",{"_index":2316,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["enough",{"_index":2436,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["ensure",{"_index":1706,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":2310,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["enterprises",{"_index":2155,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["entity",{"_index":2197,"title":{},"body":{"index.html":{}}}],["entry",{"_index":2515,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["enum",{"_index":535,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TreeNodeOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["enumerations",{"_index":1853,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumvalues",{"_index":732,"title":{},"body":{"components/EditorComponent.html":{}}}],["environment",{"_index":1411,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["equals",{"_index":1515,"title":{},"body":{"changelog.html":{}}}],["errgroup",{"_index":947,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errgroup)[propname",{"_index":1007,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs",{"_index":958,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['compare",{"_index":998,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['maxlength",{"_index":967,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['minlength",{"_index":973,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['pattern",{"_index":979,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['range",{"_index":987,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['required",{"_index":962,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["error",{"_index":831,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["errors",{"_index":728,"title":{},"body":{"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{}}}],["es",{"_index":597,"title":{},"body":{"classes/DataGridModel.html":{}}}],["especially",{"_index":1909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etc",{"_index":1600,"title":{},"body":{"contributing.html":{}}}],["even",{"_index":826,"title":{},"body":{"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["event",{"_index":430,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["event.preventdefault",{"_index":684,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["event.stoppropagation",{"_index":1368,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["eventemitter",{"_index":428,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["events",{"_index":1223,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["everything",{"_index":221,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["evolve",{"_index":1397,"title":{},"body":{"changelog.html":{}}}],["ex",{"_index":956,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["exact",{"_index":2107,"title":{},"body":{"index.html":{}}}],["examined",{"_index":121,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["example",{"_index":34,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewComponent.html":{},"contributing.html":{},"index.html":{}}}],["examples",{"_index":5,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["exclude",{"_index":2069,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["excludes",{"_index":2070,"title":{},"body":{"index.html":{}}}],["excute",{"_index":2551,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["exec",{"_index":2540,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["execdemo",{"_index":2541,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["execute",{"_index":761,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["executes",{"_index":2076,"title":{},"body":{"index.html":{}}}],["execution",{"_index":2572,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["existence",{"_index":873,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["existing",{"_index":273,"title":{},"body":{"components/AutoFormComponent.html":{},"contributing.html":{}}}],["existinggroup",{"_index":277,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["existinggroup.editors.push",{"_index":280,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["existinggrouparray",{"_index":265,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["existinggrouparray.length",{"_index":269,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["exists",{"_index":264,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["expand",{"_index":1205,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["expandable",{"_index":1183,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["expanded",{"_index":1856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expander",{"_index":1331,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["expands",{"_index":1296,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["expect",{"_index":1334,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["expects",{"_index":120,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["experience",{"_index":2164,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["experimental",{"_index":1446,"title":{},"body":{"changelog.html":{}}}],["experiments",{"_index":1489,"title":{},"body":{"changelog.html":{}}}],["explain",{"_index":1663,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["explains",{"_index":2599,"title":{},"body":{"additional-documentation/about.html":{}}}],["explanation",{"_index":1825,"title":{},"body":{"contributing.html":{}}}],["explicitly",{"_index":1114,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["export",{"_index":139,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["exports",{"_index":1043,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["expression",{"_index":1392,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["expressionchangedafterithasbeencheckedexception",{"_index":679,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["extends",{"_index":1080,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["extension",{"_index":1988,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":531,"title":{},"body":{"classes/DataGridModel.html":{}}}],["external",{"_index":1797,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["externally",{"_index":1024,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["extract",{"_index":2508,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["f",{"_index":989,"title":{},"body":{"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["f046",{"_index":713,"title":{},"body":{"components/EditorComponent.html":{}}}],["f096",{"_index":711,"title":{},"body":{"components/EditorComponent.html":{}}}],["fa",{"_index":1314,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["fall",{"_index":1930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":251,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{}}}],["familiar",{"_index":2290,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["family",{"_index":708,"title":{},"body":{"components/EditorComponent.html":{}}}],["far",{"_index":1675,"title":{},"body":{"contributing.html":{}}}],["fast",{"_index":1979,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["fax",{"_index":1835,"title":{},"body":{"contributing.html":{}}}],["fb",{"_index":931,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["feat",{"_index":1781,"title":{},"body":{"contributing.html":{}}}],["feature",{"_index":1563,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["features",{"_index":1633,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["fee",{"_index":2216,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2185,"title":{},"body":{"index.html":{}}}],["feeling",{"_index":2584,"title":{},"body":{"additional-documentation/about.html":{}}}],["few",{"_index":614,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ff",{"_index":1741,"title":{},"body":{"contributing.html":{}}}],["fff",{"_index":1374,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["ffff",{"_index":1901,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field",{"_index":29,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["field's",{"_index":919,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["fieldname",{"_index":918,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["fields",{"_index":241,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fieldset",{"_index":43,"title":{},"body":{"components/AutoFormComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fieldsets",{"_index":2245,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fieldtocompare",{"_index":906,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["fieldtypes",{"_index":741,"title":{},"body":{"components/EditorComponent.html":{}}}],["file",{"_index":13,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["files",{"_index":1719,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["filter",{"_index":440,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/variables.html":{}}}],["filtering",{"_index":392,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["filters",{"_index":439,"title":{},"body":{"classes/DataGridModel.html":{}}}],["final",{"_index":2008,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["finally",{"_index":2405,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["find",{"_index":1589,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["findings",{"_index":123,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["fine",{"_index":2134,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["fire",{"_index":1186,"title":{},"body":{"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["firebase",{"_index":2545,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["fired",{"_index":431,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["fires",{"_index":1224,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["first",{"_index":147,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["first(array",{"_index":772,"title":{},"body":{"components/EditorComponent.html":{}}}],["fitness",{"_index":2226,"title":{},"body":{"license.html":{}}}],["fits",{"_index":2297,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["fix",{"_index":1611,"title":{},"body":{"contributing.html":{}}}],["fixes",{"_index":1457,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["fixing",{"_index":1644,"title":{},"body":{"contributing.html":{}}}],["flavors",{"_index":214,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{}}}],["fly",{"_index":2574,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["focus",{"_index":1472,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":2143,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["folders",{"_index":2369,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["follow",{"_index":1544,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["followed",{"_index":1777,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1648,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["follows",{"_index":1505,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["font",{"_index":57,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"dependencies.html":{}}}],["fontawesome",{"_index":709,"title":{},"body":{"components/EditorComponent.html":{},"classes/TreeNodeOptions.html":{}}}],["fontawesome's",{"_index":1229,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["footer",{"_index":698,"title":{},"body":{"interfaces/DatagridStyles.html":{},"contributing.html":{}}}],["force",{"_index":1728,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["forces",{"_index":2071,"title":{},"body":{"index.html":{}}}],["forecolor",{"_index":1273,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["fork",{"_index":1720,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":24,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["form's",{"_index":22,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["form)['__editormodel__",{"_index":1012,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["form.controls[propname",{"_index":1016,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["form.controls[propname])['messages",{"_index":1017,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["format",{"_index":362,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"contributing.html":{},"index.html":{}}}],["formatdata",{"_index":1027,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["formatdatapipe",{"_index":1019,"title":{"pipes/FormatDataPipe.html":{}},"body":{"pipes/FormatDataPipe.html":{}}}],["formatpipe",{"_index":1863,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["formatpipe(datepipe",{"_index":2102,"title":{},"body":{"index.html":{}}}],["formatpipe(pipe",{"_index":1902,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatpipe.decorator.ts",{"_index":1864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatted",{"_index":1757,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["formatter",{"_index":1025,"title":{},"body":{"pipes/FormatDataPipe.html":{},"miscellaneous/functions.html":{}}}],["formatting",{"_index":867,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["formattype",{"_index":853,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["formbuilder",{"_index":933,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["formgroup",{"_index":71,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{}}}],["formgroup.controls[name]['messages'][error",{"_index":835,"title":{},"body":{"components/EditorComponent.html":{}}}],["formgroup.controls[name][\\'messages\\'][error",{"_index":836,"title":{},"body":{"components/EditorComponent.html":{}}}],["formhints",{"_index":2032,"title":{},"body":{"index.html":{}}}],["formhints.display('e",{"_index":2033,"title":{},"body":{"index.html":{}}}],["forms",{"_index":705,"title":{},"body":{"components/EditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["formservice",{"_index":144,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["formsmodule",{"_index":1059,"title":{},"body":{"modules/SvogvModule.html":{}}}],["formvalidatorfromjsonservice",{"_index":1065,"title":{},"body":{"modules/SvogvModule.html":{},"index.html":{}}}],["formvalidatormodel",{"_index":837,"title":{"interfaces/FormValidatorModel.html":{}},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{}}}],["formvalidatorservice",{"_index":134,"title":{"injectables/FormValidatorService.html":{}},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"modules/SvogvModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["forroot",{"_index":1053,"title":{},"body":{"modules/SvogvModule.html":{}}}],["fortunatly",{"_index":2510,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["forward",{"_index":1009,"title":{},"body":{"injectables/FormValidatorService.html":{},"components/TreeViewNodeComponent.html":{}}}],["forwarding",{"_index":1023,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["found",{"_index":801,"title":{},"body":{"components/EditorComponent.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["foundation",{"_index":2288,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["framework",{"_index":2180,"title":{},"body":{"index.html":{}}}],["frameworks",{"_index":2165,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["free",{"_index":2148,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["fromjson.service",{"_index":1067,"title":{},"body":{"modules/SvogvModule.html":{}}}],["fromvalue",{"_index":733,"title":{},"body":{"components/EditorComponent.html":{}}}],["front",{"_index":2590,"title":{},"body":{"additional-documentation/about.html":{}}}],["frontend",{"_index":2195,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["fruststrating",{"_index":1492,"title":{},"body":{"changelog.html":{}}}],["fucntion",{"_index":485,"title":{},"body":{"classes/DataGridModel.html":{}}}],["full",{"_index":177,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"contributing.html":{},"index.html":{}}}],["fullfilles",{"_index":1922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fully",{"_index":2053,"title":{},"body":{"index.html":{}}}],["function",{"_index":353,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":2266,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["functions",{"_index":347,"title":{"miscellaneous/functions.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["further",{"_index":1888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fv",{"_index":2039,"title":{},"body":{"index.html":{}}}],["g.name",{"_index":267,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["general",{"_index":2485,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["generate",{"_index":1762,"title":{},"body":{"contributing.html":{}}}],["generated",{"_index":898,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["generator",{"_index":2522,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["germany",{"_index":2162,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["getcurrentrowend",{"_index":508,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getcurrentrowstart",{"_index":506,"title":{},"body":{"classes/DataGridModel.html":{}}}],["gethaschildren",{"_index":1147,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getheaders",{"_index":522,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getheadersnotvisible",{"_index":525,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getitems",{"_index":514,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getitemsfiltered",{"_index":518,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getitemsoncurrentpage",{"_index":520,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getmaxpageindex",{"_index":512,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getpageendnumber",{"_index":668,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["getpagestartnumber",{"_index":666,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["getparams",{"_index":730,"title":{},"body":{"components/EditorComponent.html":{}}}],["getparams(key",{"_index":774,"title":{},"body":{"components/EditorComponent.html":{}}}],["getpath",{"_index":1145,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["gets",{"_index":1947,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["getstartrow",{"_index":510,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getstate",{"_index":1149,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateischecked",{"_index":1159,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateisdisabled",{"_index":1155,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateisexpandend",{"_index":1153,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateisselected",{"_index":1157,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getting",{"_index":1381,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettotalfilteredrows",{"_index":504,"title":{},"body":{"classes/DataGridModel.html":{}}}],["gettotalrows",{"_index":500,"title":{},"body":{"classes/DataGridModel.html":{}}}],["git",{"_index":1693,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["git+https://github.com/your",{"_index":2546,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["github",{"_index":1592,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["github's",{"_index":2516,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gitter",{"_index":1587,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":895,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["given",{"_index":1924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["go",{"_index":2057,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["goes",{"_index":887,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/about.html":{}}}],["going",{"_index":617,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["good",{"_index":1455,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["google",{"_index":1577,"title":{},"body":{"contributing.html":{}}}],["google's",{"_index":1751,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":2218,"title":{},"body":{"license.html":{}}}],["grayed",{"_index":1932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["grid",{"_index":342,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"pipes/FormatDataPipe.html":{},"changelog.html":{},"index.html":{}}}],["grid's",{"_index":371,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["grids",{"_index":1889,"title":{},"body":{"miscellaneous/functions.html":{}}}],["group",{"_index":258,"title":{},"body":{"components/AutoFormComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["group's",{"_index":1894,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["group.name",{"_index":290,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["groupdesc",{"_index":249,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["grouped",{"_index":68,"title":{},"body":{"components/AutoFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["groupes",{"_index":88,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["groupexists",{"_index":268,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["grouping",{"_index":2244,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["groupname",{"_index":248,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["groupname)[0",{"_index":278,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["grouporder",{"_index":247,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["groups",{"_index":66,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["grow",{"_index":2322,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["guide",{"_index":1507,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["guidelines",{"_index":1557,"title":{},"body":{"contributing.html":{}}}],["guides",{"_index":2443,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gulp",{"_index":1799,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gulp/rollup",{"_index":1486,"title":{},"body":{"changelog.html":{}}}],["gulpfile",{"_index":2559,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gulpfile.js",{"_index":2558,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["guts",{"_index":2585,"title":{},"body":{"additional-documentation/about.html":{}}}],["h.hidden",{"_index":551,"title":{},"body":{"classes/DataGridModel.html":{}}}],["h.prop",{"_index":573,"title":{},"body":{"classes/DataGridModel.html":{}}}],["hafersteig",{"_index":2604,"title":{},"body":{"additional-documentation/about.html":{}}}],["hand",{"_index":2139,"title":{},"body":{"index.html":{}}}],["handle",{"_index":618,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["handlecheckchange",{"_index":1279,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handleclick",{"_index":1280,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handleclick($event",{"_index":1301,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handlecollapse",{"_index":1281,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handled",{"_index":125,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["handlepreselection",{"_index":1282,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handlepreselection(state",{"_index":1304,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handles",{"_index":220,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{}}}],["handleselection",{"_index":1283,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handleselection($event",{"_index":1306,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handy",{"_index":2119,"title":{},"body":{"index.html":{}}}],["happens",{"_index":2528,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["hard",{"_index":2420,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["haschildren",{"_index":1128,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["hascompare",{"_index":996,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasdecorators",{"_index":236,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["hasdirectancestor",{"_index":1086,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["hasdirectancestor(node",{"_index":1105,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["haserror('pattern",{"_index":1900,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hash",{"_index":1779,"title":{},"body":{"contributing.html":{}}}],["hasmaxlength",{"_index":965,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasminlength",{"_index":971,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasn't",{"_index":1639,"title":{},"body":{"contributing.html":{}}}],["haspattern",{"_index":977,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasrangefrom",{"_index":983,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasrangeto",{"_index":985,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hassortcallback",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["head",{"_index":2461,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["header",{"_index":317,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["header.issortable",{"_index":591,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.pipe",{"_index":605,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.pipeparams",{"_index":607,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.sortcallback",{"_index":593,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.templatehint",{"_index":599,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.templatehintparams",{"_index":603,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.uihint",{"_index":609,"title":{},"body":{"classes/DataGridModel.html":{}}}],["headerbutton",{"_index":699,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["headerremovebutton",{"_index":700,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["headers",{"_index":387,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/functions.html":{}}}],["headersnotvisible",{"_index":422,"title":{},"body":{"classes/DataGridModel.html":{}}}],["headersortbutton",{"_index":701,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["heavily",{"_index":2017,"title":{},"body":{"index.html":{}}}],["height",{"_index":719,"title":{},"body":{"components/EditorComponent.html":{}}}],["held",{"_index":1220,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["help",{"_index":1554,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["helper",{"_index":2063,"title":{},"body":{"index.html":{}}}],["helpful",{"_index":1607,"title":{},"body":{"contributing.html":{}}}],["helps",{"_index":1658,"title":{},"body":{"contributing.html":{},"additional-documentation/about.html":{}}}],["hence",{"_index":340,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["here",{"_index":275,"title":{},"body":{"components/AutoFormComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["hereby",{"_index":2217,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":157,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["hidden\">hidden",{"_index":1914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hidden(hide",{"_index":1912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hidden.decorator.ts",{"_index":1865,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hidden.ishidden(type",{"_index":589,"title":{},"body":{"classes/DataGridModel.html":{}}}],["hiddendecorator",{"_index":33,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["hiddentype",{"_index":854,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["hidden}decorator",{"_index":227,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["hide",{"_index":1916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["high",{"_index":2192,"title":{},"body":{"index.html":{}}}],["hint",{"_index":359,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["hints",{"_index":2026,"title":{},"body":{"index.html":{}}}],["history",{"_index":1761,"title":{},"body":{"contributing.html":{}}}],["homepage",{"_index":2496,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["homepage's",{"_index":2190,"title":{},"body":{"index.html":{}}}],["host",{"_index":2332,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["hostet",{"_index":2423,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["href",{"_index":1196,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["html",{"_index":291,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"additional-documentation/package-construction.html":{}}}],["html5",{"_index":1934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http",{"_index":2576,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["http://locahost:4200",{"_index":2137,"title":{},"body":{"index.html":{}}}],["https://github.com/joergkrause/svogv#readme",{"_index":2497,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["https://github.com/joergkrause/svogv.git",{"_index":2491,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["https://github.com/joergkrause/svogv/issues",{"_index":2495,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["hub",{"_index":2201,"title":{},"body":{"index.html":{}}}],["hud",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["huge",{"_index":2314,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["human",{"_index":920,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["hyperlink",{"_index":1209,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["i'm",{"_index":1447,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["i18n",{"_index":899,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["icon",{"_index":1197,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["icon's",{"_index":1212,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["iconclasses",{"_index":1274,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["iconcolor",{"_index":1198,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["icons",{"_index":1206,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["ics",{"_index":2494,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["id",{"_index":158,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"index.html":{}}}],["idea",{"_index":2015,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":1098,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["idx",{"_index":1176,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["iframes",{"_index":293,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{}}}],["ignore",{"_index":745,"title":{},"body":{"components/EditorComponent.html":{}}}],["ignored",{"_index":89,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["immediate",{"_index":1018,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["imperative",{"_index":1811,"title":{},"body":{"contributing.html":{}}}],["implement",{"_index":1612,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":36,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"pipes/FormatDataPipe.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["implied",{"_index":2224,"title":{},"body":{"license.html":{}}}],["import",{"_index":130,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["important",{"_index":2046,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["imports",{"_index":1076,"title":{},"body":{"modules/SvogvModule.html":{}}}],["impress",{"_index":2602,"title":{},"body":{"additional-documentation/about.html":{}}}],["improve",{"_index":1543,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["improvement",{"_index":2591,"title":{},"body":{"additional-documentation/about.html":{}}}],["improves",{"_index":1792,"title":{},"body":{"contributing.html":{},"additional-documentation/about.html":{}}}],["inaugural",{"_index":1388,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1817,"title":{},"body":{"contributing.html":{}}}],["included",{"_index":1929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["includes",{"_index":1267,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["including",{"_index":1594,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["inclusive",{"_index":1575,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1649,"title":{},"body":{"contributing.html":{}}}],["independent",{"_index":2140,"title":{},"body":{"index.html":{}}}],["index",{"_index":62,"title":{"index.html":{}},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.d.ts",{"_index":2489,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["index.js",{"_index":2487,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["indexable",{"_index":850,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["indirect",{"_index":2228,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":1830,"title":{},"body":{"contributing.html":{}}}],["infarstructure",{"_index":1966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infobox",{"_index":1418,"title":{},"body":{"changelog.html":{}}}],["inform",{"_index":463,"title":{},"body":{"classes/DataGridModel.html":{}}}],["information",{"_index":849,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"index.html":{}}}],["infrastructure",{"_index":462,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["inherited",{"_index":1092,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["initialization",{"_index":210,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["initialize",{"_index":2472,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["initit's",{"_index":2473,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["initital",{"_index":498,"title":{},"body":{"classes/DataGridModel.html":{}}}],["inject",{"_index":939,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["injectable",{"_index":922,"title":{"injectables/FormValidatorService.html":{}},"body":{"injectables/FormValidatorService.html":{},"index.html":{},"overview.html":{}}}],["injectables",{"_index":923,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["injector",{"_index":1033,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["inline",{"_index":716,"title":{},"body":{"components/EditorComponent.html":{}}}],["input",{"_index":225,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["input[type=\"checkbox",{"_index":706,"title":{},"body":{"components/EditorComponent.html":{}}}],["input[type=\"checkbox\"]:checked",{"_index":712,"title":{},"body":{"components/EditorComponent.html":{}}}],["input[type='checkbox",{"_index":714,"title":{},"body":{"components/EditorComponent.html":{}}}],["inputs",{"_index":70,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["inside",{"_index":2068,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["inspired",{"_index":2018,"title":{},"body":{"index.html":{}}}],["install",{"_index":2122,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["instance",{"_index":806,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["instanceof",{"_index":804,"title":{},"body":{"components/EditorComponent.html":{},"classes/TreeNodeModel.html":{}}}],["instead",{"_index":841,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["instruction",{"_index":441,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["instructions",{"_index":105,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["integration",{"_index":2327,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["intended",{"_index":1961,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intention",{"_index":1469,"title":{},"body":{"changelog.html":{}}}],["intentionally",{"_index":953,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["interactive",{"_index":2474,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["interest",{"_index":2438,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["interface",{"_index":691,"title":{"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/TreeNodeBaseModel.html":{}},"body":{"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"index.html":{}}}],["interfaces",{"_index":693,"title":{},"body":{"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"overview.html":{}}}],["internal",{"_index":337,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"pipes/FormatDataPipe.html":{},"additional-documentation/package-construction.html":{}}}],["internally",{"_index":115,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["internals",{"_index":1933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["introduced",{"_index":2289,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["introduction",{"_index":1977,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["intuitive",{"_index":1526,"title":{},"body":{"changelog.html":{}}}],["invisible",{"_index":471,"title":{},"body":{"classes/DataGridModel.html":{}}}],["invokes",{"_index":2448,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["iot",{"_index":2202,"title":{},"body":{"index.html":{}}}],["irritating",{"_index":1516,"title":{},"body":{"changelog.html":{}}}],["isc",{"_index":2146,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["isexpanded",{"_index":1275,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["ishidden",{"_index":588,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/variables.html":{}}}],["isingroup",{"_index":250,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["isrequired",{"_index":959,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["issortable",{"_index":319,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1588,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1561,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["it's",{"_index":450,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["item",{"_index":466,"title":{},"body":{"classes/DataGridModel.html":{}}}],["items",{"_index":419,"title":{},"body":{"classes/DataGridModel.html":{},"components/TreeViewComponent.html":{}}}],["itemsfiltered",{"_index":420,"title":{},"body":{"classes/DataGridModel.html":{}}}],["itemsoncurrentpage",{"_index":421,"title":{},"body":{"classes/DataGridModel.html":{}}}],["iterating",{"_index":578,"title":{},"body":{"classes/DataGridModel.html":{}}}],["i’m",{"_index":2581,"title":{},"body":{"additional-documentation/about.html":{}}}],["java",{"_index":2589,"title":{},"body":{"additional-documentation/about.html":{}}}],["javascript",{"_index":1752,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["jobs",{"_index":2188,"title":{},"body":{"index.html":{}}}],["joerg",{"_index":2158,"title":{},"body":{"index.html":{},"license.html":{}}}],["joerg@krause.de",{"_index":2189,"title":{},"body":{"index.html":{}}}],["journey",{"_index":2437,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["jquery",{"_index":2170,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["js",{"_index":1843,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["jsbin",{"_index":1598,"title":{},"body":{"contributing.html":{}}}],["json",{"_index":840,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{}}}],["jump",{"_index":2010,"title":{},"body":{"index.html":{}}}],["june",{"_index":2601,"title":{},"body":{"additional-documentation/about.html":{}}}],["jörg",{"_index":2603,"title":{},"body":{"additional-documentation/about.html":{}}}],["karma",{"_index":2535,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["karma_spec_filter",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kb",{"_index":1996,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1573,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["key",{"_index":228,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["keyname",{"_index":1937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":2482,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["kidding",{"_index":2376,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["kind",{"_index":1622,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["knockout",{"_index":2172,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["know",{"_index":2168,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["knowing",{"_index":2179,"title":{},"body":{"index.html":{}}}],["known",{"_index":2000,"title":{},"body":{"index.html":{}}}],["knows",{"_index":2045,"title":{},"body":{"index.html":{}}}],["krause",{"_index":2159,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/about.html":{}}}],["label",{"_index":715,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["label's",{"_index":751,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{}}}],["label:before",{"_index":707,"title":{},"body":{"components/EditorComponent.html":{}}}],["labeldivider",{"_index":734,"title":{},"body":{"components/EditorComponent.html":{}}}],["lambda",{"_index":2205,"title":{},"body":{"index.html":{}}}],["languages",{"_index":2285,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["last",{"_index":564,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["later",{"_index":800,"title":{},"body":{"components/EditorComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["latest",{"_index":1739,"title":{},"body":{"contributing.html":{}}}],["lazy",{"_index":2465,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["leads",{"_index":1758,"title":{},"body":{"contributing.html":{}}}],["learn",{"_index":2450,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["learning",{"_index":2268,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["learnt",{"_index":2171,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["leave",{"_index":2512,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["left",{"_index":55,"title":{},"body":{"components/AutoFormComponent.html":{},"components/TreeViewComponent.html":{},"index.html":{}}}],["legend",{"_index":52,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"modules/SvogvModule.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["len",{"_index":1919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["length",{"_index":493,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["less",{"_index":1491,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["let's",{"_index":2025,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["letter",{"_index":1815,"title":{},"body":{"contributing.html":{}}}],["level",{"_index":1423,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["lg",{"_index":646,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["liable",{"_index":2227,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1451,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["libary",{"_index":2575,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["libraries",{"_index":2183,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["library",{"_index":1444,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["libs",{"_index":1471,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1689,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["licensed",{"_index":2147,"title":{},"body":{"index.html":{}}}],["licensing",{"_index":2145,"title":{},"body":{"index.html":{}}}],["life",{"_index":2597,"title":{},"body":{"additional-documentation/about.html":{}}}],["limited",{"_index":1584,"title":{},"body":{"contributing.html":{}}}],["line",{"_index":492,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["line:forin",{"_index":543,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{}}}],["line:max",{"_index":491,"title":{},"body":{"classes/DataGridModel.html":{}}}],["link",{"_index":226,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewComponent.html":{}}}],["linked",{"_index":1221,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["links",{"_index":2509,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["lint",{"_index":2543,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["linter",{"_index":1545,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["linux",{"_index":2334,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["list",{"_index":758,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewComponent.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["listvalues",{"_index":735,"title":{},"body":{"components/EditorComponent.html":{}}}],["literal",{"_index":96,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["literature",{"_index":2431,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["live",{"_index":6,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["load",{"_index":1122,"title":{},"body":{"classes/TreeNodeComponentModel.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["loaded",{"_index":623,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["loader",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["loadericon",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":2563,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["local",{"_index":1736,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["locally",{"_index":2356,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["log",{"_index":1763,"title":{},"body":{"contributing.html":{}}}],["logic",{"_index":119,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["long",{"_index":2341,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["longer",{"_index":1769,"title":{},"body":{"contributing.html":{}}}],["look",{"_index":156,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["looking",{"_index":1760,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["looks",{"_index":109,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["loop",{"_index":239,"title":{},"body":{"components/AutoFormComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["loss",{"_index":2233,"title":{},"body":{"license.html":{}}}],["lot",{"_index":1467,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["love",{"_index":1552,"title":{},"body":{"contributing.html":{}}}],["lower",{"_index":2477,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["lt;ac",{"_index":892,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["lt;input",{"_index":881,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["lt;select&gt",{"_index":891,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["lt;textarea&gt",{"_index":890,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["mac",{"_index":2336,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["made",{"_index":476,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["magic",{"_index":148,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["mail",{"_index":162,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["main",{"_index":260,"title":{},"body":{"components/AutoFormComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["mainly",{"_index":1476,"title":{},"body":{"changelog.html":{}}}],["maintain",{"_index":2320,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["maintainability",{"_index":2293,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["major",{"_index":1618,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["majority",{"_index":2380,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["make",{"_index":99,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["makes",{"_index":486,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/about.html":{}}}],["making",{"_index":1978,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["manage",{"_index":2027,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["managed",{"_index":388,"title":{},"body":{"classes/DataGridModel.html":{}}}],["manager",{"_index":2381,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["mandatory",{"_index":211,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["manually",{"_index":1904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["many",{"_index":1456,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["margin",{"_index":721,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewComponent.html":{}}}],["markdown",{"_index":2460,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["master",{"_index":1696,"title":{},"body":{"contributing.html":{}}}],["match",{"_index":2011,"title":{},"body":{"index.html":{}}}],["matches",{"_index":1969,"title":{},"body":{"index.html":{}}}],["matching",{"_index":311,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["matters",{"_index":2592,"title":{},"body":{"additional-documentation/about.html":{}}}],["mature",{"_index":2307,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["max",{"_index":658,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maximal",{"_index":915,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["maximize",{"_index":1641,"title":{},"body":{"contributing.html":{}}}],["maximum",{"_index":907,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["maxlength",{"_index":909,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["maxlength(100",{"_index":166,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["maxlength(20",{"_index":173,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["maxlength(len",{"_index":1917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxlength.decorator.ts",{"_index":1866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxlengthtype",{"_index":857,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["maxpageindex",{"_index":418,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{}}}],["maybe",{"_index":1637,"title":{},"body":{"contributing.html":{}}}],["meaning",{"_index":1784,"title":{},"body":{"contributing.html":{}}}],["medium",{"_index":647,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["members",{"_index":1896,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menu",{"_index":1419,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["merchantability",{"_index":2225,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1731,"title":{},"body":{"contributing.html":{}}}],["message",{"_index":896,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":1014,"title":{},"body":{"injectables/FormValidatorService.html":{},"contributing.html":{},"index.html":{}}}],["metadata",{"_index":38,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"pipes/FormatDataPipe.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["method",{"_index":151,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{}}}],["methods",{"_index":67,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{}}}],["middle",{"_index":702,"title":{},"body":{"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{}}}],["min",{"_index":660,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["mind",{"_index":1744,"title":{},"body":{"contributing.html":{}}}],["minified",{"_index":1655,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["minimal",{"_index":916,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["minimum",{"_index":910,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["minlength",{"_index":911,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["minlength(len",{"_index":1920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minlength.decorator.ts",{"_index":1867,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minlengthtype",{"_index":858,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["minus",{"_index":1315,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["miscellaneous",{"_index":1852,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1786,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["mistake",{"_index":1590,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":2479,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["mkdir",{"_index":2409,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["mode",{"_index":2103,"title":{},"body":{"index.html":{}}}],["model",{"_index":155,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["models",{"_index":1256,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["modern",{"_index":2281,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["modified",{"_index":2062,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1803,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["module",{"_index":902,"title":{"modules/SvogvModule.html":{}},"body":{"interfaces/FormValidatorModel.html":{},"modules/SvogvModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["modules",{"_index":1039,"title":{"modules.html":{}},"body":{"modules/SvogvModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":1055,"title":{},"body":{"modules/SvogvModule.html":{}}}],["moduls",{"_index":2382,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["money",{"_index":2344,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["monitor",{"_index":2533,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["more",{"_index":1453,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["moreinformation",{"_index":529,"title":{},"body":{"classes/DataGridModel.html":{}}}],["more}information",{"_index":552,"title":{},"body":{"classes/DataGridModel.html":{}}}],["mostly",{"_index":1461,"title":{},"body":{"changelog.html":{}}}],["motivation",{"_index":1662,"title":{},"body":{"contributing.html":{}}}],["mouseevent",{"_index":662,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["mouseover",{"_index":333,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["moved",{"_index":2175,"title":{},"body":{"index.html":{}}}],["msg",{"_index":897,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["much",{"_index":2386,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["multi",{"_index":1422,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mvc",{"_index":2300,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["myform",{"_index":2038,"title":{},"body":{"index.html":{}}}],["n",{"_index":284,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"classes/TreeNodeModel.html":{}}}],["n.key",{"_index":286,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["n.parent",{"_index":1171,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["name",{"_index":114,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["name/your",{"_index":2547,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["named",{"_index":101,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["names",{"_index":524,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TreeNodeModel.html":{}}}],["namespace",{"_index":2019,"title":{},"body":{"index.html":{}}}],["naming",{"_index":1480,"title":{},"body":{"changelog.html":{}}}],["nan",{"_index":992,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["nature",{"_index":1673,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["navigate",{"_index":615,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["necessarily",{"_index":2454,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["necessary",{"_index":1712,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["need",{"_index":682,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["needed",{"_index":2372,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["needs",{"_index":1264,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["negligence",{"_index":2236,"title":{},"body":{"license.html":{}}}],["net",{"_index":2021,"title":{},"body":{"index.html":{}}}],["new",{"_index":192,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["newer",{"_index":1968,"title":{},"body":{"index.html":{}}}],["newlines",{"_index":1822,"title":{},"body":{"contributing.html":{}}}],["news",{"_index":2379,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["next",{"_index":490,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"additional-documentation/package-construction.html":{}}}],["ngfor",{"_index":760,"title":{},"body":{"components/EditorComponent.html":{}}}],["ngform",{"_index":788,"title":{},"body":{"components/EditorComponent.html":{}}}],["ngmodule",{"_index":1056,"title":{},"body":{"modules/SvogvModule.html":{}}}],["ngonchanges",{"_index":630,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["ngonchanges(changes",{"_index":653,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["ngoninit",{"_index":69,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["ngstyle",{"_index":1956,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nice",{"_index":2126,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["nit",{"_index":1466,"title":{},"body":{"changelog.html":{}}}],["nix",{"_index":2411,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["node",{"_index":1079,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["node').register",{"_index":2568,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["node's",{"_index":1291,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["node.text",{"_index":1380,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["node_modules",{"_index":2142,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["nodeclick",{"_index":1241,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["nodes",{"_index":1089,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{}}}],["non",{"_index":1654,"title":{},"body":{"contributing.html":{}}}],["none",{"_index":596,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"index.html":{}}}],["note",{"_index":208,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"contributing.html":{}}}],["notes",{"_index":1713,"title":{},"body":{"contributing.html":{}}}],["nothing",{"_index":455,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["notice",{"_index":2219,"title":{},"body":{"license.html":{}}}],["now",{"_index":1416,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["npm",{"_index":1801,"title":{"additional-documentation/package-construction/create-an-npm-package.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["null",{"_index":557,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{}}}],["num",{"_index":2091,"title":{},"body":{"index.html":{}}}],["number",{"_index":159,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["number(editormodel[`__hasrangefrom__${this.name",{"_index":814,"title":{},"body":{"components/EditorComponent.html":{}}}],["number(editormodel[`__hasrangeto__${this.name",{"_index":817,"title":{},"body":{"components/EditorComponent.html":{}}}],["number(target.prototype[`__hasrangefrom__${propname",{"_index":990,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["number(target.prototype[`__hasrangeto__${propname",{"_index":991,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["numbers",{"_index":1965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["numeric",{"_index":2093,"title":{},"body":{"index.html":{}}}],["numerical",{"_index":1926,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["object",{"_index":102,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["object's",{"_index":1957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":1226,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["occurs",{"_index":1184,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["omit",{"_index":556,"title":{},"body":{"classes/DataGridModel.html":{}}}],["omitted",{"_index":871,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":649,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["onchanges",{"_index":624,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["oncheckchanged",{"_index":1235,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["oncheckchanged(node",{"_index":1248,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["oncollapsechanged",{"_index":1236,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["oncollapsechanged(node",{"_index":1250,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["ondelete",{"_index":401,"title":{},"body":{"classes/DataGridModel.html":{}}}],["ondestroy",{"_index":131,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["one",{"_index":28,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["onedit",{"_index":402,"title":{},"body":{"classes/DataGridModel.html":{}}}],["ongoing",{"_index":2580,"title":{},"body":{"additional-documentation/about.html":{}}}],["oninit",{"_index":37,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["onnodeclick",{"_index":1237,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["onnodeclick(node",{"_index":1252,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["onselectedchanged",{"_index":1238,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["onselectedchanged(node",{"_index":1254,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["onvaluechanged",{"_index":731,"title":{},"body":{"components/EditorComponent.html":{}}}],["onvaluechanged(data",{"_index":777,"title":{},"body":{"components/EditorComponent.html":{}}}],["onwards",{"_index":2080,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["open",{"_index":1574,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["open/close",{"_index":1344,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["operating",{"_index":1666,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["opnicon",{"_index":1276,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["option",{"_index":1716,"title":{},"body":{"contributing.html":{}}}],["option.val",{"_index":834,"title":{},"body":{"components/EditorComponent.html":{}}}],["optional",{"_index":90,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["optionally",{"_index":338,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":1084,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["order",{"_index":494,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["ordered",{"_index":2067,"title":{},"body":{"index.html":{}}}],["orderelement",{"_index":2246,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["orhighlights",{"_index":1228,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["or}highlights",{"_index":1257,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["os",{"_index":2342,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["others",{"_index":2362,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["otherwise",{"_index":748,"title":{},"body":{"components/EditorComponent.html":{}}}],["out",{"_index":1050,"title":{},"body":{"modules/SvogvModule.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{},"overview.html":{},"additional-documentation/about.html":{}}}],["outcome",{"_index":1490,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["outline",{"_index":1623,"title":{},"body":{"contributing.html":{}}}],["output",{"_index":671,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["outputs",{"_index":633,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["over",{"_index":1756,"title":{},"body":{"contributing.html":{}}}],["overflow",{"_index":2434,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["overview",{"_index":1652,"title":{"overview.html":{}},"body":{"contributing.html":{},"index.html":{},"overview.html":{}}}],["overwhelming",{"_index":2435,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["overwritten",{"_index":799,"title":{},"body":{"components/EditorComponent.html":{}}}],["p",{"_index":582,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TreeNodeModel.html":{},"miscellaneous/functions.html":{}}}],["p.push(n",{"_index":1172,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["p.push(this",{"_index":1169,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["package",{"_index":1836,"title":{"dependencies.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["package.json",{"_index":2141,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["packages",{"_index":1497,"title":{},"body":{"changelog.html":{},"additional-documentation/about.html":{}}}],["padding",{"_index":50,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["page",{"_index":651,"title":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}},"body":{"components/DataGridPaginationComponent.html":{}}}],["pageend",{"_index":690,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pageendnumber",{"_index":636,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pagenumber",{"_index":664,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pagenumberchanged",{"_index":634,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pages",{"_index":640,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pagesize",{"_index":403,"title":{},"body":{"classes/DataGridModel.html":{}}}],["pagestartnumber",{"_index":635,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pagination",{"_index":613,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{}}}],["pagination'},{'name",{"_index":301,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["paging",{"_index":396,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["param",{"_index":375,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/typealiases.html":{}}}],["parameter",{"_index":870,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":331,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":729,"title":{},"body":{"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parent",{"_index":638,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["parseint(target.prototype[`__hasmaxlength__${propname",{"_index":969,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["parseint(target.prototype[`__hasminlength__${propname",{"_index":975,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["part",{"_index":257,"title":{},"body":{"components/AutoFormComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["partially",{"_index":2424,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["particular",{"_index":2072,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["parts",{"_index":696,"title":{},"body":{"interfaces/DatagridStyles.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pass",{"_index":1708,"title":{},"body":{"contributing.html":{}}}],["passing",{"_index":1726,"title":{},"body":{"contributing.html":{}}}],["password",{"_index":200,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{},"index.html":{}}}],["passwordtwo",{"_index":202,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["patch",{"_index":1697,"title":{},"body":{"contributing.html":{}}}],["path",{"_index":1127,"title":{},"body":{"classes/TreeNodeModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["path.join(__dirname",{"_index":2569,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["paths",{"_index":2511,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pattern",{"_index":546,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["pattern(pattern",{"_index":1921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pattern.decorator.ts",{"_index":1868,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pattern.test(item[s",{"_index":548,"title":{},"body":{"classes/DataGridModel.html":{}}}],["patterntype",{"_index":859,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["peace",{"_index":2596,"title":{},"body":{"additional-documentation/about.html":{}}}],["peerdependencies",{"_index":2498,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["penalty",{"_index":2311,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["pendant",{"_index":2108,"title":{},"body":{"index.html":{}}}],["people",{"_index":1401,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":372,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["perf",{"_index":1791,"title":{},"body":{"contributing.html":{}}}],["perfect",{"_index":1494,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":1793,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["perhaps",{"_index":1682,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":2211,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2527,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pfxicon",{"_index":1277,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["phone",{"_index":172,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["phonenumber",{"_index":174,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["pieces",{"_index":2116,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":320,"title":{"pipes/FormatDataPipe.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["pipe's",{"_index":1911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe.transform(value",{"_index":1038,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["pipeargs",{"_index":1031,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["pipename",{"_index":868,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["pipeparams",{"_index":321,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["pipes",{"_index":595,"title":{},"body":{"classes/DataGridModel.html":{},"pipes/FormatDataPipe.html":{},"miscellaneous/functions.html":{}}}],["pipetoken",{"_index":1030,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["pipetransform",{"_index":1034,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["place",{"_index":1807,"title":{},"body":{"contributing.html":{}}}],["placeholder",{"_index":770,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["placeholder(name",{"_index":1923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholder.decorator.ts",{"_index":1869,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholdertype",{"_index":855,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["plain",{"_index":2370,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["plan",{"_index":2009,"title":{},"body":{"index.html":{}}}],["plane",{"_index":1992,"title":{},"body":{"index.html":{}}}],["planned",{"_index":2075,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["please",{"_index":1571,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["plunker",{"_index":1669,"title":{},"body":{"contributing.html":{}}}],["plunkr",{"_index":1599,"title":{},"body":{"contributing.html":{}}}],["plus",{"_index":755,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["point",{"_index":1683,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pointer",{"_index":726,"title":{},"body":{"components/EditorComponent.html":{}}}],["pointers",{"_index":2507,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pointing",{"_index":2471,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["port",{"_index":2577,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["possible",{"_index":878,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["potential",{"_index":2442,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pr",{"_index":1685,"title":{},"body":{"contributing.html":{}}}],["pre",{"_index":1408,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["precise",{"_index":1755,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":2031,"title":{},"body":{"index.html":{}}}],["preselectstate",{"_index":1278,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["present",{"_index":1812,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pretty",{"_index":1994,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["prevent",{"_index":1628,"title":{},"body":{"contributing.html":{}}}],["previous",{"_index":1775,"title":{},"body":{"contributing.html":{}}}],["primarily",{"_index":2267,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["primary",{"_index":1213,"title":{},"body":{"classes/TreeNodeOptions.html":{},"additional-documentation/package-construction.html":{}}}],["print",{"_index":1833,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["private",{"_index":397,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["probably",{"_index":2462,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["problem",{"_index":1560,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["procedure",{"_index":1499,"title":{},"body":{"changelog.html":{}}}],["proceed",{"_index":2526,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["process",{"_index":474,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["process.env.karma_filter",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":2594,"title":{},"body":{"additional-documentation/about.html":{}}}],["production",{"_index":1409,"title":{},"body":{"changelog.html":{}}}],["professional",{"_index":2308,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["profits",{"_index":2234,"title":{},"body":{"license.html":{}}}],["progress",{"_index":206,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"additional-documentation/package-construction.html":{}}}],["project",{"_index":1450,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["project's",{"_index":2446,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["project.git",{"_index":2548,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["projects",{"_index":2176,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["projects/.../compare.validator.ts",{"_index":1877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../datagrid.model.ts",{"_index":1854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datagridstyle.model.ts",{"_index":2243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../formvalidator.model.ts",{"_index":2242,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../hint",{"_index":1859,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../range.validator.ts",{"_index":1878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../svogv.module.ts",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../test.ts",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../treenodeoptions.model.ts",{"_index":1855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../val",{"_index":1857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../webpack.test.config.ts",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/svogv/src/lib/decorators/hint",{"_index":1885,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/svogv/src/lib/decorators/val",{"_index":1879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/services/formvalidator.model.ts",{"_index":838,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["projects/svogv/src/lib/services/formvalidator.model.ts:185",{"_index":863,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["projects/svogv/src/lib/services/formvalidator.service.ts",{"_index":924,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["projects/svogv/src/lib/services/formvalidator.service.ts:20",{"_index":934,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["projects/svogv/src/lib/services/formvalidator.service.ts:32",{"_index":936,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["projects/svogv/src/lib/services/validators/compare.validator.ts",{"_index":1959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/services/validators/range.validator.ts",{"_index":1962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/svogv.module.ts",{"_index":1051,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["projects/svogv/src/lib/svogv.module.ts:33",{"_index":1054,"title":{},"body":{"modules/SvogvModule.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts",{"_index":381,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:102",{"_index":437,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:104",{"_index":427,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:105",{"_index":436,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:110",{"_index":435,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:115",{"_index":429,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:120",{"_index":444,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:121",{"_index":426,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:123",{"_index":425,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:141",{"_index":483,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:165",{"_index":470,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:177",{"_index":447,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:188",{"_index":468,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:196",{"_index":460,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:200",{"_index":458,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:31",{"_index":501,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:35",{"_index":505,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:39",{"_index":507,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:42",{"_index":509,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:46",{"_index":511,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:53",{"_index":513,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:58",{"_index":517,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:61",{"_index":515,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:65",{"_index":519,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:82",{"_index":521,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:89",{"_index":523,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:96",{"_index":526,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts",{"_index":315,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15",{"_index":343,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:23",{"_index":358,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:28",{"_index":367,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:33",{"_index":363,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:38",{"_index":344,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:43",{"_index":354,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:48",{"_index":348,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:53",{"_index":352,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:7",{"_index":329,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts",{"_index":694,"title":{},"body":{"interfaces/DatagridStyles.html":{},"miscellaneous/typealiases.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts",{"_index":612,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:27",{"_index":637,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:32",{"_index":648,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:38",{"_index":641,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:40",{"_index":665,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:42",{"_index":656,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:46",{"_index":654,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:59",{"_index":663,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:72",{"_index":659,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:80",{"_index":667,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:89",{"_index":669,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts",{"_index":1020,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts:13",{"_index":1032,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts",{"_index":14,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:116",{"_index":91,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:25",{"_index":77,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:31",{"_index":83,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:33",{"_index":97,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:34",{"_index":98,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:39",{"_index":75,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:51",{"_index":94,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts",{"_index":703,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:102",{"_index":773,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:115",{"_index":776,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:169",{"_index":778,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:31",{"_index":762,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:35",{"_index":767,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:39",{"_index":752,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:43",{"_index":750,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:47",{"_index":765,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:51",{"_index":742,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:56",{"_index":746,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:60",{"_index":740,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:65",{"_index":757,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:69",{"_index":743,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:73",{"_index":766,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:77",{"_index":769,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:81",{"_index":763,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:87",{"_index":768,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:90",{"_index":779,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:92",{"_index":739,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:98",{"_index":775,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts",{"_index":1078,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8",{"_index":1090,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts",{"_index":1126,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:103",{"_index":1156,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:107",{"_index":1158,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:111",{"_index":1160,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:12",{"_index":1139,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:16",{"_index":1140,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:20",{"_index":1136,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:24",{"_index":1138,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:28",{"_index":1137,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:32",{"_index":1141,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34",{"_index":1135,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:49",{"_index":1146,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:61",{"_index":1143,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:65",{"_index":1148,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:69",{"_index":1142,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:77",{"_index":1144,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:87",{"_index":1150,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:90",{"_index":1152,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:99",{"_index":1154,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts",{"_index":1115,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:10",{"_index":1117,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:11",{"_index":1119,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:12",{"_index":1118,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts",{"_index":1121,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9",{"_index":1124,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts",{"_index":1191,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:17",{"_index":1204,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:19",{"_index":1210,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:21",{"_index":1211,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:23",{"_index":1216,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:25",{"_index":1207,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:27",{"_index":1202,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:29",{"_index":1208,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:31",{"_index":1214,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33",{"_index":1201,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts",{"_index":1218,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:20",{"_index":1244,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:21",{"_index":1246,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:22",{"_index":1245,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:23",{"_index":1247,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:24",{"_index":1243,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:30",{"_index":1253,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:34",{"_index":1249,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:38",{"_index":1255,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:42",{"_index":1251,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts",{"_index":1262,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:136",{"_index":1311,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:140",{"_index":1309,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:144",{"_index":1312,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:148",{"_index":1310,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:154",{"_index":1300,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:165",{"_index":1302,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:171",{"_index":1303,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:183",{"_index":1305,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:213",{"_index":1307,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:35",{"_index":1288,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:43",{"_index":1323,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:44",{"_index":1322,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:45",{"_index":1316,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:51",{"_index":1290,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:56",{"_index":1297,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:61",{"_index":1292,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:66",{"_index":1299,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:71",{"_index":1294,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:73",{"_index":1319,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:74",{"_index":1317,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:75",{"_index":1320,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:76",{"_index":1318,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:77",{"_index":1313,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:78",{"_index":1321,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:80",{"_index":1324,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:82",{"_index":1308,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/test.ts",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/svogv/webpack.test.config.ts",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominently",{"_index":2481,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["promise",{"_index":1829,"title":{},"body":{"contributing.html":{}}}],["prompt",{"_index":2410,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["prop",{"_index":322,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["propdesc",{"_index":586,"title":{},"body":{"classes/DataGridModel.html":{}}}],["properly",{"_index":1510,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["propertie's",{"_index":336,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":63,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["property",{"_index":31,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["property's",{"_index":1393,"title":{},"body":{"changelog.html":{}}}],["propertyname",{"_index":673,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["propname",{"_index":584,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{}}}],["proposal",{"_index":1613,"title":{},"body":{"contributing.html":{}}}],["pros",{"_index":2593,"title":{},"body":{"additional-documentation/about.html":{}}}],["provide",{"_index":113,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provided",{"_index":454,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["provider",{"_index":1075,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":1042,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["provides",{"_index":128,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["providing",{"_index":1647,"title":{},"body":{"contributing.html":{}}}],["prs",{"_index":1692,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":64,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["published",{"_index":2276,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["pull",{"_index":1609,"title":{},"body":{"contributing.html":{}}}],["pulling",{"_index":2469,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pure",{"_index":442,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["purpose",{"_index":1022,"title":{},"body":{"pipes/FormatDataPipe.html":{},"license.html":{},"additional-documentation/about.html":{}}}],["purposes",{"_index":2269,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["push",{"_index":259,"title":{},"body":{"components/AutoFormComponent.html":{},"contributing.html":{}}}],["put",{"_index":1412,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["putting",{"_index":2536,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["quality",{"_index":2193,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["quest",{"_index":2475,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["question",{"_index":1559,"title":{},"body":{"contributing.html":{}}}],["questions",{"_index":1570,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":1828,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["quickly",{"_index":1604,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["quite",{"_index":2117,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["radio",{"_index":2090,"title":{},"body":{"index.html":{}}}],["range",{"_index":631,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["range's",{"_index":1928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range(12",{"_index":185,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["range(from",{"_index":1925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range(min",{"_index":657,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["range.decorator.ts",{"_index":1870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rangetype",{"_index":914,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["re",{"_index":1724,"title":{},"body":{"contributing.html":{}}}],["react",{"_index":2173,"title":{},"body":{"index.html":{}}}],["reactive",{"_index":2124,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["reactiveformsmodule",{"_index":116,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"modules/SvogvModule.html":{},"index.html":{}}}],["read",{"_index":580,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["readable",{"_index":1759,"title":{},"body":{"contributing.html":{}}}],["readers",{"_index":1702,"title":{},"body":{"contributing.html":{}}}],["readible",{"_index":921,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["reading",{"_index":2441,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["readme",{"_index":2470,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["readme.md",{"_index":2513,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["readonly",{"_index":736,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["readonly(readonly",{"_index":1931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly.decorator.ts",{"_index":1871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonlytype",{"_index":879,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["ready",{"_index":1616,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["real",{"_index":1263,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["really",{"_index":2118,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["realm",{"_index":1548,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1905,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["rebase",{"_index":1727,"title":{},"body":{"contributing.html":{}}}],["receives",{"_index":1883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["recent",{"_index":2275,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["recently",{"_index":449,"title":{},"body":{"classes/DataGridModel.html":{}}}],["recommend",{"_index":2348,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["redesign",{"_index":1475,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":1789,"title":{},"body":{"contributing.html":{}}}],["reference",{"_index":78,"title":{},"body":{"components/AutoFormComponent.html":{},"contributing.html":{}}}],["references",{"_index":1533,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["refers",{"_index":2557,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["refine",{"_index":1887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["refinements",{"_index":1541,"title":{},"body":{"changelog.html":{}}}],["reflect",{"_index":1534,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":2223,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":502,"title":{},"body":{"classes/DataGridModel.html":{}}}],["regex",{"_index":912,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["regexp",{"_index":913,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["regexp(target.prototype[`__haspattern__${propname",{"_index":981,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["regexp(this.searchvalue[s",{"_index":547,"title":{},"body":{"classes/DataGridModel.html":{}}}],["register",{"_index":1013,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["regular",{"_index":1391,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["related",{"_index":1677,"title":{},"body":{"contributing.html":{}}}],["relates",{"_index":1687,"title":{},"body":{"contributing.html":{}}}],["release",{"_index":1387,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["releases",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":622,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["reliable",{"_index":1454,"title":{},"body":{"changelog.html":{}}}],["remark",{"_index":2084,"title":{},"body":{"index.html":{}}}],["remember",{"_index":563,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["remote",{"_index":1734,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["remove",{"_index":1087,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["remove(node",{"_index":1108,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["removecolumn",{"_index":410,"title":{},"body":{"classes/DataGridModel.html":{}}}],["removecolumn(colname",{"_index":469,"title":{},"body":{"classes/DataGridModel.html":{}}}],["removed",{"_index":448,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{}}}],["removing",{"_index":1477,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":1514,"title":{},"body":{"changelog.html":{}}}],["renaming",{"_index":1503,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":473,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rendered",{"_index":877,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["renderer",{"_index":1286,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["renderer2",{"_index":1287,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["rendering",{"_index":2077,"title":{},"body":{"index.html":{}}}],["renders",{"_index":764,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["reorg",{"_index":1463,"title":{},"body":{"changelog.html":{}}}],["rep",{"_index":2396,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["repl",{"_index":2573,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["replacement",{"_index":2270,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["replaces",{"_index":356,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"index.html":{}}}],["report",{"_index":2001,"title":{},"body":{"index.html":{}}}],["reported",{"_index":1640,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":1645,"title":{},"body":{"contributing.html":{}}}],["repositories",{"_index":2286,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["repository",{"_index":1593,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["represents",{"_index":842,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["reproduce",{"_index":1668,"title":{},"body":{"contributing.html":{}}}],["reproduction",{"_index":1595,"title":{},"body":{"contributing.html":{}}}],["reps",{"_index":2400,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["request",{"_index":1610,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["requests",{"_index":1564,"title":{},"body":{"contributing.html":{}}}],["require",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./tools/gulp/gulpfile');the",{"_index":2571,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["require('path",{"_index":2565,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["require('ts",{"_index":2567,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["require('webpack",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":79,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["required('user",{"_index":178,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["required(msg",{"_index":1936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["required.decorator.ts",{"_index":1872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["requiredtype",{"_index":862,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["requires",{"_index":2042,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["reset",{"_index":1049,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["resides",{"_index":2459,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["respond",{"_index":2556,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["rest",{"_index":1823,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":310,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["resulting",{"_index":2232,"title":{},"body":{"license.html":{}}}],["results",{"_index":312,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["return",{"_index":288,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TreeNodeModel.html":{}}}],["returns",{"_index":92,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["revert",{"_index":1773,"title":{},"body":{"contributing.html":{}}}],["reverted",{"_index":1778,"title":{},"body":{"contributing.html":{}}}],["reverts",{"_index":1774,"title":{},"body":{"contributing.html":{}}}],["rid",{"_index":1431,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":56,"title":{},"body":{"components/AutoFormComponent.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["rm",{"_index":1717,"title":{},"body":{"contributing.html":{}}}],["root",{"_index":683,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["roughly",{"_index":1997,"title":{},"body":{"index.html":{}}}],["routermodule",{"_index":1060,"title":{},"body":{"modules/SvogvModule.html":{}}}],["row",{"_index":579,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["rows",{"_index":395,"title":{},"body":{"classes/DataGridModel.html":{}}}],["rule",{"_index":2081,"title":{},"body":{"index.html":{}}}],["rules",{"_index":644,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["run",{"_index":1465,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["runner",{"_index":2529,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["running",{"_index":2054,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["rxjs",{"_index":1846,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["s",{"_index":544,"title":{},"body":{"classes/DataGridModel.html":{},"components/TreeViewNodeComponent.html":{}}}],["s3",{"_index":2204,"title":{},"body":{"index.html":{}}}],["safely",{"_index":1732,"title":{},"body":{"contributing.html":{}}}],["same",{"_index":1895,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["sample",{"_index":2129,"title":{},"body":{"index.html":{}}}],["sass",{"_index":2530,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["save",{"_index":781,"title":{},"body":{"components/EditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["saves",{"_index":2350,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["saveyou",{"_index":2123,"title":{},"body":{"index.html":{}}}],["scan+email",{"_index":1834,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1767,"title":{},"body":{"contributing.html":{}}}],["scopes",{"_index":1798,"title":{},"body":{"contributing.html":{}}}],["screen",{"_index":1701,"title":{},"body":{"contributing.html":{}}}],["screenshots",{"_index":1606,"title":{},"body":{"contributing.html":{}}}],["script",{"_index":2389,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["scripts",{"_index":2444,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["scss",{"_index":2531,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["search",{"_index":438,"title":{},"body":{"classes/DataGridModel.html":{},"contributing.html":{}}}],["searchvalue",{"_index":404,"title":{},"body":{"classes/DataGridModel.html":{}}}],["second",{"_index":152,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["seconds",{"_index":2130,"title":{},"body":{"index.html":{}}}],["secret",{"_index":2353,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["see",{"_index":528,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["select",{"_index":360,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"classes/TreeNodeOptions.html":{},"index.html":{}}}],["selectable",{"_index":1199,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["selected",{"_index":1215,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["selectedchanged",{"_index":1242,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["selectedicon",{"_index":1200,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["selection",{"_index":2028,"title":{},"body":{"index.html":{}}}],["selections",{"_index":2120,"title":{},"body":{"index.html":{}}}],["selector",{"_index":39,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["semi",{"_index":1787,"title":{},"body":{"contributing.html":{}}}],["send",{"_index":1721,"title":{},"body":{"contributing.html":{}}}],["sending",{"_index":1691,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":903,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["server",{"_index":620,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["service",{"_index":126,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["service's",{"_index":2052,"title":{},"body":{"index.html":{}}}],["services",{"_index":1989,"title":{},"body":{"index.html":{}}}],["services/formvalidator",{"_index":1066,"title":{},"body":{"modules/SvogvModule.html":{}}}],["services/formvalidator.service",{"_index":1064,"title":{},"body":{"modules/SvogvModule.html":{}}}],["set",{"_index":339,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["setcurrentpage",{"_index":632,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["setcurrentpage(pagenumber",{"_index":661,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["setitems(value",{"_index":516,"title":{},"body":{"classes/DataGridModel.html":{}}}],["setstate(value",{"_index":1151,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["settimeout",{"_index":681,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["setting",{"_index":2043,"title":{},"body":{"index.html":{}}}],["settings",{"_index":2048,"title":{},"body":{"index.html":{}}}],["setup",{"_index":1498,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["several",{"_index":103,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{}}}],["sha",{"_index":1780,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":759,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["sheer",{"_index":2430,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["shell",{"_index":1737,"title":{},"body":{"contributing.html":{}}}],["short",{"_index":2414,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["shortly",{"_index":1448,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["show",{"_index":341,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{}}}],["showing",{"_index":1527,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":332,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["shows",{"_index":952,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sidemenu",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["sign",{"_index":1688,"title":{},"body":{"contributing.html":{}}}],["signed",{"_index":1827,"title":{},"body":{"contributing.html":{}}}],["significant",{"_index":2004,"title":{},"body":{"index.html":{}}}],["signing",{"_index":1568,"title":{},"body":{"contributing.html":{}}}],["silver",{"_index":48,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["similar",{"_index":1678,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":484,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["simplechange",{"_index":670,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["simpler",{"_index":2055,"title":{},"body":{"index.html":{}}}],["simplest",{"_index":108,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{}}}],["simply",{"_index":1986,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["single",{"_index":843,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["size",{"_index":58,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{}}}],["skills",{"_index":2207,"title":{},"body":{"index.html":{}}}],["slider",{"_index":2094,"title":{},"body":{"index.html":{}}}],["sm",{"_index":645,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["small",{"_index":1496,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["smaller",{"_index":1452,"title":{},"body":{"changelog.html":{}}}],["smil",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":2215,"title":{},"body":{"license.html":{},"additional-documentation/about.html":{}}}],["solid",{"_index":49,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["somehow",{"_index":2016,"title":{},"body":{"index.html":{}}}],["something",{"_index":2339,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["sometimes",{"_index":2115,"title":{},"body":{"index.html":{}}}],["somewhat",{"_index":2560,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["somewhere",{"_index":1907,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["sophisticated",{"_index":2191,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["sort",{"_index":282,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["sortable",{"_index":1522,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sortable(cansort",{"_index":1938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sortable(true",{"_index":1943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sortable.decorator.ts",{"_index":1873,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sortcallback",{"_index":323,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sortcolumn",{"_index":411,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sortcolumn(colname",{"_index":480,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sortdirection",{"_index":405,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sorted",{"_index":488,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sorting",{"_index":391,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["source",{"_index":8,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["sources",{"_index":1993,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["sourcing",{"_index":2152,"title":{},"body":{"index.html":{}}}],["space",{"_index":756,"title":{},"body":{"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["spec.ts",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["spec\\.ts",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1766,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["specially",{"_index":2104,"title":{},"body":{"index.html":{}}}],["specific",{"_index":875,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["specified",{"_index":487,"title":{},"body":{"classes/DataGridModel.html":{}}}],["specifying",{"_index":1806,"title":{},"body":{"contributing.html":{}}}],["specs",{"_index":1746,"title":{},"body":{"contributing.html":{}}}],["speed",{"_index":2321,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["spend",{"_index":1643,"title":{},"body":{"contributing.html":{}}}],["split",{"_index":2456,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["splittet",{"_index":2453,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src",{"_index":1804,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src/demo",{"_index":2539,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src\\demothe",{"_index":2467,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src\\lib",{"_index":2468,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src\\libbecause",{"_index":2463,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["srcs.json",{"_index":2525,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["stable",{"_index":1495,"title":{},"body":{"changelog.html":{}}}],["stack",{"_index":1656,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["stackoverflow",{"_index":1579,"title":{},"body":{"contributing.html":{}}}],["stages",{"_index":1615,"title":{},"body":{"contributing.html":{}}}],["standard",{"_index":1974,"title":{},"body":{"index.html":{}}}],["start",{"_index":744,"title":{},"body":{"components/EditorComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["starta",{"_index":2135,"title":{},"body":{"index.html":{}}}],["started",{"_index":1382,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["startnumber",{"_index":689,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["startrow",{"_index":417,"title":{},"body":{"classes/DataGridModel.html":{}}}],["state",{"_index":1129,"title":{},"body":{"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["state(value",{"_index":1180,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["statechange",{"_index":1085,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["stateischecked",{"_index":1133,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["stateisdisabled",{"_index":1131,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["stateisexpandend",{"_index":1130,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["stateisselected",{"_index":1132,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["states",{"_index":1372,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["static",{"_index":1052,"title":{},"body":{"modules/SvogvModule.html":{},"components/TreeViewNodeComponent.html":{}}}],["stay",{"_index":1549,"title":{},"body":{"changelog.html":{}}}],["steep",{"_index":2313,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["step",{"_index":2302,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["steps",{"_index":1671,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["still",{"_index":475,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["store",{"_index":279,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["straight",{"_index":222,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["strict",{"_index":2561,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["strictly",{"_index":1506,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":168,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string).tolowercase",{"_index":824,"title":{},"body":{"components/EditorComponent.html":{}}}],["stringlength",{"_index":917,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stringlength(min",{"_index":1945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringlength.decorator.ts",{"_index":1874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringlengthtype",{"_index":860,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":2064,"title":{},"body":{"index.html":{}}}],["strong",{"_index":2583,"title":{},"body":{"additional-documentation/about.html":{}}}],["strongly",{"_index":2347,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["structure",{"_index":577,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["studio",{"_index":2361,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["stuff",{"_index":1972,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["style",{"_index":1232,"title":{},"body":{"components/TreeViewComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["styleable",{"_index":695,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["styled",{"_index":25,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["stylelint",{"_index":2544,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["stylerules",{"_index":366,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/DatagridStyles.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":42,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{}}}],["styleurls",{"_index":626,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["styling",{"_index":785,"title":{},"body":{"components/EditorComponent.html":{}}}],["subject",{"_index":1768,"title":{},"body":{"contributing.html":{}}}],["sublime",{"_index":2366,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["submission",{"_index":1565,"title":{},"body":{"contributing.html":{}}}],["submit",{"_index":1608,"title":{},"body":{"contributing.html":{}}}],["submitted",{"_index":1635,"title":{},"body":{"contributing.html":{}}}],["submitting",{"_index":1591,"title":{},"body":{"contributing.html":{}}}],["subsequent",{"_index":1095,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["successfully",{"_index":1631,"title":{},"body":{"contributing.html":{}}}],["succinct",{"_index":1810,"title":{},"body":{"contributing.html":{}}}],["such",{"_index":216,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["sued",{"_index":1464,"title":{},"body":{"changelog.html":{}}}],["sufficient",{"_index":2360,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["suggest",{"_index":1679,"title":{},"body":{"contributing.html":{}}}],["suite",{"_index":1703,"title":{},"body":{"contributing.html":{}}}],["suites",{"_index":1725,"title":{},"body":{"contributing.html":{}}}],["summary",{"_index":2065,"title":{},"body":{"index.html":{}}}],["super(options",{"_index":1112,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["support",{"_index":619,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["supported",{"_index":1389,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["supporting",{"_index":2012,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["supports",{"_index":26,"title":{},"body":{"components/AutoFormComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["suppress",{"_index":950,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["sure",{"_index":1614,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":1430,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svgov",{"_index":2007,"title":{},"body":{"index.html":{}}}],["svogv",{"_index":135,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"modules/SvogvModule.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["svogv';or",{"_index":2029,"title":{},"body":{"index.html":{}}}],["svogv:master",{"_index":1722,"title":{},"body":{"contributing.html":{}}}],["svogv_components",{"_index":1068,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["svogvmodule",{"_index":127,"title":{"modules/SvogvModule.html":{}},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"modules/SvogvModule.html":{},"modules.html":{},"overview.html":{}}}],["svogvonce",{"_index":2417,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["sync",{"_index":2006,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":2060,"title":{},"body":{"index.html":{}}}],["system",{"_index":1667,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["system.componentmodel.dataannotations",{"_index":2020,"title":{},"body":{"index.html":{}}}],["systemjs",{"_index":1437,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["systems",{"_index":2412,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["t",{"_index":424,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1910,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["tables",{"_index":1984,"title":{},"body":{"index.html":{}}}],["tabs",{"_index":1426,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":2056,"title":{},"body":{"index.html":{}}}],["tagged",{"_index":1913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["take",{"_index":233,"title":{},"body":{"components/AutoFormComponent.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["takes",{"_index":384,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["talking",{"_index":2440,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["target",{"_index":938,"title":{},"body":{"injectables/FormValidatorService.html":{},"index.html":{}}}],["target.prototype",{"_index":961,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errcompareproperty__${propname",{"_index":999,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errmaxlength__${propname",{"_index":968,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errminlength__${propname",{"_index":974,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errpattern__${propname",{"_index":980,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errrange__${propname",{"_index":988,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errrequired__${propname",{"_index":963,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__withcompare__${propname",{"_index":1000,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target[propname",{"_index":1004,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["targetinstance",{"_index":948,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["task",{"_index":2579,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tasks",{"_index":2364,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tbd",{"_index":1750,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":1603,"title":{},"body":{"contributing.html":{}}}],["team's",{"_index":1581,"title":{},"body":{"contributing.html":{}}}],["techniques",{"_index":1935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["technologies",{"_index":2194,"title":{},"body":{"index.html":{}}}],["template",{"_index":9,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["templatehint",{"_index":324,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["templatehint(template",{"_index":1946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["templatehint.decorator.ts",{"_index":1875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["templatehintparams",{"_index":325,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["templatehinttype",{"_index":894,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["templates",{"_index":365,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{}}}],["templateurl",{"_index":60,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["tense",{"_index":1813,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":1699,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tested",{"_index":1745,"title":{},"body":{"contributing.html":{}}}],["testing",{"_index":2464,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tests",{"_index":1707,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["text",{"_index":326,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["textarea",{"_index":889,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["texts",{"_index":2458,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["texttreenodemodel",{"_index":1077,"title":{"classes/TextTreeNodeModel.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{}}}],["thank",{"_index":1729,"title":{},"body":{"contributing.html":{}}}],["that's",{"_index":124,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["thatappears",{"_index":2247,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["that}appears",{"_index":874,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["that’s",{"_index":2586,"title":{},"body":{"additional-documentation/about.html":{}}}],["themes",{"_index":1983,"title":{},"body":{"index.html":{}}}],["there's",{"_index":680,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["things",{"_index":2331,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["think",{"_index":2476,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["thinks",{"_index":2178,"title":{},"body":{"index.html":{}}}],["this._headers",{"_index":581,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._headers.filter((h",{"_index":550,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._headers.find((h",{"_index":572,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._headers.push(header",{"_index":611,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._items",{"_index":554,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._items.length",{"_index":537,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._state",{"_index":1179,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.backcolor",{"_index":1355,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.checkchanged",{"_index":1326,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.checkchanged.emit(node",{"_index":1259,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["this.checkchanged.emit(this.node",{"_index":1367,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.children",{"_index":1163,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.indexof(node",{"_index":1177,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.length",{"_index":1173,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.push(...(nodes",{"_index":1174,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.push(nodes",{"_index":1175,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.splice(idx",{"_index":1178,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.collapsechanged",{"_index":1328,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapsechanged.emit(node",{"_index":1261,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["this.collapsechanged.emit(this.node",{"_index":1357,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses",{"_index":1329,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.filter",{"_index":1359,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.push('ac",{"_index":1346,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.push(treeviewnodecomponent.clsicon",{"_index":1362,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.push(treeviewnodecomponent.opnicon",{"_index":1348,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.push(treeviewnodecomponent.pfxicon",{"_index":1347,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.component",{"_index":1125,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["this.createheadersfortype(typeinstance",{"_index":558,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.currentpagenumber",{"_index":676,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["this.editors",{"_index":230,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.editors.push",{"_index":261,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.editors.sort((e",{"_index":283,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.errors",{"_index":830,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.errors.push(error",{"_index":833,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.fb",{"_index":945,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["this.fb.group(valgroup",{"_index":1008,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["this.first(this.params.filter((e",{"_index":794,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.forecolor",{"_index":1353,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.formgroup",{"_index":237,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["this.formgroup.controls",{"_index":243,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.formgroup.controls.hasownproperty(controlname",{"_index":244,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.formgroup.controls[this.name].errors",{"_index":832,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.formservice.build(userviewmodel",{"_index":146,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["this.fromvalue",{"_index":815,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.fv.build(userviewmodel",{"_index":2041,"title":{},"body":{"index.html":{}}}],["this.groups",{"_index":232,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.groups.filter((g",{"_index":266,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.groups.length",{"_index":289,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.groups.push",{"_index":271,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.groups.sort((e",{"_index":287,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.haschildren",{"_index":1181,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.href",{"_index":1343,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.iconclasses",{"_index":1330,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.iconclasses.push('fa",{"_index":1340,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.iconclasses.push(this.node.options.icon",{"_index":1341,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.injector.get(pipetoken",{"_index":1037,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["this.isexpanded",{"_index":1363,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.issortable",{"_index":377,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["this.items.sort((a",{"_index":567,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.items.sort(sortcallback",{"_index":566,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.itemsfiltered",{"_index":538,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.itemsfiltered.length",{"_index":539,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.itemsfiltered.slice(this.startrow",{"_index":549,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.label",{"_index":807,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.maxpageindex",{"_index":685,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["this.myform",{"_index":2040,"title":{},"body":{"index.html":{}}}],["this.name",{"_index":809,"title":{},"body":{"components/EditorComponent.html":{},"classes/TextTreeNodeModel.html":{}}}],["this.node",{"_index":1333,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.haschildren",{"_index":1345,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options",{"_index":1337,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.backcolor",{"_index":1354,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.checkable",{"_index":1365,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.collapsable",{"_index":1364,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.color",{"_index":1352,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.href",{"_index":1342,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.icon",{"_index":1338,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.icon.indexof(`${treeviewnodecomponent.pfxicon",{"_index":1339,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.selectable",{"_index":1373,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.state",{"_index":1350,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.statechange.subscribe((se",{"_index":1356,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.stateisdisabled",{"_index":1366,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.stateisexpandend",{"_index":1358,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.stateisselected",{"_index":1378,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.nodeclick",{"_index":1325,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.nodeclick.emit(node",{"_index":1258,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["this.nodeclick.emit(this.node",{"_index":1370,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.ondelete.emit(item",{"_index":576,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.onedit.emit(item",{"_index":575,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.onvaluechanged(data",{"_index":796,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.options",{"_index":1162,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.pagenumberchanged.emit(pagenumber",{"_index":686,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["this.pagesize",{"_index":541,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.params",{"_index":793,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.parent",{"_index":1170,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.preselectstate",{"_index":1376,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.readonly",{"_index":829,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.searchvalue",{"_index":545,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.selectedchanged",{"_index":1327,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.selectedchanged.emit(node",{"_index":1260,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["this.selectedchanged.emit(this.node",{"_index":1379,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.setcurrentpage(1",{"_index":672,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["this.sortdirection[colname",{"_index":560,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.startrow",{"_index":542,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.state",{"_index":1165,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.statechange",{"_index":1164,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.statechange.emit(this._state",{"_index":1187,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.templatehint",{"_index":378,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["this.text",{"_index":1113,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["this.tooltip",{"_index":810,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.totalrows",{"_index":540,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.tovalue",{"_index":818,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.type",{"_index":803,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.userform",{"_index":145,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.userformgroup",{"_index":792,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.watermark",{"_index":820,"title":{},"body":{"components/EditorComponent.html":{}}}],["those",{"_index":2449,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["though",{"_index":2024,"title":{},"body":{"index.html":{}}}],["through",{"_index":240,"title":{},"body":{"components/AutoFormComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["throughout",{"_index":1743,"title":{},"body":{"contributing.html":{}}}],["thrown",{"_index":1653,"title":{},"body":{"contributing.html":{}}}],["throws",{"_index":678,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["time",{"_index":2174,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["title",{"_index":334,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["titles",{"_index":390,"title":{},"body":{"classes/DataGridModel.html":{}}}],["together",{"_index":1982,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":559,"title":{},"body":{"classes/DataGridModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["toggles",{"_index":497,"title":{},"body":{"classes/DataGridModel.html":{}}}],["toggling",{"_index":1525,"title":{},"body":{"changelog.html":{}}}],["tolerant",{"_index":1406,"title":{},"body":{"changelog.html":{}}}],["ton",{"_index":1488,"title":{},"body":{"changelog.html":{}}}],["tons",{"_index":2351,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["tool",{"_index":2283,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tools",{"_index":1772,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tools/gulp",{"_index":2570,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tools/gulp/tasks",{"_index":2564,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["toolsthe",{"_index":2445,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tooltip",{"_index":318,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["top",{"_index":46,"title":{},"body":{"components/AutoFormComponent.html":{},"index.html":{}}}],["tortious",{"_index":2237,"title":{},"body":{"license.html":{}}}],["total",{"_index":394,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction.html":{}}}],["totalfilteredrows",{"_index":414,"title":{},"body":{"classes/DataGridModel.html":{}}}],["totalrows",{"_index":413,"title":{},"body":{"classes/DataGridModel.html":{}}}],["touch",{"_index":2553,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tovalue",{"_index":737,"title":{},"body":{"components/EditorComponent.html":{}}}],["towards",{"_index":2005,"title":{},"body":{"index.html":{}}}],["trace",{"_index":1657,"title":{},"body":{"contributing.html":{}}}],["trade",{"_index":2317,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["traditional",{"_index":2299,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["transfer",{"_index":2358,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["transform",{"_index":1028,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["transform(value",{"_index":1029,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["translate",{"_index":900,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["translation",{"_index":901,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["transpiler",{"_index":2518,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["transpilers",{"_index":2304,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["travis",{"_index":2326,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tree",{"_index":12,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["tree'},{'name",{"_index":305,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["tree.treenodeoptions",{"_index":1099,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["tree.treenodestate",{"_index":1091,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.checked",{"_index":1190,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.disabled",{"_index":1188,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.expanded",{"_index":1182,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.selected",{"_index":1189,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.undefined",{"_index":1166,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["treeish",{"_index":2296,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["treenode",{"_index":307,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["treenode.model",{"_index":1111,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodebase.model",{"_index":1161,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["treenodebasemodel",{"_index":1106,"title":{"interfaces/TreeNodeBaseModel.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["treenodecomponentmodel",{"_index":1120,"title":{"classes/TreeNodeComponentModel.html":{}},"body":{"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel",{"_index":1081,"title":{"classes/TreeNodeModel.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["treenodemodel:12",{"_index":1100,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:16",{"_index":1101,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:20",{"_index":1094,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:24",{"_index":1097,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:28",{"_index":1096,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:32",{"_index":1102,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:34",{"_index":1093,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:61",{"_index":1107,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:69",{"_index":1104,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:77",{"_index":1109,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodeoptions",{"_index":1088,"title":{"classes/TreeNodeOptions.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeOptions.html":{}}}],["treenodeoptions.model",{"_index":1110,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["treenodestate",{"_index":1217,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["treenodestate.checked",{"_index":1351,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treenodestate.expanded",{"_index":1371,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treenodestate.selected",{"_index":1377,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treeview",{"_index":1219,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{}}}],["treeview.component.html",{"_index":1234,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["treeviewcomponent",{"_index":304,"title":{"components/TreeViewComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["treeviewnode.component.css",{"_index":1269,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treeviewnode.component.html",{"_index":1270,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treeviewnodecomponent",{"_index":306,"title":{"components/TreeViewNodeComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["treeviewnodecomponent.clsicon",{"_index":1360,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treeviewnodecomponent.opnicon",{"_index":1361,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["triage",{"_index":1674,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":82,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":954,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["trying",{"_index":1664,"title":{},"body":{"contributing.html":{}}}],["ts",{"_index":951,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ts/js",{"_index":2325,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["tsc",{"_index":2133,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":2524,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tsconfig.json",{"_index":2517,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tslib",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":2542,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tslint:disable",{"_index":489,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{}}}],["tuned",{"_index":1550,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":213,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["type",{"_index":76,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["type's",{"_index":846,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type.hasownproperty(p",{"_index":583,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type=\"checkbox",{"_index":2088,"title":{},"body":{"index.html":{}}}],["type=\"checkbox\"&gt",{"_index":884,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type=\"date",{"_index":2096,"title":{},"body":{"index.html":{}}}],["type=\"date\"&gt",{"_index":883,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type=\"number",{"_index":2092,"title":{},"body":{"index.html":{}}}],["type=\"number\"&gt",{"_index":885,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type=\"text",{"_index":2085,"title":{},"body":{"index.html":{}}}],["type=\"text\"&gt",{"_index":882,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type[`__issortable__${p",{"_index":592,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__pipeparams__${p",{"_index":608,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__sortcallback__${p",{"_index":594,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__templatehint__${p",{"_index":600,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__templatehintparams__${p",{"_index":604,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__uipipe__${p",{"_index":606,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[p",{"_index":602,"title":{},"body":{"classes/DataGridModel.html":{}}}],["typealiases",{"_index":2240,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc.json",{"_index":2521,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["typeinstance",{"_index":555,"title":{},"body":{"classes/DataGridModel.html":{}}}],["typeof",{"_index":601,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{}}}],["types",{"_index":598,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["typescript",{"_index":880,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["typical",{"_index":153,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["typically",{"_index":2113,"title":{},"body":{"index.html":{}}}],["typing",{"_index":2554,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["typings",{"_index":2488,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ui",{"_index":104,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TreeNodeComponentModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["uihint",{"_index":327,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uihint(uihintrule",{"_index":1953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uihint.decorator.ts",{"_index":1876,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["uihint.hintrule(type",{"_index":610,"title":{},"body":{"classes/DataGridModel.html":{}}}],["uihintrule",{"_index":1958,"title":{},"body":{"miscellaneous/functions.html":{}}}],["umd",{"_index":1990,"title":{},"body":{"index.html":{}}}],["unambiguous",{"_index":1670,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":351,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["undefined,undefined",{"_index":482,"title":{},"body":{"classes/DataGridModel.html":{}}}],["under",{"_index":1427,"title":{},"body":{"changelog.html":{}}}],["underlaying",{"_index":616,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["unfortunately",{"_index":1517,"title":{},"body":{"changelog.html":{}}}],["ungrouped",{"_index":84,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["ungroupedafter",{"_index":72,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["unit",{"_index":1747,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["universal",{"_index":2125,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2352,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["up",{"_index":1168,"title":{},"body":{"classes/TreeNodeModel.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["update",{"_index":565,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{}}}],["updates",{"_index":1723,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["updateyou",{"_index":2552,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["upon",{"_index":2061,"title":{},"body":{"index.html":{}}}],["upper",{"_index":2478,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["upstream",{"_index":1733,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":2490,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["usable",{"_index":1417,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":35,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["use",{"_index":100,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["used",{"_index":118,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":112,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["user\\'s",{"_index":171,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["userform",{"_index":142,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{}}}],["userformgroup",{"_index":791,"title":{},"body":{"components/EditorComponent.html":{}}}],["username",{"_index":179,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["users",{"_index":2154,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["userviewmodel",{"_index":136,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["uses",{"_index":1890,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["using",{"_index":219,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["usually",{"_index":1970,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["utils/object",{"_index":530,"title":{},"body":{"classes/DataGridModel.html":{}}}],["val",{"_index":2101,"title":{},"body":{"index.html":{}}}],["val,cal",{"_index":2095,"title":{},"body":{"index.html":{}}}],["valdiate",{"_index":1964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valgroup",{"_index":946,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["valgroup)[propname",{"_index":1003,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["valid",{"_index":839,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["validatecompare",{"_index":942,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["validatecompare(p",{"_index":1960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validaterange",{"_index":940,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["validaterange(f",{"_index":1963,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validates",{"_index":1898,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":27,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["validator",{"_index":925,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":218,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["validators.compose(validators",{"_index":1006,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.length",{"_index":1002,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validatecompare(compare",{"_index":1001,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validaterange(f",{"_index":995,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.maxlength(maxlength",{"_index":970,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.minlength(minlength",{"_index":976,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.pattern(pattern",{"_index":982,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.required",{"_index":964,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators/compare.validator",{"_index":943,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators/range.validator",{"_index":941,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators[0",{"_index":1005,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validatortype",{"_index":904,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["value",{"_index":81,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["values",{"_index":209,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["var",{"_index":294,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["variables",{"_index":2248,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1225,"title":{},"body":{"components/TreeViewComponent.html":{},"contributing.html":{},"index.html":{}}}],["version",{"_index":1740,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["versionif",{"_index":2421,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["versions",{"_index":1481,"title":{},"body":{"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["vertical",{"_index":723,"title":{},"body":{"components/EditorComponent.html":{}}}],["very",{"_index":1405,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["via",{"_index":1596,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["view",{"_index":154,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["viewmodel",{"_index":19,"title":{},"body":{"components/AutoFormComponent.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["viewmodels",{"_index":137,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["vim",{"_index":2367,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["visible",{"_index":386,"title":{},"body":{"classes/DataGridModel.html":{}}}],["visual",{"_index":1672,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["vit",{"_index":2555,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["void",{"_index":95,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["walk",{"_index":1167,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["want",{"_index":1402,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["warranties",{"_index":2222,"title":{},"body":{"license.html":{}}}],["watermark",{"_index":738,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["watermarks",{"_index":1413,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":224,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ways",{"_index":2427,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["wd",{"_index":1062,"title":{},"body":{"modules/SvogvModule.html":{}}}],["wd.autoformcomponent",{"_index":1074,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.datagridcomponent",{"_index":1069,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.datagridpaginationcomponent",{"_index":1070,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.editorcomponent",{"_index":1073,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.formatdatapipe",{"_index":1047,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["wd.treeviewcomponent",{"_index":1071,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.treeviewnodecomponent",{"_index":1072,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["we'll",{"_index":1832,"title":{},"body":{"contributing.html":{}}}],["we're",{"_index":2385,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["web",{"_index":1735,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["webpack",{"_index":1434,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["websites",{"_index":2432,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["welcome",{"_index":2337,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["well",{"_index":1771,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["what's",{"_index":2324,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["whatsoever",{"_index":2231,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1394,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["white",{"_index":1785,"title":{},"body":{"contributing.html":{}}}],["whole",{"_index":107,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["widget",{"_index":704,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{}}}],["widget/grid",{"_index":625,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["widget/tree",{"_index":1231,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["widgets",{"_index":1415,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["widgets/index",{"_index":1063,"title":{},"body":{"modules/SvogvModule.html":{}}}],["width",{"_index":53,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["window",{"_index":2136,"title":{},"body":{"index.html":{}}}],["windows",{"_index":2335,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["wish",{"_index":465,"title":{},"body":{"classes/DataGridModel.html":{}}}],["with@sortable(false",{"_index":1940,"title":{},"body":{"miscellaneous/functions.html":{}}}],["within",{"_index":1026,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["without",{"_index":1336,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["withproperty",{"_index":1884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["word",{"_index":1821,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":205,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["worked",{"_index":2002,"title":{},"body":{"index.html":{}}}],["working",{"_index":1439,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["world",{"_index":1410,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["worries",{"_index":2346,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["wrap",{"_index":1753,"title":{},"body":{"contributing.html":{}}}],["write",{"_index":1906,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["writing",{"_index":2373,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["written",{"_index":2157,"title":{},"body":{"index.html":{}}}],["written}on",{"_index":930,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["wrote",{"_index":2272,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["www.joergkrause.de",{"_index":2160,"title":{},"body":{"index.html":{}}}],["years",{"_index":2163,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["yes",{"_index":499,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["you're",{"_index":2111,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["yours",{"_index":2505,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["yourself",{"_index":1681,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["zipped",{"_index":1999,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":1850,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["zoom",{"_index":1048,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AutoFormComponent.html":{"url":"components/AutoFormComponent.html","title":"component - AutoFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AutoFormComponent\n\n\n\n        \n            API\n        \n        \n            Documentation and Examples\n        \n        \n            Live Demo\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts\n\n\n    \n        Description\n    \n    \n        This component creates a complete editor from a viewmodel. The viewmodel should have\ndecorators to control the form's behavior. The form can be styled an supports validation.\nIt creates one field for each property not decorated with Hiddendecorator.\nExample of usage:\n/#/editor\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-autoform\n            \n\n\n            \n                styles\n                fieldset { border-top: 1px silver solid; padding: 10px; },legend { width: auto; padding-left: 10px; padding-right: 10px; font-size: 1em;}\n            \n\n\n            \n                templateUrl\n                ./autoform.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editors\n                            \n                            \n                                    Public\n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                grouped\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                ungroupedAfter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:25\n                            \n                        \n                \n                    \n                        A reference to the form. Required.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ungroupedAfter\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:31\n                            \n                        \n                \n                    \n                        Ungrouped element will appear at the end, after all groupes.\nIf there are no groups this will be ignored. Optional.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            grouped\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    grouped()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Complete Documentation of the AutoFormComponent\nA form can make use of the AutoFormComponent, named . An object with several properties, decorated with UI instructions, created a whole form.\nExample\nThe simplest form of usage looks like this:\n \n    \n      Edit current user\n      You must have a form and provide the groups name. Internally, the ReactiveFormsModule is being used. The logic expects several decorators, that are being examined and based on the findings a FormGroup object is being created. That's handled by a service the SvogvModule provides. The component's code looks like this:\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormValidatorService } from 'svogv';\nimport { UserViewModel } from '../../../viewmodels';\n\n@Component({\n  templateUrl: './editorautoform.component.html'\n})\nexport class EditorAutoformComponent implements OnInit, OnDestroy {\n\n  userForm: FormGroup;\n  user: UserViewModel;\n\n  constructor(private formService: FormValidatorService) {\n  }\n\n  ngOnInit() {\n    this.userForm = this.formService.build(UserViewModel);\n  }\n\n}The first magic is the call of the build method. The second magic is the usage of decorators. A typical view model (in the example UserViewModel) would look like this:\nexport class UserViewModel {\n\n  @Hidden()\n  id: number = 0;\n\n  @Display('E-Mail', 20, 'E-Mail address')\n  @Required()\n  @MaxLength(100)\n  @Email()\n  email: string = '';\n\n  @Display('Phone Number', 30, 'The user\\'s phone')\n  @Required()\n  @MaxLength(20)\n  phoneNumber: string = '';\n\n  @Display('User Name', 33, 'The full name')\n  @Required('User Name is required')\n  @MaxLength(100)\n  userName: string = '';\n\n  @Display('Age', 40, 'From 12 to 88')\n  @DisplayGroup('Personal')\n  @Range(12, 88)\n  age: number = 24;\n\n  @Display('Birthday', 50)\n  @DisplayGroup('Personal')\n  birthday: Date = new Date();\n\n  @Display('Is Active', 60)\n  active: boolean = true;\n\n  @Display('Password', 70)\n  @DisplayGroup('Password')\n  @Required()\n  @Compare('passWordTwo')\n  passWord: string = '';\n\n  @Display('Password', 80)\n  @DisplayGroup('Password')\n  @Required()\n  passWordTwo: string = '';\n\n  @Display('Done', 100, 'Work progress')\n  done?: number = 0;\n\n}Note, that the default values for initialization are mandatory. The decorators comes in two flavors:\n\nUI decorators control the appearance (such as @Display)\nValidators control the validation\n\nSVOGV is using the ReactiveFormsModule and handles everything in a straight Angular way.\n\n    \n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n/**\n * This component creates a complete editor from a viewmodel. The viewmodel should have\n * decorators to control the form's behavior. The form can be styled an supports validation.\n * It creates one field for each property not decorated with {@link Hidden}decorator.\n *\n * Example of usage:\n * /#/editor\n */\n@Component({\n  selector: 'ac-autoform',\n  styles: [\n    'fieldset { border-top: 1px silver solid; padding: 10px; }',\n    'legend { width: auto; padding-left: 10px; padding-right: 10px; font-size: 1em;}'\n  ],\n  templateUrl: './autoform.component.html'\n})\nexport class AutoFormComponent implements OnInit {\n  /**\n   * A reference to the form. Required.\n   */\n  @Input()\n  public formGroup: FormGroup;\n  /**\n   * Ungrouped element will appear at the end, after all groupes.\n   * If there are no groups this will be ignored. Optional.\n   */\n  @Input()\n  public ungroupedAfter = true;\n\n  public editors: { key: number; editor: string }[];\n  public groups: {\n    key: number;\n    name: string;\n    desc: string;\n    editors: { key: number; editor: string }[];\n  }[];\n\n  constructor() {\n    this.editors = new Array();\n    this.groups = new Array();\n  }\n\n  public ngOnInit() {\n    // take all controls as is\n    const hasDecorators: boolean = (this.formGroup as any).__editorModel__;\n    // loop through all fields\n    for (const controlName in this.formGroup.controls) {\n      if (!this.formGroup.controls.hasOwnProperty(controlName)) {\n        continue;\n      }\n      let displayOrder = 0;\n      let groupOrder = 0;\n      let groupName: string;\n      let groupDesc: string;\n      let isInGroup = false;\n      if (hasDecorators) {\n        displayOrder = ( this.formGroup as any).__editorModel__[\n          `__displayOrder__${controlName}`\n        ];\n        isInGroup = !!( this.formGroup as any).__editorModel__[\n          `__isGrouped__${controlName}`\n        ];\n        if (isInGroup) {\n          groupName = ( this.formGroup as any).__editorModel__[\n            `__groupName__${controlName}`\n          ];\n          groupOrder = ( this.formGroup as any).__editorModel__[\n            `__groupOrder__${controlName}`\n          ];\n          groupDesc = ( this.formGroup as any).__editorModel__[\n            `__groupDesc__${controlName}`\n          ];\n        }\n      }\n      if (!isInGroup) {\n        // if not part of any group just push to main group\n        this.editors.push({\n          key: displayOrder,\n          editor: controlName\n        });\n      } else {\n        // check if group already exists\n        const existingGroupArray = this.groups.filter((g) => g.name === groupName);\n        const groupExists = existingGroupArray.length === 1;\n        if (!groupExists) {\n          this.groups.push({\n            key: groupOrder,\n            name: groupName,\n            desc: groupDesc,\n            editors: new Array()\n          });\n        }\n        // add field to existing group (assume that here the group always exists)\n        const existingGroup = this.groups.filter((g) => g.name === groupName)[0];\n        // and store\n        existingGroup.editors.push({\n          key: displayOrder,\n          editor: controlName\n        });\n      }\n    }\n    // check the display decorator and sort\n    this.editors.sort((e, n) => e.key - n.key);\n    // sort groups\n    this.groups.sort((e, n) => e.key - n.key);\n  }\n\n  public grouped(): boolean {\n    return this.groups && this.groups.length > 0;\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n  \n    {{ group.name }}\n    \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ group.name }}        '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AutoFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataGridHeaderModel.html":{"url":"classes/DataGridHeaderModel.html","title":"class - DataGridHeaderModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataGridHeaderModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts\n        \n\n            \n                Description\n            \n            \n                Describe a header field with name, tooltip and other properties.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                desc\n                            \n                            \n                                    Public\n                                hidden\n                            \n                            \n                                isSortable\n                            \n                            \n                                pipe\n                            \n                            \n                                    Optional\n                                pipeParams\n                            \n                            \n                                    Public\n                                prop\n                            \n                            \n                                    Optional\n                                sortCallback\n                            \n                            \n                                templateHint\n                            \n                            \n                                    Optional\n                                templateHintParams\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                uiHint\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string, desc: string, prop: string, hidden: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:7\n                            \n                        \n\n                \n                    \n                            The ctor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The text to display.\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A tooltip that is shown on mouseover (using the title attribute).\n\n                                                        \n                                                \n                                                \n                                                        prop\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The propertie's internal name.\n\n                                                        \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                optionally set a field as hidden and hence do not show in the grid.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        A tooltip that is shown on mouseover (using the `title` attribute).\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        optionally set a field as hidden and hence do not show in the grid.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:38\n                            \n                        \n\n                \n                    \n                        Display the sort buttons and connect to sort functions. Default is true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Pipe\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:48\n                            \n                        \n\n                \n                    \n                        Provides a pipe for all data of this column. Default is no pipe (undefined).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pipeParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:53\n                            \n                        \n\n                \n                    \n                        Optional parameters for a pipe.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        The propertie's internal name.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:43\n                            \n                        \n\n                \n                    \n                        An optional sort callback function that replaces the default Array.prototype.sort.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateHint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:23\n                            \n                        \n\n                \n                    \n                        Hint from view model to select a certain template. Default is text (format as string).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            templateHintParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:33\n                            \n                        \n\n                \n                    \n                        Additional parameters some templates may use. Optional.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        The text to display.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uiHint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StyleRules\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:28\n                            \n                        \n\n                \n                    \n                        Custom styles directly applied to the grid's header on a per model base.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Pipe } from '@angular/core';\nimport { StyleRules } from './datagridstyle.model';\n\n/**\n * Describe a header field with name, tooltip and other properties.\n */\nexport class DataGridHeaderModel {\n  /**\n   * The ctor\n   * @param text The text to display.\n   * @param desc A tooltip that is shown on mouseover (using the `title` attribute).\n   * @param prop The propertie's internal name.\n   * @param hidden optionally set a field as hidden and hence do not show in the grid.\n   */\n  constructor(public text: string, public desc: string, public prop: string, public hidden: boolean = false) {\n    this.isSortable = true;\n    this.templateHint = 'text';\n  }\n\n  /**\n   * Hint from view model to select a certain template. Default is *text* (format as string).\n   */\n  templateHint: string;\n\n  /**\n   * Custom styles directly applied to the grid's header on a per model base.\n   */\n  uiHint: StyleRules;\n\n  /**\n   * Additional parameters some templates may use. Optional.\n   */\n  templateHintParams?: any[];\n\n  /**\n   * Display the sort buttons and connect to sort functions. Default is `true`.\n   */\n  isSortable: boolean;\n\n  /**\n   * An optional sort callback function that replaces the default `Array.prototype.sort`.\n   */\n  sortCallback?: (a, b) => 1 | -1 | 0;\n\n  /**\n   * Provides a pipe for all data of this column. Default is no pipe (`undefined`).\n   */\n  pipe: Pipe;\n\n  /**\n   * Optional parameters for a pipe.\n   */\n  pipeParams?: any[];\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataGridModel.html":{"url":"classes/DataGridModel.html","title":"class - DataGridModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataGridModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts\n        \n\n            \n                Description\n            \n            \n                The controlling class for Grid applications.\nThis class takes an array of elements and handles:\n\nvisible headers, managed by @Hidden() decorator\ncreate header titles, managed by @Display() decorator\nsorting\nfiltering\ncount total rows\npaging\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _headers\n                            \n                            \n                                    Private\n                                _items\n                            \n                            \n                                    Public\n                                currentPageIndex\n                            \n                            \n                                    Public\n                                onDelete\n                            \n                            \n                                    Public\n                                onEdit\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                searchValue\n                            \n                            \n                                    Public\n                                sortDirection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Private\n                                createHeadersForType\n                            \n                            \n                                    Public\n                                deleteItem\n                            \n                            \n                                    Public\n                                editItem\n                            \n                            \n                                    Public\n                                removeColumn\n                            \n                            \n                                    Public\n                                sortColumn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalRows\n                                \n                                \n                                    totalFilteredRows\n                                \n                                \n                                    currentRowStart\n                                \n                                \n                                    currentRowEnd\n                                \n                                \n                                    startRow\n                                \n                                \n                                    maxPageIndex\n                                \n                                \n                                    items\n                                \n                                \n                                    itemsFiltered\n                                \n                                \n                                    itemsOnCurrentPage\n                                \n                                \n                                    headers\n                                \n                                \n                                    headersNotVisible\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[], type: Type, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:123\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataGridHeaderModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPageIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:115\n                            \n                        \n\n                \n                    \n                        Event fired if user clicks Delete button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:110\n                            \n                        \n\n                \n                    \n                        Event fired if user clicks Edit button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:102\n                            \n                        \n\n                \n                    \n                        The search value filters the rows. Provide the property name and the filter instruction. Search is pure client.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sortDirection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:120\n                            \n                        \n\n                \n                    \n                        Current sort direction per column.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(colname: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:177\n                \n            \n\n\n            \n                \n                    Add a column to the current grid, that has been removed recently.\nIt's just adding columns that already exists in the headers collection.\nIf the column name provided does not exists, the method does nothing.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createHeadersForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createHeadersForType(type: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteItem(item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:196\n                \n            \n\n\n            \n                \n                    Called by infrastructure to inform caller of delete wish\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editItem(item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:188\n                \n            \n\n\n            \n                \n                    Called by infrastructure to inform caller of edit wish\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeColumn(colname: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:165\n                \n            \n\n\n            \n                \n                    Make a column invisible. This is just changing the render process, the column is still\nin the headers collection and can be made visible again by calling addColumnlater.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sortColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortColumn(colName: string, dir: Direction, sortCallback?: (undefined,undefined) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:141\n                \n            \n\n\n            \n                \n                    Simple sort fucntion that makes a array sort call for the specified column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    colName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The column which has to be sorted after.\n// tslint:disable-next-line:max-line-length\n\n                                    \n                                \n                                \n                                    dir\n                                    \n                                                Direction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The order, descended is desc, any other string is ascending.\nIf nothing is provided, the direction toggles. Initital value is ascending.\n\n                                    \n                                \n                                \n                                    sortCallback\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalRows\n                    \n                \n\n                \n                    \n                        gettotalRows()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:31\n                                \n                            \n                    \n                        \n                                Returns the number of rows regardless the actual filter (the total).\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        totalFilteredRows\n                    \n                \n\n                \n                    \n                        gettotalFilteredRows()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentRowStart\n                    \n                \n\n                \n                    \n                        getcurrentRowStart()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentRowEnd\n                    \n                \n\n                \n                    \n                        getcurrentRowEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        startRow\n                    \n                \n\n                \n                    \n                        getstartRow()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        maxPageIndex\n                    \n                \n\n                \n                    \n                        getmaxPageIndex()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n\n                \n                    \n                        getitems()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:61\n                                \n                            \n\n                \n                    \n                        setitems(value: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:58\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsFiltered\n                    \n                \n\n                \n                    \n                        getitemsFiltered()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        itemsOnCurrentPage\n                    \n                \n\n                \n                    \n                        getitemsOnCurrentPage()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        headers\n                    \n                \n\n                \n                    \n                        getheaders()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:89\n                                \n                            \n                    \n                        \n                                Get all headers (column names) and their properties.\n\n\n                                \n                                    Returns :         DataGridHeaderModel[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        headersNotVisible\n                    \n                \n\n                \n                    \n                        getheadersNotVisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:96\n                                \n                            \n                    \n                        \n                                Returns the columns currently not shown. and @see removeColumn for moreinformation.\n\n\n                                \n                                    Returns :         DataGridHeaderModel[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Type, EventEmitter, Directive } from '@angular/core';\n\nimport '../../../utils/object-extensions';\nimport { DataGridHeaderModel } from './datagridheader.model';\nimport { Display, Hidden, UiHint } from '../../../decorators';\n\n/**\n * Sort direction, controlled by simple string comparision or a callback.\n */\nexport enum Direction {\n  Ascending,\n  Descending\n}\n\n/**\n * The controlling class for Grid applications.\n *\n * This class takes an array of elements and handles:\n * - visible headers, managed by @Hidden() decorator\n * - create header titles, managed by @Display() decorator\n * - sorting\n * - filtering\n * - count total rows\n * - paging\n */\nexport class DataGridModel {\n\n  /**\n   * Returns the number of rows regardless the actual filter (the total).\n   */\n  get totalRows(): number {\n    return this._items.length;\n  }\n\n  get totalFilteredRows(): number {\n    return this.itemsFiltered ? this.itemsFiltered.length : 0;\n  }\n\n  private get currentRowStart(): number {\n    return this.totalRows > this.pageSize ? this.startRow + 1 : this.totalRows === 0 ? 0 : 1;\n  }\n  private get currentRowEnd(): number {\n    return this.startRow + this.pageSize  {\n      // tslint:disable-next-line:forin\n      for (const s in this.searchValue) {\n        const pattern = new RegExp(this.searchValue[s]);\n        if (pattern.test(item[s])) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  get itemsOnCurrentPage(): T[] {\n    return this.itemsFiltered.slice(this.startRow, this.startRow + this.pageSize);\n  }\n\n  /**\n   * Get all headers (column names) and their properties.\n   */\n  public get headers(): DataGridHeaderModel[] {\n    return this._headers.filter((h) => !h.hidden);\n  }\n\n  /**\n   * Returns the columns currently not shown. {@link addColumn and @see removeColumn for more}information.\n   */\n  public get headersNotVisible(): DataGridHeaderModel[] {\n    return this._headers.filter((h) => h.hidden);\n  }\n  /**\n   * The search value filters the rows. Provide the property name and the filter instruction. Search is pure client.\n   */\n  public searchValue: { [prop: string]: any } = {};\n\n  public currentPageIndex = 1;\n  public pageSize: number;\n\n  /**\n   * Event fired if user clicks Edit button.\n   */\n  public onEdit: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired if user clicks Delete button.\n   */\n  public onDelete: EventEmitter = new EventEmitter();\n\n  /**\n   * Current sort direction per column.\n   */\n  public sortDirection: { [column: string]: Direction } = {};\n  private _items: T[];\n\n  private _headers: DataGridHeaderModel[];\n  constructor(items: T[], type: Type, pageSize = 10) {\n    this._items = items;\n    this.pageSize = pageSize;\n    const typeInstance = new type();\n    if (typeInstance) {\n      // make header from decorators, omit if null\n      this.createHeadersForType(typeInstance);\n    }\n  }\n\n  /**\n   * Simple sort fucntion that makes a array sort call for the specified column.\n   * @param colName The column which has to be sorted after.\n   * // tslint:disable-next-line:max-line-length\n   * @param dir The order, descended is *desc*, any other string is ascending.\n   *            If nothing is provided, the direction toggles. Initital value is *ascending*.\n   */\n  public sortColumn(colName: string, dir: Direction, sortCallback?: (a, b) => 1 | -1 | 0) {\n    if (!dir) {\n      // if nothing is provided, toggle current\n      dir = this.sortDirection[colName] === Direction.Ascending ? Direction.Descending : Direction.Ascending;\n    }\n    // remember last and update UI\n    this.sortDirection[colName] = dir;\n    if (sortCallback) {\n      this.items.sort(sortCallback);\n    } else {\n      this.items.sort((a: any, b: any) => {\n        if (dir === Direction.Descending) {\n          return a[colName] > b[colName] ? 1 : -1;\n        } else {\n          return a[colName] > b[colName] ? -1 : 1;\n        }\n      });\n    }\n  }\n\n  /**\n   * Make a column invisible. This is just changing the render process, the column is still\n   * in the headers collection and can be made visible again by calling {@link addColumn}later.\n   */\n  public removeColumn(colname: string) {\n    const col = this._headers.find((h) => h.prop === colname);\n    if (col) {\n      col.hidden = true;\n    }\n  }\n\n  /**\n   * Add a column to the current grid, that has been removed recently.\n   * It's just adding columns that already exists in the headers collection.\n   * If the column name provided does not exists, the method does nothing.\n   */\n  public addColumn(colname: string) {\n    const col = this._headers.find((h) => h.prop === colname);\n    if (col) {\n      col.hidden = false;\n    }\n  }\n\n  /**\n   * Called by infrastructure to inform caller of edit wish\n   * @param item The item to edit\n   */\n  public editItem(item: T) {\n    this.onEdit.emit(item);\n  }\n\n  /**\n   * Called by infrastructure to inform caller of delete wish\n   * @param item The item to delete\n   */\n  public deleteItem(item: T) {\n    this.onDelete.emit(item);\n  }\n\n  private createHeadersForType(type: any): void {\n    // assume simple object structure, iterating an array of viewmodels\n    // has at least one row, so we can read the headers\n    // first we read the properties\n    this._headers = new Array();\n    for (const p in type) {\n      if (!type.hasOwnProperty(p)) {\n        continue;\n      }\n      const propName = Display.Name(type, p, p);\n      const propDesc = Display.Desc(type, p, p);\n      // check if hidden, show if no hidden decorator\n      const isHidden = Hidden.IsHidden(type, p, false);\n      const header = new DataGridHeaderModel(propName, propDesc, p, isHidden);\n      // sorting\n      header.isSortable = type[`__isSortable__${p}`] === undefined ? true : !!type[`__isSortable__${p}`];\n      header.sortCallback = type[`__sortCallback__${p}`] || undefined;\n      // look for templates and pipes provided by user, if none, we have templates for all ES types\n      header.templateHint = type[`__templatehint__${p}`] || typeof type[p];\n      header.templateHintParams = type[`__templatehintParams__${p}`];\n      header.pipe = type[`__uipipe__${p}`];\n      header.pipeParams = type[`__pipeparams__${p}`];\n      header.uiHint = UiHint.HintRule(type, p, {});\n      this._headers.push(header);\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataGridPaginationComponent.html":{"url":"components/DataGridPaginationComponent.html","title":"component - DataGridPaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataGridPaginationComponent\n\n\n\n        \n            API\n        \n        \n            Live Demo\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts\n\n\n    \n        Description\n    \n    \n        The pagination component creates a few buttons to navigate a grid. The underlaying model\nis going to handle the date on the client. The pagination does not support a server backend,\nall relevant data must be loaded first.\nExample of usage:\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    ```html\n * \n * ```\n\n/#/widget/grid\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-datagrid-pagination\n            \n\n            \n                styleUrls\n                ./datagridpagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datagridpagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPageNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                range\n                            \n                            \n                                setCurrentPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                maxPageIndex\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumberChanged\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pageStartNumber\n                                \n                                \n                                    pageEndNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        maxPageIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:27\n                            \n                        \n                \n                    \n                        The parent component calculated the pages the component can handle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:38\n                            \n                        \n                \n                    \n                        The size for pagination, according bootstrap rules. ('sm' == 'pagination-sm', 'lg' = 'pagination-lg').\nDefault is medium.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageNumberChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:32\n                            \n                        \n                \n                    \n                        An event fired once the user has changed the page by clicking a button.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            range\n                        \n                        \n                    \n                \n            \n            \n                \nrange(min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCurrentPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetCurrentPage(pageNumber: number, event?: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPageNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pageStartNumber\n                    \n                \n\n                \n                    \n                        getpageStartNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pageEndNumber\n                    \n                \n\n                \n                    \n                        getpageEndNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:89\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component, OnInit, OnChanges, SimpleChange, Input, Output, EventEmitter\n} from '@angular/core';\n\n/**\n * The pagination component creates a few buttons to navigate a grid. The underlaying model\n * is going to handle the date on the client. The pagination does not support a server backend,\n * all relevant data must be loaded first.\n *\n * Example of usage:\n * @example\n * ```html\n * \n * ```\n *\n * /#/widget/grid\n */\n@Component({\n  selector: 'ac-datagrid-pagination',\n  styleUrls: ['./datagridpagination.component.scss' ],\n  templateUrl: './datagridpagination.component.html'\n})\nexport class DataGridPaginationComponent implements OnInit, OnChanges {\n  /**\n   * The parent component calculated the pages the component can handle.\n   */\n  @Input() maxPageIndex: number;\n\n  /**\n   * An event fired once the user has changed the page by clicking a button.\n   */\n  @Output() pageNumberChanged = new EventEmitter();\n\n  /**\n   * The size for pagination, according bootstrap rules. ('sm' == 'pagination-sm', 'lg' = 'pagination-lg').\n   * Default is medium.\n   */\n  @Input() size: string;\n\n  currentPageNumber = 1;\n\n  ngOnInit() {\n    this.setCurrentPage(1);\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes['maxPageIndex']) {\n      const change = changes['maxPageIndex'];\n      if (this.currentPageNumber > change.currentValue) {\n        // throws ExpressionChangedAfterItHasBeenCheckedException\n        // if there's no setTimeout.\n        // no need to add setTimeout if ngOnChanges\n        // is fired after changes made on root component.\n        setTimeout(() => this.setCurrentPage(1), 1);\n      }\n    }\n  }\n\n  setCurrentPage(pageNumber: number, event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (pageNumber === 0 || pageNumber > this.maxPageIndex\n      || pageNumber === this.currentPageNumber) {\n      return;\n    }\n\n    this.pageNumberChanged.emit(pageNumber);\n    this.currentPageNumber = pageNumber;\n  }\n\n  range(min: number, max: number): number[] {\n    const result = new Array();\n    for (let i = min; i = this.maxPageIndex - 3\n        ? this.maxPageIndex - 6\n        : this.currentPageNumber - 3;\n    return startNumber  this.maxPageIndex ? this.maxPageIndex : pageEnd;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        «\n      \n    \n    \n      \n        ‹\n      \n    \n    \n      \n        {{ index }}\n      \n    \n    \n      \n        ›\n      \n    \n    \n      \n        »\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    «                            ‹                            {{ index }}                            ›                            »            '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataGridPaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridStyles.html":{"url":"interfaces/DatagridStyles.html","title":"interface - DatagridStyles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridStyles\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts\n        \n\n            \n                Description\n            \n            \n                All styleable parts of the grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        actionCell\n                                \n                                \n                                            Optional\n                                        first\n                                \n                                \n                                            Optional\n                                        footer\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        header\n                                \n                                \n                                            Optional\n                                        headerButton\n                                \n                                \n                                            Optional\n                                        headerRemoveButton\n                                \n                                \n                                            Optional\n                                        headerSortButton\n                                \n                                \n                                            Optional\n                                        last\n                                \n                                \n                                            Optional\n                                        middle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionCell\n                                    \n                                \n                                \n                                    \n                                        actionCell:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                    \n                                \n                                \n                                    \n                                        footer:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerButton\n                                    \n                                \n                                \n                                    \n                                        headerButton:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerRemoveButton\n                                    \n                                \n                                \n                                    \n                                        headerRemoveButton:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerSortButton\n                                    \n                                \n                                \n                                    \n                                        headerSortButton:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middle\n                                    \n                                \n                                \n                                    \n                                        middle:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type StyleRules = { [name: string]: string };\n\n/**\n * All styleable parts of the grid.\n */\nexport interface DatagridStyles {\n  first?: StyleRules;\n  middle?: StyleRules;\n  last?: StyleRules;\n  group?: StyleRules;\n  header?: StyleRules;\n  headerButton?: StyleRules;\n  headerSortButton?: StyleRules;\n  headerRemoveButton?: StyleRules;\n  footer?: StyleRules;\n  actionCell?: StyleRules;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorComponent.html":{"url":"components/EditorComponent.html","title":"component - EditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorComponent\n\n\n\n        \n            API\n        \n        \n            Documentation and Examples\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/editors/editor/editor.component.ts\n\n\n    \n        Description\n    \n    \n        The Editor Widget. Creates a field with all required validators using decorators and forms service.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-editor\n            \n\n\n            \n                styles\n                input[type=\"checkbox\"] { display: none; },input[type=\"checkbox\"] + label:before { font-family: FontAwesome; },input[type=\"checkbox\"] + label:before { content: \"\\f096\"; },input[type=\"checkbox\"]:checked + label:before { content: \"\\f046\"; },\n      input[type='checkbox'] + label {\n        display: inline-block;\n        width: 15px;\n        height: 20px;\n        margin: -1px 4px 0 0;\n        vertical-align: middle;\n        cursor: pointer;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errors\n                            \n                            \n                                    Public\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                first\n                            \n                            \n                                    Public\n                                getParams\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                onValueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enumValues\n                            \n                            \n                                formGroup\n                            \n                            \n                                fromValue\n                            \n                            \n                                inline\n                            \n                            \n                                label\n                            \n                            \n                                labelDivider\n                            \n                            \n                                listValues\n                            \n                            \n                                name\n                            \n                            \n                                readonly\n                            \n                            \n                                tooltip\n                            \n                            \n                                toValue\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                            \n                                waterMark\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:92\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enumValues\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:60\n                            \n                        \n                \n                    \n                        The values of the select field provided by an enum. For other fieldtypes it's being ignored.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:51\n                            \n                        \n                \n                    \n                        The form's group object.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fromValue\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:69\n                            \n                        \n                \n                    \n                        The start value for a range field. Other field types ignore this value.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        inline\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:56\n                            \n                        \n                \n                    \n                        If set to true the label and the field appears in one row.\nOtherwise the label is above the field. Default is true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:43\n                            \n                        \n                \n                    \n                        The label's name.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelDivider\n                    \n                \n                \n                    \n                        Default value : ': '\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:39\n                            \n                        \n                \n                    \n                        A character after the fields label. Default is ': ' (colon plus space);\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listValues\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:65\n                            \n                        \n                \n                    \n                        The values of the select field provided by a list. For other fieldtypes it's being ignored.\nThe value shall be an Array that a *ngFor directive can execute.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:31\n                            \n                        \n                \n                    \n                        Field name\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:81\n                            \n                        \n                \n                    \n                        Renders the field as read only.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:47\n                            \n                        \n                \n                    \n                        A tooltip\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toValue\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:73\n                            \n                        \n                \n                    \n                        The end value for a range field. Other field types ignore this value.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:35\n                            \n                        \n                \n                    \n                        Editor type. Default is 'text';\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:87\n                            \n                        \n                \n                    \n                        The value set to and read from the field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        waterMark\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:77\n                            \n                        \n                \n                    \n                        An optional placeholder for empty field. The default is empty (no watermark).\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            first\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    first(array: literal type[], n: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParams(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onValueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onValueChanged(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:90\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Complete Documentation of the Editoromponent\nA form can make use of the EditorComponent, named . An object with several properties, decorated with UI instructions, created a whole form.\nExample\nThe simplest form of usage looks like this:\n\n  \n    Edit current user\n    \n    \n    \n    \n    \n    \n    \n    \n    \n       Save\n       Save &amp; Close\n      \n         Cancel &amp; Return to List\n      \n    \n  \nThe styling is baded on Bootstrap 4.\nYou must have a form and provide the groups name. Internally, the ReactiveFormsModule is being used. The logic expects several decorators, that are being examined and based on the findings a FormGroup object is being created. That's handled by a service the SvogvModule provides. The component's code looks like this:\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, NgForm } from '@angular/forms';\nimport { FormValidatorService } from 'svogv';\nimport { UserViewModel } from '../../../viewmodels';\n\n@Component({\n  templateUrl: './editorform.component.html'\n})\nexport class EditorFormComponent implements OnInit, OnDestroy {\n\n  userForm: NgForm;\n  userFormGroup: FormGroup;\n  user: UserViewModel;\n\n  constructor(private formService: FormValidatorService) {\n  }\n\n  ngOnInit() {\n    this.userFormGroup = this.formService.build(UserViewModel);\n  }\n\n}\nThe first magic is the call of the build method. The second magic is the usage of decorators. A typical view model (in the example UserViewModel) would look like this:\nexport class UserViewModel {\n\n  @Hidden()\n  id: number = 0;\n\n  @Display('E-Mail', 20, 'E-Mail address')\n  @Required()\n  @MaxLength(100)\n  @Email()\n  email: string = '';\n\n  @Display('Phone Number', 30, 'The user\\'s phone')\n  @Required()\n  @MaxLength(20)\n  phoneNumber: string = '';\n\n  @Display('User Name', 33, 'The full name')\n  @Required('User Name is required')\n  @MaxLength(100)\n  userName: string = '';\n\n  @Display('Age', 40, 'From 12 to 88')\n  @DisplayGroup('Personal')\n  @Range(12, 88)\n  age: number = 24;\n\n  @Display('Birthday', 50)\n  @DisplayGroup('Personal')\n  birthday: Date = new Date();\n\n  @Display('Is Active', 60)\n  active: boolean = true;\n\n  @Display('Password', 70)\n  @DisplayGroup('Password')\n  @Required()\n  @Compare('passWordTwo')\n  passWord: string = '';\n\n  @Display('Password', 80)\n  @DisplayGroup('Password')\n  @Required()\n  passWordTwo: string = '';\n\n  @Display('Done', 100, 'Work progress')\n  done?: number = 0;\n\n}Note, that the default values for initialization are mandatory. The decorators comes in two flavors:\n\nUI decorators control the appearance (such as @Display)\nValidators control the validation\n\nSVOGV is using the ReactiveFormsModule and handles everything in a straight Angular way.\n\n    \n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n/**\n * The Editor Widget. Creates a field with all required validators using decorators and forms service.\n */\n@Component({\n  selector: 'ac-editor',\n  styles: [\n    'input[type=\"checkbox\"] { display: none; }',\n    'input[type=\"checkbox\"] + label:before { font-family: FontAwesome; }',\n    'input[type=\"checkbox\"] + label:before { content: \"\\\\f096\"; }',\n    'input[type=\"checkbox\"]:checked + label:before { content: \"\\\\f046\"; }',\n    `\n      input[type='checkbox'] + label {\n        display: inline-block;\n        width: 15px;\n        height: 20px;\n        margin: -1px 4px 0 0;\n        vertical-align: middle;\n        cursor: pointer;\n      }\n    `\n  ],\n  templateUrl: './editor.component.html'\n}) //\nexport class EditorComponent implements OnInit {\n  /**\n   * Field name\n   */\n  @Input() public name: string;\n  /**\n   * Editor type. Default is 'text';\n   */\n  @Input() public type = 'text';\n  /**\n   * A character after the fields label. Default is ': ' (colon plus space);\n   */\n  @Input() public labelDivider = ': ';\n  /**\n   * The label's name.\n   */\n  @Input() public label: string;\n  /**\n   * A tooltip\n   */\n  @Input() public tooltip: string;\n  /**\n   * The form's group object.\n   */\n  @Input() public formGroup: FormGroup;\n  /**\n   * If set to true the label and the field appears in one row.\n   * Otherwise the label is above the field. Default is `true`.\n   */\n  @Input() public inline = true;\n  /**\n   * The values of the select field provided by an enum. For other fieldtypes it's being ignored.\n   */\n  @Input() public enumValues: any;\n  /**\n   * The values of the select field provided by a list. For other fieldtypes it's being ignored.\n   * The value shall be an Array that a `*ngFor` directive can execute.\n   */\n  @Input() public listValues: any[];\n  /**\n   * The start value for a range field. Other field types ignore this value.\n   */\n  @Input() public fromValue = 0;\n  /**\n   * The end value for a range field. Other field types ignore this value.\n   */\n  @Input() public toValue = 100;\n  /**\n   * An optional placeholder for empty field. The default is empty (no watermark).\n   */\n  @Input() public waterMark = '';\n  /**\n   * Renders the field as read only.\n   */\n  @Input() public readonly = false;\n  /**\n   * The value set to and read from the field.\n   */\n  @Output()\n  @Input()\n  public value: any;\n\n  // additional values provided by TemplateHint decorator\n  public params: { key: string; value: any }[];\n\n  public errors: string[];\n\n  constructor() {\n    this.params = new Array();\n  }\n\n  public getParams(key: string): any {\n    return this.first(this.params.filter((e) => e.key === key), 0);\n  }\n\n  public first(array: { key: string; value: any }[], n: number): any {\n    if (array == null) {\n      return void 0;\n    }\n    if (n == null) {\n      return array[0];\n    }\n    if (n  this.onValueChanged(data));\n    // this is set by FormValidatorService\n    const editorModel = (this.formGroup as any).__editorModel__;\n    // get type from form\n    if (editorModel) {\n      // get elementary types, this might get overwritten later according to decorators found\n      if (typeof editorModel[this.name] === 'string') {\n        this.type = 'text';\n      }\n      if (typeof editorModel[this.name] === 'boolean') {\n        this.type = 'boolean';\n      }\n      if (typeof editorModel[this.name] === 'number') {\n        this.type = 'number';\n      }\n      if (editorModel[this.name] instanceof Date) {\n        this.type = 'calendar';\n      }\n      // make an instance to read the properties\n      this.label = editorModel[`__displayName__${this.name}`] || this.label || this.name;\n      this.tooltip = editorModel[`__displayDesc__${this.name}`] || this.tooltip || this.name;\n      // render as range id there is a range definition\n      if (editorModel[`__hasRangeFrom__${this.name}`] && Number(editorModel[`__hasRangeFrom__${this.name}`])) {\n        this.fromValue = editorModel[`__hasRangeFrom__${this.name}`] as number;\n        this.type = 'range';\n      }\n      if (editorModel[`__hasRangeTo__${this.name}`] && Number(editorModel[`__hasRangeTo__${this.name}`])) {\n        this.toValue = editorModel[`__hasRangeTo__${this.name}`] as number;\n        this.type = 'range';\n      }\n      // placeholder\n      if (editorModel[`__hasWatermark__${this.name}`]) {\n        this.waterMark = editorModel[`__watermark__${this.name}`];\n      }\n      // templates\n      if (editorModel[`__hasTemplateHint__${this.name}`]) {\n        this.type = (editorModel[`__templatehint__${this.name}`] as string).toLowerCase();\n        if (editorModel[`__templatehintParams__${this.name}`]) {\n          this.params = editorModel[`__templatehintParams__${this.name}`] as { key: string; value: any }[];\n        }\n      }\n\n      // render hidden fields as hidden even in forms\n      if (editorModel[`__isHidden__${this.name}`]) {\n        this.type = 'hidden';\n      }\n      // check readonly\n      if (editorModel[`__isReadonly__${this.name}`]) {\n        this.readonly = !!editorModel[`__isReadonly__${this.name}`];\n      }\n    }\n  }\n\n  private onValueChanged(data: any) {\n    // check validation on change\n    this.errors = new Array();\n    // tslint:disable-next-line:forin\n    for (const error in this.formGroup.controls[this.name].errors) {\n      this.errors.push(error);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ label }}{{ labelDivider }} \n  \n    \n    \n    \n      {{option.val}}\n    \n    \n      {{option.val}}\n    \n    \n    \n    \n    \n    \n    \n    \n        \n    \n    \n    \n    {{ formGroup.controls[name]['messages'][error] }}\n    \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}{{ labelDivider }}                     {{option.val}}              {{option.val}}                                                        {{ formGroup.controls[name][\\'messages\\'][error] }}        '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormValidatorModel.html":{"url":"interfaces/FormValidatorModel.html","title":"interface - FormValidatorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormValidatorModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/formvalidator.model.ts\n        \n\n            \n                Description\n            \n            \n                The form description model. Use this to have a valid JSON object that can be used\ninstead of the decorators. Each type represents a single decorator. The basic\nstructure looks like this shown in the example.\nSee the different type's descriptions for detailled information.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [field: string]:        displayType | displayGroupType | formatType | hiddenType | placeHolderType | compareType | maxlengthType | minlengthType | patternType | stringLengthType | emailType | requiredType\n\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/services/formvalidator.model.ts:185\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export type displayGroupType = {\n  displaygroup: {\n    name: string;\n    order?: number;\n    description?: string;\n  };\n};\n\n/**\n * This element describes the UI elements label, tooltip, and order.\n */\nexport type displayType = {\n  display: {\n    name: string;\n    order?: number;\n    description?: string;\n  };\n};\n\n/**\n * A pipe driven formatting instruction.\n */\nexport type formatType = {\n  format: {\n    pipeName: any;\n    pipeParams?: any[];\n  };\n};\n/**\n * The field will not appear in autoforms if decorated as hidden. If the parameter\n * is omitted the type returns true due to its pure existence.\n */\nexport type hiddenType = {\n  hidden?: boolean;\n};\n/**\n * A watermark can be applied. The {@link name property is the value that}appears\n * in the field. This may not work for specific controls, such as list boxes.\n */\nexport type placeHolderType = {\n  placeholder: {\n    name: string;\n  };\n};\n/**\n * The field in rendered as readonly, if possible.\n */\nexport type readonlyType = {\n  readonly: boolean;\n};\n/**\n * This controls the actual control type. The default values are (TypeScript type: decorator type: rendered element):\n *\n * * string: text: &lt;input type=\"text\"&gt;\n * * date: calendar: &lt;input type=\"date\"&gt;\n * * boolean: boolean: &lt;input type=\"checkbox\"&gt;\n * * number: number: &lt;input type=\"number\"&gt;\n *\n * This is the formatting that's automatically applied. The template hint goes after and can change any of these values.\n * The allows values are:\n *\n * * any: textarea: &lt;textarea&gt;\n * * array: enum:  &lt;select&gt;\n * * array: list: &lt;select&gt;\n * * any: template: The content of the editor element (does not work with &lt;ac-autoform&gt;)\n *\n */\nexport type templateHintType = {\n  templatehint: {\n    hint: string;\n  };\n};\n\n/**\n * Base type for validators.\n *\n * Give a private error message in @param msg. If omitted a error message will be generated.\n * Set to active by using @param active. Default is true.\n * Active i18n by using the @param translate. The translation module must be used separately.\n */\nexport type validatorType = {\n  msg?: string;\n  active?: boolean;\n  translate?: boolean;\n};\n/**\n * Compare to fields.\n */\nexport type compareType = {\n  compare:\n  | {\n    fieldToCompare: string;\n  }\n  | validatorType;\n};\n/**\n * Email\n */\nexport type emailType = {\n  email: validatorType;\n};\n/**\n * Maximum allowed length (string only)\n */\nexport type maxlengthType = {\n  maxlength:\n  | {\n    max: number;\n  }\n  | validatorType;\n};\n/**\n * Minimum allowed length (string only)\n */\nexport type minlengthType = {\n  minlength:\n  | {\n    min: number;\n  }\n  | validatorType;\n};\n/**\n * Any regex pattern\n */\nexport type patternType = {\n  pattern:\n  | {\n    pattern: string | RegExp;\n  }\n  | validatorType;\n};\n/**\n * A range for number or Date only.\n */\nexport type rangeType = {\n  range:\n  | {\n    from: number | Date;\n    to: number | Date;\n  }\n  | validatorType;\n};\n/**\n * This field is mandatory.\n */\nexport type requiredType = {\n  required: validatorType;\n};\n/**\n * Maximal and minimal allowed length (string only).\n */\nexport type stringLengthType = {\n  stringlength:\n  | {\n    min: number;\n    max: number;\n  }\n  | validatorType;\n};\n\n/**\n * The form description model. Use this to have a valid JSON object that can be used\n * instead of the decorators. Each type represents a single decorator. The basic\n * structure looks like this shown in the example.\n *\n * See the different type's descriptions for detailled information.\n *\n * @example\n  {\n     \"fieldName\": {\n        \"display\": {\n           \"name\": \"The field's human readible name\"\n        }\n     }\n   }\n *\n */\nexport interface FormValidatorModel {\n  [field: string]:\n  | displayType\n  | displayGroupType\n  | formatType\n  | hiddenType\n  | placeHolderType\n  | compareType\n  | maxlengthType\n  | minlengthType\n  | patternType\n  | stringLengthType\n  | emailType\n  | requiredType;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormValidatorService.html":{"url":"injectables/FormValidatorService.html","title":"injectable - FormValidatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormValidatorService\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/formvalidator.service.ts\n        \n\n            \n                Description\n            \n            \n                The form validator service creates a FormGroup object from a viewmodel. If the viewmodel\nhas been decorated with validation decorators the validators are created accordingly.\nThe simplest way is creating a class with properties and add decorators, such as\nStringLength. The service will than create a FormGroup that contains a}validator\nof type StringLength for the property the decorator is written}on.\nThe decorators provide properties for additional information, such as a custom error message.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/services/formvalidator.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build(target: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/services/formvalidator.service.ts:32\n                \n            \n\n\n            \n                \n                    Call this method to actually create the FormGroup object. Provide a valid model type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A valid model type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        A FormGroup with validators\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/services/formvalidator.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\n\nimport { validateRange } from './validators/range.validator';\nimport { validateCompare } from './validators/compare.validator';\n\n/**\n * The form validator service creates a {@link FormGroup} object from a viewmodel. If the viewmodel\n * has been decorated with validation decorators the validators are created accordingly.\n *\n * The simplest way is creating a class with properties and add decorators, such as\n * {@link StringLength}. The service will than create a {@link FormGroup} that contains a}validator\n * of type {@link StringLength} for the property the decorator is written}on.\n *\n * The decorators provide properties for additional information, such as a custom error message.\n *\n */\n@Injectable()\nexport class FormValidatorService {\n  private fb: FormBuilder;\n\n  constructor(@Inject(FormBuilder) fb: FormBuilder) {\n    this.fb = fb;\n  }\n\n  /**\n   * Call this method to actually create the FormGroup object. Provide a valid model type.\n   *\n   * @param target A valid model type.\n   * @returns A FormGroup with validators\n   */\n  public build(target: any): FormGroup {\n    const valGroup: any = {};\n    const errGroup: any = {};\n    let form: FormGroup;\n    let targetInstance: any;\n    if (target) {\n      // the cast is just to suppress TS errors and shows it's intentionally\n      try {\n        targetInstance = new target();\n      } catch (ex) {\n        console.error('Invalid viewmodel for FormValidatorService');\n      }\n    }\n    if (targetInstance) {\n      // tslint:disable-next-line:forin\n      for (const propName in targetInstance) {\n        const validators = new Array();\n        const errmsgs = new Object();\n        const isRequired = `__isRequired__${propName}` in target.prototype;\n        if (isRequired) {\n          (errmsgs)['required'] = target.prototype[`__errRequired__${propName}`];\n          validators.push(Validators.required);\n        }\n        const hasMaxLength = `__hasMaxLength__${propName}` in target.prototype;\n        if (hasMaxLength) {\n          (errmsgs)['maxlength'] = target.prototype[`__errMaxLength__${propName}`];\n          const maxLength = parseInt(target.prototype[`__hasMaxLength__${propName}`], 10);\n          validators.push(Validators.maxLength(maxLength));\n        }\n        const hasMinLength = `__hasMinLength__${propName}` in target.prototype;\n        if (hasMinLength) {\n          (errmsgs)['minlength'] = target.prototype[`__errMinLength__${propName}`];\n          const minLength = parseInt(target.prototype[`__hasMinLength__${propName}`], 10);\n          validators.push(Validators.minLength(minLength));\n        }\n        const hasPattern = `__hasPattern__${propName}` in target.prototype;\n        if (hasPattern) {\n          (errmsgs)['pattern'] = target.prototype[`__errPattern__${propName}`];\n          const pattern = new RegExp(target.prototype[`__hasPattern__${propName}`]);\n          validators.push(Validators.pattern(pattern));\n        }\n        const hasRangeFrom = `__hasRangeFrom__${propName}` in target.prototype;\n        const hasRangeTo = `__hasRangeTo__${propName}` in target.prototype;\n        if (hasRangeFrom || hasRangeTo) {\n          (errmsgs)['range'] = target.prototype[`__errRange__${propName}`];\n          let f: number | Date = Number(target.prototype[`__hasRangeFrom__${propName}`]);\n          let t: number | Date = Number(target.prototype[`__hasRangeTo__${propName}`]);\n          if (!f && !t) {\n            // If NaN assume Date\n            f = Date.parse(f.toString());\n            t = Date.parse(t.toString());\n          }\n          validators.push(validateRange(f, t));\n        }\n        const hasCompare = `__hasCompareProperty__${propName}` in target.prototype;\n        if (hasCompare) {\n          (errmsgs)['compare'] = target.prototype[`__errCompareProperty__${propName}`];\n          const compare = target.prototype[`__withCompare__${propName}`];\n          validators.push(validateCompare(compare));\n        }\n        if (validators.length === 0) {\n          // even if there is no validator we need to add the property to the group\n          (valGroup)[propName] = [target[propName]];\n        }\n        if (validators.length === 1) {\n          (valGroup)[propName] = [target[propName] || '', validators[0]];\n        }\n        if (validators.length >= 1) {\n          (valGroup)[propName] = [target[propName] || '', Validators.compose(validators)];\n        }\n        (errGroup)[propName] = errmsgs;\n      }\n      // create form group\n      form = this.fb.group(valGroup);\n      // forward the model to the editors for easy access to other decorators\n      // the cast is just to suppress TS errors and shows it's intentionally\n      (form)['__editorModel__'] = targetInstance;\n      // register controls and add messages\n      // tslint:disable-next-line:forin\n      for (const propName in errGroup) {\n        const ctrl = form.controls[propName];\n        if (!ctrl) {\n          continue; // control might not be in the form\n        }\n        (form.controls[propName])['messages'] = (errGroup)[propName];\n      }\n    }\n    // return FormGroup for immediate usage\n    return form;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FormatDataPipe.html":{"url":"pipes/FormatDataPipe.html","title":"pipe - FormatDataPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FormatDataPipe\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe allows the dynamic formatting of data. It is just for internal use.\nThe purpose is the forwarding of an externally defined pipe to the pipe formatter within the grid.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        formatData\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, pipeToken: Type, pipeArgs: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pipeToken\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pipeArgs\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injector, Pipe, PipeTransform, Type } from '@angular/core';\n\n/**\n * This pipe allows the dynamic formatting of data. It is just for internal use.\n * The purpose is the forwarding of an externally defined pipe to the pipe formatter within the grid.\n */\n@Pipe({\n  name: 'formatData'\n})\nexport class FormatDataPipe implements PipeTransform {\n  public constructor(private injector: Injector) {}\n\n  transform(value: any, pipeToken: Type, pipeArgs: any[]): any {\n    if (!pipeToken) {\n      console.log('FormatDataPipe:NoPipeToken');\n      return value;\n    } else {\n      console.log('FormatDataPipe:PipeToken:', pipeToken);\n      const pipe = this.injector.get(pipeToken);\n      return pipe.transform(value, ...pipeArgs || []);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SvogvModule.html":{"url":"modules/SvogvModule.html","title":"module - SvogvModule","body":"\n                   \n\n\n\n\n    Modules\n    SvogvModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SvogvModule\n\n\n\ncluster_SvogvModule_declarations\n\n\n\ncluster_SvogvModule_providers\n\n\n\n\nwd.FormatDataPipe\n\nwd.FormatDataPipe\n\n\n\nSvogvModule\n\nSvogvModule\n\nSvogvModule -->\n\nwd.FormatDataPipe->SvogvModule\n\n\n\n\n\nFormValidatorService\n\nFormValidatorService\n\nSvogvModule -->\n\nFormValidatorService->SvogvModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API\n    \n    \n        Source: Code\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/svogv/src/lib/svogv.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The actual SVOGV Module definition.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            wd.FormatDataPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormValidatorService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/svogv.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport * as wd from './widgets/index';\n\nimport { FormValidatorService } from './services/formvalidator.service';\n// import { FormValidatorFromJsonService } from './services/formvalidator-fromjson.service';\n\nconst SVOGV_COMPONENTS = [\n  wd.DataGridComponent,\n  wd.DataGridPaginationComponent,\n  wd.TreeViewComponent,\n  wd.TreeViewNodeComponent,\n  wd.EditorComponent,\n  wd.AutoFormComponent\n];\n\nconst provider = [FormValidatorService]; // , FormValidatorFromJsonService];\n\n/**\n * The actual SVOGV Module definition.\n */\n@NgModule({\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, FormsModule],\n  declarations: [...SVOGV_COMPONENTS, wd.FormatDataPipe],\n  providers: provider,\n  exports: SVOGV_COMPONENTS\n})\nexport class SvogvModule {\n\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SvogvModule,\n      providers: provider\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextTreeNodeModel.html":{"url":"classes/TextTreeNodeModel.html","title":"class - TextTreeNodeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextTreeNodeModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts\n        \n\n            \n                Description\n            \n            \n                A text node\n\n            \n\n            \n                Extends\n            \n            \n                        TreeNodeModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                            \n                                    Private\n                                _state\n                            \n                            \n                                children\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parent\n                            \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                hasDirectAncestor\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[])\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        TreeNodeModel | TreeNodeModel[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeState\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:20\n\n                            \n                        \n\n                \n                    \n                        Subsequent nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:28\n\n                            \n                        \n\n                \n                    \n                        Field id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:24\n\n                            \n                        \n\n                \n                    \n                        An identifier.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:12\n\n                            \n                        \n\n                \n                    \n                        Control appearance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:16\n\n                            \n                        \n\n                \n                    \n                        structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:32\n\n                            \n                        \n\n                \n                    \n                        behavior\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(nodes: TreeNodeModel | TreeNodeModel[])\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                TreeNodeModel | TreeNodeModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TreeNodeOptions } from './treenodeoptions.model';\nimport { TreeNodeModel } from './treenode.model';\n\n/**\n * A text node\n */\nexport class TextTreeNodeModel extends TreeNodeModel {\n  text: string;\n\n  constructor(text: string, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n    super(options, nodes);\n    this.text = text;\n    this.name = text; // default, must be set explicitly\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeNodeBaseModel.html":{"url":"interfaces/TreeNodeBaseModel.html","title":"interface - TreeNodeBaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeNodeBaseModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts\n        \n\n            \n                Description\n            \n            \n                The base class.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        options\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                                \n                                    hasDirectAncestor\n                                \n                                \n                                    remove\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(node: TreeNodeBaseModel | TreeNodeBaseModel[])\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel | TreeNodeBaseModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         TreeNodeBaseModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNodeBaseModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         TreeNodeOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNodeOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         TreeNodeBaseModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNodeBaseModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TreeNodeOptions } from './treenodeoptions.model';\n\n/**\n * The base class.\n */\nexport interface TreeNodeBaseModel {\n  parent: TreeNodeBaseModel;\n  children: TreeNodeBaseModel[];\n  options: TreeNodeOptions;\n  add(node: TreeNodeBaseModel | TreeNodeBaseModel[]): void;\n  remove(node: TreeNodeBaseModel): boolean;\n  hasDirectAncestor(node: TreeNodeBaseModel): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeComponentModel.html":{"url":"classes/TreeNodeComponentModel.html","title":"class - TreeNodeComponentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeComponentModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts\n        \n\n            \n                Description\n            \n            \n                This type can load a component's UI into the node.\n\n            \n\n            \n                Extends\n            \n            \n                        TreeNodeModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                    Private\n                                _state\n                            \n                            \n                                children\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parent\n                            \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                hasDirectAncestor\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(component: Type, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[])\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        TreeNodeModel | TreeNodeModel[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeState\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:20\n\n                            \n                        \n\n                \n                    \n                        Subsequent nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:28\n\n                            \n                        \n\n                \n                    \n                        Field id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:24\n\n                            \n                        \n\n                \n                    \n                        An identifier.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:12\n\n                            \n                        \n\n                \n                    \n                        Control appearance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:16\n\n                            \n                        \n\n                \n                    \n                        structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:32\n\n                            \n                        \n\n                \n                    \n                        behavior\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(nodes: TreeNodeModel | TreeNodeModel[])\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                TreeNodeModel | TreeNodeModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type, Component } from '@angular/core';\nimport { TreeNodeOptions } from './treenodeoptions.model';\nimport { TreeNodeModel } from './treenode.model';\n\n/**\n * This type can load a component's UI into the node.\n */\nexport class TreeNodeComponentModel extends TreeNodeModel {\n  component: Type;\n  constructor(component: Type, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n    super(options, nodes);\n    this.component = component;\n  }\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeModel.html":{"url":"classes/TreeNodeModel.html","title":"class - TreeNodeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts\n        \n\n            \n                Description\n            \n            \n                The base class for tree nodes.\n\n            \n\n\n            \n                Implements\n            \n            \n                            TreeNodeBaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _state\n                            \n                            \n                                children\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parent\n                            \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                hasDirectAncestor\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    path\n                                \n                                \n                                    hasChildren\n                                \n                                \n                                    state\n                                \n                                \n                                    stateIsExpandend\n                                \n                                \n                                    stateIsDisabled\n                                \n                                \n                                    stateIsSelected\n                                \n                                \n                                    stateIsChecked\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: tree.TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[])\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        tree.TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        TreeNodeModel | TreeNodeModel[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeState\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:20\n                            \n                        \n\n                \n                    \n                        Subsequent nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:28\n                            \n                        \n\n                \n                    \n                        Field id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:24\n                            \n                        \n\n                \n                    \n                        An identifier.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:12\n                            \n                        \n\n                \n                    \n                        Control appearance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:16\n                            \n                        \n\n                \n                    \n                        structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:32\n                            \n                        \n\n                \n                    \n                        behavior\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(nodes: TreeNodeModel | TreeNodeModel[])\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                TreeNodeModel | TreeNodeModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n\n                \n                    \n                        getpath()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasChildren\n                    \n                \n\n                \n                    \n                        gethasChildren()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:87\n                                \n                            \n\n                \n                    \n                        setstate(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:90\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsExpandend\n                    \n                \n\n                \n                    \n                        getstateIsExpandend()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsDisabled\n                    \n                \n\n                \n                    \n                        getstateIsDisabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsSelected\n                    \n                \n\n                \n                    \n                        getstateIsSelected()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:107\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsChecked\n                    \n                \n\n                \n                    \n                        getstateIsChecked()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:111\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport * as tree from './treenodeoptions.model';\nimport { TreeNodeBaseModel } from './treenodebase.model';\n\n/**\n * The base class for tree nodes.\n */\nexport class TreeNodeModel implements TreeNodeBaseModel {\n  /**\n   * Control appearance\n   */\n  options: tree.TreeNodeOptions;\n  /**\n   * structure\n   */\n  parent: TreeNodeModel;\n  /**\n   * Subsequent nodes.\n   */\n  children: TreeNodeModel[];\n  /**\n   * An identifier.\n   */\n  name: string;\n  /**\n   * Field id\n   */\n  id: number;\n  /**\n   * behavior\n   */\n  stateChange: EventEmitter;\n\n  private _state: tree.TreeNodeState;\n\n  constructor(options?: tree.TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n    this.options = options || new tree.TreeNodeOptions();\n    if (nodes && nodes instanceof Array) {\n      this.children = nodes as TreeNodeModel[];\n    } else {\n      if (nodes) {\n        this.children = [nodes as TreeNodeModel];\n      }\n    }\n    this.stateChange = new EventEmitter();\n    this.state = tree.TreeNodeState.undefined;\n  }\n\n  get path(): TreeNodeModel[] {\n    // walk up tree and return path with names\n    const p: TreeNodeModel[] = new Array();\n    p.push(this);\n    let n: TreeNodeModel = this;\n    while (this.parent) {\n      n = n.parent;\n      p.push(n);\n    }\n    return p;\n  }\n\n  hasDirectAncestor(node: TreeNodeBaseModel): boolean {\n    return this.parent !== undefined;\n  }\n\n  get hasChildren(): boolean {\n    return this.children !== undefined && this.children.length > 0;\n  }\n\n  add(nodes: TreeNodeModel | TreeNodeModel[]): void {\n    if (nodes && nodes instanceof Array) {\n      this.children.push(...(nodes as TreeNodeModel[]));\n    } else {\n      this.children.push(nodes as TreeNodeModel);\n    }\n  }\n\n  remove(node: TreeNodeModel): boolean {\n    const idx: number = this.children.indexOf(node);\n    if (idx > -1) {\n      this.children.splice(idx, 1);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get state(): tree.TreeNodeState {\n    return this._state;\n  }\n  set state(value: tree.TreeNodeState) {\n    this._state = value;\n    if (!this.hasChildren && (this.state & tree.TreeNodeState.expanded) === tree.TreeNodeState.expanded) {\n      // if an expandable event occurs and there a no children, don't fire\n      return;\n    }\n    this.stateChange.emit(this._state);\n  }\n\n  get stateIsExpandend(): boolean {\n    return (this.state & tree.TreeNodeState.expanded) === tree.TreeNodeState.expanded;\n  }\n\n  get stateIsDisabled(): boolean {\n    return (this.state & tree.TreeNodeState.disabled) === tree.TreeNodeState.disabled;\n  }\n\n  get stateIsSelected(): boolean {\n    return (this.state & tree.TreeNodeState.selected) === tree.TreeNodeState.selected;\n  }\n\n  get stateIsChecked(): boolean {\n    return (this.state & tree.TreeNodeState.checked) === tree.TreeNodeState.checked;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeOptions.html":{"url":"classes/TreeNodeOptions.html","title":"class - TreeNodeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeOptions\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts\n        \n\n            \n                Description\n            \n            \n                The view options of node\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backColor\n                            \n                            \n                                checkable\n                            \n                            \n                                collapsable\n                            \n                            \n                                color\n                            \n                            \n                                href\n                            \n                            \n                                icon\n                            \n                            \n                                iconColor\n                            \n                            \n                                selectable\n                            \n                            \n                                selectedIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: TreeNodeOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:27\n                            \n                        \n\n                \n                    \n                        backColor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33\n                            \n                        \n\n                \n                    \n                        Node can be checked \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapsable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:17\n                            \n                        \n\n                \n                    \n                        Show the expand icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:25\n                            \n                        \n\n                \n                    \n                        Text color \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            href\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:29\n                            \n                        \n\n                \n                    \n                        A hyperlink \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:19\n                            \n                        \n\n                \n                    \n                        An additional icon, must be a fontawesome class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:21\n                            \n                        \n\n                \n                    \n                        An additional icon's primary color \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:31\n                            \n                        \n\n                \n                    \n                        Node can be selected \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:23\n                            \n                        \n\n                \n                    \n                        An additional icon on select \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum TreeNodeState {\n  undefined = 0,\n  checked = 1 \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeViewComponent.html":{"url":"components/TreeViewComponent.html","title":"component - TreeViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeViewComponent\n\n\n\n        \n            API\n        \n        \n            Live Demo\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/treeview/treeview.component.ts\n\n\n    \n        Description\n    \n    \n        The treeview can held any tree of nodes, which can be styles, linked, and bound to events.\nClicking on the items fires various events.\nThe component creates a treeview that can handle objects that create text, checkboxes, orhighlights.\nA node can have an icon. The icons are based on FontAwesome's css classes.\nExample of usage:\n/#/widget/tree\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-tree\n            \n\n\n            \n                styles\n                .treeview { list-style: none; margin-left: -25px; }\n            \n\n\n            \n                templateUrl\n                ./treeview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCheckChanged\n                            \n                            \n                                onCollapseChanged\n                            \n                            \n                                onNodeClick\n                            \n                            \n                                onSelectedChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkChanged\n                            \n                            \n                                collapseChanged\n                            \n                            \n                                nodeClick\n                            \n                            \n                                selectedChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        nodes\n                    \n                \n                \n                    \n                        Type :         TreeNodeModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checkChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        collapseChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonCheckChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCollapseChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonCollapseChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNodeClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNodeClick(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectedChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectedChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { TreeNodeModel } from './models';\n\n/**\n * The treeview can held any tree of nodes, which can be styles, linked, and bound to events.\n * Clicking on the items fires various events.\n *\n * The component creates a treeview that can handle {@link TreeNodeModel objects that create text, checkboxes, or}highlights.\n * A node can have an icon. The icons are based on FontAwesome's css classes.\n *\n * Example of usage:\n * /#/widget/tree\n */\n@Component({\n  selector: 'ac-tree',\n  templateUrl: './treeview.component.html',\n  styles: ['.treeview { list-style: none; margin-left: -25px; }']\n}) //\nexport class TreeViewComponent {\n  @Input() nodes: TreeNodeModel;\n  @Output() nodeClick: EventEmitter = new EventEmitter();\n  @Output() checkChanged: EventEmitter = new EventEmitter();\n  @Output() selectedChanged: EventEmitter = new EventEmitter();\n  @Output() collapseChanged: EventEmitter = new EventEmitter();\n\n  constructor() {\n\n  }\n\n  onNodeClick(node: TreeNodeModel) {\n    this.nodeClick.emit(node);\n  }\n\n  onCheckChanged(node: TreeNodeModel) {\n    this.checkChanged.emit(node);\n  }\n\n  onSelectedChanged(node: TreeNodeModel) {\n    this.selectedChanged.emit(node);\n  }\n\n  onCollapseChanged(node: TreeNodeModel) {\n    this.collapseChanged.emit(node);\n  }\n\n}\n\n    \n\n    \n        ﻿\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿  '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeViewNodeComponent.html":{"url":"components/TreeViewNodeComponent.html","title":"component - TreeViewNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeViewNodeComponent\n\n\n\n        \n            API\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts\n\n\n    \n        Description\n    \n    \n        The TreeNodeModel class represents a single TreeNodeModel for the treeview. Actually, this renders the real UI.\nThe component needs this input value:\n\n@Input() node: AcTextTreeNode;\n\nThe several options are set through the AcTreeNodeOptions object that is being held by the\nAcTextTreeNode class. This includes colors, icons, and other styles.\nThe component can fire these events:\n\n@Output() nodeClick: EventEmitter;\n@Output() checkChanged: EventEmitter;\n@Output() selectedChanged: EventEmitter;\n@Output() collapseChanged: EventEmitter;\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-treenode\n            \n\n            \n                styleUrls\n                ./treeviewnode.component.css\n            \n\n\n\n            \n                templateUrl\n                ./treeviewnode.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backColor\n                            \n                            \n                                    Private\n                                    Static\n                                clsIcon\n                            \n                            \n                                    Public\n                                collapseClasses\n                            \n                            \n                                    Public\n                                foreColor\n                            \n                            \n                                    Public\n                                href\n                            \n                            \n                                    Public\n                                iconClasses\n                            \n                            \n                                    Public\n                                isExpanded\n                            \n                            \n                                    Private\n                                    Static\n                                opnIcon\n                            \n                            \n                                    Private\n                                    Static\n                                pfxIcon\n                            \n                            \n                                    Private\n                                preSelectState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCheckChange\n                            \n                            \n                                handleClick\n                            \n                            \n                                handleCollapse\n                            \n                            \n                                handlePreSelection\n                            \n                            \n                                handleSelection\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCheckChanged\n                            \n                            \n                                onCollapseChanged\n                            \n                            \n                                onNodeClick\n                            \n                            \n                                onSelectedChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                node\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkChanged\n                            \n                            \n                                collapseChanged\n                            \n                            \n                                nodeClick\n                            \n                            \n                                selectedChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         TextTreeNodeModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:51\n                            \n                        \n                \n                    \n                        The object that controls the node's appearance.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checkChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:61\n                            \n                        \n                \n                    \n                        Fired if a checkable field is being clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        collapseChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:71\n                            \n                        \n                \n                    \n                        Fired if a node collapses or expands.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:56\n                            \n                        \n                \n                    \n                        Fired on click and hence fired even if any of the other parts are being fired.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:66\n                            \n                        \n                \n                    \n                        Fired if a selectable field is being clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCheckChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCheckChange()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick($event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCollapse\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCollapse()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handlePreSelection\n                        \n                        \n                    \n                \n            \n            \n                \nhandlePreSelection(state: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleSelection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleSelection($event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonCheckChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCollapseChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonCollapseChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNodeClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNodeClick(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectedChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectedChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            clsIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'fa-minus'\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collapseClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            foreColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            href\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            opnIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'fa-plus'\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            pfxIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'fa'\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            preSelectState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { TextTreeNodeModel, TreeNodeModel, TreeNodeState } from '../models';\n\n/**\n * The TreeNodeModel class represents a single TreeNodeModel for the treeview. Actually, this renders the real UI.\n *\n * The component needs this input value:\n *\n * * @Input() node: AcTextTreeNode;\n *\n * The several options are set through the AcTreeNodeOptions object that is being held by the\n * AcTextTreeNode class. This includes colors, icons, and other styles.\n *\n * The component can fire these events:\n *\n * * @Output() nodeClick: EventEmitter;\n * * @Output() checkChanged: EventEmitter;\n * * @Output() selectedChanged: EventEmitter;\n * * @Output() collapseChanged: EventEmitter;\n *\n */\n@Component({\n  selector: 'ac-treenode',\n  templateUrl: './treeviewnode.component.html',\n  styleUrls: ['./treeviewnode.component.css']\n})\nexport class TreeViewNodeComponent implements OnInit {\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    this.nodeClick = new EventEmitter();\n    this.checkChanged = new EventEmitter();\n    this.selectedChanged = new EventEmitter();\n    this.collapseChanged = new EventEmitter();\n  }\n  private static pfxIcon = 'fa';\n  private static opnIcon = 'fa-plus';\n  private static clsIcon = 'fa-minus';\n\n  /**\n   * The object that controls the node's appearance.\n   */\n  @Input()\n  node: TextTreeNodeModel;\n  /**\n   * Fired on click and hence fired even if any of the other parts are being fired.\n   */\n  @Output()\n  nodeClick: EventEmitter;\n  /**\n   * Fired if a checkable field is being clicked.\n   */\n  @Output()\n  checkChanged: EventEmitter;\n  /**\n   * Fired if a selectable field is being clicked.\n   */\n  @Output()\n  selectedChanged: EventEmitter;\n  /**\n   * Fired if a node collapses or expands.\n   */\n  @Output()\n  collapseChanged: EventEmitter;\n\n  public href: string;\n  public collapseClasses: Array;\n  public iconClasses: Array;\n  public foreColor: string;\n  public backColor: string;\n  public isExpanded = false;\n\n  private preSelectState: boolean;\n\n  ngOnInit() {\n    // set HTML according to options\n    this.collapseClasses = new Array();\n    this.iconClasses = new Array();\n    // expander area with icon\n    if (this.node) {\n      // expect a font-awesome class with or without fa class\n      if (this.node.options && this.node.options.icon) {\n        if (\n          this.node.options.icon.indexOf(`${TreeViewNodeComponent.pfxIcon} `) !== 0\n        ) {\n          this.iconClasses.push('fa');\n        }\n        this.iconClasses.push(this.node.options.icon);\n      }\n      if (this.node.options && this.node.options.href) {\n        this.href = this.node.options.href;\n      } else {\n        this.href = '';\n      }\n      // open/close area for elements with children\n      if (this.node.hasChildren) {\n        this.collapseClasses.push('ac-icon'); // base class\n        this.collapseClasses.push(TreeViewNodeComponent.pfxIcon);\n        this.collapseClasses.push(TreeViewNodeComponent.opnIcon);\n        // collapsed by default\n        this.node.state &= ~TreeNodeState.checked;\n      }\n      if (this.node.options && this.node.options.color) {\n        this.foreColor = this.node.options.color;\n      }\n      if (this.node.options && this.node.options.backColor) {\n        this.backColor = this.node.options.backColor;\n      }\n      this.node.stateChange.subscribe((se: any) => {\n        this.collapseChanged.emit(this.node);\n        if (!this.node.stateIsExpandend) {\n          this.collapseClasses = this.collapseClasses.filter(\n            s => s !== TreeViewNodeComponent.clsIcon\n          );\n          this.collapseClasses.push(TreeViewNodeComponent.opnIcon);\n        } else {\n          this.collapseClasses = this.collapseClasses.filter(\n            s => s !== TreeViewNodeComponent.opnIcon\n          );\n          this.collapseClasses.push(TreeViewNodeComponent.clsIcon);\n        }\n        this.isExpanded = this.node.stateIsExpandend;\n      });\n    }\n  }\n\n  // forward events in the node tree\n\n  onNodeClick(node: TreeNodeModel) {\n    this.nodeClick.emit(node);\n  }\n\n  onCheckChanged(node: TreeNodeModel) {\n    this.checkChanged.emit(node);\n  }\n\n  onSelectedChanged(node: TreeNodeModel) {\n    this.selectedChanged.emit(node);\n  }\n\n  onCollapseChanged(node: TreeNodeModel) {\n    if (this.node.options.collapsable && this.node.hasChildren) {\n      this.collapseChanged.emit(node);\n    }\n  }\n\n  handleCheckChange(): void {\n    if (this.node.options.checkable && !this.node.stateIsDisabled) {\n      if (this.node.state & TreeNodeState.checked) {\n        this.node.state &= ~TreeNodeState.checked;\n      } else {\n        this.node.state |= TreeNodeState.checked;\n      }\n      this.checkChanged.emit(this.node);\n    }\n  }\n\n  handleClick($event: any): void {\n    $event.stopPropagation();\n    // always emit click\n    this.nodeClick.emit(this.node);\n  }\n\n  handleCollapse(): void {\n    // if collapsable handle icons and view state\n    if (this.node.options.collapsable) {\n      // toggle state\n      if (this.node.state && this.node.state & TreeNodeState.expanded) {\n        this.node.state &= ~TreeNodeState.expanded;\n      } else {\n        this.node.state |= TreeNodeState.expanded;\n      }\n    }\n  }\n\n  handlePreSelection(state: boolean): void {\n    // handle the states according to options\n    if (this.node.options.selectable && !this.node.stateIsDisabled) {\n      if (state) {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.backColor;\n        } else {\n          this.foreColor = '#fff';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.color;\n        } else {\n          this.backColor = '#000';\n        }\n      } else {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.color;\n        } else {\n          this.foreColor = '#000';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.backColor;\n        } else {\n          this.backColor = '#fff';\n        }\n      }\n      this.preSelectState = state;\n    }\n  }\n\n  handleSelection($event: any): void {\n    // handle the states according to options\n    if (\n      this.node.options.selectable &&\n      !this.node.stateIsDisabled &&\n      this.preSelectState === true\n    ) {\n      if (this.node.state & TreeNodeState.selected) {\n        this.node.state &= ~TreeNodeState.selected;\n      } else {\n        this.node.state |= TreeNodeState.selected;\n      }\n      if (this.node.stateIsSelected) {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.backColor;\n        } else {\n          this.foreColor = '#fff';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.color;\n        } else {\n          this.backColor = '#000';\n        }\n      } else {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.color;\n        } else {\n          this.foreColor = '#000';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.backColor;\n        } else {\n          this.backColor = '#fff';\n        }\n      }\n      this.selectedChanged.emit(this.node);\n    }\n    if (!this.href) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n  }\n}\n\n    \n\n    \n        ﻿\n    \n    \n    \n    \n    \n    \n        {{ node.text }}\n    \n    \n        \n        \n                       \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿                                {{ node.text }}                                               '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeViewNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n0.0.8 (2017-01-01)\nFirst release of SVOGV!\nThis inaugural release includes these components:\n\nHidden: Element will not be rendered as column in ac-datagrid\nDisplay: Change columns header or label name and add a tooltip optionally\n\nAlso several validation decorators are supported:\n\nRequired: Property must have a value\nMaxLength: Max number of chars (string only)\nMinLength: Min number of chars (string only)\nPattern: A regular expression\nRange: A range of type number or of type Date for the property's value\nEmail: Check whether the property contains a valid email\n\nAs the alpha process continues, these components will continue to evolve. There will be\nbreaking changes between alpha releases; the alpha releases are here for people that want an\nearly look or who like to live on the edge and are very tolerant of breaking API and behavior\nchanges.\n\n0.0.23 (2017-01-20)\nA pre-production release of SVOGV!\nThis is the first we use in production to see how to use basic functions in real world environment.\n\nPlaceholder: A new decorator to put watermarks into editor elements\n\nNew validation decorators:\n\nCompare: Compare two fields, such as in password field combinations\n\nSeveral widgets are now usable:\n\nDataGrid\nEditors\nInfoBox\nMenu, which comes in two flavors:\nDropMenu -- a complex multi level menu\nSideMenu -- a simple one level menu\n\n\nTreeView\nBreadCrumb\nTabs\n\nStill under construction, because of SMIL we use for SVG and that we still need to get rid of:\n\nAnalogClock\nLoaderIcon\n\nThe demo does now use WebPack 2 to create the bundles. SystemJS loader is still working for debugging.\n\n0.2.1 (2017-09-14)\nSVOGV in usable state\nThe base library with the decorators and controls is usable. The HUD part is still very experimental. I'm going to remove this part shortly and create another project out of it. It will make the lib smaller and more reliable.\nThese to elements are now working and good for production:\n\nAnalogClock\nLoaderIcon\n\nThere are many fixes in both, demo and lib.\n\n0.2.3 (2017-09-15)\nA release mostly dedicated to fixes and reorg. Some components sued just to run the demo were actually in the main lib and hence I have removed them and put in the demo. So the code is still there, but nit as part of the main lib. This makes the lib a lot smaller and it clarifies the intention not competing with the other UI libs but put the focus on forms and validation.\n\n0.3.5 (2018-01-15)\nA redesign, mainly removing all experimental parts.\n\n0.6.0 (2018-09-15)\nAn update to support Angular 5 and 6. This is also a change in naming the versions. 0.6.* is for Angular 6, 0.7.* will be the one for Angular 7 and so on.\nAlso, this is a big change from Gulp/Rollup based build process to using the Angular CLI. After a ton of experiments with WebPack 4 and almost very loader the outcome was more or less fruststrating. With Angular CLI, I must admit, the results are perfect, stable and small packages, and an easy setup procedure.\n\n0.7.0 (2019-01-31)\nAgain a big redesign. Mostly renaming and reorg. It's a need for the way to 1.0. It follows more strictly the Angular guide line for code.\nAlso, it's now made for Angular 7 and TypeScript 3.\n\n0.7.1 (2019-04-24)\nSome fixes and some function are now working properly that didn't made it into 7.0.0.\n\nTreeView event behavior\nDatagrid Pagination styles\nDatagrid Templates\nDatagrid Pipe support\n\n\n0.7.2 (2019-04-30)\nRenamed property userForm to formGroup for editor component. Equals the autoform now and is less irritating. Unfortunately, this is a breaking change.\n\n0.7.3 (2019-05-02)\nAdded the decorator Sortable to suppress sorting (default is on for all columns) or provide a custom sort function. Made the sorting available for the whole header element (additionally to the sort buttons) and hence it's now toggling. This is a more intuitive behavior. The button currently showing the sort direction by being in disabled state.\nAdded the decorator UiHint to add custom styles to grid's header or, in case of an editor element, to the input element.\nRemoved some not used classes to save code space.\n\n0.8.0 (2019-08-13)\nUpdate references and dependencies to reflect Angular 8.\n\n0.9.0 (2020-03-31)\nUpdate references and dependencies to reflect Angular 9. Several bug fixes and refinements for the grid.\nClean up code, improve documentation and follow current linter rules.\nThis is the last release before we convert to new project structure in the @svogv realm. Stay tuned!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to SVOGV\nWe would love for you to contribute to SVOGV and help make it ever better!\nAs a contributor, here are the guidelines we would like you to follow:\n\nCode of Conduct\nQuestion or Problem?\nIssues and Bugs\nFeature Requests\nSubmission Guidelines\nCoding Rules\nCommit Message Guidelines\nSigning the CLA\n\nIn case of any questions please contact me at !\n Code of Conduct\nHelp us keep Angular open and inclusive. Please read and follow our Code of Conduct.\n Got a Question or Problem?\nIf you have questions about how to use SVOGV, please direct them to the \nGoogle Group discussion list or StackOverflow. \nPlease note that SVOGV is still in very early development, and the team's capacity \nto answer usage questions is limited. Community chat is also available on Gitter.\n Found an Issue?\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our GitHub Repository. Including an issue \nreproduction (via CodePen, JsBin, Plunkr, etc.) is the absolute best way to help the team quickly\ndiagnose the problem. Screenshots are also helpful.\nYou can help the team even more and submit a Pull Request with a fix.\n Want a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nRepository. If you would like to implement a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it. SVOGV is in very early \nstages and we are not ready to accept major contributions ahead of the full release.\nPlease consider what kind of change it is:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project.\nSmall Features can be crafted and directly submitted as a Pull Request.\n\n Submitting an Issue\nBefore you submit an issue, search the archive, maybe your question was already answered.\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\nOverview of the Issue - if an error is being thrown a non-minified stack trace helps\nAngular and Bootstrap Versions - which versions of Angular and Bootstrap are affected\n  (e.g. 2.2.0)\nMotivation for or Use Case - explain what are you trying to do and why the current behavior\n  is a bug for you\nBrowsers and Operating System - is this a problem with all browsers?\nReproduce the Error - provide a live example (using CodePen, JsBin,\n  Plunker, etc.) or a unambiguous set of steps\nScreenshots - Due to the visual nature of the SVOGV widgets, screenshots can help the team\n  triage issues far more quickly than a text descrption.\nRelated Issues - has a similar issue been reported before?\nSuggest a Fix - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\nYou can file new issues by providing the above information here.\n Submitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR\nthat relates to your submission. You don't want to duplicate effort.\n\nPlease sign our Contributor License Agreement (CLA) before sending PRs.\nWe cannot accept code without this.\n\nMake your changes in a new git branch:\n   git checkout -b my-fix-branch master\nCreate your patch, including appropriate test cases.\n\nFollow our Coding Rules.\n\nTest your changes with our supported browsers and screen readers.\n\nRun the full SVOGV test suite, as described in the developer documentation,\nand ensure that all tests pass.\n\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions\nis necessary because release notes are automatically generated from these messages.\n   git commit -aNote: the optional commit -a command line option will automatically \"add\" and \"rm\" edited files.\n\nPush your branch to GitHub:\n  git push my-fork my-fix-branch\nIn GitHub, send a pull request to svogv:master.\n\nIf we suggest changes then:\n\nMake the required updates.\n\nRe-run the SVOGV test suites to ensure tests are still passing.\n\nRebase your branch and force push to your GitHub repository (this will update your Pull\nRequest):\ngit rebase master -i\ngit push -f\n\n\n\nThat's it! Thank you for your contribution!\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell as\n  follows:\n  git push my-fork --delete my-fix-branch\nCheck out the master branch:\n  git checkout master -f\nDelete the local branch:\n  git branch -D my-fix-branch\nUpdate your master with the latest upstream version:\n  git pull --ff upstream master\n\n Coding Rules\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\nAll public API methods must be documented. (Details TBD).\nWe follow Google's JavaScript Style Guide, but wrap all code at\n100 characters.\n\n Commit Message Guidelines\nWe have very precise rules over how our git commit messages can be formatted.  This leads to more\nreadable messages that are easy to follow when looking through the project history.  But also,\nwe use the git commit messages to generate the SVOGV change log.\nCommit Message Format\nEach commit message consists of a header, a body and a footer.  The header has a special\nformat that includes a type, a scope and a subject:\n(): \n\n\n\nThe header is mandatory and the scope of the header is optional.\nAny line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools.\nRevert\nIf the commit reverts a previous commit, it should begin with revert:, followed by the header of\nthe reverted commit. In the body it should say: This reverts commit ., where the hash is\nthe SHA of the commit being reverted.\nType\nMust be one of the following:\n\nfeat: A new feature\nfix: A bug fix\ndocs: Documentation only changes\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing\nsemi-colons, etc)\nrefactor: A code change that neither fixes a bug nor adds a feature\nperf: A code change that improves performance\ntest: Adding missing tests or correcting existing tests\nbuild: Changes that affect the build system, CI configuration or external dependencies      (example scopes: gulp, broccoli, npm)\nchore: Other changes that don't modify src or test files\n\nScope\nThe scope could be anything specifying place of the commit change. For example\ndatepicker, dialog, etc.\nSubject\nThe subject contains succinct description of the change:\n\nuse the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\ndon't capitalize first letter\nno dot (.) at the end\n\nBody\nJust as in the subject, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior.\nFooter\nThe footer should contain any information about Breaking Changes and is also the place to\nreference GitHub issues that this commit Closes.\nBreaking Changes should start with the word BREAKING CHANGE: with a space or two newlines.\nThe rest of the commit message is then used for this.\nA detailed explanation can be found in this document.\n Signing the CLA\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\nFor individuals we have a simple click-through form.\nFor corporations we'll need you to\nprint, sign and one of scan+email, fax or mail the form.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^11.0.2\n        \n            @angular/compiler : ^11.0.2\n        \n            @angular/core : ^11.0.2\n        \n            @angular/forms : ^11.0.2\n        \n            @angular/platform-browser : ^11.0.2\n        \n            @angular/platform-browser-dynamic : ^11.0.2\n        \n            @angular/router : ^11.0.2\n        \n            bootstrap : ^4.5.3\n        \n            core-js : ^3.8.0\n        \n            font-awesome : ^4.7.0\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.3\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Direction   (projects/.../datagrid.model.ts)\n                        \n                        \n                            TreeNodeState   (projects/.../treenodeoptions.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Direction\n                    \n                \n                    \n                        \n                            Sort direction, controlled by simple string comparision or a callback.\n\n                        \n                    \n                        \n                            \n                                 Ascending\n                            \n                        \n                        \n                            \n                                 Descending\n                            \n                        \n            \n        \n\n    projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TreeNodeState\n                    \n                \n                    \n                        \n                            The state of node\n\n                        \n                    \n                        \n                            \n                                 undefined\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 checked\n                            \n                        \n                        \n                            \n                                 disabled\n                            \n                        \n                        \n                            \n                                 expanded\n                            \n                        \n                        \n                            \n                                 selected\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Compare   (projects/.../val-compare.decorator.ts)\n                        \n                        \n                            Display   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            DisplayGroup   (projects/.../hint-displaygroup.decorator.ts)\n                        \n                        \n                            Email   (projects/.../val-email.decorator.ts)\n                        \n                        \n                            FormatPipe   (projects/.../hint-formatpipe.decorator.ts)\n                        \n                        \n                            Hidden   (projects/.../hint-hidden.decorator.ts)\n                        \n                        \n                            MaxLength   (projects/.../val-maxlength.decorator.ts)\n                        \n                        \n                            MinLength   (projects/.../val-minlength.decorator.ts)\n                        \n                        \n                            Pattern   (projects/.../val-pattern.decorator.ts)\n                        \n                        \n                            Placeholder   (projects/.../hint-placeholder.decorator.ts)\n                        \n                        \n                            Range   (projects/.../val-range.decorator.ts)\n                        \n                        \n                            Readonly   (projects/.../hint-readonly.decorator.ts)\n                        \n                        \n                            Required   (projects/.../val-required.decorator.ts)\n                        \n                        \n                            Sortable   (projects/.../hint-sortable.decorator.ts)\n                        \n                        \n                            StringLength   (projects/.../val-stringlength.decorator.ts)\n                        \n                        \n                            TemplateHint   (projects/.../hint-templatehint.decorator.ts)\n                        \n                        \n                            UiHint   (projects/.../hint-uihint.decorator.ts)\n                        \n                        \n                            validateCompare   (projects/.../compare.validator.ts)\n                        \n                        \n                            validateRange   (projects/.../range.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/decorators/val-compare.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Compare\n                        \n                        \n                    \n                \n            \n            \n                \nCompare(withProperty, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The compare decorator compares two field's values and\nshows an error message on the decorated field. The other field (compared to) does\nnot has a decorator nor receives a message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    withProperty\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string that represents the compared field's name.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-display.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Display\n                        \n                        \n                    \n                \n            \n            \n                \nDisplay(name, order, description?)\n                \n            \n\n\n\n\n            \n                \n                    The Display decorator.\nThis decorator can be used on fields. It's being used to create label in EditorComponent and\nheaders in the DataGridComponent. Additional parameters are provided to refine forms further.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name or Label that appears in forms or as header in grids.\n\n                                    \n                                \n                                \n                                    order\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        If one uses AutoFormComponent to create a whole form from a model, this controls the element's order.\n\n                                    \n                                \n                                \n                                    description\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A tooltip, which can be used optionally.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-displaygroup.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            DisplayGroup\n                        \n                        \n                    \n                \n            \n            \n                \nDisplayGroup(name, order, description?)\n                \n            \n\n\n\n\n            \n                \n                    The DisplayGroup decorator. Groups fields in auto forms; see AutoFormComponent.\nJust define a name (that appears as the group's name) and\nput the very same name on all members of the group.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name or Label that appears in forms as the groups legend.\n\n                                    \n                                \n                                \n                                    order\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        If one uses {\n\n                                    \n                                \n                                \n                                    description\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A tooltip, which can be used optionally.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-email.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Email\n                        \n                        \n                    \n                \n            \n            \n                \nEmail(msg?)\n                \n            \n\n\n\n\n            \n                \n                    Validates a field against an email pattern.\nBased on \"pattern\", so in form one must use hasError('pattern') to get validation results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A custom message. If not provided \"The field ffff must contain a valid e-mail address.\"\n  will be generated, while ffff is the property name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-formatpipe.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            FormatPipe\n                        \n                        \n                    \n                \n            \n            \n                \nFormatPipe(pipe, pipeParams)\n                \n            \n\n\n\n\n            \n                \n                    The FormatPipe decorator. Provide the name of a Pipe that's being used by the\ndynamic pipe formatter. Hence, the form does not need to apply forms manually.\nThe reason is that you may create forms automatically and hence can't write\nactual Pipes somewhere. This applies especially if you create a table and loop\nthrough properties.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pipe\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the pipe's type.\n\n                                    \n                                \n                                \n                                    pipeParams\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The custom pipe's parameters. This is optional and can be omitted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-hidden.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Hidden\n                        \n                        \n                    \n                \n            \n            \n                \nHidden(hide)\n                \n            \n\n\n\n\n            \n                \n                    The Hidden decorator.\nThe DataGrid does not show columns for properties tagged with Hidden\">Hidden decorator.\nFields in forms that render automatically\nusing the EditorComponent\">EditorComponent will render as .\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hide\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional, default is true.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-maxlength.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MaxLength\n                        \n                        \n                    \n                \n            \n            \n                \nMaxLength(len, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The maxlength decorator assures that a string field contains not more than a number of characters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    len\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the maximum length.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-minlength.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MinLength\n                        \n                        \n                    \n                \n            \n            \n                \nMinLength(len, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The minlength decorator assures that a string field contains at least a number of characters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    len\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the required length.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-pattern.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Pattern\n                        \n                        \n                    \n                \n            \n            \n                \nPattern(pattern, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The decorator assures that a string field fullfilles a regular expression pattern.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pattern\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The expression as RegExp.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-placeholder.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Placeholder\n                        \n                        \n                    \n                \n            \n            \n                \nPlaceholder(name)\n                \n            \n\n\n\n\n            \n                \n                    The Placeholder decorator.\nThe placeholder adds the given text as a watermark to any input fields.\nThere is no function in the DataGridComponent.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name that appears in form fields as a watermark.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-range.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Range\n                        \n                        \n                    \n                \n            \n            \n                \nRange(from, to, msg?)\n                \n            \n\n\n\n\n            \n                \n                    Validates a field against an range. Applies to numerical values or dates.\nThe range's values are included in the valid range.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The minimum value (included) as number or Date\n\n                                    \n                                \n                                \n                                    to\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The maximum value (included) as number or Date\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A custom message. If not provided \"The field [field] does not fall into the range from [from] to [to]\"\nwill be generated, while [field] is the propertie's name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-readonly.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Readonly\n                        \n                        \n                    \n                \n            \n            \n                \nReadonly(readonly)\n                \n            \n\n\n\n\n            \n                \n                    The Readonly decorator. The field is readonly in the form. It just renders grayed out\nand handles the internals using default HTML5 techniques.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    readonly\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional, default is true.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-required.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Required\n                        \n                        \n                    \n                \n            \n            \n                \nRequired(msg?)\n                \n            \n\n\n\n\n            \n                \n                    This decorator is for validation of mandatory fields.\nThe default message is 'The field {keyName} is required'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The error message shown in case of error. A default value is being provided if omitted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-sortable.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Sortable\n                        \n                        \n                    \n                \n            \n            \n                \nSortable(canSort: boolean, sortCallback?)\n                \n            \n\n\n\n\n            \n                \n                    The Sortable decorator.\nThe DataGrid\">does not sort columns for properties tagged with@Sortable(false).\nThe default is that all columsn are sortable. Either avoid this decorator or use @Sortable(true).\nAdditionally, if the decorator is provided, you can add a sort function callback as second parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    canSort\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Suppress or allow sorting.\n\n                                    \n                                \n                                \n                                    sortCallback\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional callback that provides a sort instruction. If omitted, Array.prototype.sort is being used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-stringlength.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StringLength\n                        \n                        \n                    \n                \n            \n            \n                \nStringLength(min, max, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The decorator that assures that a string field contains at least a number of characters and a minimum number, too.\nThe default message is 'The field {fieldname} needs at least {minlength} characters'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The required length.\n\n                                    \n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The maximum length.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : Optionally a custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-templatehint.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            TemplateHint\n                        \n                        \n                    \n                \n            \n            \n                \nTemplateHint(template, params?)\n                \n            \n\n\n\n\n            \n                \n                    The TemplateHint decorator.\nOne can define the way a property gets rendered.\nCurrently supported:\n\nTextArea\nCalendar\nRange\nNumber\nText\n\nThe Calendar creates Date-field. However, in casde of a datatype Date the date field will be created anyway.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    template\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name that appears in form fields as a watermark.\n\n                                    \n                                \n                                \n                                    params\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Depending of template some additional values as a dictionary.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-uihint.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            UiHint\n                        \n                        \n                    \n                \n            \n            \n                \nUiHint(uiHintRule)\n                \n            \n\n\n\n\n            \n                \n                    The UiHint decorator.\nCurrently it can contain any set of style rules that apply to the  element that forms the grid's table header cells.\nThe application makes use of the [ngStyle] directive. The object's structure must be made in a way [ngStyle] can handle it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uiHintRule\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/services/validators/compare.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validateCompare\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateCompare(p)\n                \n            \n\n\n\n\n            \n                \n                    A custom validator to compare two fields. This is internally to support the infrastructure\nand not intended to being used by custom code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    p\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The field's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/services/validators/range.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validateRange\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateRange(f, t)\n                \n            \n\n\n\n\n            \n                \n                    A custom validator to valdiate a range of numbers or dates.\nThis is internally to support the infarstructure and not intended to being used by custom code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n SVOGV Grid and Forms Library\n\n\n\n\n\n\n\n\nTarget Audience\nThis library is for Angular Version 2 or newer. The current release is for Angular 8 and matches the current Angular version usually.\nThe design / UI stuff is made using Bootstrap 4, and even here the current version is used.\nIt's for developers who create standard forms and want to automate the development process.\n\nDemo and project are made using Angular CLI. Current version is made using @angular/cli.\n\nIntroduction\nThis library is for making forms. Easy and fast. It has these advantages:\n\nAll form parts are being created dynamically by using decorators. These control the UI and validation.\nAll styles are based on Bootstrap 4, can be used together with themes and custom parts can be changed.\nA grid component makes data tables very easy to use.\nA tree view is another component.\nDynamic editors and an autoform component creates the whole form without code.\n\nWhat is it?\nThe approach was simply to improve the creation of forms as simple as ever in Angular. It's an extension to Angular that comes as a set of classes (injectable services) and components.\nIt's available as source code or as ready to use umd-bundle. The bundle is plane JavaScript. The sources are available via npm and from github.\n\nIt's pretty small, too. It's 300 KB as a bundle and roughly 39 KB minified, close to 10 KB zipped.\n\nIssues?\nAs of version 0.6 none known issues. Please report issues through Github.\nHave you worked with the version 0.3 before? 0.6 has breaking changes because of a new build process.\nIn 0.7 I have again made significant changes towards the 1.0 release.\nI'm using Angular CLI for all steps and sync the version with Angular (Angular 6 is SVGOV 0.6, Angular 7 is SVGOV 0.7, and so on). After the first final is being release I plan to jump the version to match the Angular major release. Hence, 0.6 is 6, 0.7 is 7 and so on. Currently supporting Angular 11.\nAngular Data Annotations\nThe idea of data annotations is somehow heavily inspired by the namespace System.ComponentModel.DataAnnotations of .NET Core. There is absolutely no dependency at all, though. You can find more here.\nThe basic idea is that we usually use view models anyway. So, why not using them to provide all information necessary to create a form that way?\nHow does it work?\nLet's assume you have a viewmodel like this:\nexport class UserViewModel {\n\n  @Hidden()\n  id: Number = 0;\n\n  @Display('E-Mail', 'E-Mail address')\n  @Required()\n  @MaxLength(100)\n  @Email()\n  email: string = '';\n\n  @Display('Phone Number', 'The user\\'s phone')\n  @Required()\n  @MaxLength(20)\n  phoneNumber: string = '';\n\n  @Display('User Name', 'The full name')\n  @Required()\n  @MaxLength(100)\n  userName: string = '';\n\n}As you see there are several decorators. SVOGV has decorators for display hints, such as @Display. And it has decorators to manage the validation, such as @MaxLength().\nThe usage is simple; just import like this (selection, there are more options):\nimport {\n  Required,\n  MaxLength,\n  Range,\n  Email,\n  Display,\n  Hidden,\n  UiHint,\n  Format\n} from 'svogv';Or alternatively prefix your import:\nimport * as FormHints from 'svogv';\n\nexport class UserViewModel {\n\n  @FormHints.Display('E-Mail')\n  eMail: string = '';\n\n}Using in Forms\nThe form needs to be aware of the decorators. Hence, there is a service that creates an advanced FormGroup instance. It's called FormValidatorService. Internally it's using Angular's ReactiveFormsModule, so this is a dependency.\nIn a component's code it looks like this:\nimport { FormValidatorService } from 'svogv';\n\nexport class EditUserComponent implements OnInit {\n\n  myForm: FormGroup;\n\n  constructor(private fv: FormValidatorService) {\n  }\n\n  ngOnInit() {\n    // get validators and error messages from viewmodel type\n    this.myForm = this.fv.build(UserViewModel);\n  }\n}In this example UserViewModel is the decorated view model. It's just the type that the service requires, not an actual instance. However, the service will create an instance, and hence the model must be a class, not an interface. Also, all properties must be set, usually by setting defaults, because internally the properties are read by a for of loop.\nNow the form knows all about the view model. Let's build a form on top on this:\n\n  \n    Edit current user\n      \n      \n      \n      Save\n  \nThe important part is the component . This component checks the property type, the decorators, and the form's settings and creates a complete form element in Bootstrap 4 style (the template is, of course, customizable). The connection between the service's outcome -- the FormGroup -- and the components is being made through setting the form group's instance (here myForm) using the input property formGroup.\nAnd that's it. The form is pretty, has fully working validation, and is easy to access from your component. And yes, there is no additional code necessary to get it running.\nAuto Forms\nEven simpler, you can create a complete form with just one tag. Just go like this:\n\n  \n    Edit current user\n    \n    \n      \n         Save\n      \n    \n  \nThe only component here is  that connects to the form using the attribute formGroup. Use binding syntax here as this is an object. The form is build upon Bootstrap 4 again and can be modified by several helper decorators.\nValidation Decorators\n\n\n\nDecorator\nUsage\n\n\n\n\n@StringLength\nSet the strings minimum (optional) and maximum length. It's a summary of @MinLength and @MaxLength.\n\n\n@MaxLength\nThe maximum length of a text input.\n\n\n@MinLength\nThe minimum length of a text input.\n\n\n@Pattern\nA regular expression that is used to test the text or number input.\n\n\n@Range\nA range (from-to) for either numerical values or dates.\n\n\n@Required\nMakes the field mandatory.\n\n\n@EMail\nChecks input against a (very good) regular expression to test for valid e-mail pattern.\n\n\n@Compare\nCompares with another field, usually for password comparision.\n\n\n\nUI Decorators\n\n\n\nDecorator\nUsage\n...Grid\n...Editor\n...Auto Form\n...Tree**\n\n\n\n\n@Display\nDetermine the label's name and a tooltip ( optionally), You can also provide the fields' order.\nYes, Header row\nYes, label text\nYes, label text\nNo\n\n\n@DisplayGroup\nGroups components in  elements. Can be ordered inside the form.\nNo\nNo\nYes, fieldset\nNo\n\n\n@Hidden\nExclude as field from an autoform.\nYes, excludes column\nYes, makes hidden field\nYes\nYes\n\n\n@Sortable\nMakes a column sortable. Default is true.\nYes\nNo\nNo\nNo\n\n\n@Placeholder\nA watermark that appears in empty form fields\nNo\nYes\nYes\nNo\n\n\n@TemplateHint\nForces a particular render type. Usually you get fields a shown in the table below. With a hint you can force other types.\nYes, replaces cell content with template\nNo\nNo\nPlanned\n\n\n@ReadOnly\nRenders the field readonly, if the shown element can support this. For all other fields this is being ignored.\nNo\nYes\nYes\nYes\n\n\n@FormatPipe\nExecutes the pipe before rendering the data. Usually used in the grid component.\nYes, applies pipe to cell's content\nNo\nNo\nNo\n\n\n@UiHint\nAdditional custom styles*.\nYes\nYes\nYes\nYes\n\n\n\n* This is available from 0.7.4 onwards. Style apply to columns' header and cells as well as to form elements in editor. The object required is a style object in the form { 'style': 'rule' }.\n** This is available from 0.7.5 onwards.\nThe editor component is able to determine the appearance dependent on the type:\n\n\n\nData Type\nTemplate Hint\nField Type\nOptions for @TemplateHint\nRemark\n\n\n\n\nstring\ntext (no params)\ntype=\"text\"\nText, TextArea\nTextArea accepts additional parameters for row and col\n\n\nboolean\nbool (no params)\ntype=\"checkbox\"\nCheckbox, Toggle, Radio\nDefault is checkbox\n\n\nnumber\nnum (no params)\ntype=\"number\"\nRange\nDefault is numeric field, Range is a slider\n\n\nDate\ndate (val,cal)*\ntype=\"date\"\nCalendar\nCalender is provided by browser feature\n\n\nenum\nenum (no params)\n-Box\n-\nRenders an Enum as Dropdown list\n\n\n\n* With cal it shows a calendar, with val just the value. Use a pipe and @FormatPipe(DatePipe) for formatting. Calendar appears in edit mode only.\nServer Support through JSON\nAs of version 0.3.5 it's possible to use a specially designed JSON object to configure the forms. It's an exact pendant to the decorators. The difference is that you don't need to write any viewmodels in TypeScript. Just deliver an appropriate formatted document from your API and you're set. Here is the definition for the JSON structure:\nexport interface FormValidatorModel {\n  [field: string]:\n      displayType |\n      displayGroupType |\n      formatType |\n      hiddenType |\n      placeHolderType |\n      compareType |\n      maxlengthType |\n      minlengthType |\n      patternType |\n      stringLengthType |\n      emailType |\n      requiredType;\n}The types have the same description as the decorators.\nThe Components\nThe components complement the editor by adding more parts typically used in forms apps. There are many such components available, but sometimes there are pieces that we need quite often but nothing is really handy. So I created a small set of such components:\n\nTreeView: An advanced tree view with icon support and many options such as selections and checkboxes. Uses EventEmitter to fire several tree node events.\nDataGrid: A classic data grid. It provides a model to handle:\npaging\nfiltering\nsorting\ndynamic columns\n\n\n\nThe grid is controlled by decorators (see table above), so the view model actually creates the grid's appearance.\nWhere to get?\nIt's available from npm by using this command:\nnpm install svogv --saveYou get these parts:\n\nFormValidatorService -- am injectable class to build reactive forms\nFormValidatorFromJsonService -- am injectable class to build reactive forms from server data\nEditor -- the universal editor component for one field\nAutoForm -- the universal editor component for complete multi field forms\nDataGrid -- an advanced grid component, model driven\nTreeView -- a tree with some nice features\nDecorators -- a set of decorators to manage the behavior and appearance of grid, tree and forms\n\nMore to read\nFor more information read the Getting started guide.\nSee demo and API docs running on SVOGV.\nDemo App\nThere is a demo app where you can see the components in action.\nSee demo and API docs running on SVOGV.\nQuick Start\nTo have a running sample in seconds do the following:\n\nClone the repository from Github\nAssure you have node running and npm and Typescript (tsc) is in the path\nExecute this command: npm install\nExecute this command: npm run build\n\nIf everything goes fine start the demo:\nnpm startA browser window shall open automatically (if not, open http://locahost:4200) and shows a dashboard from where you can navigate the various components.\nSelect these options in the left hand menu:\n\nForms Demo: All about the decorators\nWidgets > Overview: The UI widgets demo\n\n\nThe demo app is independent and has it's own package.json and node_modules folder and hence needs it's own setup. The first command (setup) takes care of this all.\n\nLicensing?\nIt's ISC licensed and it's free. I deeply believe in Open Source and will support the ecosystem by open sourcing all parts of the project. For commercial users such as enterprises I have support options.\nAbout the Author\nThe SVOGV Widget Library was written by Joerg  Krause, www.joergkrause.de, Berlin / Germany. He has many years of experience with Web-Frameworks. He were in the business in the early JavaScript days, know every single bit in jQuery and learnt a lot about Knockout, Angular, and React. But time goes on. So he moved almost all projects to either AngularJS or Angular 2+. He thinks that knowing one Framework really well is more for our customers than knowing a lot just good. So he decided to do more and start contributing to the Angular ecosystem by creating awesome libraries and components.\nCan one contribute?\nYes, drop me an email with some \"about me\" stuff. Even simple feedback is appreciated.\n\nLooking for an Angular Dev?\nYes, I'm available for all kind of remote jobs. If you need a really good full-stack dev, than drop me an email (joerg@krause.de) or write through my homepage's contact form.\nI write sophisticated stuff quickly and in very high quality in these technologies:\n\nFrontend: Angular, React\nBackend: Node, ASP.NET Core, Entity Framework Core\nCloud: Azure CosmosDb, Azure Functions, Azure Event Hub, Azure IoT, AWS S3, AWS Lambda\nOther: Alexa Skills\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nISC License\nCopyright (c) [2016-2018], [Joerg  Krause]\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SvogvModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SvogvModule\n\n\n\ncluster_SvogvModule_declarations\n\n\n\ncluster_SvogvModule_providers\n\n\n\n\nwd.FormatDataPipe\n\nwd.FormatDataPipe\n\n\n\nSvogvModule\n\nSvogvModule\n\nSvogvModule -->\n\nwd.FormatDataPipe->SvogvModule\n\n\n\n\n\nFormValidatorService\n\nFormValidatorService\n\nSvogvModule -->\n\nFormValidatorService->SvogvModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            displayGroupType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            displayType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            emailType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            formatType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            hiddenType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            maxlengthType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            minlengthType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            patternType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            placeHolderType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            rangeType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            readonlyType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            requiredType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            stringLengthType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            StyleRules   (projects/.../datagridstyle.model.ts)\n                        \n                        \n                            templateHintType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            validatorType   (projects/.../formvalidator.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/services/formvalidator.model.ts\n    \n    \n        \n            \n                \n                    \n                    compareType\n                \n            \n            \n                \n                    Compare to fields.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    displayGroupType\n                \n            \n            \n                \n                    This element describes the grouping of elements in fieldset-controls. Each\nfield that is decorated in an DisplayGroup with the very same name is grouped\ninto that part. The name appears in the fieldsets legend-control. The\ndescription makes a tooltip. If there are more groups the order is controlled\nby the orderelement.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    displayType\n                \n            \n            \n                \n                    This element describes the UI elements label, tooltip, and order.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    emailType\n                \n            \n            \n                \n                    Email\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    formatType\n                \n            \n            \n                \n                    A pipe driven formatting instruction.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    hiddenType\n                \n            \n            \n                \n                    The field will not appear in autoforms if decorated as hidden. If the parameter\nis omitted the type returns true due to its pure existence.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    maxlengthType\n                \n            \n            \n                \n                    Maximum allowed length (string only)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    minlengthType\n                \n            \n            \n                \n                    Minimum allowed length (string only)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    patternType\n                \n            \n            \n                \n                    Any regex pattern\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    placeHolderType\n                \n            \n            \n                \n                    A watermark can be applied. The property is the value thatappears\nin the field. This may not work for specific controls, such as list boxes.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    rangeType\n                \n            \n            \n                \n                    A range for number or Date only.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    readonlyType\n                \n            \n            \n                \n                    The field in rendered as readonly, if possible.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    requiredType\n                \n            \n            \n                \n                    This field is mandatory.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    stringLengthType\n                \n            \n            \n                \n                    Maximal and minimal allowed length (string only).\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    templateHintType\n                \n            \n            \n                \n                    This controls the actual control type. The default values are (TypeScript type: decorator type: rendered element):\n\nstring: text: \ndate: calendar: \nboolean: boolean: \nnumber: number: \n\nThis is the formatting that's automatically applied. The template hint goes after and can change any of these values.\nThe allows values are:\n\nany: textarea: \narray: enum:  \narray: list: \nany: template: The content of the editor element (does not work with )\n\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    validatorType\n                \n            \n            \n                \n                    Base type for validators.\nGive a private error message in @param msg. If omitted a error message will be generated.\nSet to active by using @param active. Default is true.\nActive i18n by using the @param translate. The translation module must be used separately.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts\n    \n    \n        \n            \n                \n                    \n                    StyleRules\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            displayDesc   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            displayName   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            displayOrder   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            FILTER   (projects/.../webpack.test.config.ts)\n                        \n                        \n                            hasSortCallback   (projects/.../hint-sortable.decorator.ts)\n                        \n                        \n                            isHidden   (projects/.../hint-hidden.decorator.ts)\n                        \n                        \n                            isSortable   (projects/.../hint-sortable.decorator.ts)\n                        \n                        \n                            KARMA_SPEC_FILTER   (projects/.../webpack.test.config.ts)\n                        \n                        \n                            provider   (projects/.../svogv.module.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            SVOGV_COMPONENTS   (projects/.../svogv.module.ts)\n                        \n                        \n                            uiHint   (projects/.../hint-uihint.decorator.ts)\n                        \n                        \n                            webpack   (projects/.../webpack.test.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-display.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            displayDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'displayDesc'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'displayName'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'displayOrder'\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/webpack.test.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FILTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.KARMA_FILTER\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            KARMA_SPEC_FILTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/.spec.ts$/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            webpack\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('webpack')\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-sortable.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasSortCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sortCallback'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'isSortable'\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-hidden.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'isHidden'\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/svogv.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FormValidatorService]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SVOGV_COMPONENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  wd.DataGridComponent,\n  wd.DataGridPaginationComponent,\n  wd.TreeViewComponent,\n  wd.TreeViewNodeComponent,\n  wd.EditorComponent,\n  wd.AutoFormComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-uihint.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiHint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'uiHint'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/package-construction.html":{"url":"additional-documentation/package-construction.html","title":"additional-page - Package Construction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nThis documentation describes the background and internal functionality of the SVOGV project. It's primarily for learning purposes.\nIt's not a replacement of the common documentation for developers using the library.\nMaking Of -- How I wrote a NPM package\n\nThis is work in progress. Come back often to get recent updates. Currently it's version 0.7.3, published May 1st, 2019. The current version embraces Angular 7.x. It's working with Angular 2.x onwards.\n\nThe primary part is a almost complete introduction into the world of modern web frontend development. It encapsulates the\ntool chain, languages, repositories, cloud service and everything else you need to create awesome apps.\nThe second part is the actual development work -- the app's code and frameworks. I decided to use Angular 2 and Bootstrap 4\nas a foundation. Angular 2 introduced as familiar concept in a new way for the web: components. By building a component tree a web app gets better maintainability and clear design, that's closer to the \"treeish\" nature of HTML. It fits better in the Browser's ecosystem\nthan the traditional MVC (model view controller) model.\nA big step for web developers was the usage of TypeScript. While other pre-compilers or transpilers are around for years (CoffeeScript for instance),\nTypeScript had the most mature and professional approach. It brings web development to an enter a new level.\nHowever, this comes with a penalty. The learning curve is steep. The setup is huge and confusing. And the effort to get a simple app running\nis enormous. If you create a huge app, however, it's a trade off. Your code becomes cleaner, easier to maintain, better to read. Your development\nspeed will grow and you can be fast, really fast creating stuff. The setup effort is a one time process and hence it's usually a no-brainer.\nWhat's this about\nThis document describes the following:\n\nThe foundation of the TS/JS-ecosystem\nUsing Gulp as a build tool\nUsing Travis for CI (continues integration)\nSetup of a professional NPM package\nRules to develop a concise library\n\nThe foundation\nFirst, you need to now how to create stuff and how to deploy stuff. You need these things first:\n\nAn editor\nA command line and some tools to build and deploy your stuff\nA server to host your stuff\nA browser to view your stuff\n\nSo, that's it.\nMissing the Operating System? No problem. Choose what you like. Everything shown here will run on Linux, Windows, and even a Mac.\nSimply don't care. Welcome to the brave new world.\nNeed something to buy? No, not at all. Everything is open source and free. At least as long as you build OS stuff by yourself. For enterprises\nare some more options, such as private repositories. That's the way some companies make some money. But even so, it's really cheap. So no\nworries again.\nSome of the tools run in the cloud. I strongly recommend considering to use these tools. It saves you tons of time and money. Unless you work\nfor a secret service you don't get any benefits from doing everything locally. The amount of data you need to transfer is small. Even a bad\nconnection is usually sufficient.\nTo setup a project like this you start right now that way:\n1. Load an Editor\nI use Visual Studio Code, but you may try some others to achieve your code tasks. Some alternatives are:\n\nSublime Text\nVIM\nAtom\n\n\nA good description of all of these can be found here.\n\n2. Setup your project\nModern web development is file based. No hidden stuff, no secret folders, nothing but plain text files. Any drawback? Yes, there are many\ndifferent files needed. A lot of them, really. While writing this I made a quick count of SVOGV project, locally:\n46.822 files, 6.323 folders\nYou say: you're kidding, dude? I say: No, bro, that's the way it is. But I have good news to you. The majority is from references, dependencies\nI have to get my stuff running. Most of the libraries we use are from NPM (node package manager). That's the repository for node moduls. We take a look\ninto this shortly. The folder where all the stuff is has the name node_modules. What's in it:\n30.107 files, 4.233 folders\nSo we're pretty much down by 60%, but it's still way to many. So let's exclude more:\n\na folder /dist where my project gets published to. That generated from a script and hence I don't care (1.987 files, 170 folders).\nagain a folder named node_modules and another one called bower_components in the Demo app, counting for 13.596 files and 1.607 folders.\n\nSo what we get:\n\n\n\nPart\nFiles\nFolder\n\n\n\n\nNode Rep\n30107\n4233\n\n\nDist\n1987\n170\n\n\nDemo Reps.\n13569\n1607\n\n\n-----------\n-------\n--------\n\n\nTotal\n45690\n6010\n\n\n\nSo, finally, my own stuff is 1.132 files in 313 folders. That's still a lot, but not a much as I don't can't handle it.\nSo, start creating a folder where all the files go. Let's call it like the project: 'svogv' (you choose another name for your project, of course).\nSomewhere on my disc I type:\n$ mkdir svogv\nThe prompt I use here is $ like most *nix systems have. I remove the concrete path and you can do same on Windows as well. I recommend to choose a short start point, such as C:\\App>, too.\n\nThen go into this:\n$ cd svogvOnce you're here it's boring empty. So we need some tools to get stuff in here. The first set of tools is part of the JavaScript ecosystem:\n\nGit - host your repository and manage versions\nNode - The engine that does the hard work\n\nAnd here is how to setup node.\nNext, Git is required. Check first if it is already present on your system:\n$ git --versionIf not, install according your operating system. \nThen, an account on Github is required. Finally, the package will be hostet on Github and partially distributed to NPM. While there are alternative ways, such as Bitbucket, I recommend Github for beginners because the sheer amount of literature, support, websites, and answers on Stack Overflow\nis overwhelming. And it is, last but not least, easy enough to get the point in short time.\nSo, go to GitHub, and set up an account.\nNow, we're set and the journey into the package creation can begin. The package is about Angular 2 components and I assume that you have at least a basic\ninterest in Angular 2 stuff. So apart from talking about the package structure I'm going to explain all the component stuff as well.\nYou can continue reading here:\n\nCreate an NPM package\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/package-construction/create-an-npm-package.html":{"url":"additional-documentation/package-construction/create-an-npm-package.html","title":"additional-page - Create an NPM package","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCreate an NPM package\nWhile we host the whole development project on Github the NPM package shall contain just that part a potential user will use.\nHence, we have to create a folder structure that supports this. A good structure would look like this:\n\\src  \n\\test\n\\dist\n\\docs\n\\guides\n\n\\node_modules\\\n\\scripts\n\\toolsThe first block is the working part, here is where you write your project's code. The second block is the supporting infrastructure and\ndepends on what you really need and want. Usually the code in here is either from an external repository (node_modules) or is being\ncreated one time and than just invokes tasks once needed.\nThe working part consists has two special folders: \\docs and \\guides. As you may know is a good documentation the foundation of your\nwhole project. Without the docs everything has less value. The documentation shall support two parts. Those who want to learn about the \nproject before making a decision to give it a try. And those who actively work with the code. In my project I have splittet the two parts\naccordingly. The reason is not necessarily the ability to split the documentation. It's because Github has a distinct support for such\ntexts and I want to make use of it. The first folder we're looking into is \\docs. This is where this very text resides.\nRead about Github Pages and Markdown to get a head start.\nSetup the Sources\nYou probably want to start with a \"real\" project and take care about the supporting stuff later. That's fine. So let's first setup what we need\nat least to get things into NPM. For my project it's sort of a library. So I create a folder \\lib:\n\\src\\libBecause a library needs a lot of testing I am lazy writing plain text a demo app is a good choice. That resides in another folder:\n\\src\\demoThe pure package is in \\src\\lib. This is what you get when pulling the package from NPM. Everything else is on Github and the user who wants\nmore must go there. That's why we need the README files. It's all about pointing quickly to the right folders.\nInitialize the Package\nNow once you in the \\lib folder you can start creating your project. Open a command prompt and enter this:\nnpm initIt's an interactive quest:\n\nThere are few things you need to think about before you start:\n\nName of the project (in lower case only -- NPM does not allow upper case characters)\nLicense (such as ISC, MIT, or Apache)\nDescription (this will appear very prominently on NPM)\nKeywords (in case you care about new users)\n\nThis will create a new file package.json. It's more or less the center of your app. It's where all commands you can start come from. \nThe final file in my project looks like this:\n{\n  \"name\": \"svogv\",\n  \"version\": \"0.6.0\",\n  \"description\": \"An advanced library for Angular 6 (Angular in general) for model driven forms and validation support.\",\n  \"main\": \"./bundles/svogv.umd.js\",\n  \"module\": \"./index.js\",\n  \"typings\": \"./index.d.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/joergkrause/svogv.git\"\n  },\n  \"keywords\": [\n    \"angular\",\n    \"angular2\",\n    \"angular4\",\n    \"Reactive\",\n    \"Forms\",\n    \"Validation\",\n    \"Viewmodel\",\n    \"decorators\",\n    \"components\"\n  ],\n  \"license\": \"ICS\",\n  \"bugs\": {\n    \"url\": \"https://github.com/joergkrause/svogv/issues\"\n  },\n  \"homepage\": \"https://github.com/joergkrause/svogv#readme\",\n  \"peerDependencies\": {\n    \"@angular/common\": \"^2.2.0\",\n    \"@angular/compiler\": \"^2.2.0\",\n    \"@angular/core\": \"^2.2.0\",\n    \"@angular/forms\": \"^2.2.0\",\n    \"@angular/http\": \"^2.2.0\",\n    \"@angular/platform-browser\": \"^2.2.0\",\n    \"@angular/platform-browser-dynamic\": \"^2.2.0\",\n    \"@angular/router\": \"^3.1.0\",\n    \"core-js\": \"^2.4.1\",\n    \"rxjs\": \"^5.4.2\",\n    \"systemjs\": \"^0.19.38\",\n    \"zone.js\": \"^0.8.16\"\n  }\n}If you now compare this with yours you find that some parts are missing. Let's dive into package.json first to get what's important. There are few \noptions that simply help others to navigate in your project. These parts are:\n  \"bugs\": {\n    \"url\": \"https://github.com/joergkrause/svogv/issues\"\n  },\n  \"homepage\": \"https://github.com/joergkrause/svogv#readme\",\nThey are just pointers to the repository. NPM will extract the values and use this to create links:\n\nFortunatly, if your repository already exists, the paths are right where they shall be. \nAnother part is not yet missing: the dependencies. This part we develop while creating the project. So leave it empty right now. \nThe Project's Core files\nThe project we create is an Angular 2 library, created with TypeScript. So we need to setup this properly. The files we need are:\n\nREADME.md: \n  The documentation's entry point. This file is shown on NPM (not on GitHub). It's sort of your homepage. Remember that we're currently in the \\src\\lib\\ folder and create just the library. The Github's readme will come later.  \n\ntsconfig.json:\n  The configuration for the TypeScript transpiler. That's covered in the chapter about TypeScript.\n\ntypedoc.json:\n  The configuration for the API documentation generator. That's covered in the chapter about API Documentation.\n\nTwo files are just for testing. That's covered in the chapter about unit testing:\n\nsystem-config-spec.ts\ntsconfig-srcs.json\n\n\n\nBefore you can proceed we need to setup a basic build tool chain. The build process is not part of the library nor the demo we write. It's our personal\neffort to assure things go well for our users. That happens in the main (root) folder of the project.\nYou remember the folder structure we started with? \n  \\root\n    \\src\n      \\lib\n      \\demo\n    \\node_modules\n    \\scripts\n    \\test\n    \\tools\nThe part in \\src\\lib is almost done. Now we go to the root folder and setup the build tool chain. We use these tools here:\n\nGulp: An script runner to automate tasks\nTypeScript: The transpiler from TS in JS\nSass: Transpiler for SCSS files into CSS\nTravis: A continuees integration tool to monitor the builds\nKarma: Unit Tests for JavaScript\n\nSetup the Core\nThere are two ways to setup a project. You can use npm and the command line to execute all parts one by one. Or you can create a file named package.json and\nlet the npm tool request all dependencies. Because of the sheer amount of tools we usually need the second way is now way better. So, start by putting this file\nin your root folder:\n{\n  \"name\": \"your-project\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Some good description.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"build\": \"gulp build\",\n    \"demoall\": \"gulp build && cd src/demo && npm run exec\",\n    \"execdemo\": \"cd src/demo && npm run exec\",\n    \"test\": \"gulp test\",\n    \"tslint\": \"gulp lint\",\n    \"stylelint\": \"gulp lint\",\n    \"deploy\": \"firebase deploy\",\n    \"docs\": \"gulp docs\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/your-git-name/your-project.git\"\n  },\n  \"keywords\": [\n    \"Angular\",\n    \"Reactive\",\n    \"Forms\",\n    \"Forms\",\n    \"Validation\",\n    \"Viewmodel\",\n    \"decorators\"\n  ],\n  \"author\": \"Your Public Name\",\n  \"license\": \"ISC\",\n  \"engines\": {\n    \"node\": \">= 5.4.1 Remember changing the descriptive parts:\n\nSave this as package.json into the root. Open a command prompt and excute this command:\nnpm updateYou will have a new folder right now: node_modules. There is no need to touch this folder, ever. npm will do this for you. First check if Gulp is now\npresent by typing \ngulp -vIt should respond like this:\n\n\nIf you see nothing or just an error that gulp is not yet present setup Gulp first.\n\nThe first part of the setup refers to Gulp. Gulp requires a file called gulpfile.js \nto run so called tasks. Because I want use TypeScript my gulpfile is somewhat special:\n'use strict';\n/**\n * Load the TypeScript compiler, then load the TypeScript gulpfile which simply loads all\n * the tasks. The tasks are really inside tools/gulp/tasks.\n */\n\nconst path = require('path');\n\n// Register TS compilation.\nrequire('ts-node').register({\n  project: path.join(__dirname, 'tools/gulp')\n});\n\nrequire('./tools/gulp/gulpfile');The ts-node is a TypeScript execution environment and REPL (Read Execute Print Loop) for node. It's hence sort of an on-the-fly transpiler for TypeScript.\nUsing this we can write the Gulp stuff in TypeScript and Gulp will still execute plain JavaScript.\nBuild tasks\nYou can build and start everything like this:\n\nGo to root of the project\nrun npm run build: build the library \nrun npm run demoall: build libary, demo, and run the demo using local HTTP server on port 3000\nrun npm run execdemo: build and run demo using local HTTP server, but keep library as is\nrun npm run tslint: run the linter for the library\n\n\nYou can run more tasks specific to the demo from there\ncd src/demo and then the particular task \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/about.html":{"url":"additional-documentation/about.html","title":"additional-page - About","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\nSVOGV is an ongoing project that helps Angular developers to create awesome apps quite fast.\n\nAbout me\nI have many years of experience with Web-Frameworks. I’m in the business since the early JavaScript days, know every single bit\nin jQuery and learnt a lot about Knockout, Angular, and Durandal. But time goes on.\nNow Angular is here for a while – the very first time in years – such a strong feeling in our guts that’s now the first step from ancient\ncrap into something really professional. It brings the level we all know from Java and C# and the mature backend frameworks to the front\nend.\nAnd it goes on. TypeScript is here and know we have something that’s an improvement for front end developers that matters:\nTypeScript brings a whole new level to pros like us. And it makes out world easier – at least a bit. And it improves the quality of our\nproduct – not just a bit, a whole new step.\nThe last years brought a lot experience and some nice projects and the outcome is an advanced peace of software that’s going to make our life\nwith Angular a lot easier.\nPurpose\nThis is a project that helps creating sophisticated Angular components. It's not really just for adding to packages and using, but more for\nlearning. There will be a book available that explains the making of completely (planned by June 2019).\nImpress\n  Jörg Krause\n  Hafersteig 113\n  12683 Berlin\n  Germany\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
