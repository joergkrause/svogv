var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/Array.html",[0,1.225,1,1.135]],["body/interfaces/Array.html",[0,1.745,1,2.139,2,2.617,3,0.527,4,0.588,5,0.412,6,0.588,7,5.734,8,4.078,9,0.652,10,1.301,11,2.83,12,5.734,13,0.861,14,4.078,15,1.018,16,0.03,17,0.527,18,0.412,19,0.788,20,4.859,21,0.937,22,4.078,23,4.859,24,4.859,25,2.059,26,4.859,27,3.18,28,6.1,29,2.399,30,4.859,31,1.617,32,0.937,33,4.859,34,1.193,35,4.859,36,1.5,37,0.021,38,0.025,39,0.021]],["title/components/AutoFormComponent.html",[40,0.837,41,1.549]],["body/components/AutoFormComponent.html",[1,1.935,3,0.314,4,0.575,5,0.245,6,0.35,9,0.388,10,0.928,13,1.03,16,0.03,17,0.515,18,0.402,19,0.663,21,0.789,25,1.956,31,0.962,32,0.558,34,1.165,36,1.465,37,0.013,38,0.018,39,0.013,40,1.337,41,2.344,42,1.361,43,1.557,44,1.313,45,1.038,46,1.99,47,1.557,48,1.212,49,2.891,50,0.388,51,2.548,52,2.676,53,2.791,54,3.377,55,1.715,56,1.715,57,3,58,1.858,59,2.548,60,4.091,61,3.433,62,2.019,63,1.715,64,1.58,65,2.676,66,1.715,67,2.019,68,2.891,69,2.019,70,2.019,71,1.858,72,2.557,73,1.427,74,3.199,75,2.931,76,3,77,3.481,78,3.481,79,3.984,80,3.106,81,3.984,82,3.984,83,4.43,84,5.069,85,2.001,86,3.106,87,3.481,88,2.806,89,3.106,90,3.106,91,3.984,92,4.747,93,2.203,94,4.091,95,0.928,96,2.28,97,3.377,98,3.7,99,4.332,100,2.78,101,2.203,102,3.343,103,4.747,104,1.58,105,2.891,106,2.891,107,3.433,108,1.858,109,0.827,110,1.262,111,2.891,112,4.091,113,1.853,114,2.418,115,2.676,116,4.091,117,3,118,2.891,119,1.259,120,2.891,121,1.038,122,2.891,123,2.891,124,0.928,125,1.99,126,0.71,127,1.557,128,1.557,129,2.891,130,0.512,131,0.35,132,2.891,133,4.091,134,1.892,135,1.427,136,4.091,137,4.746,138,4.746,139,1.892,140,1.709,141,1.427,142,4.747,143,2.891,144,2.891,145,1.557,146,4.332,147,4.747,148,5.161,149,0.725,150,4.747,151,5.161,152,1.427,153,2.891,154,2.891,155,2.891,156,2.891,157,2.891,158,1.557,159,2.934,160,2.426,161,1.892,162,2.891,163,3.481,164,2.019,165,1.709,166,2.676,167,2.891,168,4.091,169,4.091,170,4.091,171,2.891,172,1.212,173,2.891,174,2.12,175,1.038,176,2.426,177,1.709,178,1.313,179,2.426,180,2.891,181,2.891,182,2.891,183,2.891,184,1.121,185,1.121,186,1.858,187,2.891,188,2.676,189,3.433,190,4.091,191,2.891,192,2.891,193,4.091,194,2.019,195,1.313,196,1.892,197,2.78,198,1.557,199,1.557,200,1.313,201,1.557,202,1.427,203,1.212,204,1.557,205,1.313,206,1.557,207,1.427,208,1.557,209,1.427,210,1.557,211,1.557,212,1.557]],["title/components/DataGridComponent.html",[40,0.837,200,1.549]],["body/components/DataGridComponent.html",[1,0.845,3,0.168,4,0.39,5,0.273,6,0.188,9,0.208,10,0.576,13,1.113,15,0.532,16,0.03,17,0.404,18,0.53,19,0.412,21,0.793,31,1.24,32,1.062,34,0.623,36,0.479,37,0.007,38,0.011,39,0.007,40,1.009,41,0.704,42,0.845,43,0.835,44,0.704,45,2.035,46,1.722,47,0.835,48,0.65,50,0.341,52,1.661,55,2.344,56,1.561,58,1.153,66,1.064,67,1.838,69,2.555,71,1.153,72,1.736,73,0.765,74,2.618,75,2.399,78,3.013,80,1.015,82,1.301,83,2.732,85,0.601,86,1.661,88,1.501,89,2.437,93,1.367,95,1.103,96,2.37,100,2.006,101,1.367,109,1.641,110,1.901,113,0.912,119,1.334,121,1.672,124,0.731,125,2.308,126,0.381,128,2.006,130,0.275,131,0.498,134,1.015,135,1.253,149,1.054,163,1.137,166,1.015,178,0.704,184,1.249,185,1.593,186,0.704,188,1.661,194,1.253,195,0.704,196,1.015,197,2.006,198,0.835,199,0.835,200,1.692,201,0.835,202,0.765,203,1.722,204,0.835,205,0.704,206,0.835,207,0.765,208,0.835,209,0.765,210,0.835,211,0.835,212,0.835,213,1.551,214,1.692,215,2.13,216,1.501,217,2.13,218,2.437,219,1.367,220,1.253,221,2.721,222,2.13,223,1.501,224,1.862,225,1.862,226,2.538,227,1.838,228,2.538,229,2.702,230,1.591,231,2.618,232,1.501,233,2.538,234,1.501,235,2.538,236,1.862,237,1.253,238,2.006,239,0.912,240,1.501,241,2.732,242,3.416,243,2.538,244,1.367,245,0.912,246,1.661,247,1.253,248,2.538,249,1.862,250,2.555,251,1.862,252,1.661,253,1.501,254,1.501,255,3.223,256,3.223,257,2.13,258,1.862,259,3.223,260,2.538,261,3.223,262,1.351,263,3.223,264,3.223,265,1.591,266,3.223,267,0.995,268,3.223,269,3.223,270,1.157,271,3.223,272,2.538,273,3.725,274,3.725,275,3.223,276,3.223,277,3.796,278,3.223,279,3.223,280,3.725,281,4.109,282,4.109,283,4.109,284,4.109,285,4.109,286,1.661,287,2.705,288,2.705,289,1.501,290,2.363,291,1.551,292,2.538,293,2.887,294,2.538,295,1.862,296,1.862,297,1.367,298,1.367,299,2.873,300,2.538,301,2.688,302,1.551,303,2.538,304,2.213,305,2.363,306,1.551,307,1.253,308,2.109,309,1.501,310,1.551,311,1.501,312,2.538,313,2.538,314,2.13,315,2.538,316,2.13,317,1.551,318,3.06,319,1.862,320,0.912,321,2.538,322,1.551,323,2.538,324,4.412,325,2.13,326,1.551,327,3.725,328,3.564,329,3.602,330,2.732,331,3.126,332,1.551,333,1.551,334,3.564,335,1.551,336,1.551,337,1.153,338,1.661,339,1.661,340,1.551,341,1.391,342,1.551,343,2.732,344,1.551,345,2.13,346,1.064,347,2.13,348,2.538,349,1.501,350,1.952,351,1.551,352,2.457,353,3.725,354,2.004,355,2.437,356,3.725,357,2.13,358,3.725,359,2.732,360,3.416,361,2.732,362,1.551,363,2.13,364,2.538,365,3.18,366,1.551,367,2.13,368,1.661,369,0.912,370,2.705,371,3.725,372,2.213,373,2.178,374,0.601,375,6.1,376,1.551,377,1.551,378,1.551,379,2.538,380,4.362,381,1.551,382,2.538,383,1.551,384,2.538,385,1.551,386,2.538,387,1.551,388,2.109,389,1.551,390,2.538,391,1.551,392,2.538,393,1.551,394,2.538,395,1.551,396,2.538,397,1.551,398,2.538,399,1.551,400,2.538,401,1.551,402,1.862,403,2.13,404,1.862,405,1.661,406,1.253,407,2.538,408,1.501,409,2.13,410,2.538,411,1.736,412,1.444,413,1.862,414,1.064,415,2.538,416,1.862,417,3.703,418,4.412,419,2.887,420,1.551,421,1.551,422,2.538,423,3.223,424,1.905,425,1.551,426,1.551,427,1.551,428,1.551,429,1.551,430,1.551,431,1.551,432,0.917,433,0.479,434,1.551,435,3.725,436,1.551,437,1.551,438,1.551,439,1.551,440,1.551,441,1.551,442,1.551,443,1.551,444,1.015,445,0.917,446,1.551,447,1.551,448,0.917,449,2.538,450,1.501,451,1.551,452,1.301,453,1.301,454,2.538,455,1.301,456,1.551,457,2.538,458,1.551,459,1.551,460,1.015,461,2.538,462,1.301,463,2.538,464,1.551,465,1.551,466,1.551,467,1.301,468,1.551,469,2.538,470,1.301,471,4.412,472,1.551,473,1.551,474,1.301,475,1.551,476,1.736,477,1.862,478,1.551,479,3.126,480,2.363,481,1.551,482,1.551,483,1.551,484,1.862,485,1.862,486,1.551,487,2.705,488,2.538,489,0.601,490,1.301,491,1.015,492,1.551,493,1.137,494,1.015,495,2.538,496,1.862,497,1.301,498,2.538,499,2.538,500,1.301,501,1.551,502,1.015,503,1.301]],["title/classes/DataGridHeaderModel.html",[131,0.413,504,2.501]],["body/classes/DataGridHeaderModel.html",[3,0.357,4,0.399,5,0.279,6,0.399,9,0.442,13,1.133,15,1.196,16,0.03,17,0.639,18,0.542,19,1.044,29,2.511,32,0.635,36,1.017,37,0.014,38,0.02,39,0.014,45,1.608,46,1.877,50,0.601,64,1.9,95,1.239,96,2.278,104,1.096,109,1.779,110,1.57,119,1.562,124,1.016,126,0.809,130,0.584,131,0.399,149,1.158,152,2.21,172,1.877,174,4.32,184,2.214,186,2.675,218,2.93,220,2.21,221,2.034,229,2.48,230,2.511,239,1.183,246,2.93,253,2.647,293,3.329,295,3.284,299,2.647,318,3.008,320,1.608,337,2.48,339,2.93,341,1.815,365,3.854,367,3.758,373,2.511,406,2.511,411,2.412,412,2.479,433,1.57,448,3.228,489,2.41,504,3.284,505,3.294,506,4.478,507,2.818,508,4.27,509,3.731,510,3.329,511,3.008,512,5.088,513,2.765,514,3.294,515,4.478,516,5.088,517,1.57,518,5.088,519,4.27,520,4.27,521,3.329,522,2.511,523,5.46,524,3.294,525,4.478,526,3.294,527,2.412,528,3.294,529,3.294,530,2.93,531,3.758,532,3.758,533,3.294,534,2.93,535,2.647,536,2.93,537,2.93,538,3.294,539,1.877,540,2.93,541,3.731,542,3.294,543,3.758,544,2.21,545,3.294,546,3.294,547,3.294,548,3.294,549,2.416]],["title/classes/DataGridModel.html",[131,0.413,305,2.501]],["body/classes/DataGridModel.html",[1,1.612,3,0.207,4,0.231,5,0.162,6,0.231,9,0.256,10,0.681,13,1.128,15,1.099,16,0.03,17,0.621,18,0.541,19,0.851,21,1.133,25,1.983,27,1.249,29,0.942,31,1.873,32,1.065,34,1.288,36,1.295,37,0.008,38,0.013,39,0.008,50,0.563,55,1.257,63,0.8,66,1.257,95,1.035,96,2.333,104,0.635,109,1.305,110,1.143,121,1.937,124,0.953,126,0.468,128,1.615,130,0.531,131,0.552,145,1.028,149,1.041,152,1.828,164,0.942,165,1.773,166,2.746,172,2.314,174,2.199,175,1.077,177,1.128,184,1.436,185,1.769,186,2.3,195,0.867,214,1.362,223,2.189,224,2.199,227,1.48,230,2.072,239,0.685,240,1.128,242,3.078,244,1.028,245,0.685,247,1.48,254,1.773,265,0.942,267,1.766,270,2.021,277,3.078,287,2.516,288,2.516,289,1.773,299,3.573,301,1.962,305,2.199,307,1.48,311,2.481,318,1.128,325,3.522,328,3.551,329,2.746,334,3.551,337,2.072,343,3.078,349,1.773,350,2.262,352,1.906,355,2.746,357,3.108,363,3.108,365,1.249,368,1.249,369,1.077,372,2.608,373,0.942,374,0.74,388,3.613,406,1.48,444,2.423,445,2.189,448,2.481,450,2.697,476,1.028,489,1.769,504,3.714,510,2.746,527,1.615,530,1.249,540,1.962,543,2.516,549,2.199,550,1.602,551,2.998,552,2.998,553,2.516,554,2.516,555,4.802,556,4.197,557,1.077,558,2.998,559,2.516,560,3.522,561,4.842,562,2.516,563,3.704,564,3.704,565,3.704,566,5.065,567,3.704,568,3.704,569,3.704,570,2.998,571,4.197,572,2.998,573,3.704,574,3.704,575,3.704,576,3.704,577,2.998,578,2.516,579,2.998,580,3.704,581,3.704,582,2.998,583,4.196,584,2.998,585,1.908,586,1.908,587,1.908,588,4.197,589,1.908,590,1.908,591,1.908,592,3.522,593,2.998,594,1.962,595,1.962,596,2.516,597,1.908,598,2.697,599,2.998,600,1.908,601,2.516,602,2.998,603,4.197,604,2.998,605,2.985,606,4.842,607,2.998,608,1.908,609,2.998,610,1.908,611,2.746,612,3.078,613,4.197,614,4.197,615,4.197,616,5.245,617,2.998,618,1.908,619,2.998,620,1.908,621,1.828,622,2.998,623,2.516,624,1.615,625,1.773,626,1.615,627,1.962,628,2.998,629,1.908,630,2.998,631,5.245,632,1.908,633,1.908,634,2.261,635,2.998,636,2.516,637,2.998,638,2.998,639,2.998,640,1.773,641,1.773,642,1.773,643,2.998,644,3.828,645,2.998,646,2.998,647,1.908,648,1.908,649,2.998,650,1.48,651,1.908,652,1.908,653,1.908,654,1.908,655,1.908,656,1.908,657,1.908,658,1.908,659,1.908,660,1.908,661,1.908,662,1.908,663,1.908,664,1.908,665,1.908,666,1.908,667,1.908,668,1.908,669,1.908,670,1.908,671,2.516,672,1.908,673,1.908,674,1.773,675,1.908,676,1.908,677,1.908,678,1.908,679,1.4,680,1.602,681,1.908,682,1.908,683,1.908,684,2.998,685,4.197,686,3.704,687,1.4,688,1.602,689,1.908,690,0.942,691,1.908,692,1.908,693,1.908,694,2.998,695,2.998,696,1.908,697,1.4,698,1.908,699,2.998,700,1.908,701,1.4,702,1.908,703,1.4,704,2.998,705,2.998,706,2.998,707,1.602,708,1.4,709,0.867,710,1.908,711,1.908,712,2.998,713,2.998,714,1.908,715,2.998,716,2.998,717,2.998,718,1.908,719,1.908,720,0.867,721,0.74,722,1.908,723,1.602,724,1.4,725,1.615,726,1.908,727,3.432,728,1.908,729,1.602,730,1.908,731,2.998,732,1.908,733,2.516,734,1.908,735,1.908,736,1.908,737,2.998,738,1.908,739,1.908,740,1.249,741,1.4,742,1.908,743,1.908,744,1.908,745,1.908,746,1.908,747,1.908,748,1.908,749,1.908,750,1.908,751,1.908,752,1.908,753,1.908,754,1.908,755,1.908]],["title/components/DataGridPaginationComponent.html",[40,0.837,202,1.683]],["body/components/DataGridPaginationComponent.html",[1,0.998,3,0.325,4,0.587,5,0.254,6,0.363,9,0.65,10,0.953,13,1.093,15,1.015,16,0.03,17,0.599,18,0.516,19,0.786,21,1.012,25,1.508,31,1.397,32,0.579,34,1.031,36,0.926,37,0.018,38,0.018,39,0.013,40,1.515,41,1.362,42,1.397,43,1.616,44,1.362,45,1.077,46,1.257,47,1.616,48,1.257,50,0.403,51,2.072,69,2.589,70,2.072,71,1.907,72,2.609,73,1.481,74,3.229,75,2.959,85,1.163,91,4.634,93,2.261,95,0.953,100,2.826,101,2.261,109,1.386,113,1.508,121,1.884,124,0.681,125,2.03,126,0.736,130,0.532,131,0.363,149,0.858,172,2.03,175,1.077,194,2.589,195,1.362,196,1.963,197,2.826,198,1.616,199,1.616,200,1.362,201,1.616,202,2.589,203,2.03,204,1.616,205,1.362,206,1.616,207,1.481,208,1.616,209,1.481,210,1.616,211,1.616,212,1.616,221,1.907,225,4.616,229,1.907,230,2.072,237,1.481,245,1.508,257,3.523,258,3.079,262,1.76,267,1.971,286,2.747,289,2.482,297,2.261,301,2.747,329,2.747,330,3.079,339,2.747,350,2.03,352,2.599,355,3.169,374,1.163,424,2.482,450,2.482,578,4.065,596,3.523,626,1.616,756,3,757,3.523,758,3.079,759,4.198,760,2.747,761,2.826,762,2.072,763,2.747,764,3.079,765,4.198,766,4.198,767,4.843,768,4.843,769,4.198,770,4.843,771,4.843,772,2.072,773,4.198,774,4.843,775,4.198,776,4.198,777,3,778,2.482,779,4.198,780,3.523,781,3,782,2.747,783,2.072,784,5.246,785,5.246,786,4.198,787,3,788,3.523,789,3.079,790,2.747,791,4.198,792,3,793,2.747,794,3,795,4.198,796,3.169,797,3,798,2.747,799,4.198,800,4.843,801,3,802,5.522,803,3,804,3,805,3,806,3,807,3,808,4.198,809,4.198,810,3,811,4.198,812,5.246,813,3,814,3,815,3,816,3,817,4.843,818,1.257,819,2.2,820,2.518,821,5.522,822,3,823,3.523,824,1.773,825,3,826,3]],["title/interfaces/DatagridStyles.html",[0,1.225,290,2.501]],["body/interfaces/DatagridStyles.html",[0,1.583,2,2.375,3,0.478,4,0.534,5,0.374,6,0.534,9,0.592,16,0.03,17,0.478,18,0.563,19,1.102,37,0.019,38,0.024,39,0.019,95,1.227,130,0.958,149,0.958,159,3.285,244,3.285,245,2.19,290,3.966,337,2.77,541,5.033,827,3.7,828,6.099,829,5.118,830,6.099,831,6.099,832,6.099,833,5.118]],["title/components/EditorComponent.html",[40,0.837,205,1.549]],["body/components/EditorComponent.html",[1,1.946,3,0.226,4,0.474,5,0.177,6,0.252,9,0.28,10,0.729,13,1.114,15,0.821,16,0.03,17,0.634,18,0.524,19,0.771,21,0.849,25,1.153,27,2.564,31,1.304,32,1.218,34,0.789,36,1.747,37,0.009,38,0.014,39,0.009,40,0.962,41,0.947,42,1.069,45,0.749,46,1.642,47,1.123,48,0.874,50,0.28,51,1.585,53,2.479,55,1.642,57,2.356,59,1.029,62,1.029,63,1.347,64,2.134,71,1.459,72,2.11,73,1.029,74,2.91,75,2.667,80,2.564,85,0.808,86,2.564,90,2.564,93,1.73,95,0.889,96,2.316,100,2.11,101,1.73,102,2.969,104,1.304,108,1.459,109,1.729,110,1.55,113,1.153,115,2.102,117,3.228,119,0.852,121,1.407,124,0.729,125,2.533,126,0.512,127,1.123,130,0.369,131,0.252,137,1.75,138,1.75,141,1.934,149,1.036,152,1.585,159,1.73,163,2.356,164,1.585,184,1.947,185,0.808,188,3.111,189,1.75,194,1.585,195,1.78,197,2.371,198,1.123,199,1.123,200,0.947,201,1.123,202,1.029,203,0.874,204,1.123,205,1.999,206,1.123,207,1.029,208,1.123,209,1.029,210,1.123,211,1.123,212,1.123,221,0.947,231,1.73,237,1.029,245,1.153,254,1.899,262,0.874,265,1.585,267,1.615,270,1.407,304,2.705,309,1.899,341,1.36,345,1.75,354,1.999,368,3.111,369,1.581,370,2.696,372,2.561,408,1.899,419,2.564,424,1.899,432,2.602,433,1.467,444,1.364,445,1.233,476,2.11,484,2.874,485,2.874,489,1.519,491,2.102,493,3.683,494,2.564,496,2.874,502,2.564,507,2.347,511,1.233,517,0.991,536,2.88,539,0.874,540,1.364,621,1.029,687,1.529,701,2.356,720,1.459,724,2.356,725,2.561,772,2.667,782,1.364,833,3.288,834,2.085,835,2.696,836,1.899,837,2.316,838,2.102,839,4.652,840,4.652,841,3.288,842,2.874,843,3.288,844,3.288,845,3.288,846,3.918,847,2.954,848,3.288,849,3.288,850,3.288,851,3.288,852,3.918,853,3.212,854,3.288,855,3.212,856,3.212,857,3.918,858,3.918,859,4.754,860,3.918,861,2.602,862,3.918,863,2.81,864,3.212,865,2.085,866,2.561,867,4.402,868,2.085,869,2.085,870,1.899,871,4.402,872,2.085,873,2.102,874,2.085,875,2.696,876,2.085,877,3.212,878,3.212,879,2.696,880,2.085,881,1.585,882,3.212,883,2.356,884,2.085,885,2.085,886,2.085,887,2.696,888,2.085,889,2.085,890,2.085,891,2.085,892,2.316,893,3.212,894,2.085,895,3.212,896,2.085,897,2.085,898,3.212,899,2.085,900,2.085,901,3.212,902,2.085,903,2.085,904,2.085,905,1.029,906,3.212,907,2.085,908,1.75,909,1.529,910,4.402,911,5.402,912,1.529,913,1.233,914,1.529,915,3.212,916,2.085,917,2.696,918,3.212,919,2.085,920,1.233,921,1.529,922,3.212,923,2.085,924,2.085,925,3.212,926,2.085,927,2.085,928,2.085,929,2.085,930,2.085,931,2.085,932,2.085,933,2.085,934,3.212,935,1.123,936,2.085,937,3.212,938,2.085,939,2.085,940,0.947,941,2.085,942,2.085,943,4.402,944,2.085,945,2.085]],["title/interfaces/FormValidatorModel.html",[0,1.225,946,2.501]],["body/interfaces/FormValidatorModel.html",[0,1.023,1,1.348,2,1.535,3,0.309,4,0.345,5,0.242,6,0.345,13,0.505,16,0.031,17,0.611,18,0.557,21,0.55,32,0.55,37,0.013,38,0.018,39,0.013,45,1.454,50,0.727,53,1.407,55,1.697,56,1.195,59,1.999,64,1.873,65,2.65,66,1.195,67,1.407,69,1.407,108,1.294,109,1.159,110,1.25,113,1.691,114,1.685,119,1.492,128,1.535,130,1.141,135,1.999,141,1.407,149,1.129,184,1.57,185,1.826,214,1.294,219,2.181,229,1.839,232,1.685,237,1.407,246,2.65,247,1.407,250,2.325,262,2.15,265,1.407,267,1.906,270,1.023,304,1.535,320,1.454,341,0.816,405,2.65,412,1.105,414,1.195,433,0.88,448,2.784,489,1.57,507,1.407,509,2.09,511,1.685,517,1.25,534,2.65,537,1.865,544,1.407,594,1.865,595,1.865,641,2.784,642,2.784,650,1.407,690,2.325,709,1.294,720,1.839,721,1.57,772,1.999,796,2.65,798,2.65,836,1.685,847,1.407,861,2.394,863,1.685,866,2.537,881,1.999,892,1.685,913,1.685,940,1.839,946,2.97,947,2.392,948,2.65,949,3.399,950,4.049,951,2.97,952,2.65,953,2.85,954,3.454,955,3.454,956,3.454,957,3.454,958,3.454,959,3.454,960,3.454,961,3.454,962,3.454,963,3.454,964,3.454,965,3.454,966,2.85,967,1.865,968,2.09,969,2.394,970,2.85,971,2.392,972,2.09,973,2.97,974,2.09,975,2.392,976,2.85,977,2.181,978,2.09,979,2.392,980,2.65,981,2.09,982,2.392,983,1.407,984,5.129,985,2.85,986,2.85,987,2.85,988,2.85,989,1.407,990,2.392,991,1.865,992,1.685,993,1.865,994,2.85,995,4.049,996,2.85,997,2.85,998,2.392,999,2.09,1000,2.394,1001,2.97,1002,1.685,1003,4.304,1004,2.392,1005,3.399,1006,2.392,1007,1.535,1008,2.392,1009,5.052,1010,1.839,1011,2.85,1012,2.394,1013,1.865,1014,3.454,1015,1.685,1016,1.865,1017,1.685,1018,2.392,1019,2.392,1020,2.392,1021,1.685,1022,2.392,1023,2.392,1024,1.865,1025,2.392,1026,2.392,1027,2.85,1028,2.85,1029,2.392,1030,2.85,1031,2.85,1032,2.85,1033,1.865]],["title/injectables/FormValidatorService.html",[905,1.683,1034,2.016]],["body/injectables/FormValidatorService.html",[1,1.018,3,0.332,4,0.37,5,0.259,6,0.37,9,0.411,10,0.966,13,0.867,15,0.891,16,0.03,17,0.462,18,0.471,19,0.69,21,0.59,25,2.343,31,1.416,34,1.299,36,0.944,37,0.013,38,0.019,39,0.013,50,0.411,51,2.1,54,3.639,55,2.476,56,1.282,59,2.915,62,2.1,66,2.052,67,2.1,70,1.51,95,1.307,96,1.757,97,2.001,102,3.617,104,1.018,124,1.201,126,0.751,127,1.647,128,2.292,130,0.542,131,0.593,135,1.51,145,1.647,159,2.292,172,1.784,175,1.9,177,1.808,185,1.65,214,1.933,227,2.1,229,1.389,262,2.052,267,1.313,270,1.757,338,2.785,369,1.528,402,2.243,411,2.292,414,2.218,444,2.785,445,2.516,539,1.784,557,1.757,583,3.88,687,3.121,690,1.51,697,3.121,720,2.223,729,3.572,818,1.282,836,3.128,838,3.462,854,3.572,905,2.416,935,1.647,940,1.933,1000,2.516,1010,1.389,1015,1.808,1017,1.808,1024,2.785,1033,2.785,1034,2.516,1035,2.243,1036,3.059,1037,4.107,1038,2.785,1039,3.572,1040,4.256,1041,2.1,1042,2.516,1043,2.785,1044,3.059,1045,3.059,1046,5.758,1047,2.292,1048,3.059,1049,5.758,1050,4.256,1051,4.256,1052,3.059,1053,3.589,1054,3.059,1055,3.059,1056,2.567,1057,3.059,1058,2.567,1059,3.059,1060,3.059,1061,3.059,1062,3.059,1063,3.059,1064,3.059,1065,4.256,1066,5.561,1067,4.256,1068,3.121,1069,3.572,1070,4.256,1071,2.243,1072,3.059,1073,3.059,1074,3.059,1075,4.256,1076,4.256,1077,3.059,1078,5.907,1079,3.059,1080,3.059,1081,3.059,1082,4.256,1083,3.059,1084,3.059,1085,3.059,1086,3.059,1087,3.059,1088,4.256,1089,3.059,1090,3.059,1091,3.059,1092,3.059,1093,3.059,1094,4.256,1095,3.059,1096,3.059,1097,3.059,1098,3.059,1099,3.059,1100,4.256,1101,3.059,1102,4.256,1103,3.059,1104,3.059,1105,3.059,1106,3.589,1107,3.059,1108,3.059,1109,3.059,1110,3.059,1111,3.059,1112,3.059,1113,4.256,1114,3.059,1115,3.059,1116,3.059,1117,3.059,1118,3.059,1119,4.894,1120,4.894,1121,4.894,1122,3.059,1123,3.059,1124,4.256,1125,3.059,1126,2.567,1127,1.808,1128,3.059,1129,2.567,1130,2.243,1131,4.256,1132,3.059,1133,3.059,1134,3.059]],["title/pipes/FormatDataPipe.html",[412,1.322,1135,2.862]],["body/pipes/FormatDataPipe.html",[3,0.49,4,0.547,5,0.383,6,0.547,10,1.026,13,1.048,15,0.947,16,0.03,17,0.642,18,0.534,19,0.733,21,0.872,25,1.623,31,1.827,32,1.059,37,0.02,38,0.024,39,0.02,50,0.607,71,2.053,73,2.231,96,1.623,124,1.026,126,1.109,130,0.801,131,0.547,221,2.494,230,2.71,293,3.592,320,1.971,412,2.555,417,4.608,741,3.315,969,3.246,992,3.246,1135,4.608,1136,4.52,1137,3.246,1138,4.026,1139,5.49,1140,5.49,1141,4.608,1142,5.49,1143,4.52,1144,5.49,1145,6.302,1146,6.151,1147,4.52,1148,5.914,1149,5.49,1150,3.315,1151,4.52,1152,4.52,1153,4.52,1154,4.52]],["title/interfaces/ObjectConstructor.html",[0,1.225,1155,2.862]],["body/interfaces/ObjectConstructor.html",[0,1.323,2,1.984,3,0.4,4,0.718,5,0.312,6,0.446,8,3.092,9,0.494,10,1.095,13,0.855,14,3.092,15,1.011,16,0.03,17,0.524,18,0.409,19,0.783,21,0.931,22,3.092,25,1.932,27,3.521,29,2.382,31,2.165,32,0.711,37,0.016,38,0.021,39,0.016,95,0.836,104,1.226,110,1.762,119,1.613,145,3.338,149,0.653,152,3.103,220,1.818,251,3.946,365,2.41,433,1.489,517,1.137,527,3.075,701,3.539,720,2.762,727,3.878,818,2.023,912,4.188,992,2.852,1010,1.673,1053,3.946,1155,4.05,1156,5.381,1157,4.05,1158,3.504,1159,4.825,1160,6.505,1161,6.357,1162,4.825,1163,3.684,1164,3.684,1165,4.516,1166,5.71,1167,4.516,1168,3.684,1169,6.081,1170,3.684,1171,4.825,1172,3.684,1173,3.684,1174,3.684,1175,4.825,1176,4.825,1177,3.092,1178,3.684,1179,2.702,1180,3.684,1181,2.41,1182,4.825,1183,4.05,1184,4.825,1185,4.825,1186,4.825,1187,3.092,1188,3.684,1189,3.092,1190,3.092,1191,3.684,1192,3.684,1193,3.684,1194,3.684]],["title/modules/SvogvModule.html",[1007,1.837,1195,2.232]],["body/modules/SvogvModule.html",[3,0.466,4,0.521,5,0.364,6,0.521,10,0.976,13,0.762,16,0.03,21,0.829,25,1.912,31,1.431,37,0.019,38,0.023,39,0.019,50,0.577,85,1.667,96,1.543,124,1.457,126,1.055,127,2.315,130,0.762,131,0.521,380,3.904,517,1.643,650,2.628,783,2.122,819,3.904,905,3.125,921,3.904,1007,3.346,1195,4.277,1196,3.152,1197,1.952,1198,4.854,1199,5.073,1200,4.468,1201,3.608,1202,3.608,1203,3.608,1204,5.214,1205,4.468,1206,3.608,1207,1.952,1208,3.608,1209,2.628,1210,5.784,1211,4.298,1212,5.784,1213,5.784,1214,5.324,1215,3.152,1216,4.468,1217,5.324,1218,5.324,1219,3.152,1220,4.298,1221,4.298,1222,4.298,1223,4.468,1224,4.298,1225,4.298,1226,4.854,1227,3.608,1228,3.608,1229,3.608,1230,3.608,1231,3.608,1232,3.608,1233,4.854,1234,4.298]],["title/classes/TextTreeNodeModel.html",[131,0.413,1235,2.501]],["body/classes/TextTreeNodeModel.html",[3,0.427,4,0.476,5,0.333,6,0.476,9,0.528,10,1.143,11,2.485,13,1.163,15,1.226,16,0.03,17,0.672,18,0.556,19,0.949,21,1.071,37,0.017,38,0.022,39,0.017,50,0.528,56,1.649,58,1.786,64,1.309,95,1.143,104,1.309,109,1.125,119,1.335,121,1.412,124,1.143,130,0.697,131,0.476,149,1.097,175,1.808,238,2.118,239,1.412,267,1.214,270,1.808,341,1.823,350,1.649,374,1.952,433,1.214,513,4.225,721,1.525,778,2.976,917,3.301,920,3.282,1235,3.692,1236,3.933,1237,2.102,1238,4.225,1239,3.66,1240,3.692,1241,2.976,1242,2.536,1243,3.692,1244,3.294,1245,3.461,1246,4.05,1247,5.034,1248,2.885,1249,5.445,1250,3.301,1251,3.301,1252,2.885,1253,3.301,1254,3.301,1255,2.885,1256,2.885,1257,3.301,1258,3.301,1259,3.301,1260,2.885,1261,3.301,1262,2.574,1263,2.976,1264,3.301,1265,2.574,1266,3.301,1267,2.574,1268,3.301,1269,3.301,1270,3.933,1271,3.933]],["title/interfaces/TreeNodeBaseModel.html",[0,1.225,1263,2.016]],["body/interfaces/TreeNodeBaseModel.html",[0,1.612,2,2.418,3,0.487,4,0.544,5,0.381,6,0.544,9,0.603,10,1.241,11,2.699,13,1.045,15,1.235,16,0.03,17,0.64,18,0.542,19,0.956,21,1.138,37,0.02,38,0.024,39,0.02,50,0.603,95,1.241,119,1.627,121,1.964,124,1.019,130,0.796,131,0.662,175,1.964,544,2.699,778,3.628,1237,2.117,1241,3.628,1242,2.573,1244,3.578,1245,3.628,1262,3.578,1263,4.021,1265,3.578,1267,2.938,1272,4.49,1273,5.468,1274,4.49,1275,4.49,1276,4.49]],["title/classes/TreeNodeComponentModel.html",[131,0.413,1277,2.862]],["body/classes/TreeNodeComponentModel.html",[3,0.424,4,0.474,5,0.331,6,0.474,9,0.525,10,1.138,11,2.476,13,1.162,15,1.224,16,0.03,17,0.671,18,0.57,19,0.947,21,1.068,37,0.017,38,0.022,39,0.017,40,1.517,50,0.525,56,1.639,58,1.776,64,1.302,95,1.138,104,1.302,119,1.33,121,1.404,124,1.257,126,0.96,130,0.693,131,0.474,149,0.693,175,1.801,238,2.106,239,1.404,267,1.207,270,1.801,350,1.639,374,1.945,709,2.278,721,1.516,778,2.965,920,3.274,1237,2.097,1238,4.21,1239,3.659,1240,3.679,1241,2.965,1242,2.532,1243,3.679,1244,3.282,1245,3.453,1246,4.044,1248,2.868,1249,5.439,1250,3.282,1251,3.282,1252,2.868,1253,3.282,1254,3.282,1255,2.868,1256,2.868,1257,3.282,1258,3.282,1259,3.282,1260,2.868,1261,3.282,1262,2.559,1263,2.965,1264,3.282,1265,2.559,1266,3.282,1267,2.559,1268,3.282,1269,3.282,1277,4.21,1278,3.911,1279,3.679,1280,4.21,1281,5.016,1282,5.016,1283,3.911]],["title/classes/TreeNodeModel.html",[131,0.413,1239,1.837]],["body/classes/TreeNodeModel.html",[1,1.853,3,0.333,4,0.371,5,0.26,6,0.371,9,0.412,10,0.968,11,2.104,13,1.161,15,1.166,16,0.03,17,0.654,18,0.531,19,0.903,21,1.022,25,1.531,31,2.103,32,0.823,34,1.203,36,0.947,37,0.013,38,0.019,39,0.013,48,2.22,50,0.412,56,1.787,58,1.937,64,1.419,71,1.937,95,0.968,104,1.021,110,0.947,119,1.623,121,1.76,124,1.112,126,0.753,130,0.543,131,0.593,149,0.755,152,1.514,172,1.787,175,1.531,188,2.79,238,2.296,239,1.101,267,1.513,270,1.76,289,2.521,308,2.007,350,2.22,352,1.393,374,1.653,433,0.947,527,2.296,544,2.104,671,2.574,721,1.653,727,2.79,778,2.897,912,3.127,920,3.291,1237,1.531,1239,3.559,1240,3.594,1241,3.131,1242,2.334,1243,3.594,1244,2.79,1246,4.215,1248,3.885,1252,3.127,1255,3.127,1256,4.226,1260,3.127,1262,2.79,1263,3.407,1265,2.79,1267,2.007,1284,3.067,1285,3.466,1286,4.901,1287,3.207,1288,4.901,1289,4.901,1290,4.901,1291,4.901,1292,3.578,1293,4.264,1294,3.067,1295,3.067,1296,3.067,1297,3.067,1298,3.067,1299,3.067,1300,3.067,1301,3.067,1302,3.067,1303,3.067,1304,3.067,1305,3.067,1306,3.067,1307,3.067,1308,3.067,1309,3.067,1310,3.067,1311,3.067,1312,3.067,1313,3.067,1314,3.067,1315,3.067,1316,3.067,1317,3.067,1318,3.067,1319,3.067,1320,3.067,1321,4.901,1322,3.067,1323,5.763,1324,3.067,1325,3.067,1326,3.067,1327,4.264,1328,3.067,1329,3.067,1330,3.067,1331,3.067,1332,3.067,1333,4.264,1334,3.067,1335,3.067,1336,4.264,1337,3.067,1338,3.067,1339,5.297,1340,3.067,1341,3.067,1342,2.007,1343,2.249,1344,3.067,1345,4.264,1346,4.264,1347,4.264]],["title/classes/TreeNodeOptions.html",[131,0.413,1245,2.016]],["body/classes/TreeNodeOptions.html",[3,0.486,4,0.542,5,0.38,6,0.542,9,0.601,13,1.173,15,0.938,16,0.03,17,0.486,18,0.561,19,0.726,36,1.382,37,0.02,38,0.024,39,0.02,50,0.601,95,1.239,104,1.491,119,1.562,130,0.793,131,0.542,149,1.133,172,1.877,239,1.608,265,2.21,318,2.647,341,1.281,374,1.736,480,4.497,527,2.412,535,2.647,536,2.93,539,2.469,842,3.284,1237,2.115,1242,2.289,1245,3.482,1292,3.758,1348,3.758,1349,4.943,1350,4.582,1351,4.582,1352,4.582,1353,4.012,1354,5.46,1355,4.582,1356,5.46,1357,5.46,1358,4.478,1359,4.582,1360,4.478,1361,4.478,1362,3.284,1363,4.478,1364,4.478,1365,4.478,1366,4.478,1367,4.478,1368,4.478,1369,3.758,1370,4.478,1371,3.758,1372,4.478,1373,3.284]],["title/components/TreeViewComponent.html",[40,0.837,207,1.683]],["body/components/TreeViewComponent.html",[3,0.369,4,0.626,5,0.288,6,0.412,9,0.457,10,1.039,13,1.121,15,1.159,16,0.03,17,0.645,18,0.53,19,0.897,21,1.067,34,1.358,37,0.015,38,0.02,39,0.015,40,1.417,41,1.545,42,1.523,43,1.832,44,1.545,45,1.222,46,2.42,47,1.832,48,2.42,50,0.457,51,2.259,69,2.259,70,2.259,73,1.679,74,3.327,75,3.049,85,1.319,88,3.058,93,2.465,101,2.465,104,1.722,113,1.643,121,1.987,124,1.039,125,1.919,126,0.835,128,1.832,130,0.603,131,0.412,194,2.259,195,1.545,196,2.226,197,2.98,198,1.832,199,1.832,200,1.545,201,1.832,202,1.679,203,1.426,204,1.832,205,1.545,206,1.832,207,2.731,208,1.832,209,1.679,210,1.832,211,1.832,212,1.832,239,1.643,251,3.357,252,2.995,286,2.995,296,3.357,298,2.465,330,3.357,331,3.841,341,1.31,343,3.357,350,2.711,424,3.413,476,2.786,502,3.384,557,1.643,761,2.465,881,2.553,1237,2.135,1239,3.533,1246,3.778,1353,2.995,1362,3.357,1374,3.402,1375,3.975,1376,3.841,1377,4.577,1378,4.577,1379,4.057,1380,3.841,1381,3.402,1382,4.577,1383,4.577,1384,3.058,1385,5.172,1386,4.577,1387,3.841,1388,3.841,1389,3.841,1390,3.841,1391,4.341,1392,4.341,1393,4.341,1394,4.341,1395,4.577,1396,3.402,1397,3.402,1398,3.402,1399,3.402,1400,3.841,1401,3.402,1402,3.841,1403,3.402,1404,3.841,1405,3.402,1406,3.841,1407,3.402,1408,2.495,1409,3.402,1410,2.855,1411,2.855,1412,2.855,1413,2.855]],["title/components/TreeViewNodeComponent.html",[40,0.837,209,1.683]],["body/components/TreeViewNodeComponent.html",[1,1.594,3,0.202,4,0.441,5,0.158,6,0.225,9,0.25,10,0.667,13,1.12,15,1.089,16,0.031,17,0.595,18,0.527,19,0.843,21,1.057,32,0.924,34,1.176,36,1.124,37,0.008,38,0.013,39,0.008,40,1.231,41,0.845,42,0.978,45,0.668,46,1.527,47,1.002,48,1.232,50,0.25,64,1.378,71,1.335,72,1.962,73,0.918,74,2.8,75,2.642,78,2.156,80,1.218,81,1.562,83,1.365,84,1.562,85,0.721,86,1.923,88,2.154,90,1.923,93,1.583,95,0.667,96,2.177,100,2.229,101,1.583,104,0.619,109,1.289,110,0.574,113,1.055,119,1.195,121,2.121,124,0.667,125,2.008,126,0.457,130,0.33,131,0.63,135,1.451,140,1.738,149,0.948,152,1.451,179,1.562,184,1.605,194,1.798,195,0.845,197,2.229,198,1.002,199,1.002,200,0.845,201,1.002,202,0.918,203,0.78,204,1.002,205,0.845,206,1.002,207,0.918,208,1.002,209,2.043,210,1.962,211,1.002,212,1.002,238,1.583,247,0.918,258,2.156,270,2.071,286,1.923,304,1.583,341,0.532,350,2.591,352,1.335,354,2.362,355,3.72,361,2.672,380,3.925,403,3.058,408,1.738,424,3.41,433,1.124,476,1.962,480,1.365,484,3.035,485,2.672,493,2.672,494,2.708,496,1.365,497,1.562,502,2.949,503,1.562,522,1.451,535,1.1,544,0.918,688,3.473,703,1.365,709,1.335,720,1.88,761,1.962,782,2.384,820,1.562,839,3.473,840,3.058,841,1.562,842,1.365,843,1.562,844,1.562,845,1.562,847,0.918,848,2.467,849,1.562,850,1.562,851,1.562,879,2.467,881,0.918,935,1.583,951,2.156,952,1.923,1014,1.365,1126,1.562,1150,1.365,1235,2.672,1237,2.071,1239,3.24,1241,1.1,1242,1.889,1287,2.949,1343,2.156,1349,3.058,1350,2.467,1351,1.562,1352,3.058,1353,2.384,1355,2.467,1362,2.672,1373,1.365,1375,1.923,1376,2.467,1379,2.672,1384,1.1,1387,2.467,1388,2.467,1389,2.467,1390,2.467,1391,3.782,1392,3.782,1393,3.782,1394,3.782,1400,2.467,1402,2.467,1404,2.467,1406,2.467,1408,1.365,1410,1.562,1411,1.562,1412,1.562,1413,1.562,1414,1.861,1415,2.156,1416,2.156,1417,1.923,1418,4.139,1419,2.156,1420,2.939,1421,2.156,1422,2.939,1423,3.643,1424,2.939,1425,3.643,1426,3.643,1427,3.643,1428,3.643,1429,3.643,1430,3.643,1431,3.643,1432,3.643,1433,4.139,1434,2.939,1435,4.139,1436,2.939,1437,2.939,1438,1.861,1439,4.139,1440,4.139,1441,1.861,1442,2.939,1443,1.861,1444,2.939,1445,1.861,1446,4.139,1447,1.861,1448,2.939,1449,2.939,1450,1.861,1451,1.923,1452,1.861,1453,1.861,1454,2.939,1455,1.861,1456,1.861,1457,2.939,1458,1.861,1459,2.939,1460,1.861,1461,1.861,1462,1.861,1463,1.861,1464,1.861,1465,1.861,1466,1.861,1467,5.016,1468,2.939,1469,1.861,1470,1.861,1471,1.861,1472,1.861,1473,1.861,1474,1.861,1475,1.861,1476,1.861,1477,1.861,1478,1.861,1479,1.861,1480,1.861,1481,1.861,1482,3.643,1483,1.861,1484,1.861,1485,2.939,1486,1.861,1487,1.861,1488,1.1,1489,1.1,1490,5.685,1491,1.861,1492,1.861,1493,1.861,1494,1.861,1495,2.939,1496,3.643,1497,1.861,1498,2.939,1499,1.861,1500,1.861,1501,2.939,1502,1.861,1503,5.59,1504,4.139,1505,5.48,1506,5.352,1507,5.48,1508,5.352,1509,1.861,1510,1.861,1511,2.939,1512,2.939,1513,1.861,1514,1.861,1515,1.861,1516,1.861,1517,2.939,1518,1.861,1519,3.643,1520,1.861,1521,2.939,1522,1.861,1523,1.861,1524,3.643,1525,2.939,1526,2.939,1527,4.139,1528,4.139,1529,2.939,1530,3.643,1531,1.861,1532,1.861,1533,2.939,1534,1.861,1535,1.861,1536,5.48,1537,1.861,1538,2.939,1539,2.467,1540,1.861,1541,1.861,1542,1.861,1543,1.861,1544,1.861,1545,1.861,1546,1.861,1547,2.939,1548,1.861,1549,1.861,1550,1.365]],["title/injectables/WindowRef.html",[1034,2.016,1551,2.862]],["body/injectables/WindowRef.html",[3,0.541,4,0.604,5,0.423,6,0.604,9,0.669,13,0.884,16,0.03,29,2.461,31,2.052,37,0.022,38,0.026,39,0.022,124,1.132,126,1.224,130,0.884,131,0.604,289,3.441,720,2.265,1034,3.441,1035,3.657,1551,4.886,1552,4.185,1553,6.165,1554,4.987,1555,4.987,1556,4.886,1557,4.987,1558,4.987,1559,2.686,1560,4.886]],["title/changelog.html",[1561,1.704,1562,1.553,1563,2.883]],["body/changelog.html",[3,0.33,5,0.448,11,1.503,16,0.019,17,0.33,18,0.36,29,2.094,32,0.818,34,1.199,37,0.013,38,0.019,39,0.019,40,0.748,42,1.625,43,1.64,44,2.398,46,1.778,53,2.41,55,2.047,58,2.218,62,2.41,63,1.778,64,1.014,66,2.047,75,1.503,76,2.233,97,1.992,102,1.8,108,1.383,109,0.871,113,1.896,125,1.276,135,1.503,141,1.503,145,1.64,149,0.752,158,2.63,161,2.776,164,1.503,175,1.523,178,1.383,184,1.181,185,1.893,186,2.218,203,2.328,214,1.383,216,1.8,219,1.64,220,1.503,223,2.508,225,2.233,227,1.503,230,1.503,234,1.8,237,2.606,239,1.093,244,1.64,245,1.523,247,2.094,250,1.503,253,1.8,262,1.276,267,1.507,297,1.64,298,1.64,299,1.8,307,1.503,308,1.992,311,2.508,320,1.896,329,1.992,337,2.218,339,1.992,346,2.214,347,2.556,352,1.383,354,1.383,369,1.753,373,1.503,388,1.992,411,2.285,412,1.181,414,1.276,462,2.556,489,1.181,491,1.992,507,1.503,517,0.94,521,1.992,522,2.094,540,1.992,544,1.503,557,1.523,598,1.8,601,3.561,621,1.503,624,2.285,625,3.282,626,2.63,627,1.992,634,1.64,640,1.8,674,1.8,690,1.503,708,3.581,709,1.383,721,1.181,740,1.992,760,1.992,762,2.094,772,2.094,793,2.776,796,1.992,798,1.992,818,1.778,823,2.556,824,2.508,837,1.8,847,1.503,892,1.8,948,1.992,980,1.992,983,1.503,1010,1.927,1012,2.508,1015,1.8,1017,1.8,1041,1.503,1043,1.992,1047,1.64,1068,2.233,1127,1.8,1157,2.556,1165,2.556,1167,2.556,1197,1.927,1207,1.383,1209,2.606,1287,2.776,1375,2.776,1415,2.233,1416,2.233,1419,3.581,1421,2.233,1451,1.992,1550,2.233,1564,3.045,1565,5.281,1566,5.552,1567,4.072,1568,3.045,1569,2.233,1570,4.242,1571,2.233,1572,2.233,1573,3.045,1574,2.556,1575,4.882,1576,2.556,1577,3.045,1578,3.581,1579,2.556,1580,4.242,1581,3.045,1582,1.992,1583,1.992,1584,3.045,1585,2.41,1586,3.045,1587,3.045,1588,3.045,1589,2.556,1590,4.882,1591,2.233,1592,2.556,1593,4.098,1594,3.045,1595,2.776,1596,2.556,1597,3.045,1598,2.233,1599,3.488,1600,4.882,1601,3.045,1602,4.098,1603,2.233,1604,3.045,1605,3.045,1606,2.556,1607,3.111,1608,3.045,1609,3.045,1610,3.045,1611,3.045,1612,2.556,1613,3.045,1614,2.556,1615,3.045,1616,4.242,1617,4.242,1618,3.561,1619,1.8,1620,3.045,1621,2.556,1622,4.242,1623,2.886,1624,3.045,1625,3.045,1626,4.882,1627,3.045,1628,1.992,1629,3.045,1630,4.242,1631,2.233,1632,2.556,1633,1.992,1634,2.285,1635,4.66,1636,4.242,1637,3.045,1638,1.992,1639,4.432,1640,3.045,1641,4.882,1642,4.242,1643,3.045,1644,4.242,1645,3.045,1646,1.8,1647,3.045,1648,1.8,1649,3.045,1650,3.045,1651,3.045,1652,3.045,1653,3.045,1654,2.556,1655,3.561,1656,4.242,1657,3.045,1658,3.045,1659,2.556,1660,3.292,1661,2.556,1662,3.045,1663,2.233,1664,2.556,1665,2.556,1666,3.561,1667,3.561,1668,3.045,1669,3.561,1670,3.045,1671,3.045,1672,2.233,1673,2.233,1674,3.561,1675,3.045,1676,3.045,1677,3.045,1678,3.045,1679,1.992,1680,2.556,1681,1.992,1682,3.045,1683,3.045,1684,4.072,1685,4.242,1686,3.045,1687,2.556,1688,2.556,1689,2.233,1690,3.045,1691,4.242,1692,3.045,1693,2.556,1694,3.045,1695,3.045,1696,3.045,1697,3.045,1698,3.045,1699,3.045,1700,3.045,1701,2.556,1702,3.045,1703,3.045,1704,4.242,1705,2.233,1706,1.992,1707,1.992,1708,2.556,1709,3.045,1710,3.045,1711,3.045,1712,1.992,1713,2.233,1714,3.045,1715,3.045,1716,3.045,1717,3.561,1718,4.242,1719,2.556,1720,3.045,1721,3.045,1722,3.045,1723,2.556,1724,2.556,1725,3.045,1726,3.045,1727,2.556,1728,2.556,1729,2.556,1730,1.992,1731,3.045,1732,3.045,1733,3.045,1734,3.045]],["title/contributing.html",[1561,1.704,1562,1.553,1735,2.115]],["body/contributing.html",[3,0.256,4,0.428,5,0.509,6,0.286,10,0.536,16,0.023,18,0.299,19,0.573,34,1.341,37,0.01,38,0.016,39,0.01,43,1.272,50,0.317,58,1.604,59,1.743,63,1.773,65,1.546,69,2.088,70,1.166,96,0.848,107,1.983,108,1.073,115,1.546,140,2.5,159,1.272,160,4.216,161,1.546,164,1.166,165,1.397,175,0.848,176,1.983,178,1.604,216,2.5,227,1.166,231,1.272,237,2.929,245,1.519,250,1.166,252,1.546,295,1.733,297,2.706,320,1.893,328,3.442,337,2.282,341,0.676,346,1.967,349,2.088,354,1.921,359,1.733,360,1.733,361,1.733,369,0.848,433,0.729,453,3.939,490,1.983,491,2.311,517,1.09,537,2.311,549,1.733,557,0.848,592,2.964,598,1.397,621,2.088,624,1.272,625,2.088,634,1.272,640,2.5,708,2.59,709,1.073,725,1.902,783,1.743,789,2.59,793,4.013,818,0.99,829,3.55,870,1.397,873,1.546,881,1.166,887,2.964,909,2.59,935,1.272,940,1.604,969,1.397,974,1.733,977,1.902,989,1.166,992,1.397,1000,3.394,1002,1.397,1021,1.397,1033,2.767,1041,1.166,1043,1.546,1047,1.902,1106,2.59,1127,1.397,1130,3.442,1181,3.449,1183,1.983,1197,1.073,1207,1.073,1209,2.834,1342,2.767,1384,2.088,1421,1.733,1489,1.397,1567,2.59,1569,1.733,1578,3.102,1582,2.311,1583,2.311,1585,2.088,1595,1.546,1598,1.733,1623,1.397,1634,1.902,1639,2.964,1646,2.088,1660,2.278,1663,2.59,1679,1.546,1688,2.964,1689,1.733,1706,1.546,1712,2.311,1724,4.585,1728,4.216,1730,3.287,1735,1.733,1736,2.363,1737,1.983,1738,4.713,1739,2.59,1740,4.229,1741,5.023,1742,4.229,1743,4.229,1744,4.216,1745,4.585,1746,1.983,1747,4.585,1748,3.532,1749,3.532,1750,4.229,1751,6.395,1752,3.532,1753,5.023,1754,4.229,1755,4.713,1756,1.983,1757,2.964,1758,3.071,1759,2.363,1760,1.983,1761,2.363,1762,2.363,1763,2.363,1764,2.363,1765,1.546,1766,2.363,1767,2.363,1768,2.363,1769,2.363,1770,2.363,1771,2.363,1772,2.363,1773,6.076,1774,1.733,1775,2.363,1776,4.693,1777,3.825,1778,3.071,1779,2.964,1780,2.363,1781,3.532,1782,3.532,1783,2.363,1784,2.363,1785,2.363,1786,4.229,1787,3.102,1788,2.363,1789,4.229,1790,2.363,1791,4.693,1792,5.935,1793,4.819,1794,5.742,1795,2.363,1796,3.532,1797,2.363,1798,2.363,1799,1.983,1800,3.532,1801,2.964,1802,2.363,1803,2.363,1804,2.964,1805,3.532,1806,1.983,1807,2.363,1808,2.363,1809,1.733,1810,2.363,1811,2.363,1812,2.363,1813,2.363,1814,2.363,1815,2.363,1816,3.532,1817,3.55,1818,2.363,1819,2.363,1820,2.363,1821,2.363,1822,2.363,1823,2.363,1824,3.532,1825,2.363,1826,2.59,1827,2.363,1828,2.363,1829,2.363,1830,3.532,1831,3.532,1832,3.102,1833,2.363,1834,2.363,1835,2.363,1836,1.546,1837,2.363,1838,2.363,1839,1.983,1840,1.733,1841,2.363,1842,1.983,1843,2.363,1844,2.363,1845,1.983,1846,3.532,1847,1.983,1848,2.363,1849,4.229,1850,1.983,1851,2.59,1852,2.363,1853,2.363,1854,2.363,1855,1.983,1856,1.983,1857,1.983,1858,2.363,1859,2.363,1860,2.363,1861,2.363,1862,2.363,1863,3.532,1864,1.733,1865,1.983,1866,2.363,1867,1.733,1868,2.363,1869,4.229,1870,2.363,1871,2.363,1872,4.229,1873,2.311,1874,3.532,1875,3.532,1876,2.363,1877,4.456,1878,6.01,1879,3.532,1880,5.271,1881,2.363,1882,2.363,1883,2.363,1884,2.363,1885,2.363,1886,2.363,1887,2.363,1888,4.229,1889,4.216,1890,2.363,1891,1.983,1892,3.532,1893,2.363,1894,1.983,1895,2.363,1896,2.59,1897,2.363,1898,1.546,1899,2.363,1900,2.363,1901,2.363,1902,2.59,1903,3.532,1904,2.363,1905,2.363,1906,1.983,1907,2.363,1908,2.363,1909,2.363,1910,3.532,1911,1.983,1912,2.363,1913,2.363,1914,3.532,1915,2.363,1916,4.229,1917,1.983,1918,1.546,1919,2.964,1920,2.363,1921,2.363,1922,2.363,1923,1.546,1924,2.363,1925,2.363,1926,2.363,1927,2.363,1928,2.363,1929,1.983,1930,2.363,1931,2.363,1932,2.363,1933,2.363,1934,1.397,1935,2.363,1936,2.59,1937,2.363,1938,2.363,1939,1.983,1940,2.363,1941,2.363,1942,1.733,1943,2.363,1944,2.363,1945,2.363,1946,1.983,1947,4.693,1948,1.733,1949,4.693,1950,4.693,1951,2.363,1952,1.733,1953,1.546,1954,1.733,1955,3.532,1956,3.532,1957,3.532,1958,1.983,1959,2.363,1960,3.532,1961,2.363,1962,2.363,1963,2.363,1964,1.733,1965,3.532,1966,2.363,1967,2.59,1968,2.363,1969,2.363,1970,2.363,1971,1.983,1972,2.363,1973,1.983,1974,1.983,1975,2.363,1976,1.983,1977,1.983,1978,1.983,1979,2.363,1980,1.733,1981,2.363,1982,1.397,1983,2.363,1984,1.983,1985,1.983,1986,2.363,1987,2.363,1988,3.532,1989,2.363,1990,2.363,1991,2.363,1992,3.532,1993,2.59,1994,3.532,1995,2.363,1996,2.363,1997,2.363,1998,2.363,1999,2.363,2000,1.733,2001,2.363,2002,2.363,2003,2.363,2004,2.363,2005,2.363,2006,2.363,2007,1.733,2008,2.363,2009,1.733,2010,2.363,2011,2.363,2012,2.363,2013,2.363,2014,1.983,2015,2.363,2016,2.363,2017,1.733]],["title/dependencies.html",[1197,1.854,2018,1.704]],["body/dependencies.html",[16,0.03,37,0.022,38,0.026,39,0.022,90,3.258,126,1.222,127,2.682,783,2.458,1137,2.944,1197,2.262,1215,3.652,1219,3.652,1488,2.944,1559,3.133,2019,6.61,2020,4.179,2021,4.882,2022,4.98,2023,3.652,2024,4.179,2025,4.98,2026,4.98,2027,4.179,2028,4.98,2029,4.98,2030,4.98,2031,4.179,2032,4.98]],["title/miscellaneous/enumerations.html",[2033,1.31,2034,3.427]],["body/miscellaneous/enumerations.html",[9,0.683,16,0.027,32,0.982,36,1.571,37,0.022,38,0.026,39,0.022,149,0.902,186,2.312,240,3.009,388,4.068,527,2.742,530,3.331,550,4.272,634,2.742,644,4.272,679,3.733,680,4.272,1237,1.828,1287,3.331,1348,4.272,1359,4.272,1371,4.272,1373,4.321,1550,3.733,2033,2.312,2034,4.272,2035,5.091,2036,5.091,2037,5.091]],["title/miscellaneous/functions.html",[220,2.015,2033,1.31]],["body/miscellaneous/functions.html",[5,0.31,9,0.332,15,1.342,16,0.029,17,0.72,18,0.209,19,1.047,21,0.477,29,1.803,32,0.838,37,0.011,38,0.016,39,0.016,41,1.123,45,1.56,50,0.86,51,1.22,59,2.527,62,1.803,63,2.011,64,2.088,66,1.531,67,1.22,85,0.958,87,1.813,95,0.986,98,2.39,108,2.325,109,1.586,110,1.127,113,0.888,119,0.968,125,1.036,139,1.617,140,1.461,141,2.809,149,0.907,159,1.331,175,0.888,184,1.684,185,2.473,186,1.973,195,1.123,200,1.123,203,1.036,205,1.123,214,1.123,218,1.617,220,1.22,223,1.461,227,1.22,231,2.757,249,2.678,250,2.809,253,1.461,254,2.159,262,2.146,267,1.711,297,1.331,298,1.331,307,1.22,311,2.159,318,1.461,320,1.56,337,1.659,338,1.617,341,1.045,346,1.036,354,2.434,369,0.888,372,2.757,373,2.144,374,2.352,404,2.678,406,1.22,408,1.461,411,3.229,412,1.684,413,2.678,416,3.186,419,2.39,433,0.763,489,1.684,507,1.803,509,2.678,510,2.39,511,2.159,517,1.127,520,2.074,521,2.842,522,1.803,530,2.39,532,2.074,539,1.531,554,2.074,555,2.074,557,1.56,583,2.678,594,1.617,612,1.813,626,1.331,641,2.836,642,2.836,650,1.22,674,2.159,690,2.645,721,0.958,727,1.617,741,1.813,761,1.331,762,1.803,772,2.736,796,2.39,798,1.617,818,1.036,837,3.364,847,2.144,861,3.026,863,2.568,866,2.584,892,2.836,913,2.159,940,1.973,948,2.39,951,1.813,967,2.842,972,1.813,973,2.678,980,1.617,989,1.22,993,1.617,1000,3.587,1001,4.535,1002,2.159,1010,2.179,1012,2.568,1013,2.842,1015,2.568,1016,2.39,1017,2.836,1019,2.074,1021,1.461,1024,2.39,1025,2.074,1026,3.646,1037,3.065,1038,1.617,1041,1.803,1043,2.842,1056,3.065,1058,3.065,1068,1.813,1106,1.813,1137,1.461,1141,2.074,1158,1.461,1189,2.074,1207,1.123,1384,1.461,1417,1.617,1552,2.074,1556,3.646,1569,1.813,1571,1.813,1572,2.678,1585,1.22,1593,2.074,1595,2.39,1705,3.519,1708,2.074,1712,1.617,1809,1.813,1864,1.813,1896,2.678,1936,3.519,1971,2.074,2000,2.678,2017,1.813,2033,1.123,2038,2.472,2039,5.691,2040,3.652,2041,4.877,2042,3.065,2043,3.652,2044,3.652,2045,3.652,2046,3.065,2047,3.652,2048,3.652,2049,3.652,2050,3.652,2051,3.652,2052,3.652,2053,3.652,2054,3.065,2055,3.652,2056,3.652,2057,3.065,2058,2.472,2059,2.472,2060,5.691,2061,2.472,2062,2.074,2063,3.652,2064,2.472,2065,2.472,2066,4.877,2067,2.472,2068,2.472,2069,2.472,2070,2.472,2071,3.065,2072,2.472,2073,3.652,2074,2.074,2075,2.472,2076,2.472,2077,3.652,2078,3.065,2079,2.472,2080,3.652,2081,2.074,2082,2.074,2083,2.472,2084,2.472,2085,2.074,2086,1.813,2087,2.074,2088,3.065,2089,2.472,2090,2.472,2091,3.652,2092,3.652,2093,2.472,2094,2.472,2095,2.472,2096,2.472,2097,2.472,2098,4.798,2099,3.652,2100,2.472,2101,2.472,2102,2.472,2103,2.472,2104,2.472,2105,2.472,2106,2.074,2107,3.065,2108,2.472,2109,4.344,2110,2.472,2111,2.472,2112,2.472,2113,2.472,2114,2.472,2115,2.472,2116,2.472,2117,2.472,2118,2.472,2119,2.472,2120,2.472,2121,2.472,2122,2.472,2123,1.813,2124,2.472,2125,2.472,2126,2.472,2127,2.074,2128,2.472,2129,2.472,2130,2.472,2131,2.074,2132,2.472,2133,2.472,2134,2.472,2135,2.074,2136,2.472,2137,3.652,2138,2.472,2139,2.472,2140,2.472,2141,2.472,2142,3.652,2143,2.472,2144,2.472,2145,2.472,2146,2.472]],["title/index.html",[9,0.387,1561,1.704,1562,1.553]],["body/index.html",[0,1.03,3,0.387,4,0.347,5,0.345,15,0.378,16,0.029,17,0.387,18,0.42,19,0.293,32,0.348,34,0.443,36,0.557,37,0.008,38,0.013,39,0.008,40,1.385,42,1.807,44,2.407,45,1.282,46,1.202,48,1.981,50,0.242,51,2.008,52,2.336,53,2.446,54,1.877,55,2.459,56,0.756,57,1.323,58,0.819,59,2.976,62,2.008,63,1.705,64,1.807,66,1.202,67,0.89,69,0.89,70,1.762,71,0.819,72,0.972,76,2.618,77,1.323,79,1.514,87,2.103,88,1.066,95,0.651,97,1.18,98,1.18,100,0.972,102,2.624,108,2.147,109,1.021,110,0.557,113,1.03,117,1.323,119,0.478,124,1.007,125,1.861,130,0.721,131,0.572,139,1.18,140,2.405,141,2.008,149,0.837,158,0.972,177,1.066,178,2.147,184,1.577,185,1.112,203,1.202,214,2.016,217,1.514,218,1.18,219,0.972,220,0.89,221,2.251,222,1.514,223,1.066,224,1.323,227,1.416,229,2.147,230,2.538,231,1.545,232,1.066,234,2.11,238,1.923,239,0.648,240,1.066,242,1.323,245,1.03,247,1.416,249,2.103,250,2.191,252,1.18,253,1.066,254,1.066,262,1.202,265,1.762,267,1.255,298,0.972,299,1.695,304,1.545,307,2.008,309,1.066,311,1.695,316,2.407,319,1.323,320,1.697,334,2.618,337,1.303,338,1.877,341,1.418,346,2.077,349,1.066,350,0.756,352,0.819,354,1.847,359,1.323,360,1.323,368,1.877,369,2.128,372,0.972,373,1.416,374,2.409,402,1.323,404,2.103,405,1.18,406,1.416,408,1.695,409,1.514,411,1.545,412,1.384,413,1.323,414,1.981,416,1.323,419,2.661,432,1.066,433,1.459,450,1.695,452,1.514,460,1.18,474,3.414,476,0.972,477,1.323,489,1.577,507,0.89,511,1.695,517,1.711,519,1.514,521,1.18,522,2.008,531,1.514,534,1.877,535,2.794,536,1.18,537,1.18,539,1.496,553,1.514,557,1.461,562,1.514,598,2.794,605,1.18,611,1.18,624,1.545,626,2.391,627,1.877,634,1.923,641,2.11,642,1.066,650,0.89,679,1.323,690,1.416,697,1.323,703,1.323,709,1.847,720,1.847,721,0.699,723,1.514,724,2.103,725,1.923,758,1.323,761,0.972,762,2.191,763,1.877,764,1.323,772,2.191,783,2.008,789,1.323,793,1.877,818,1.496,824,1.695,835,1.514,836,1.066,837,3.385,838,2.336,847,1.416,861,1.695,863,1.066,866,0.972,870,2.11,873,1.18,875,1.514,881,0.89,883,2.103,892,1.066,905,2.008,913,2.11,914,2.983,920,1.066,921,1.323,935,1.923,940,0.819,946,1.323,948,1.18,949,2.996,952,1.18,954,1.323,955,1.323,956,1.323,957,1.323,958,1.323,959,1.323,960,1.323,961,1.323,962,1.323,963,1.323,964,1.323,965,1.323,967,1.18,969,1.066,977,0.972,981,1.323,983,1.416,989,0.89,991,1.877,993,1.877,1010,0.819,1012,2.93,1013,1.877,1015,2.405,1016,1.877,1017,1.695,1021,1.066,1024,1.18,1033,1.877,1034,2.11,1038,1.877,1041,0.89,1042,1.066,1047,2.546,1053,1.323,1127,2.11,1130,1.323,1137,1.695,1150,1.323,1158,1.066,1177,1.514,1181,1.877,1190,1.514,1207,0.819,1209,2.615,1216,1.514,1223,1.514,1237,1.282,1242,1.861,1280,1.514,1285,1.18,1342,1.18,1343,1.323,1353,1.18,1375,1.877,1379,1.323,1380,1.514,1384,2.405,1408,1.323,1415,1.323,1417,1.877,1419,2.618,1451,2.904,1488,1.066,1489,1.066,1539,1.514,1559,1.545,1560,1.514,1561,1.066,1562,0.972,1567,2.983,1571,2.103,1572,2.103,1578,1.323,1579,1.514,1582,1.18,1583,1.18,1585,1.762,1596,1.514,1598,2.103,1599,1.066,1602,1.514,1603,1.323,1606,1.514,1619,1.695,1623,1.066,1628,2.661,1631,2.103,1633,1.877,1634,1.545,1638,2.336,1646,1.066,1648,1.695,1654,1.514,1660,3.247,1664,3.414,1665,2.996,1666,2.407,1669,2.407,1672,2.983,1673,1.323,1679,1.877,1681,1.877,1687,2.407,1689,1.323,1705,2.103,1706,3.243,1707,1.18,1713,2.103,1719,1.514,1723,2.407,1727,1.514,1730,1.877,1735,1.323,1737,1.514,1745,2.996,1747,1.514,1755,1.514,1756,1.514,1758,2.661,1765,1.18,1774,1.323,1777,2.336,1778,1.18,1787,1.323,1799,1.514,1801,1.514,1804,2.407,1806,1.514,1817,1.514,1832,1.323,1836,1.18,1839,1.514,1840,1.323,1855,1.514,1894,2.407,1896,1.323,1898,2.661,1911,1.514,1917,1.514,1918,1.18,1923,3.467,1934,1.695,1939,1.514,1942,1.323,1953,1.877,1964,2.103,1982,2.93,2007,1.323,2009,1.323,2017,2.983,2023,2.618,2062,1.514,2071,1.514,2074,1.514,2078,1.514,2081,2.407,2082,1.514,2086,2.618,2088,1.514,2106,1.514,2107,1.514,2131,1.514,2135,1.514,2147,1.804,2148,1.804,2149,1.804,2150,3.466,2151,1.514,2152,2.618,2153,1.323,2154,1.804,2155,1.514,2156,1.804,2157,1.514,2158,1.18,2159,1.323,2160,1.804,2161,1.804,2162,1.804,2163,1.804,2164,1.514,2165,1.323,2166,1.514,2167,1.804,2168,1.804,2169,1.804,2170,3.57,2171,1.804,2172,1.514,2173,2.407,2174,1.804,2175,3.57,2176,1.804,2177,1.804,2178,1.804,2179,1.804,2180,1.804,2181,1.804,2182,1.804,2183,1.804,2184,1.804,2185,1.804,2186,1.804,2187,2.868,2188,1.514,2189,1.804,2190,1.804,2191,1.804,2192,1.804,2193,1.877,2194,1.804,2195,2.868,2196,2.868,2197,1.804,2198,1.804,2199,1.804,2200,1.804,2201,1.804,2202,1.804,2203,1.804,2204,2.868,2205,1.804,2206,2.103,2207,3.57,2208,1.804,2209,2.868,2210,1.804,2211,1.804,2212,1.804,2213,1.804,2214,1.804,2215,1.804,2216,1.804,2217,1.804,2218,2.407,2219,1.804,2220,1.804,2221,1.804,2222,1.804,2223,1.804,2224,1.804,2225,1.804,2226,2.618,2227,1.804,2228,1.804,2229,2.868,2230,1.804,2231,1.804,2232,1.804,2233,1.514,2234,2.868,2235,1.804,2236,2.868,2237,1.804,2238,1.514,2239,1.804,2240,1.323,2241,1.804,2242,1.804,2243,3.725,2244,1.804,2245,1.804,2246,1.804,2247,1.804,2248,1.804,2249,1.804,2250,1.804,2251,2.868,2252,1.804,2253,1.514,2254,1.514,2255,1.804,2256,1.804,2257,1.514,2258,1.804,2259,1.804,2260,1.514,2261,1.804,2262,1.804,2263,1.804,2264,1.804,2265,2.407,2266,1.804,2267,1.804,2268,1.804,2269,1.804,2270,1.804,2271,1.804,2272,1.804,2273,1.804,2274,2.868,2275,1.804,2276,1.804,2277,1.804,2278,1.804,2279,1.804,2280,1.804,2281,1.804,2282,1.804,2283,1.804,2284,1.804,2285,1.804,2286,1.804,2287,1.804,2288,1.804,2289,1.804,2290,1.804,2291,1.804,2292,1.804,2293,1.804,2294,1.514,2295,1.804,2296,1.804,2297,1.323,2298,1.804,2299,1.804,2300,1.514,2301,2.336,2302,1.804,2303,1.804,2304,1.804,2305,2.407,2306,1.804,2307,2.407,2308,2.868,2309,1.514,2310,2.618,2311,1.804,2312,1.804,2313,1.804,2314,1.514,2315,1.804,2316,1.323,2317,1.514,2318,1.804,2319,1.804,2320,1.804,2321,1.804,2322,1.804,2323,1.514,2324,1.323,2325,1.323,2326,1.323,2327,1.804,2328,1.323,2329,1.804,2330,1.514,2331,1.804,2332,1.804,2333,2.407,2334,1.804,2335,1.804,2336,1.514,2337,1.514,2338,1.323,2339,1.804,2340,1.514,2341,1.323,2342,1.804,2343,1.514,2344,1.514,2345,1.323,2346,1.514,2347,1.323,2348,1.514,2349,1.514,2350,1.323,2351,1.514,2352,1.514,2353,1.514,2354,1.514,2355,1.514,2356,1.804,2357,1.514,2358,1.804,2359,1.804,2360,2.868,2361,2.868,2362,1.804,2363,1.514,2364,1.514,2365,1.804,2366,1.804,2367,2.868,2368,1.804,2369,1.804,2370,1.804,2371,1.514,2372,1.804,2373,1.514,2374,1.804,2375,1.514,2376,1.804,2377,1.804,2378,1.804,2379,1.514,2380,1.804,2381,1.804,2382,1.804,2383,2.868,2384,1.804,2385,1.804,2386,1.804,2387,1.804]],["title/license.html",[1561,1.704,1562,1.553,1873,1.887]],["body/license.html",[16,0.025,37,0.021,38,0.025,39,0.021,114,2.849,221,2.188,309,2.849,319,4.184,320,2.182,352,2.188,372,3.073,470,4.044,873,3.153,1138,3.534,1207,2.188,1489,2.849,1574,4.044,1655,4.044,1760,4.044,1779,4.044,1873,3.153,1948,3.534,1974,4.044,1984,4.044,2240,3.534,2328,3.534,2338,4.184,2340,4.044,2341,3.534,2388,5.705,2389,4.044,2390,4.818,2391,5.705,2392,4.818,2393,4.818,2394,5.273,2395,4.818,2396,4.818,2397,4.818,2398,5.705,2399,4.818,2400,4.818,2401,5.705,2402,4.818,2403,4.818,2404,4.818,2405,4.818,2406,4.818,2407,4.818,2408,4.818,2409,5.705,2410,4.818,2411,4.818,2412,4.818,2413,4.818,2414,4.818,2415,4.818,2416,4.818,2417,4.818]],["title/modules.html",[1196,3.362]],["body/modules.html",[16,0.026,37,0.023,38,0.026,39,0.023,762,2.605,1195,3.454,1196,3.871,1559,2.843,1614,4.43,2418,5.279]],["title/overview.html",[1836,3]],["body/overview.html",[2,2.698,16,0.028,37,0.022,38,0.026,39,0.022,42,1.667,85,1.942,172,2.447,239,1.798,412,1.942,783,2.472,824,3.45,905,3.049,1007,3.143,1035,3.673,1195,4.292,1197,2.275,1198,4.204,1199,4.204,1200,4.204,1201,4.204,1202,4.204,1203,4.204,1204,5.184,1205,4.898,1206,4.204,1207,2.275,1619,2.961,1661,4.204,1836,3.277]],["title/miscellaneous/typealiases.html",[2033,1.31,2419,4.083]],["body/miscellaneous/typealiases.html",[1,1.645,9,0.513,16,0.024,17,0.536,18,0.572,21,0.738,32,0.738,37,0.017,38,0.022,39,0.017,45,1.775,50,0.513,53,1.887,56,2.072,64,1.996,65,2.502,66,1.603,67,2.44,77,2.804,85,1.482,98,2.502,99,3.209,109,1.415,110,1.526,113,1.967,114,2.26,119,1.311,135,2.704,141,1.887,149,1.026,158,2.059,185,1.482,231,2.059,232,2.26,237,1.887,240,2.26,246,3.235,247,2.704,250,1.887,262,2.072,265,1.887,267,1.691,270,1.373,301,4.362,304,2.059,307,1.887,341,1.094,346,1.603,412,1.482,414,1.603,433,1.18,448,3.239,489,1.482,507,2.44,517,1.526,534,2.502,541,3.626,544,1.887,594,2.502,595,2.502,641,3.239,642,2.922,650,1.887,690,1.887,709,1.737,772,1.887,827,3.209,836,2.26,847,1.887,861,2.26,863,2.26,866,2.951,881,2.44,913,2.26,940,2.245,947,3.209,954,3.626,955,3.626,956,3.626,957,3.626,958,3.626,959,3.626,960,3.626,961,3.626,962,3.626,963,3.626,964,3.626,965,3.626,967,2.502,968,3.626,969,2.922,971,3.209,972,2.804,973,3.626,974,2.804,975,3.209,977,2.663,978,2.804,979,3.209,980,3.235,981,2.804,982,4.149,983,1.887,989,1.887,990,3.209,991,2.502,992,2.26,993,2.502,998,4.149,999,2.804,1000,2.922,1001,2.804,1002,2.26,1003,4.598,1004,3.209,1005,3.209,1006,3.209,1007,2.059,1008,3.209,1009,4.149,1010,1.737,1012,2.26,1013,2.502,1014,4.018,1016,2.502,1018,3.209,1020,4.149,1021,2.26,1022,3.209,1023,3.209,1158,2.26,1585,1.887,2033,1.737,2420,3.823,2421,6.647,2422,3.823,2423,3.823,2424,3.823,2425,3.823,2426,3.823]],["title/miscellaneous/variables.html",[2033,1.31,2427,3.427]],["body/miscellaneous/variables.html",[9,0.575,16,0.03,18,0.56,32,1.286,37,0.019,38,0.023,39,0.019,109,1.908,110,1.323,146,4.849,149,1.148,277,3.898,373,2.852,508,4.849,510,2.805,733,4.849,905,2.116,1208,3.598,1226,4.461,1227,3.598,1228,3.598,1229,3.598,1230,3.598,1231,3.598,1232,3.598,1233,4.461,1618,4.461,2033,1.947,2041,5.383,2042,5.069,2046,4.461,2054,4.849,2057,4.461,2066,5.069,2427,3.598,2428,5.316,2429,5.316,2430,5.777,2431,5.777,2432,5.777,2433,5.316,2434,5.316,2435,5.316,2436,5.316,2437,4.288,2438,4.288,2439,4.288,2440,4.288,2441,4.288,2442,3.598,2443,4.288]],["title/additional-documentation/package-construction.html",[539,1.047,790,1.634,1612,2.096,2018,1.476]],["body/additional-documentation/package-construction.html",[4,0.325,5,0.423,6,0.325,11,1.326,16,0.024,17,0.421,18,0.228,34,1.119,37,0.012,38,0.017,39,0.012,40,0.953,42,1.292,44,1.763,48,1.126,50,0.361,52,1.758,53,1.916,63,1.627,70,1.326,89,1.758,108,1.763,134,1.758,145,1.447,158,2.689,164,1.326,165,1.588,172,1.126,177,1.588,178,2.584,194,1.326,216,2.295,219,1.447,221,1.22,229,1.763,234,2.295,236,1.971,241,2.847,244,1.447,245,1.793,270,0.965,293,1.758,297,1.447,298,1.447,308,1.758,314,2.255,320,1.901,341,1.111,346,1.627,369,2.131,374,1.042,406,1.326,414,1.911,432,1.588,433,1.407,445,1.588,460,2.982,467,2.255,479,2.255,487,2.255,489,1.042,500,2.255,517,1.407,522,1.916,535,2.295,557,1.793,559,2.255,560,2.255,598,1.588,605,1.758,611,1.758,621,1.326,624,1.447,625,2.295,626,1.447,627,2.54,634,1.447,636,2.255,640,1.588,650,1.326,674,1.588,721,1.042,725,1.447,740,1.758,760,1.758,761,1.447,762,1.326,763,1.758,782,1.758,783,1.326,818,2.313,838,2.54,870,2.694,909,1.971,914,1.971,935,2.455,968,2.847,977,2.689,983,1.916,989,2.724,1002,1.588,1029,2.255,1041,2.613,1042,2.295,1047,2.455,1071,1.971,1127,1.588,1158,1.588,1179,1.971,1197,1.22,1209,2.464,1237,1.901,1242,1.126,1279,1.971,1285,1.758,1342,3.266,1369,2.255,1488,1.588,1559,1.447,1576,2.255,1589,2.255,1591,2.847,1599,2.694,1603,1.971,1607,1.971,1619,3.13,1623,1.588,1628,2.54,1631,1.971,1632,2.255,1633,2.54,1634,3.064,1638,2.54,1646,2.295,1648,2.295,1660,2.972,1663,1.971,1667,2.255,1672,1.971,1679,1.758,1681,3.611,1684,1.971,1701,2.255,1717,2.255,1739,3.343,1744,2.255,1758,1.758,1765,3.465,1777,3.266,1778,2.54,1826,2.847,1832,1.971,1840,1.971,1847,2.255,1850,3.258,1851,3.343,1856,2.255,1857,2.255,1864,1.971,1865,2.255,1867,2.847,1877,3.343,1898,1.758,1902,4.353,1906,2.255,1918,3.611,1923,2.54,1934,1.588,1952,1.971,1953,2.54,1954,3.883,1958,2.255,1967,1.971,1976,2.255,1980,1.971,1982,3.13,1993,1.971,2007,1.971,2009,1.971,2018,3.444,2087,2.255,2123,1.971,2127,3.258,2150,2.847,2151,2.255,2152,4.601,2153,2.847,2157,2.255,2158,1.758,2159,2.847,2164,2.255,2165,1.971,2166,2.255,2173,2.255,2193,2.982,2206,2.847,2218,2.255,2238,2.255,2240,1.971,2243,3.258,2254,2.255,2265,2.255,2294,3.258,2297,1.971,2301,2.982,2305,2.255,2310,3.661,2316,3.661,2324,2.847,2325,3.883,2326,2.847,2330,2.255,2333,3.825,2337,2.255,2345,1.971,2347,1.971,2363,2.255,2364,2.255,2375,2.255,2379,3.258,2444,2.687,2445,2.687,2446,3.258,2447,2.687,2448,2.687,2449,2.687,2450,2.687,2451,2.687,2452,2.255,2453,2.687,2454,3.882,2455,2.687,2456,2.687,2457,2.687,2458,2.687,2459,3.882,2460,2.687,2461,3.258,2462,2.687,2463,3.882,2464,2.687,2465,3.825,2466,2.687,2467,2.687,2468,2.687,2469,2.687,2470,2.687,2471,2.687,2472,2.687,2473,2.687,2474,2.687,2475,2.687,2476,2.687,2477,2.687,2478,2.687,2479,2.255,2480,2.687,2481,2.687,2482,2.687,2483,2.255,2484,3.258,2485,2.255,2486,2.255,2487,2.687,2488,2.687,2489,2.687,2490,3.882,2491,2.687,2492,2.687,2493,2.687,2494,2.687,2495,2.687,2496,2.687,2497,2.687,2498,2.687,2499,2.687,2500,3.258,2501,2.687,2502,2.255,2503,2.255,2504,2.255,2505,2.687,2506,3.258,2507,2.255,2508,4.558,2509,2.687,2510,3.882,2511,2.687,2512,2.687,2513,2.687,2514,2.255,2515,2.687,2516,2.687,2517,2.687,2518,2.687,2519,3.882,2520,2.687,2521,2.687,2522,2.687,2523,4.558,2524,2.687,2525,2.687,2526,2.687,2527,2.687,2528,3.882,2529,2.687,2530,2.687,2531,3.882,2532,3.258,2533,2.687,2534,2.687,2535,2.687,2536,2.687,2537,2.255,2538,2.687,2539,2.255,2540,2.687,2541,2.687,2542,2.687,2543,2.687,2544,4.631,2545,2.255,2546,2.687,2547,2.255,2548,2.255,2549,2.687,2550,2.687,2551,2.687,2552,2.687,2553,2.687,2554,2.687,2555,2.687,2556,2.687,2557,2.687,2558,2.687,2559,2.687,2560,3.258,2561,3.882,2562,2.687,2563,3.258,2564,2.255,2565,2.687,2566,3.882,2567,2.255,2568,2.687,2569,2.687,2570,2.687,2571,2.687,2572,2.687,2573,2.687,2574,2.687,2575,2.687,2576,2.687,2577,2.687,2578,2.687,2579,2.687,2580,2.687,2581,3.882,2582,2.687,2583,2.687,2584,2.687,2585,2.687,2586,2.255,2587,2.687,2588,2.687,2589,2.687,2590,3.882,2591,2.687,2592,2.255,2593,2.687,2594,2.687,2595,2.687,2596,2.687,2597,2.687,2598,3.882,2599,2.687,2600,2.687,2601,2.687,2602,2.687,2603,2.687,2604,2.687,2605,2.255,2606,2.687,2607,2.687,2608,2.687,2609,2.687,2610,2.687,2611,2.687,2612,2.687,2613,2.687,2614,2.687,2615,2.687]],["title/additional-documentation/package-construction/create-an-npm-package.html",[539,0.923,557,0.791,790,1.441,1982,1.302,2018,1.302]],["body/additional-documentation/package-construction/create-an-npm-package.html",[3,0.378,5,0.354,6,0.634,16,0.029,17,0.505,18,0.295,25,0.833,32,0.447,34,1.027,37,0.01,38,0.015,39,0.01,42,0.772,44,2.466,50,0.624,54,2.279,55,1.46,61,1.947,62,2.065,63,1.753,89,3.042,96,0.833,114,1.371,126,0.569,127,1.249,134,1.518,139,1.518,158,3.008,161,2.737,164,1.145,165,1.371,166,1.518,178,1.9,186,1.9,214,1.053,215,2.923,216,2.946,219,1.249,229,1.053,232,1.371,236,1.701,241,1.701,245,1.95,296,1.701,309,2.473,320,1.95,341,0.997,346,1.753,354,1.053,369,2.006,405,1.518,406,1.145,414,1.46,432,1.371,450,2.059,460,3.042,477,1.701,494,2.279,517,1.291,522,1.719,557,2.006,595,1.518,605,1.518,611,2.279,612,1.701,621,1.145,623,1.947,624,1.249,625,1.371,640,1.371,674,1.371,707,3.511,721,1.622,725,1.876,740,1.518,757,2.923,758,1.701,762,2.065,763,2.279,780,1.947,788,2.923,818,2.395,819,3.839,824,1.371,837,2.749,866,1.249,870,3.21,883,3.068,908,2.923,940,1.053,977,1.249,978,1.701,983,2.872,989,2.46,999,1.701,1007,1.249,1010,1.053,1038,2.279,1039,1.947,1041,1.719,1042,2.059,1047,3.224,1069,3.511,1071,1.701,1129,1.947,1137,1.371,1179,2.555,1181,3.042,1187,1.947,1197,1.582,1209,1.145,1215,1.701,1219,1.701,1237,1.502,1242,0.972,1279,2.555,1285,1.518,1416,1.701,1417,1.518,1451,3.425,1489,1.371,1559,1.876,1562,1.249,1582,3.261,1585,1.719,1592,1.947,1595,3.261,1599,3.21,1619,1.371,1621,1.947,1623,2.059,1628,3.738,1633,2.279,1634,3.367,1635,3.511,1638,3.042,1646,3.644,1648,1.371,1659,1.947,1660,2.684,1674,2.923,1681,3.738,1693,1.947,1707,2.279,1712,2.737,1713,1.701,1729,1.947,1730,2.737,1738,1.947,1739,1.701,1746,2.923,1757,1.947,1758,2.279,1765,1.518,1774,1.701,1777,3.261,1778,3.261,1787,1.701,1793,1.947,1809,1.701,1826,1.701,1845,4.557,1851,1.701,1867,1.701,1873,2.737,1877,3.068,1889,1.947,1891,1.947,1898,3.042,1902,3.655,1919,2.923,1923,2.279,1929,2.923,1934,2.059,1936,1.701,1942,1.701,1946,1.947,1948,2.555,1953,1.518,1954,3.068,1964,3.839,1967,2.555,1977,2.923,1978,1.947,1980,4.521,1982,3.737,1985,2.923,1993,2.555,2000,1.701,2014,1.947,2018,2.946,2020,1.947,2021,2.923,2023,3.068,2024,2.923,2027,1.947,2031,1.947,2085,1.947,2086,3.068,2123,2.555,2150,2.555,2152,2.555,2155,1.947,2158,1.518,2165,2.555,2172,1.947,2188,1.947,2193,1.518,2206,2.555,2226,1.701,2233,1.947,2253,1.947,2257,1.947,2301,2.279,2307,2.923,2310,2.555,2314,1.947,2316,3.068,2317,1.947,2323,3.902,2324,3.41,2325,4.391,2326,2.555,2328,2.555,2336,2.923,2338,1.701,2350,1.701,2442,1.947,2452,2.923,2461,3.902,2465,1.947,2486,1.947,2500,1.947,2502,1.947,2503,1.947,2504,1.947,2506,2.923,2507,3.511,2532,1.947,2537,1.947,2539,4.557,2544,2.923,2545,2.923,2547,1.947,2548,1.947,2560,2.923,2563,1.947,2564,1.947,2567,1.947,2586,2.923,2592,3.511,2605,1.947,2616,2.319,2617,3.483,2618,4.183,2619,2.319,2620,3.483,2621,3.483,2622,2.319,2623,2.319,2624,3.483,2625,2.319,2626,2.319,2627,2.319,2628,2.319,2629,2.319,2630,2.319,2631,2.319,2632,2.319,2633,2.319,2634,3.483,2635,2.319,2636,2.319,2637,2.319,2638,2.319,2639,4.183,2640,2.319,2641,2.319,2642,2.319,2643,4.183,2644,2.319,2645,2.319,2646,2.319,2647,2.319,2648,2.319,2649,2.319,2650,2.319,2651,2.319,2652,2.319,2653,2.319,2654,2.319,2655,2.319,2656,4.183,2657,2.319,2658,2.319,2659,2.319,2660,2.319,2661,3.483,2662,2.319,2663,2.319,2664,4.65,2665,2.319,2666,2.319,2667,2.319,2668,2.319,2669,3.483,2670,4.183,2671,3.483,2672,2.319,2673,2.319,2674,2.319,2675,2.319,2676,2.319,2677,2.319,2678,2.319,2679,2.319,2680,2.319,2681,2.319,2682,2.319,2683,2.319,2684,2.319,2685,2.319,2686,2.319,2687,2.319,2688,2.319,2689,2.319,2690,2.319,2691,2.319,2692,4.65,2693,4.183,2694,4.183,2695,2.319,2696,2.319,2697,2.319,2698,2.319,2699,2.319,2700,2.319,2701,2.319,2702,2.319,2703,2.319,2704,2.319,2705,2.319,2706,2.319,2707,2.319,2708,2.319,2709,2.319,2710,2.319,2711,2.319,2712,2.319,2713,3.483,2714,4.183,2715,3.483,2716,3.483,2717,3.483,2718,3.483,2719,2.319,2720,2.319,2721,2.319,2722,2.319,2723,2.319,2724,2.319,2725,2.319,2726,2.319,2727,2.319,2728,2.319,2729,2.319,2730,2.319,2731,2.319,2732,2.319,2733,2.319,2734,3.483,2735,2.319,2736,2.319,2737,2.319,2738,2.319,2739,2.319,2740,2.319,2741,2.319,2742,2.319,2743,2.319,2744,2.319,2745,2.319,2746,2.319,2747,2.319,2748,2.319,2749,2.319,2750,3.483,2751,2.319,2752,2.319,2753,2.319]],["title/additional-documentation/about.html",[539,1.43,790,2.232]],["body/additional-documentation/about.html",[16,0.028,34,1.318,37,0.019,38,0.024,39,0.019,42,1.451,115,3.513,178,2.439,234,2.577,244,2.348,245,1.928,307,2.151,346,1.827,349,2.577,369,1.565,414,1.827,455,3.658,517,1.345,557,1.565,621,2.151,760,2.852,764,3.197,952,2.852,983,2.65,991,3.513,1042,2.577,1138,3.197,1207,1.98,1209,2.151,1488,2.577,1583,2.852,1585,2.151,1591,3.197,1599,3.174,1607,3.938,1634,2.892,1648,3.44,1660,3.36,1673,3.197,1680,3.658,1684,3.197,1706,2.852,1707,3.513,1842,4.507,1918,2.852,1934,2.577,1952,3.938,1973,3.658,2153,3.938,2158,2.852,2159,3.197,2193,3.513,2226,3.197,2260,3.658,2297,3.197,2300,3.658,2301,3.513,2309,3.658,2341,3.197,2343,3.658,2344,3.658,2345,4.268,2346,4.507,2347,3.938,2348,3.658,2349,3.658,2350,4.268,2351,4.884,2352,3.658,2353,3.658,2354,3.658,2355,3.658,2357,3.658,2371,3.658,2373,3.658,2389,3.658,2394,3.658,2446,3.658,2479,4.507,2483,3.658,2484,3.658,2485,4.507,2514,4.507,2754,4.359,2755,4.359,2756,4.359,2757,4.359,2758,4.359,2759,5.82,2760,4.359,2761,4.359,2762,4.359,2763,5.37,2764,4.359,2765,4.359,2766,4.359,2767,4.359,2768,4.359,2769,4.359,2770,4.359,2771,4.359,2772,4.359,2773,4.359,2774,4.359,2775,4.359,2776,4.359,2777,4.359,2778,4.359]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["0",{"_index":36,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["0.0.1",{"_index":2712,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.0.23",{"_index":1587,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":1564,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":2032,"title":{},"body":{"dependencies.html":{}}}],["0.19.38",{"_index":2677,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.2.1",{"_index":1625,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":1640,"title":{},"body":{"changelog.html":{}}}],["0.3",{"_index":2183,"title":{},"body":{"index.html":{}}}],["0.3.5",{"_index":1654,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.6",{"_index":1664,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.6.0",{"_index":1659,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.7",{"_index":1665,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.7.0",{"_index":1683,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":1690,"title":{},"body":{"changelog.html":{}}}],["0.7.2",{"_index":1695,"title":{},"body":{"changelog.html":{}}}],["0.7.3",{"_index":1701,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["0.7.4",{"_index":2264,"title":{},"body":{"index.html":{}}}],["0.7.5",{"_index":2267,"title":{},"body":{"index.html":{}}}],["0.8.0",{"_index":1714,"title":{},"body":{"changelog.html":{}}}],["0.8.16",{"_index":2678,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.9.0",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["000",{"_index":1528,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["01",{"_index":1566,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1722,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1626,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":498,"title":{},"body":{"components/DataGridComponent.html":{}}}],["1",{"_index":172,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"overview.html":{},"additional-documentation/package-construction.html":{}}}],["1.0",{"_index":1687,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.10.0",{"_index":2030,"title":{},"body":{"dependencies.html":{}}}],["1.132",{"_index":2582,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1.607",{"_index":2571,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1.7em",{"_index":1549,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["1.987",{"_index":2565,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["10",{"_index":697,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{}}}],["100",{"_index":887,"title":{},"body":{"components/EditorComponent.html":{},"contributing.html":{}}}],["10px",{"_index":84,"title":{},"body":{"components/AutoFormComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["113",{"_index":2777,"title":{},"body":{"additional-documentation/about.html":{}}}],["12683",{"_index":2778,"title":{},"body":{"additional-documentation/about.html":{}}}],["13",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["13.596",{"_index":2570,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["13569",{"_index":2577,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["14",{"_index":1627,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1641,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":848,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["1607",{"_index":2578,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["16px",{"_index":472,"title":{},"body":{"components/DataGridComponent.html":{}}}],["170",{"_index":2566,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1987",{"_index":2575,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1em",{"_index":92,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["1px",{"_index":80,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["1st",{"_index":2455,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["2",{"_index":1619,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["2.2.0",{"_index":1845,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["2.4.1",{"_index":2675,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["2.x",{"_index":2458,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["20",{"_index":1588,"title":{},"body":{"changelog.html":{}}}],["2016",{"_index":2390,"title":{},"body":{"license.html":{}}}],["2017",{"_index":1565,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":1655,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":1684,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["2020",{"_index":1721,"title":{},"body":{"changelog.html":{}}}],["20px",{"_index":849,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["24",{"_index":1692,"title":{},"body":{"changelog.html":{}}}],["25px",{"_index":1385,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["2em",{"_index":1535,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["2px",{"_index":503,"title":{},"body":{"components/DataGridComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["3",{"_index":823,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{}}}],["3.1.0",{"_index":2674,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["3.6.4",{"_index":2025,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1696,"title":{},"body":{"changelog.html":{}}}],["30.107",{"_index":2558,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["300",{"_index":2174,"title":{},"body":{"index.html":{}}}],["3000",{"_index":2752,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["30107",{"_index":2573,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["31",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["313",{"_index":2583,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["39",{"_index":2177,"title":{},"body":{"index.html":{}}}],["3px",{"_index":1538,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["4",{"_index":1672,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["4.233",{"_index":2559,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["4.4.1",{"_index":2022,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2026,"title":{},"body":{"dependencies.html":{}}}],["4233",{"_index":2574,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["45690",{"_index":2579,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["46.822",{"_index":2549,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["4px",{"_index":850,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["5",{"_index":1661,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["5.4.1",{"_index":2725,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["5.4.2",{"_index":2676,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["6",{"_index":824,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["6.323",{"_index":2550,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["6.5.4",{"_index":2028,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2562,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["6010",{"_index":2580,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["7",{"_index":1666,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["7.0.0",{"_index":1694,"title":{},"body":{"changelog.html":{}}}],["7.x",{"_index":2457,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["8",{"_index":1719,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["9",{"_index":1723,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["9.1.0",{"_index":2019,"title":{},"body":{"dependencies.html":{}}}],["__displayorder__${controlname",{"_index":153,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__example:__",{"_index":427,"title":{},"body":{"components/DataGridComponent.html":{}}}],["__groupdesc__${controlname",{"_index":157,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__groupname__${controlname",{"_index":155,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__grouporder__${controlname",{"_index":156,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__hascompareproperty__${propname",{"_index":1114,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasmaxlength__${propname",{"_index":1083,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasminlength__${propname",{"_index":1089,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__haspattern__${propname",{"_index":1095,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasrangefrom__${propname",{"_index":1101,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasrangeto__${propname",{"_index":1103,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__isgrouped__${controlname",{"_index":154,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["__isrequired__${propname",{"_index":1077,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["_headers",{"_index":563,"title":{},"body":{"classes/DataGridModel.html":{}}}],["_items",{"_index":564,"title":{},"body":{"classes/DataGridModel.html":{}}}],["_state",{"_index":1240,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["_window",{"_index":1556,"title":{},"body":{"injectables/WindowRef.html":{},"miscellaneous/functions.html":{}}}],["a.ac",{"_index":1541,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["a[colname",{"_index":712,"title":{},"body":{"classes/DataGridModel.html":{}}}],["ability",{"_index":2630,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["above",{"_index":873,"title":{},"body":{"components/EditorComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["absolute",{"_index":1784,"title":{},"body":{"contributing.html":{}}}],["absolutely",{"_index":2203,"title":{},"body":{"index.html":{}}}],["ac",{"_index":75,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{}}}],["accept",{"_index":1800,"title":{},"body":{"contributing.html":{}}}],["accepted",{"_index":1816,"title":{},"body":{"contributing.html":{}}}],["accepts",{"_index":2271,"title":{},"body":{"index.html":{}}}],["access",{"_index":402,"title":{},"body":{"components/DataGridComponent.html":{},"injectables/FormValidatorService.html":{},"index.html":{}}}],["accessors",{"_index":289,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"classes/TreeNodeModel.html":{},"injectables/WindowRef.html":{}}}],["according",{"_index":782,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"additional-documentation/package-construction.html":{}}}],["accordingly",{"_index":1039,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["account",{"_index":2598,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["aceditor\">component",{"_index":2094,"title":{},"body":{"miscellaneous/functions.html":{}}}],["achieve",{"_index":2538,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["actexttreenode",{"_index":1418,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["action",{"_index":319,"title":{},"body":{"components/DataGridComponent.html":{},"index.html":{},"license.html":{}}}],["actioncell",{"_index":828,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["actions",{"_index":324,"title":{},"body":{"components/DataGridComponent.html":{}}}],["active",{"_index":1003,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["actively",{"_index":2627,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["actreenodeoptions",{"_index":1420,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["actual",{"_index":650,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"modules/SvogvModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["actual_component",{"_index":212,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["actually",{"_index":1415,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{}}}],["add",{"_index":175,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["add(node",{"_index":1273,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["add(nodes",{"_index":1260,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["addcolumn",{"_index":569,"title":{},"body":{"classes/DataGridModel.html":{}}}],["addcolumn(colname",{"_index":599,"title":{},"body":{"classes/DataGridModel.html":{}}}],["addcolumnlater",{"_index":629,"title":{},"body":{"classes/DataGridModel.html":{}}}],["addcolumn}later",{"_index":714,"title":{},"body":{"classes/DataGridModel.html":{}}}],["added",{"_index":1704,"title":{},"body":{"changelog.html":{}}}],["adding",{"_index":349,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"contributing.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["additional",{"_index":539,"title":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["additionally",{"_index":1708,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["address",{"_index":2082,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["adds",{"_index":1971,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{}}}],["adherence",{"_index":1893,"title":{},"body":{"contributing.html":{}}}],["admit",{"_index":1676,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":2226,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["advantages",{"_index":2160,"title":{},"body":{"index.html":{}}}],["affect",{"_index":1965,"title":{},"body":{"contributing.html":{}}}],["affected",{"_index":1843,"title":{},"body":{"contributing.html":{}}}],["afterviewinit",{"_index":255,"title":{},"body":{"components/DataGridComponent.html":{}}}],["again",{"_index":627,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["against",{"_index":2078,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["agreement",{"_index":1874,"title":{},"body":{"contributing.html":{}}}],["ahead",{"_index":1803,"title":{},"body":{"contributing.html":{}}}],["alexa",{"_index":2386,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":2420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":852,"title":{},"body":{"components/EditorComponent.html":{}}}],["align:middle",{"_index":1546,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["allow",{"_index":1809,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["allowed",{"_index":1014,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":992,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["alpha",{"_index":1575,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":165,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["alternative",{"_index":2602,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["alternatively",{"_index":2221,"title":{},"body":{"index.html":{}}}],["alternatives",{"_index":2540,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["always",{"_index":179,"title":{},"body":{"components/AutoFormComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["amount",{"_index":2532,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["analogclock",{"_index":1616,"title":{},"body":{"changelog.html":{}}}],["ancient",{"_index":2760,"title":{},"body":{"additional-documentation/about.html":{}}}],["and/or",{"_index":2392,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1660,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["angular's",{"_index":2227,"title":{},"body":{"index.html":{}}}],["angular/cli",{"_index":2156,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1215,"title":{},"body":{"modules/SvogvModule.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/compiler",{"_index":2020,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/core",{"_index":126,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/forms",{"_index":127,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"modules/SvogvModule.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/http",{"_index":2673,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/platform",{"_index":2021,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/router",{"_index":1219,"title":{},"body":{"modules/SvogvModule.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular2",{"_index":2666,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular4",{"_index":2667,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angularjs",{"_index":2358,"title":{},"body":{"index.html":{}}}],["annotations",{"_index":2195,"title":{},"body":{"index.html":{}}}],["anote",{"_index":1897,"title":{},"body":{"contributing.html":{}}}],["another",{"_index":1633,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["answer",{"_index":1768,"title":{},"body":{"contributing.html":{}}}],["answered",{"_index":1822,"title":{},"body":{"contributing.html":{}}}],["answers",{"_index":2608,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["any).__editormodel__",{"_index":138,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["anything",{"_index":1986,"title":{},"body":{"contributing.html":{}}}],["anyway",{"_index":2131,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["apache",{"_index":2654,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["apart",{"_index":2613,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["api",{"_index":3,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["app",{"_index":2310,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["app's",{"_index":2464,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["appear",{"_index":114,"title":{},"body":{"components/AutoFormComponent.html":{},"interfaces/FormValidatorModel.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["appearance",{"_index":238,"title":{},"body":{"components/DataGridComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["appears",{"_index":231,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["application",{"_index":2136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applications",{"_index":552,"title":{},"body":{"classes/DataGridModel.html":{}}}],["applied",{"_index":246,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["applies",{"_index":2088,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["apply",{"_index":413,"title":{},"body":{"components/DataGridComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["appreciated",{"_index":2366,"title":{},"body":{"index.html":{}}}],["approach",{"_index":2164,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["appropriate",{"_index":359,"title":{},"body":{"components/DataGridComponent.html":{},"contributing.html":{},"index.html":{}}}],["apps",{"_index":2297,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["archive",{"_index":1820,"title":{},"body":{"contributing.html":{}}}],["area",{"_index":1485,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["arising",{"_index":2417,"title":{},"body":{"license.html":{}}}],["around",{"_index":314,"title":{},"body":{"components/DataGridComponent.html":{},"additional-documentation/package-construction.html":{}}}],["array",{"_index":1,"title":{"interfaces/Array.html":{}},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["array.prototype.remove",{"_index":23,"title":{},"body":{"interfaces/Array.html":{}}}],["array.prototype.sort",{"_index":532,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/functions.html":{}}}],["array[0",{"_index":903,"title":{},"body":{"components/EditorComponent.html":{}}}],["arrays",{"_index":1193,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["ascending",{"_index":644,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["asp.net",{"_index":2377,"title":{},"body":{"index.html":{}}}],["assume",{"_index":177,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["assure",{"_index":2314,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["assures",{"_index":2098,"title":{},"body":{"miscellaneous/functions.html":{}}}],["atom",{"_index":2543,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["attribute",{"_index":519,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"index.html":{}}}],["attributes",{"_index":235,"title":{},"body":{"components/DataGridComponent.html":{}}}],["audience",{"_index":2147,"title":{},"body":{"index.html":{}}}],["author",{"_index":2338,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["auto",{"_index":87,"title":{},"body":{"components/AutoFormComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["autoamtically",{"_index":990,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["autoform",{"_index":76,"title":{},"body":{"components/AutoFormComponent.html":{},"changelog.html":{},"index.html":{}}}],["autoform&gt",{"_index":997,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["autoform'},{'name",{"_index":199,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["autoform.component.html",{"_index":94,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["autoformcomponent",{"_index":41,"title":{"components/AutoFormComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["autoforms",{"_index":971,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["automate",{"_index":2155,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["automatically",{"_index":1896,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["available",{"_index":1706,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["avalidator",{"_index":1044,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["avoid",{"_index":2121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aware",{"_index":2225,"title":{},"body":{"index.html":{}}}],["awesome",{"_index":1488,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["aws",{"_index":2383,"title":{},"body":{"index.html":{}}}],["azure",{"_index":474,"title":{},"body":{"components/DataGridComponent.html":{},"index.html":{}}}],["a}validator",{"_index":1060,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["b",{"_index":549,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"contributing.html":{}}}],["b[colname",{"_index":713,"title":{},"body":{"classes/DataGridModel.html":{}}}],["back",{"_index":467,"title":{},"body":{"components/DataGridComponent.html":{},"additional-documentation/package-construction.html":{}}}],["backcolor",{"_index":1349,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["backend",{"_index":764,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["background",{"_index":479,"title":{},"body":{"components/DataGridComponent.html":{},"additional-documentation/package-construction.html":{}}}],["bad",{"_index":2534,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["base",{"_index":544,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":298,"title":{},"body":{"components/DataGridComponent.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["basic",{"_index":219,"title":{},"body":{"components/DataGridComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["become",{"_index":2194,"title":{},"body":{"index.html":{}}}],["becomes",{"_index":2494,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["before",{"_index":1730,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["begin",{"_index":1958,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["beginners",{"_index":2604,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["behavior",{"_index":58,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["being",{"_index":354,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["believe",{"_index":2332,"title":{},"body":{"index.html":{}}}],["below",{"_index":2258,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":2529,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["berlin",{"_index":2343,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["best",{"_index":1785,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":1739,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["between",{"_index":1579,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["big",{"_index":1667,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["binding",{"_index":2247,"title":{},"body":{"index.html":{}}}],["bit",{"_index":2351,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["bitbucket",{"_index":2603,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["block",{"_index":494,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["body",{"_index":1947,"title":{},"body":{"contributing.html":{}}}],["book",{"_index":2771,"title":{},"body":{"additional-documentation/about.html":{}}}],["bool",{"_index":2272,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":119,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["booleanfallback",{"_index":261,"title":{},"body":{"components/DataGridComponent.html":{}}}],["booleans",{"_index":1191,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["bootstrap",{"_index":783,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"modules/SvogvModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/package-construction.html":{}}}],["border",{"_index":78,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["borders",{"_index":243,"title":{},"body":{"components/DataGridComponent.html":{}}}],["boring",{"_index":2594,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["both",{"_index":1167,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"changelog.html":{}}}],["bottom",{"_index":1537,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["bound",{"_index":1378,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["bower_components",{"_index":2568,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["box",{"_index":1539,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["boxes",{"_index":979,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["brainer",{"_index":2499,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["branch",{"_index":1878,"title":{},"body":{"contributing.html":{}}}],["brave",{"_index":2513,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["breadcrumb",{"_index":1609,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":1578,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["brings",{"_index":2485,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["bro",{"_index":2553,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["broccoli",{"_index":1981,"title":{},"body":{"contributing.html":{}}}],["brought",{"_index":2768,"title":{},"body":{"additional-documentation/about.html":{}}}],["browse",{"_index":2418,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1559,"title":{},"body":{"injectables/WindowRef.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["browser's",{"_index":2475,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["browsers",{"_index":1849,"title":{},"body":{"contributing.html":{}}}],["bug",{"_index":1724,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["bugs",{"_index":1746,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["build",{"_index":1047,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["build(target",{"_index":1051,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["building",{"_index":2469,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["builds",{"_index":2709,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["bundle",{"_index":2170,"title":{},"body":{"index.html":{}}}],["bundles",{"_index":1620,"title":{},"body":{"changelog.html":{}}}],["bundles/svogv.umd.js",{"_index":2660,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["business",{"_index":2348,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["button",{"_index":329,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"changelog.html":{}}}],["buttons",{"_index":339,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/DataGridPaginationComponent.html":{},"changelog.html":{}}}],["buy",{"_index":2515,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["c",{"_index":2389,"title":{},"body":{"license.html":{},"additional-documentation/about.html":{}}}],["c:\\app",{"_index":2591,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["cal",{"_index":2284,"title":{},"body":{"index.html":{}}}],["calculated",{"_index":779,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["calendar",{"_index":913,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["calender",{"_index":2282,"title":{},"body":{"index.html":{}}}],["call",{"_index":636,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction.html":{}}}],["callback",{"_index":530,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":611,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["caller",{"_index":614,"title":{},"body":{"classes/DataGridModel.html":{}}}],["calling",{"_index":628,"title":{},"body":{"classes/DataGridModel.html":{}}}],["can't",{"_index":1864,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["cansort",{"_index":2124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capacity",{"_index":1767,"title":{},"body":{"contributing.html":{}}}],["capitalize",{"_index":1995,"title":{},"body":{"contributing.html":{}}}],["care",{"_index":2326,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["casde",{"_index":2129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":1712,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["cases",{"_index":1882,"title":{},"body":{"contributing.html":{}}}],["cast",{"_index":1067,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["catch",{"_index":1072,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["causing",{"_index":1868,"title":{},"body":{"contributing.html":{}}}],["cd",{"_index":2592,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["cell",{"_index":2259,"title":{},"body":{"index.html":{}}}],["cell's",{"_index":2263,"title":{},"body":{"index.html":{}}}],["cells",{"_index":2135,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["center",{"_index":2657,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["certain",{"_index":367,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{}}}],["chain",{"_index":1179,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["chances",{"_index":1834,"title":{},"body":{"contributing.html":{}}}],["change",{"_index":237,"title":{},"body":{"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["change.currentvalue",{"_index":813,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["changed",{"_index":789,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"contributing.html":{},"index.html":{}}}],["changelog",{"_index":1563,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":793,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["changes['maxpageindex",{"_index":811,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["changing",{"_index":623,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["chapter",{"_index":2694,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["character",{"_index":877,"title":{},"body":{"components/EditorComponent.html":{}}}],["characters",{"_index":1936,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["chars",{"_index":1570,"title":{},"body":{"changelog.html":{}}}],["chat",{"_index":1771,"title":{},"body":{"contributing.html":{}}}],["cheap",{"_index":2520,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["check",{"_index":164,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["checkable",{"_index":1350,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["checkbox",{"_index":2274,"title":{},"body":{"index.html":{}}}],["checkboxes",{"_index":1380,"title":{},"body":{"components/TreeViewComponent.html":{},"index.html":{}}}],["checkchanged",{"_index":1391,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["checked",{"_index":1359,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["checkout",{"_index":1879,"title":{},"body":{"contributing.html":{}}}],["checks",{"_index":2236,"title":{},"body":{"index.html":{}}}],["children",{"_index":1241,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{}}}],["choice",{"_index":2641,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["choose",{"_index":2508,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["chore",{"_index":1983,"title":{},"body":{"contributing.html":{}}}],["ci",{"_index":1976,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["cla",{"_index":1753,"title":{},"body":{"contributing.html":{}}}],["clarifies",{"_index":1649,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":131,"title":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["class's",{"_index":356,"title":{},"body":{"components/DataGridComponent.html":{}}}],["classes",{"_index":239,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["classic",{"_index":2304,"title":{},"body":{"index.html":{}}}],["clean",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["cleaner",{"_index":2495,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["clear",{"_index":2471,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["cli",{"_index":1669,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["click",{"_index":361,"title":{},"body":{"components/DataGridComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{}}}],["clicked",{"_index":1446,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["clicking",{"_index":330,"title":{},"body":{"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{}}}],["clicks",{"_index":588,"title":{},"body":{"classes/DataGridModel.html":{}}}],["client",{"_index":596,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{}}}],["clone",{"_index":2313,"title":{},"body":{"index.html":{}}}],["close",{"_index":2178,"title":{},"body":{"index.html":{}}}],["closed",{"_index":1870,"title":{},"body":{"contributing.html":{}}}],["closer",{"_index":2472,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["closes",{"_index":2001,"title":{},"body":{"contributing.html":{}}}],["closest",{"_index":1180,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["cloud",{"_index":2379,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["clsicon",{"_index":1425,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["cluster_svogvmodule",{"_index":1201,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["cluster_svogvmodule_declarations",{"_index":1202,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["cluster_svogvmodule_providers",{"_index":1203,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["code",{"_index":5,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["codepen",{"_index":1781,"title":{},"body":{"contributing.html":{}}}],["coding",{"_index":1750,"title":{},"body":{"contributing.html":{}}}],["coffeescript",{"_index":2482,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["col",{"_index":242,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"index.html":{}}}],["col.first",{"_index":478,"title":{},"body":{"components/DataGridComponent.html":{}}}],["col.hidden",{"_index":717,"title":{},"body":{"classes/DataGridModel.html":{}}}],["col.last",{"_index":475,"title":{},"body":{"components/DataGridComponent.html":{}}}],["colborders",{"_index":473,"title":{},"body":{"components/DataGridComponent.html":{}}}],["collapsable",{"_index":1351,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["collapse",{"_index":1548,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["collapsechanged",{"_index":1392,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["collapseclasses",{"_index":1426,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["collapsed",{"_index":1502,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["collapses",{"_index":1448,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["collection",{"_index":603,"title":{},"body":{"classes/DataGridModel.html":{}}}],["colname",{"_index":606,"title":{},"body":{"classes/DataGridModel.html":{}}}],["colon",{"_index":878,"title":{},"body":{"components/EditorComponent.html":{}}}],["colons",{"_index":1969,"title":{},"body":{"contributing.html":{}}}],["color",{"_index":480,"title":{},"body":{"components/DataGridComponent.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["colors",{"_index":1422,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["column",{"_index":299,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"index.html":{}}}],["columns",{"_index":311,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["columnstyle",{"_index":275,"title":{},"body":{"components/DataGridComponent.html":{}}}],["columsn",{"_index":2120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["combinations",{"_index":1597,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":2452,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["comes",{"_index":1603,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["command",{"_index":1898,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["commands",{"_index":2658,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["commercial",{"_index":2335,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1751,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":2449,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["commonmodule",{"_index":1214,"title":{},"body":{"modules/SvogvModule.html":{}}}],["community",{"_index":1770,"title":{},"body":{"contributing.html":{}}}],["companies",{"_index":2518,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["compare",{"_index":1010,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"interfaces/ObjectConstructor.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["compare(withproperty",{"_index":2061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compare.decorator.ts",{"_index":2040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compared",{"_index":2063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compares",{"_index":2062,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["comparetype",{"_index":959,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["comparision",{"_index":679,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["competing",{"_index":1651,"title":{},"body":{"changelog.html":{}}}],["compilation",{"_index":2740,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["compiler",{"_index":2736,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["compilers",{"_index":2480,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["complement",{"_index":2295,"title":{},"body":{"index.html":{}}}],["complete",{"_index":52,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["completely",{"_index":455,"title":{},"body":{"components/DataGridComponent.html":{},"additional-documentation/about.html":{}}}],["complex",{"_index":347,"title":{},"body":{"components/DataGridComponent.html":{},"changelog.html":{}}}],["component",{"_index":40,"title":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"classes/TreeNodeComponentModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["component's",{"_index":1280,"title":{},"body":{"classes/TreeNodeComponentModel.html":{},"index.html":{}}}],["component_template",{"_index":198,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["components",{"_index":42,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["concept",{"_index":2468,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["concise",{"_index":2505,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["concrete",{"_index":2589,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["conduct",{"_index":1742,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":2697,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["configuration",{"_index":1977,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["configure",{"_index":2290,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":2491,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["connect",{"_index":525,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["connection",{"_index":2240,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/package-construction.html":{}}}],["connects",{"_index":2246,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":2408,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1805,"title":{},"body":{"contributing.html":{}}}],["considering",{"_index":2524,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["consistency",{"_index":1925,"title":{},"body":{"contributing.html":{}}}],["consists",{"_index":1946,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["console.error('invalid",{"_index":1074,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["console.log('formatdatapipe:nopipetoken",{"_index":1151,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["console.log('formatdatapipe:pipetoken",{"_index":1152,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["console.log('header",{"_index":754,"title":{},"body":{"classes/DataGridModel.html":{}}}],["console.log('model",{"_index":437,"title":{},"body":{"components/DataGridComponent.html":{}}}],["console.log(valueorpredicate",{"_index":35,"title":{},"body":{"interfaces/Array.html":{}}}],["console.warn(`property",{"_index":464,"title":{},"body":{"components/DataGridComponent.html":{}}}],["const",{"_index":25,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TreeNodeModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["construction",{"_index":1612,"title":{"additional-documentation/package-construction.html":{}},"body":{"changelog.html":{}}}],["constructor",{"_index":104,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["constructor(@inject(formbuilder",{"_index":1062,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["constructor(component",{"_index":1281,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["constructor(el",{"_index":1438,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["constructor(fb",{"_index":1048,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["constructor(items",{"_index":582,"title":{},"body":{"classes/DataGridModel.html":{}}}],["constructor(options",{"_index":1292,"title":{},"body":{"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{}}}],["constructor(private",{"_index":1150,"title":{},"body":{"pipes/FormatDataPipe.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["constructor(public",{"_index":546,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["constructor(text",{"_index":513,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/TextTreeNodeModel.html":{}}}],["contact",{"_index":1756,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["contain",{"_index":2000,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["container",{"_index":1542,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["contains",{"_index":1043,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["content",{"_index":304,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["contentchild",{"_index":423,"title":{},"body":{"components/DataGridComponent.html":{}}}],["contentchild('boolean",{"_index":379,"title":{},"body":{"components/DataGridComponent.html":{}}}],["contentchild('date",{"_index":384,"title":{},"body":{"components/DataGridComponent.html":{}}}],["contentchild('enum",{"_index":390,"title":{},"body":{"components/DataGridComponent.html":{}}}],["contentchild('number",{"_index":394,"title":{},"body":{"components/DataGridComponent.html":{}}}],["contentchild('string",{"_index":398,"title":{},"body":{"components/DataGridComponent.html":{}}}],["context",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":145,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"interfaces/ObjectConstructor.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["continuees",{"_index":2707,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["continues",{"_index":1576,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["contract",{"_index":2414,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":1999,"title":{},"body":{"contributing.html":{}}}],["contribute",{"_index":1737,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["contributing",{"_index":1735,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":1913,"title":{},"body":{"contributing.html":{}}}],["contributions",{"_index":1802,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1740,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":56,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["controlled",{"_index":240,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["controller",{"_index":2478,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["controlling",{"_index":551,"title":{},"body":{"classes/DataGridModel.html":{}}}],["controlname",{"_index":142,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["controls",{"_index":135,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["conventions",{"_index":1892,"title":{},"body":{"contributing.html":{}}}],["convert",{"_index":1731,"title":{},"body":{"changelog.html":{}}}],["coordinate",{"_index":1810,"title":{},"body":{"contributing.html":{}}}],["copies",{"_index":2399,"title":{},"body":{"license.html":{}}}],["copy",{"_index":470,"title":{},"body":{"components/DataGridComponent.html":{},"license.html":{}}}],["copyright",{"_index":2388,"title":{},"body":{"license.html":{}}}],["core",{"_index":2023,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["corporations",{"_index":2012,"title":{},"body":{"contributing.html":{}}}],["correcting",{"_index":1975,"title":{},"body":{"contributing.html":{}}}],["cosmosdb",{"_index":2380,"title":{},"body":{"index.html":{}}}],["count",{"_index":559,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction.html":{}}}],["counting",{"_index":2569,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["course",{"_index":2238,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["covered",{"_index":2693,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["craft",{"_index":1814,"title":{},"body":{"contributing.html":{}}}],["crafted",{"_index":1818,"title":{},"body":{"contributing.html":{}}}],["crap",{"_index":2761,"title":{},"body":{"additional-documentation/about.html":{}}}],["create",{"_index":557,"title":{"additional-documentation/package-construction/create-an-npm-package.html":{}},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["created",{"_index":1038,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["createheadersfortype",{"_index":570,"title":{},"body":{"classes/DataGridModel.html":{}}}],["createheadersfortype(type",{"_index":607,"title":{},"body":{"classes/DataGridModel.html":{}}}],["creates",{"_index":51,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["creating",{"_index":1042,"title":{},"body":{"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["creation",{"_index":2166,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["css",{"_index":296,"title":{},"body":{"components/DataGridComponent.html":{},"components/TreeViewComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ctor",{"_index":515,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["ctrl",{"_index":1131,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["current",{"_index":598,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["currently",{"_index":674,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["currentpageindex",{"_index":565,"title":{},"body":{"classes/DataGridModel.html":{}}}],["currentpagenumber",{"_index":770,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["currentrowend",{"_index":576,"title":{},"body":{"classes/DataGridModel.html":{}}}],["currentrowstart",{"_index":575,"title":{},"body":{"classes/DataGridModel.html":{}}}],["cursor",{"_index":484,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["curve",{"_index":2488,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["custom",{"_index":411,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["customers",{"_index":2362,"title":{},"body":{"index.html":{}}}],["customizable",{"_index":2239,"title":{},"body":{"index.html":{}}}],["d",{"_index":1921,"title":{},"body":{"contributing.html":{}}}],["damages",{"_index":2409,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":2320,"title":{},"body":{"index.html":{}}}],["data",{"_index":221,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"pipes/FormatDataPipe.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction.html":{}}}],["datagrid",{"_index":203,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["datagrid\">does",{"_index":2091,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datagrid'},{'name",{"_index":201,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["datagrid.component.html",{"_index":260,"title":{},"body":{"components/DataGridComponent.html":{}}}],["datagrid.component.scss",{"_index":259,"title":{},"body":{"components/DataGridComponent.html":{}}}],["datagridcomponent",{"_index":200,"title":{"components/DataGridComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["datagridheader.model",{"_index":678,"title":{},"body":{"classes/DataGridModel.html":{}}}],["datagridheadermodel",{"_index":504,"title":{"classes/DataGridHeaderModel.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["datagridheadermodel(propname",{"_index":735,"title":{},"body":{"classes/DataGridModel.html":{}}}],["datagridmodel",{"_index":305,"title":{"classes/DataGridModel.html":{}},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{}}}],["datagridmodel.ondeleteevent",{"_index":332,"title":{},"body":{"components/DataGridComponent.html":{}}}],["datagridmodel.ondelete}event",{"_index":429,"title":{},"body":{"components/DataGridComponent.html":{}}}],["datagridmodel.oneditevent",{"_index":335,"title":{},"body":{"components/DataGridComponent.html":{}}}],["datagridmodel.onedit}event",{"_index":430,"title":{},"body":{"components/DataGridComponent.html":{}}}],["datagridpagination.component.html",{"_index":769,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["datagridpagination.component.scss",{"_index":768,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["datagridpaginationcomponent",{"_index":202,"title":{"components/DataGridPaginationComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["datagridstyle.model",{"_index":545,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["datagridstyles",{"_index":290,"title":{"interfaces/DatagridStyles.html":{}},"body":{"components/DataGridComponent.html":{},"interfaces/DatagridStyles.html":{}}}],["datatype",{"_index":2130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":262,"title":{},"body":{"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["date.parse(f.tostring",{"_index":1110,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["date.parse(t.tostring",{"_index":1111,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["datefallback",{"_index":263,"title":{},"body":{"components/DataGridComponent.html":{}}}],["datepicker",{"_index":1989,"title":{},"body":{"contributing.html":{}}}],["dates",{"_index":2107,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["days",{"_index":2349,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["dealt",{"_index":1835,"title":{},"body":{"contributing.html":{}}}],["debugging",{"_index":1624,"title":{},"body":{"changelog.html":{}}}],["decided",{"_index":2363,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["decision",{"_index":2626,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["declarations",{"_index":1198,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["declare",{"_index":22,"title":{},"body":{"interfaces/Array.html":{},"interfaces/ObjectConstructor.html":{}}}],["decorated",{"_index":67,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decoration",{"_index":1543,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["decorator",{"_index":185,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decorators",{"_index":55,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dedicated",{"_index":1643,"title":{},"body":{"changelog.html":{}}}],["deeply",{"_index":2331,"title":{},"body":{"index.html":{}}}],["default",{"_index":109,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":452,"title":{},"body":{"components/DataGridComponent.html":{},"index.html":{}}}],["define",{"_index":2073,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":13,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{}}}],["definition",{"_index":921,"title":{},"body":{"components/EditorComponent.html":{},"modules/SvogvModule.html":{},"index.html":{}}}],["delete",{"_index":328,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"contributing.html":{}}}],["deleteitem",{"_index":287,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{}}}],["deleteitem(item",{"_index":609,"title":{},"body":{"classes/DataGridModel.html":{}}}],["deliver",{"_index":2293,"title":{},"body":{"index.html":{}}}],["demo",{"_index":44,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["demoall",{"_index":2713,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dependencies",{"_index":1197,"title":{"dependencies.html":{}},"body":{"modules/SvogvModule.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dependency",{"_index":2204,"title":{},"body":{"index.html":{}}}],["dependent",{"_index":2268,"title":{},"body":{"index.html":{}}}],["depending",{"_index":2132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["depends",{"_index":2622,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["deploy",{"_index":2506,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["desc",{"_index":174,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["descended",{"_index":643,"title":{},"body":{"classes/DataGridModel.html":{}}}],["descending",{"_index":680,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":506,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["described",{"_index":1886,"title":{},"body":{"contributing.html":{}}}],["describes",{"_index":968,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["description",{"_index":50,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["descriptions",{"_index":1031,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["descriptive",{"_index":1891,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["descrption",{"_index":1860,"title":{},"body":{"contributing.html":{}}}],["design",{"_index":2151,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["designed",{"_index":2289,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":2005,"title":{},"body":{"contributing.html":{}}}],["detailled",{"_index":1032,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["details",{"_index":1931,"title":{},"body":{"contributing.html":{}}}],["determine",{"_index":2251,"title":{},"body":{"index.html":{}}}],["dev",{"_index":2367,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2504,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["developer",{"_index":1887,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":2153,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["development",{"_index":1765,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["diagnose",{"_index":1788,"title":{},"body":{"contributing.html":{}}}],["dialog",{"_index":1990,"title":{},"body":{"contributing.html":{}}}],["dictionary",{"_index":2133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["didn't",{"_index":462,"title":{},"body":{"components/DataGridComponent.html":{},"changelog.html":{}}}],["difference",{"_index":2292,"title":{},"body":{"index.html":{}}}],["different",{"_index":1029,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"additional-documentation/package-construction.html":{}}}],["dir",{"_index":631,"title":{},"body":{"classes/DataGridModel.html":{}}}],["direct",{"_index":1760,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["direction",{"_index":388,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["direction.ascending",{"_index":705,"title":{},"body":{"classes/DataGridModel.html":{}}}],["direction.descending",{"_index":706,"title":{},"body":{"classes/DataGridModel.html":{}}}],["directionenumhelper",{"_index":264,"title":{},"body":{"components/DataGridComponent.html":{}}}],["directive",{"_index":195,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["directives",{"_index":211,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["directly",{"_index":295,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"contributing.html":{}}}],["disabled",{"_index":1550,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["disc",{"_index":2584,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["disclaims",{"_index":2400,"title":{},"body":{"license.html":{}}}],["discussed",{"_index":1808,"title":{},"body":{"contributing.html":{}}}],["discussion",{"_index":1762,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":184,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["display('e",{"_index":2208,"title":{},"body":{"index.html":{}}}],["display('phone",{"_index":2210,"title":{},"body":{"index.html":{}}}],["display('user",{"_index":2215,"title":{},"body":{"index.html":{}}}],["display(name",{"_index":2067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["display.decorator.ts",{"_index":2042,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["display.desc(type",{"_index":732,"title":{},"body":{"classes/DataGridModel.html":{}}}],["display.name(type",{"_index":730,"title":{},"body":{"classes/DataGridModel.html":{}}}],["display:inline",{"_index":1544,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["displaydesc",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displaygroup",{"_index":967,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["displaygroup(name",{"_index":2072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["displaygroup.decorator.ts",{"_index":2043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["displaygrouptype",{"_index":955,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["displayname",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayorder",{"_index":146,"title":{},"body":{"components/AutoFormComponent.html":{},"miscellaneous/variables.html":{}}}],["displaytype",{"_index":954,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["dist",{"_index":2563,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["distinct",{"_index":2632,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["distribute",{"_index":2393,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2601,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["dive",{"_index":2680,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["docs",{"_index":1964,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["document",{"_index":2007,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["documentation",{"_index":216,"title":{},"body":{"components/DataGridComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["documentation's",{"_index":2688,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["documented",{"_index":1930,"title":{},"body":{"contributing.html":{}}}],["doing",{"_index":2530,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["dom",{"_index":47,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["don't",{"_index":1342,"title":{},"body":{"classes/TreeNodeModel.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["done",{"_index":2703,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dot",{"_index":1997,"title":{},"body":{"contributing.html":{}}}],["down",{"_index":500,"title":{},"body":{"components/DataGridComponent.html":{},"additional-documentation/package-construction.html":{}}}],["drag",{"_index":315,"title":{},"body":{"components/DataGridComponent.html":{}}}],["drawback",{"_index":2546,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["driven",{"_index":232,"title":{},"body":{"components/DataGridComponent.html":{},"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["drop",{"_index":316,"title":{},"body":{"components/DataGridComponent.html":{},"index.html":{}}}],["dropdown",{"_index":2283,"title":{},"body":{"index.html":{}}}],["dropmenu",{"_index":1605,"title":{},"body":{"changelog.html":{}}}],["dude",{"_index":2552,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["due",{"_index":974,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["duplicate",{"_index":1830,"title":{},"body":{"contributing.html":{}}}],["duplication",{"_index":1813,"title":{},"body":{"contributing.html":{}}}],["durandal",{"_index":2355,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["dynamic",{"_index":1137,"title":{},"body":{"pipes/FormatDataPipe.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dynamically",{"_index":2161,"title":{},"body":{"index.html":{}}}],["e",{"_index":2081,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["e.g",{"_index":1844,"title":{},"body":{"contributing.html":{}}}],["e.key",{"_index":189,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["each",{"_index":65,"title":{},"body":{"components/AutoFormComponent.html":{},"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["early",{"_index":1583,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["easier",{"_index":1952,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["easy",{"_index":1127,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["ecosystem",{"_index":2333,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["edge",{"_index":1584,"title":{},"body":{"changelog.html":{}}}],["edit",{"_index":334,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"index.html":{}}}],["edited",{"_index":1901,"title":{},"body":{"contributing.html":{}}}],["editing",{"_index":226,"title":{},"body":{"components/DataGridComponent.html":{}}}],["edititem",{"_index":288,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{}}}],["edititem(item",{"_index":617,"title":{},"body":{"classes/DataGridModel.html":{}}}],["editor",{"_index":53,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["editor'},{'name",{"_index":206,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["editor.component.html",{"_index":853,"title":{},"body":{"components/EditorComponent.html":{}}}],["editorcomponent",{"_index":205,"title":{"components/EditorComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["editormodel",{"_index":906,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__displaydesc__${this.name",{"_index":919,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__displayname__${this.name",{"_index":916,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__hasrangefrom__${this.name",{"_index":922,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__hasrangeto__${this.name",{"_index":925,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__hastemplatehint__${this.name",{"_index":931,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__haswatermark__${this.name",{"_index":928,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__ishidden__${this.name",{"_index":936,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__isreadonly__${this.name",{"_index":937,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__templatehint__${this.name",{"_index":932,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__templatehintparams__${this.name",{"_index":934,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[`__watermark__${this.name",{"_index":930,"title":{},"body":{"components/EditorComponent.html":{}}}],["editormodel[this.name",{"_index":910,"title":{},"body":{"components/EditorComponent.html":{}}}],["editors",{"_index":97,"title":{},"body":{"components/AutoFormComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{}}}],["editusercomponent",{"_index":2228,"title":{},"body":{"index.html":{}}}],["eee",{"_index":481,"title":{},"body":{"components/DataGridComponent.html":{}}}],["effort",{"_index":1826,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["efforts",{"_index":1811,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":1442,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["element",{"_index":113,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["elementary",{"_index":907,"title":{},"body":{"components/EditorComponent.html":{}}}],["elementref",{"_index":1439,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["elements",{"_index":247,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["ellipsis",{"_index":488,"title":{},"body":{"components/DataGridComponent.html":{}}}],["email",{"_index":1012,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["email(msg",{"_index":2076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["email.decorator.ts",{"_index":2044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emailtype",{"_index":964,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["embraces",{"_index":2456,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["emit",{"_index":1522,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["empty",{"_index":432,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["encapsulates",{"_index":2460,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["end",{"_index":115,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"contributing.html":{},"additional-documentation/about.html":{}}}],["engine",{"_index":2595,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["engines",{"_index":2724,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["enhanced",{"_index":228,"title":{},"body":{"components/DataGridComponent.html":{}}}],["enormous",{"_index":2492,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["enough",{"_index":2610,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["ensure",{"_index":1888,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":2486,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["enterprises",{"_index":2337,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["entity",{"_index":2378,"title":{},"body":{"index.html":{}}}],["entry",{"_index":2689,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["enum",{"_index":265,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TreeNodeOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["enumerations",{"_index":2034,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumfallback",{"_index":266,"title":{},"body":{"components/DataGridComponent.html":{}}}],["enumvalues",{"_index":857,"title":{},"body":{"components/EditorComponent.html":{}}}],["environment",{"_index":1592,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["equal",{"_index":1166,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["equals",{"_index":1157,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"changelog.html":{}}}],["equals(x",{"_index":1159,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["errgroup",{"_index":1065,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errgroup)[propname",{"_index":1124,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs",{"_index":1075,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['compare",{"_index":1115,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['maxlength",{"_index":1084,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['minlength",{"_index":1090,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['pattern",{"_index":1096,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['range",{"_index":1104,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['required",{"_index":1079,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["error",{"_index":940,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["errors",{"_index":854,"title":{},"body":{"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{}}}],["es",{"_index":742,"title":{},"body":{"classes/DataGridModel.html":{}}}],["especially",{"_index":2089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etc",{"_index":453,"title":{},"body":{"components/DataGridComponent.html":{},"contributing.html":{}}}],["even",{"_index":935,"title":{},"body":{"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["event",{"_index":352,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["event.preventdefault",{"_index":820,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["event.stoppropagation",{"_index":1521,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["eventemitter",{"_index":350,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["events",{"_index":1379,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["everything",{"_index":2316,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["evolve",{"_index":1577,"title":{},"body":{"changelog.html":{}}}],["ex",{"_index":1073,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["exact",{"_index":1177,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"index.html":{}}}],["exactly",{"_index":1174,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["example",{"_index":69,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewComponent.html":{},"contributing.html":{},"index.html":{}}}],["exclude",{"_index":2254,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["excludes",{"_index":2255,"title":{},"body":{"index.html":{}}}],["excute",{"_index":2726,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["exec",{"_index":2715,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["execdemo",{"_index":2716,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["execute",{"_index":883,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["executes",{"_index":2261,"title":{},"body":{"index.html":{}}}],["execution",{"_index":2746,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["existence",{"_index":975,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["existing",{"_index":176,"title":{},"body":{"components/AutoFormComponent.html":{},"contributing.html":{}}}],["existinggroup",{"_index":180,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["existinggroup.editors.push",{"_index":183,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["existinggrouparray",{"_index":167,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["existinggrouparray.length",{"_index":171,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["exists",{"_index":166,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["expand",{"_index":1361,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["expandable",{"_index":1340,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["expanded",{"_index":2037,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expander",{"_index":1484,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["expands",{"_index":1449,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["expect",{"_index":1487,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["experience",{"_index":2346,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["experimental",{"_index":1630,"title":{},"body":{"changelog.html":{}}}],["experiments",{"_index":1671,"title":{},"body":{"changelog.html":{}}}],["explain",{"_index":1847,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["explains",{"_index":2772,"title":{},"body":{"additional-documentation/about.html":{}}}],["explanation",{"_index":2006,"title":{},"body":{"contributing.html":{}}}],["explicitly",{"_index":1271,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["export",{"_index":130,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["exports",{"_index":1200,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["expression",{"_index":1572,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["expressionchangedafterithasbeencheckedexception",{"_index":815,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["extends",{"_index":1238,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["extension",{"_index":2167,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":677,"title":{},"body":{"classes/DataGridModel.html":{}}}],["extensions.ts",{"_index":8,"title":{},"body":{"interfaces/Array.html":{},"interfaces/ObjectConstructor.html":{}}}],["extensions.ts:2",{"_index":14,"title":{},"body":{"interfaces/Array.html":{},"interfaces/ObjectConstructor.html":{}}}],["extensions.ts:3",{"_index":1163,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["external",{"_index":1978,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["externally",{"_index":1140,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["externals",{"_index":276,"title":{},"body":{"components/DataGridComponent.html":{}}}],["extract",{"_index":2682,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["f",{"_index":1106,"title":{},"body":{"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["f046",{"_index":845,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["f096",{"_index":843,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["fa",{"_index":1467,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["fall",{"_index":2110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fallback",{"_index":371,"title":{},"body":{"components/DataGridComponent.html":{}}}],["falling",{"_index":466,"title":{},"body":{"components/DataGridComponent.html":{}}}],["false",{"_index":152,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/ObjectConstructor.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{}}}],["familiar",{"_index":2467,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["family",{"_index":841,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["far",{"_index":1859,"title":{},"body":{"contributing.html":{}}}],["fast",{"_index":2159,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["fax",{"_index":2016,"title":{},"body":{"contributing.html":{}}}],["fb",{"_index":1046,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["feat",{"_index":1963,"title":{},"body":{"contributing.html":{}}}],["feature",{"_index":1747,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["features",{"_index":1817,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["fee",{"_index":2395,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2365,"title":{},"body":{"index.html":{}}}],["feeling",{"_index":2757,"title":{},"body":{"additional-documentation/about.html":{}}}],["few",{"_index":757,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ff",{"_index":1924,"title":{},"body":{"contributing.html":{}}}],["fff",{"_index":1527,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["ffff",{"_index":2080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field",{"_index":64,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["field's",{"_index":1026,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["fieldname",{"_index":1025,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["fields",{"_index":141,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fieldset",{"_index":77,"title":{},"body":{"components/AutoFormComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fieldsets",{"_index":2424,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fieldtocompare",{"_index":1011,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["fieldtypes",{"_index":867,"title":{},"body":{"components/EditorComponent.html":{}}}],["fielsd",{"_index":2128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["file",{"_index":6,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["files",{"_index":1902,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["filter",{"_index":277,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"miscellaneous/variables.html":{}}}],["filter(value",{"_index":434,"title":{},"body":{"components/DataGridComponent.html":{}}}],["filtering",{"_index":224,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"index.html":{}}}],["filters",{"_index":593,"title":{},"body":{"classes/DataGridModel.html":{}}}],["final",{"_index":2188,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["finally",{"_index":2581,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["find",{"_index":1774,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["fine",{"_index":2317,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["fire",{"_index":1343,"title":{},"body":{"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["firebase",{"_index":2720,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["fired",{"_index":355,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["fires",{"_index":331,"title":{},"body":{"components/DataGridComponent.html":{},"components/TreeViewComponent.html":{}}}],["first",{"_index":245,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["first(array",{"_index":893,"title":{},"body":{"components/EditorComponent.html":{}}}],["fitness",{"_index":2405,"title":{},"body":{"license.html":{}}}],["fits",{"_index":2474,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["fix",{"_index":1794,"title":{},"body":{"contributing.html":{}}}],["fixes",{"_index":1639,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["fixing",{"_index":1828,"title":{},"body":{"contributing.html":{}}}],["flavors",{"_index":1604,"title":{},"body":{"changelog.html":{}}}],["float",{"_index":495,"title":{},"body":{"components/DataGridComponent.html":{}}}],["fly",{"_index":2748,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["focus",{"_index":1653,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":2325,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["folders",{"_index":2544,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["follow",{"_index":1728,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["followed",{"_index":1959,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1832,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["follows",{"_index":1688,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["font",{"_index":90,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"dependencies.html":{}}}],["fontawesome",{"_index":842,"title":{},"body":{"components/EditorComponent.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["fontawesome's",{"_index":1382,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["footer",{"_index":829,"title":{},"body":{"interfaces/DatagridStyles.html":{},"contributing.html":{}}}],["force",{"_index":1911,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["forces",{"_index":2256,"title":{},"body":{"index.html":{}}}],["forecolor",{"_index":1427,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["fork",{"_index":1903,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":59,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["form's",{"_index":57,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["form)['__editormodel__",{"_index":1128,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["form.controls[propname",{"_index":1132,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["form.controls[propname])['messages",{"_index":1133,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["format",{"_index":537,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"contributing.html":{},"index.html":{}}}],["formatdata",{"_index":417,"title":{},"body":{"components/DataGridComponent.html":{},"pipes/FormatDataPipe.html":{}}}],["formatdatapipe",{"_index":1135,"title":{"pipes/FormatDataPipe.html":{}},"body":{"pipes/FormatDataPipe.html":{}}}],["formatpipe",{"_index":416,"title":{},"body":{"components/DataGridComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["formatpipe(datepipe",{"_index":2286,"title":{},"body":{"index.html":{}}}],["formatpipe(pipe",{"_index":2083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatpipe.decorator.ts",{"_index":2045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatted",{"_index":1939,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["formatter",{"_index":1141,"title":{},"body":{"pipes/FormatDataPipe.html":{},"miscellaneous/functions.html":{}}}],["formatting",{"_index":969,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["formattype",{"_index":956,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["formbuilder",{"_index":1049,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["formcontrol",{"_index":1055,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["formgroup",{"_index":102,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{}}}],["formgroup.controls[name]['messages'][error",{"_index":944,"title":{},"body":{"components/EditorComponent.html":{}}}],["formgroup.controls[name][\\'messages\\'][error",{"_index":945,"title":{},"body":{"components/EditorComponent.html":{}}}],["formhints",{"_index":2223,"title":{},"body":{"index.html":{}}}],["formhints.display('e",{"_index":2224,"title":{},"body":{"index.html":{}}}],["forms",{"_index":837,"title":{},"body":{"components/EditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["formsmodule",{"_index":1217,"title":{},"body":{"modules/SvogvModule.html":{}}}],["formvalidatorfromjsonservice",{"_index":1223,"title":{},"body":{"modules/SvogvModule.html":{},"index.html":{}}}],["formvalidatormodel",{"_index":946,"title":{"interfaces/FormValidatorModel.html":{}},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{}}}],["formvalidatorservice",{"_index":905,"title":{"injectables/FormValidatorService.html":{}},"body":{"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"modules/SvogvModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["forroot",{"_index":1210,"title":{},"body":{"modules/SvogvModule.html":{}}}],["fortunatly",{"_index":2684,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["forward",{"_index":1126,"title":{},"body":{"injectables/FormValidatorService.html":{},"components/TreeViewNodeComponent.html":{}}}],["forwarded",{"_index":353,"title":{},"body":{"components/DataGridComponent.html":{}}}],["forwarding",{"_index":1139,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["found",{"_index":909,"title":{},"body":{"components/EditorComponent.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["foundation",{"_index":2465,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["framework",{"_index":2361,"title":{},"body":{"index.html":{}}}],["frameworks",{"_index":2347,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["free",{"_index":2330,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["fromjson.service",{"_index":1225,"title":{},"body":{"modules/SvogvModule.html":{}}}],["fromvalue",{"_index":858,"title":{},"body":{"components/EditorComponent.html":{}}}],["front",{"_index":2763,"title":{},"body":{"additional-documentation/about.html":{}}}],["frontend",{"_index":2375,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["fruststrating",{"_index":1675,"title":{},"body":{"changelog.html":{}}}],["fucntion",{"_index":635,"title":{},"body":{"classes/DataGridModel.html":{}}}],["full",{"_index":1804,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["fullfilles",{"_index":2102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fully",{"_index":2242,"title":{},"body":{"index.html":{}}}],["function",{"_index":29,"title":{},"body":{"interfaces/Array.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/ObjectConstructor.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["function(value",{"_index":30,"title":{},"body":{"interfaces/Array.html":{}}}],["function(valueorpredicate",{"_index":24,"title":{},"body":{"interfaces/Array.html":{}}}],["functionality",{"_index":2444,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["functions",{"_index":220,"title":{"miscellaneous/functions.html":{}},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"interfaces/ObjectConstructor.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["further",{"_index":2069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fv",{"_index":2230,"title":{},"body":{"index.html":{}}}],["g.name",{"_index":169,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["general",{"_index":2659,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["generate",{"_index":1944,"title":{},"body":{"contributing.html":{}}}],["generated",{"_index":1002,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["generator",{"_index":2696,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["germany",{"_index":2344,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["getactivetemplate",{"_index":272,"title":{},"body":{"components/DataGridComponent.html":{}}}],["getactivetemplate(uihint",{"_index":364,"title":{},"body":{"components/DataGridComponent.html":{}}}],["getcurrentrowend",{"_index":655,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getcurrentrowstart",{"_index":653,"title":{},"body":{"classes/DataGridModel.html":{}}}],["gethaschildren",{"_index":1305,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getheaders",{"_index":669,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getheadersnotvisible",{"_index":672,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getitems",{"_index":661,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getitemsfiltered",{"_index":665,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getitemsoncurrentpage",{"_index":667,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getmaxpageindex",{"_index":659,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getnativewindow",{"_index":1554,"title":{},"body":{"injectables/WindowRef.html":{}}}],["getpageendnumber",{"_index":806,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["getpagestartnumber",{"_index":804,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["getparams",{"_index":855,"title":{},"body":{"components/EditorComponent.html":{}}}],["getparams(key",{"_index":895,"title":{},"body":{"components/EditorComponent.html":{}}}],["getpath",{"_index":1303,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["gets",{"_index":2127,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["getstartrow",{"_index":657,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getstate",{"_index":1307,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateischecked",{"_index":1317,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateisdisabled",{"_index":1313,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateisexpandend",{"_index":1311,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateisselected",{"_index":1315,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getting",{"_index":1561,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettotalfilteredrows",{"_index":651,"title":{},"body":{"classes/DataGridModel.html":{}}}],["gettotalrows",{"_index":647,"title":{},"body":{"classes/DataGridModel.html":{}}}],["git",{"_index":1877,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["git+https://github.com/your",{"_index":2721,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["github",{"_index":1777,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["github's",{"_index":2690,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gitter",{"_index":1772,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":999,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["given",{"_index":2104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["giving",{"_index":294,"title":{},"body":{"components/DataGridComponent.html":{}}}],["global",{"_index":1557,"title":{},"body":{"injectables/WindowRef.html":{}}}],["go",{"_index":460,"title":{},"body":{"components/DataGridComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["goes",{"_index":991,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/about.html":{}}}],["going",{"_index":760,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["good",{"_index":1638,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["google",{"_index":1761,"title":{},"body":{"contributing.html":{}}}],["google's",{"_index":1933,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":2397,"title":{},"body":{"license.html":{}}}],["grayed",{"_index":2112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["grid",{"_index":230,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"pipes/FormatDataPipe.html":{},"changelog.html":{},"index.html":{}}}],["grid's",{"_index":253,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["grids",{"_index":2070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["group",{"_index":159,"title":{},"body":{"components/AutoFormComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["group's",{"_index":2074,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["group.name",{"_index":193,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["groupdesc",{"_index":150,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["grouped",{"_index":99,"title":{},"body":{"components/AutoFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["groupes",{"_index":116,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["groupexists",{"_index":170,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["grouping",{"_index":2423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["groupname",{"_index":148,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["groupname)[0",{"_index":181,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["grouporder",{"_index":147,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["groups",{"_index":98,"title":{},"body":{"components/AutoFormComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["grow",{"_index":2498,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["guide",{"_index":1689,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["guidelines",{"_index":1741,"title":{},"body":{"contributing.html":{}}}],["guides",{"_index":2617,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gulp",{"_index":1980,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gulp/rollup",{"_index":1668,"title":{},"body":{"changelog.html":{}}}],["gulpfile",{"_index":2734,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gulpfile.js",{"_index":2733,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["guts",{"_index":2758,"title":{},"body":{"additional-documentation/about.html":{}}}],["h.hidden",{"_index":695,"title":{},"body":{"classes/DataGridModel.html":{}}}],["h.prop",{"_index":716,"title":{},"body":{"classes/DataGridModel.html":{}}}],["hafersteig",{"_index":2776,"title":{},"body":{"additional-documentation/about.html":{}}}],["hand",{"_index":2321,"title":{},"body":{"index.html":{}}}],["handle",{"_index":761,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["handlecheckchange",{"_index":1433,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handleclick",{"_index":1434,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handleclick($event",{"_index":1454,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handlecollapse",{"_index":1435,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handlepreselection",{"_index":1436,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handlepreselection(state",{"_index":1457,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handles",{"_index":554,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/functions.html":{}}}],["handleselection",{"_index":1437,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handleselection($event",{"_index":1459,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["handling",{"_index":410,"title":{},"body":{"components/DataGridComponent.html":{}}}],["handy",{"_index":2302,"title":{},"body":{"index.html":{}}}],["happens",{"_index":2702,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["hard",{"_index":2596,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["haschildren",{"_index":1286,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["hascompare",{"_index":1113,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasdecorators",{"_index":136,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["hasdirectancestor",{"_index":1244,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["hasdirectancestor(node",{"_index":1262,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["haserror('pattern",{"_index":2079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hash",{"_index":1961,"title":{},"body":{"contributing.html":{}}}],["hasmaxlength",{"_index":1082,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasminlength",{"_index":1088,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasn't",{"_index":1823,"title":{},"body":{"contributing.html":{}}}],["haspattern",{"_index":1094,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasrangefrom",{"_index":1100,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasrangeto",{"_index":1102,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hassortcallback",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["head",{"_index":2636,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["header",{"_index":337,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["header.issortable",{"_index":736,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.pipe",{"_index":748,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.pipeparams",{"_index":750,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.sortcallback",{"_index":738,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.templatehint",{"_index":743,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.templatehintparams",{"_index":746,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.text",{"_index":469,"title":{},"body":{"components/DataGridComponent.html":{}}}],["header.uihint",{"_index":752,"title":{},"body":{"classes/DataGridModel.html":{}}}],["headerbutton",{"_index":830,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["headerremovebutton",{"_index":831,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["headers",{"_index":555,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/functions.html":{}}}],["headersnotvisible",{"_index":581,"title":{},"body":{"classes/DataGridModel.html":{}}}],["headersortbutton",{"_index":832,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["headertext",{"_index":486,"title":{},"body":{"components/DataGridComponent.html":{}}}],["heavily",{"_index":2198,"title":{},"body":{"index.html":{}}}],["height",{"_index":496,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["held",{"_index":1376,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["help",{"_index":1738,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["helper",{"_index":2250,"title":{},"body":{"index.html":{}}}],["helpful",{"_index":1790,"title":{},"body":{"contributing.html":{}}}],["helps",{"_index":1842,"title":{},"body":{"contributing.html":{},"additional-documentation/about.html":{}}}],["hence",{"_index":522,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["here",{"_index":178,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["hereby",{"_index":2396,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":489,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["hidden(hide",{"_index":2090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hidden.decorator.ts",{"_index":2046,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hidden.ishidden(type",{"_index":734,"title":{},"body":{"classes/DataGridModel.html":{}}}],["hiddendecorator",{"_index":68,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["hiddentype",{"_index":957,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["hidden}decorator",{"_index":129,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["hide",{"_index":2096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["high",{"_index":2372,"title":{},"body":{"index.html":{}}}],["hint",{"_index":534,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["hints",{"_index":2217,"title":{},"body":{"index.html":{}}}],["history",{"_index":1943,"title":{},"body":{"contributing.html":{}}}],["homepage",{"_index":2670,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["homepage's",{"_index":2370,"title":{},"body":{"index.html":{}}}],["host",{"_index":241,"title":{},"body":{"components/DataGridComponent.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["hostet",{"_index":2599,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["href",{"_index":1352,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["html",{"_index":194,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"additional-documentation/package-construction.html":{}}}],["html5",{"_index":2114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http",{"_index":2750,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["http://locahost:4200",{"_index":2319,"title":{},"body":{"index.html":{}}}],["https://github.com/joergkrause/svogv#readme",{"_index":2671,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["https://github.com/joergkrause/svogv.git",{"_index":2665,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["https://github.com/joergkrause/svogv/issues",{"_index":2669,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["hub",{"_index":2381,"title":{},"body":{"index.html":{}}}],["hud",{"_index":1629,"title":{},"body":{"changelog.html":{}}}],["huge",{"_index":2490,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["human",{"_index":1027,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["hyperlink",{"_index":1365,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["i'm",{"_index":1631,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["i.ac",{"_index":1547,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["i18n",{"_index":1004,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["icon",{"_index":1353,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["icon's",{"_index":1368,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["iconclasses",{"_index":1428,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["iconcolor",{"_index":1354,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["icons",{"_index":1362,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["ics",{"_index":2668,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["id",{"_index":920,"title":{},"body":{"components/EditorComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"index.html":{}}}],["idea",{"_index":2196,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":1255,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["identity",{"_index":1188,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["idx",{"_index":1333,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["iframes",{"_index":196,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{}}}],["ignore",{"_index":871,"title":{},"body":{"components/EditorComponent.html":{}}}],["ignored",{"_index":117,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["immediate",{"_index":1134,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["imperative",{"_index":1992,"title":{},"body":{"contributing.html":{}}}],["implement",{"_index":1795,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":71,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"pipes/FormatDataPipe.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["implied",{"_index":2403,"title":{},"body":{"license.html":{}}}],["import",{"_index":124,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["important",{"_index":477,"title":{},"body":{"components/DataGridComponent.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["imports",{"_index":1234,"title":{},"body":{"modules/SvogvModule.html":{}}}],["impress",{"_index":2774,"title":{},"body":{"additional-documentation/about.html":{}}}],["improve",{"_index":1727,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["improvement",{"_index":2764,"title":{},"body":{"additional-documentation/about.html":{}}}],["improves",{"_index":1973,"title":{},"body":{"contributing.html":{},"additional-documentation/about.html":{}}}],["inaugural",{"_index":1568,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1998,"title":{},"body":{"contributing.html":{}}}],["included",{"_index":2109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["includes",{"_index":1421,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["including",{"_index":1779,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["inclusive",{"_index":1759,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1833,"title":{},"body":{"contributing.html":{}}}],["independent",{"_index":2322,"title":{},"body":{"index.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.d.ts",{"_index":2663,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["index.js",{"_index":2661,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["indexable",{"_index":953,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["indirect",{"_index":2407,"title":{},"body":{"license.html":{}}}],["individually",{"_index":323,"title":{},"body":{"components/DataGridComponent.html":{}}}],["individuals",{"_index":2011,"title":{},"body":{"contributing.html":{}}}],["infarstructure",{"_index":2146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infobox",{"_index":1601,"title":{},"body":{"changelog.html":{}}}],["inform",{"_index":613,"title":{},"body":{"classes/DataGridModel.html":{}}}],["information",{"_index":1033,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"index.html":{}}}],["infrastructure",{"_index":612,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["inherited",{"_index":1249,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["initialize",{"_index":2646,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["initit's",{"_index":2647,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["initital",{"_index":646,"title":{},"body":{"classes/DataGridModel.html":{}}}],["inject",{"_index":1054,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["injectable",{"_index":1034,"title":{"injectables/FormValidatorService.html":{},"injectables/WindowRef.html":{}},"body":{"injectables/FormValidatorService.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["injectables",{"_index":1035,"title":{},"body":{"injectables/FormValidatorService.html":{},"injectables/WindowRef.html":{},"overview.html":{}}}],["injector",{"_index":1148,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["inline",{"_index":493,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["input",{"_index":125,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["input[type=\"checkbox",{"_index":839,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["input[type=\"checkbox\"]:checked",{"_index":844,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["input[type='checkbox",{"_index":846,"title":{},"body":{"components/EditorComponent.html":{}}}],["inputs",{"_index":101,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["inside",{"_index":2253,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["inspired",{"_index":2199,"title":{},"body":{"index.html":{}}}],["install",{"_index":2305,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["instance",{"_index":914,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["instanceof",{"_index":912,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/ObjectConstructor.html":{},"classes/TreeNodeModel.html":{}}}],["instead",{"_index":950,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["instruction",{"_index":594,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["integration",{"_index":2503,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["intended",{"_index":2142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intention",{"_index":1650,"title":{},"body":{"changelog.html":{}}}],["intentionally",{"_index":1070,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["interactive",{"_index":2648,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["interest",{"_index":2612,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Array.html":{},"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/ObjectConstructor.html":{},"interfaces/TreeNodeBaseModel.html":{}},"body":{"interfaces/Array.html":{},"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/ObjectConstructor.html":{},"interfaces/TreeNodeBaseModel.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Array.html":{},"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/ObjectConstructor.html":{},"interfaces/TreeNodeBaseModel.html":{},"overview.html":{}}}],["internal",{"_index":293,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"pipes/FormatDataPipe.html":{},"additional-documentation/package-construction.html":{}}}],["internally",{"_index":404,"title":{},"body":{"components/DataGridComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["internals",{"_index":2113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["introduced",{"_index":2466,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["introduction",{"_index":2157,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["intuitive",{"_index":1710,"title":{},"body":{"changelog.html":{}}}],["invisible",{"_index":622,"title":{},"body":{"classes/DataGridModel.html":{}}}],["invoked",{"_index":358,"title":{},"body":{"components/DataGridComponent.html":{}}}],["invokes",{"_index":2623,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["iot",{"_index":2382,"title":{},"body":{"index.html":{}}}],["irritating",{"_index":1699,"title":{},"body":{"changelog.html":{}}}],["isc",{"_index":2328,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["isexpanded",{"_index":1429,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["ishidden",{"_index":733,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/variables.html":{}}}],["isingroup",{"_index":151,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["isrequired",{"_index":1076,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["issortable",{"_index":508,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1773,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1745,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["it's",{"_index":369,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["item",{"_index":616,"title":{},"body":{"classes/DataGridModel.html":{}}}],["items",{"_index":343,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/TreeViewComponent.html":{}}}],["itemsfiltered",{"_index":579,"title":{},"body":{"classes/DataGridModel.html":{}}}],["itemsoncurrentpage",{"_index":580,"title":{},"body":{"classes/DataGridModel.html":{}}}],["iterating",{"_index":722,"title":{},"body":{"classes/DataGridModel.html":{}}}],["i’m",{"_index":2755,"title":{},"body":{"additional-documentation/about.html":{}}}],["java",{"_index":2762,"title":{},"body":{"additional-documentation/about.html":{}}}],["javascript",{"_index":1934,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["jobs",{"_index":2368,"title":{},"body":{"index.html":{}}}],["joerg",{"_index":2340,"title":{},"body":{"index.html":{},"license.html":{}}}],["joerg@krause.de",{"_index":2369,"title":{},"body":{"index.html":{}}}],["journey",{"_index":2611,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["jquery",{"_index":2352,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["js",{"_index":2024,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["jsbin",{"_index":1782,"title":{},"body":{"contributing.html":{}}}],["json",{"_index":949,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{}}}],["jump",{"_index":2190,"title":{},"body":{"index.html":{}}}],["june",{"_index":2773,"title":{},"body":{"additional-documentation/about.html":{}}}],["jörg",{"_index":2775,"title":{},"body":{"additional-documentation/about.html":{}}}],["karma",{"_index":2710,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["karma_spec_filter",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kb",{"_index":2175,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1757,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["key",{"_index":163,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/EditorComponent.html":{}}}],["keyname",{"_index":2117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":2656,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["kidding",{"_index":2551,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["kind",{"_index":1806,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["knockout",{"_index":2354,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["know",{"_index":2350,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["knowing",{"_index":2360,"title":{},"body":{"index.html":{}}}],["known",{"_index":2180,"title":{},"body":{"index.html":{}}}],["knows",{"_index":2235,"title":{},"body":{"index.html":{}}}],["krause",{"_index":2341,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/about.html":{}}}],["label",{"_index":847,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["label's",{"_index":875,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{}}}],["label:before",{"_index":840,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["labeldivider",{"_index":859,"title":{},"body":{"components/EditorComponent.html":{}}}],["lambda",{"_index":2385,"title":{},"body":{"index.html":{}}}],["languages",{"_index":2462,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["last",{"_index":244,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["later",{"_index":908,"title":{},"body":{"components/EditorComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["latest",{"_index":1922,"title":{},"body":{"contributing.html":{}}}],["lazy",{"_index":2640,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["leads",{"_index":1940,"title":{},"body":{"contributing.html":{}}}],["learn",{"_index":2625,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["learning",{"_index":2446,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["learnt",{"_index":2353,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["leave",{"_index":2686,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["left",{"_index":88,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["legend",{"_index":85,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"modules/SvogvModule.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["len",{"_index":2099,"title":{},"body":{"miscellaneous/functions.html":{}}}],["length",{"_index":641,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["less",{"_index":1674,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["let's",{"_index":2206,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["letter",{"_index":1996,"title":{},"body":{"contributing.html":{}}}],["level",{"_index":1607,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["lg",{"_index":785,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["li.treeview",{"_index":1536,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["liable",{"_index":2406,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1635,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["libary",{"_index":2749,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["libraries",{"_index":2364,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["library",{"_index":1628,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["libs",{"_index":1652,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1873,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["licensed",{"_index":2329,"title":{},"body":{"index.html":{}}}],["licensing",{"_index":2327,"title":{},"body":{"index.html":{}}}],["life",{"_index":2770,"title":{},"body":{"additional-documentation/about.html":{}}}],["limited",{"_index":1769,"title":{},"body":{"contributing.html":{}}}],["line",{"_index":640,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["line:forin",{"_index":687,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{}}}],["line:max",{"_index":639,"title":{},"body":{"classes/DataGridModel.html":{}}}],["line:member",{"_index":446,"title":{},"body":{"components/DataGridComponent.html":{}}}],["link",{"_index":128,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewComponent.html":{}}}],["linked",{"_index":1377,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["links",{"_index":2683,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["lint",{"_index":2718,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["linter",{"_index":1729,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["linux",{"_index":2509,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["list",{"_index":881,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["listvalues",{"_index":860,"title":{},"body":{"components/EditorComponent.html":{}}}],["literal",{"_index":301,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"miscellaneous/typealiases.html":{}}}],["literature",{"_index":2606,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["live",{"_index":43,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["load",{"_index":1279,"title":{},"body":{"classes/TreeNodeComponentModel.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["loaded",{"_index":766,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["loader",{"_index":1622,"title":{},"body":{"changelog.html":{}}}],["loadericon",{"_index":1617,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":2737,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["local",{"_index":1919,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["locally",{"_index":2531,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["log",{"_index":1945,"title":{},"body":{"contributing.html":{}}}],["long",{"_index":2516,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["longer",{"_index":1951,"title":{},"body":{"contributing.html":{}}}],["look",{"_index":740,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["looking",{"_index":1942,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["looks",{"_index":405,"title":{},"body":{"components/DataGridComponent.html":{},"interfaces/FormValidatorModel.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["loop",{"_index":139,"title":{},"body":{"components/AutoFormComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["loss",{"_index":2412,"title":{},"body":{"license.html":{}}}],["lot",{"_index":1648,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["love",{"_index":1736,"title":{},"body":{"contributing.html":{}}}],["lower",{"_index":2651,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["lt;ac",{"_index":996,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["lt;input",{"_index":984,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["lt;select&gt",{"_index":995,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["lt;textarea&gt",{"_index":994,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["mac",{"_index":2511,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["made",{"_index":626,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["mail",{"_index":2017,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["main",{"_index":161,"title":{},"body":{"components/AutoFormComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["mainly",{"_index":1657,"title":{},"body":{"changelog.html":{}}}],["maintain",{"_index":2496,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["maintainability",{"_index":2470,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["major",{"_index":1801,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["majority",{"_index":2555,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["make",{"_index":621,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["makes",{"_index":307,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/about.html":{}}}],["making",{"_index":2158,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["manage",{"_index":2218,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["managed",{"_index":556,"title":{},"body":{"classes/DataGridModel.html":{}}}],["manager",{"_index":2556,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["mandatory",{"_index":1021,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["manually",{"_index":2084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["many",{"_index":234,"title":{},"body":{"components/DataGridComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["margin",{"_index":502,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["markdown",{"_index":2635,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["master",{"_index":1880,"title":{},"body":{"contributing.html":{}}}],["match",{"_index":2191,"title":{},"body":{"index.html":{}}}],["matches",{"_index":2149,"title":{},"body":{"index.html":{}}}],["matching",{"_index":38,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["matters",{"_index":2765,"title":{},"body":{"additional-documentation/about.html":{}}}],["mature",{"_index":2483,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["max",{"_index":796,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maximal",{"_index":1022,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["maximize",{"_index":1825,"title":{},"body":{"contributing.html":{}}}],["maximum",{"_index":1013,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["maxlength",{"_index":1015,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["maxlength(100",{"_index":2209,"title":{},"body":{"index.html":{}}}],["maxlength(20",{"_index":2213,"title":{},"body":{"index.html":{}}}],["maxlength(len",{"_index":2097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxlength.decorator.ts",{"_index":2047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxlengthtype",{"_index":960,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["maxpageindex",{"_index":578,"title":{},"body":{"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{}}}],["maybe",{"_index":1821,"title":{},"body":{"contributing.html":{}}}],["meaning",{"_index":1966,"title":{},"body":{"contributing.html":{}}}],["means",{"_index":407,"title":{},"body":{"components/DataGridComponent.html":{}}}],["medium",{"_index":786,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["members",{"_index":2075,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menu",{"_index":1602,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["merchantability",{"_index":2404,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1914,"title":{},"body":{"contributing.html":{}}}],["message",{"_index":1000,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":1130,"title":{},"body":{"injectables/FormValidatorService.html":{},"contributing.html":{},"index.html":{}}}],["meta",{"_index":233,"title":{},"body":{"components/DataGridComponent.html":{}}}],["metadata",{"_index":73,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"pipes/FormatDataPipe.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["method",{"_index":604,"title":{},"body":{"classes/DataGridModel.html":{}}}],["methods",{"_index":10,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{}}}],["middle",{"_index":833,"title":{},"body":{"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{}}}],["min",{"_index":798,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["mind",{"_index":1927,"title":{},"body":{"contributing.html":{}}}],["minified",{"_index":1839,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["minimal",{"_index":1023,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["minimum",{"_index":1016,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["minlength",{"_index":1017,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["minlength(len",{"_index":2100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minlength.decorator.ts",{"_index":2048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minlengthtype",{"_index":961,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["minus",{"_index":1468,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["miscellaneous",{"_index":2033,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1967,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["mistake",{"_index":1775,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":2653,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["mkdir",{"_index":2585,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["mode",{"_index":2287,"title":{},"body":{"index.html":{}}}],["model",{"_index":229,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["modelpipe",{"_index":418,"title":{},"body":{"components/DataGridComponent.html":{}}}],["models",{"_index":1408,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["models/datagrid.model",{"_index":425,"title":{},"body":{"components/DataGridComponent.html":{}}}],["models/datagridstyle.model",{"_index":426,"title":{},"body":{"components/DataGridComponent.html":{}}}],["modern",{"_index":2459,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["modified",{"_index":409,"title":{},"body":{"components/DataGridComponent.html":{},"index.html":{}}}],["modify",{"_index":1984,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["module",{"_index":1007,"title":{"modules/SvogvModule.html":{}},"body":{"interfaces/FormValidatorModel.html":{},"modules/SvogvModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["modules",{"_index":1196,"title":{"modules.html":{}},"body":{"modules/SvogvModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":1212,"title":{},"body":{"modules/SvogvModule.html":{}}}],["moduls",{"_index":2557,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["money",{"_index":2519,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["monitor",{"_index":2708,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["more",{"_index":346,"title":{},"body":{"components/DataGridComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["moreinformation",{"_index":675,"title":{},"body":{"classes/DataGridModel.html":{}}}],["more}information",{"_index":696,"title":{},"body":{"classes/DataGridModel.html":{}}}],["mostly",{"_index":1642,"title":{},"body":{"changelog.html":{}}}],["motivation",{"_index":1846,"title":{},"body":{"contributing.html":{}}}],["mouseevent",{"_index":800,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["mouseover",{"_index":516,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["move",{"_index":2192,"title":{},"body":{"index.html":{}}}],["moved",{"_index":2356,"title":{},"body":{"index.html":{}}}],["moving",{"_index":313,"title":{},"body":{"components/DataGridComponent.html":{}}}],["msg",{"_index":1001,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["much",{"_index":2561,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["multi",{"_index":1606,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mvc",{"_index":2477,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["myform",{"_index":2229,"title":{},"body":{"index.html":{}}}],["n",{"_index":188,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"classes/TreeNodeModel.html":{}}}],["n.key",{"_index":190,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["n.parent",{"_index":1328,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["name",{"_index":17,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["name/your",{"_index":2722,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["named",{"_index":2567,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["names",{"_index":671,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TreeNodeModel.html":{}}}],["namespace",{"_index":2200,"title":{},"body":{"index.html":{}}}],["naming",{"_index":1662,"title":{},"body":{"changelog.html":{}}}],["nan",{"_index":1109,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["native",{"_index":1558,"title":{},"body":{"injectables/WindowRef.html":{}}}],["nativewindow",{"_index":1553,"title":{},"body":{"injectables/WindowRef.html":{}}}],["nature",{"_index":1857,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["navigate",{"_index":758,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["necessarily",{"_index":2629,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["necessary",{"_index":1894,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["need",{"_index":818,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"injectables/FormValidatorService.html":{},"interfaces/ObjectConstructor.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["needed",{"_index":2547,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["needs",{"_index":1417,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["negligence",{"_index":2415,"title":{},"body":{"license.html":{}}}],["net",{"_index":2202,"title":{},"body":{"index.html":{}}}],["new",{"_index":34,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["newer",{"_index":2148,"title":{},"body":{"index.html":{}}}],["newlines",{"_index":2003,"title":{},"body":{"contributing.html":{}}}],["news",{"_index":2554,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["next",{"_index":445,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"additional-documentation/package-construction.html":{}}}],["ng",{"_index":459,"title":{},"body":{"components/DataGridComponent.html":{}}}],["ngafterviewinit",{"_index":273,"title":{},"body":{"components/DataGridComponent.html":{}}}],["ngfor",{"_index":882,"title":{},"body":{"components/EditorComponent.html":{}}}],["ngmodule",{"_index":1213,"title":{},"body":{"modules/SvogvModule.html":{}}}],["ngonchanges",{"_index":771,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["ngonchanges(changes",{"_index":791,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["ngondestroy",{"_index":274,"title":{},"body":{"components/DataGridComponent.html":{}}}],["ngoninit",{"_index":100,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["ngstyle",{"_index":2137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nice",{"_index":2309,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["nit",{"_index":1647,"title":{},"body":{"changelog.html":{}}}],["nix",{"_index":2587,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["node",{"_index":1237,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["node').register",{"_index":2742,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["node's",{"_index":1444,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["node.text",{"_index":1533,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["node_modules",{"_index":2324,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["nodeclick",{"_index":1393,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["nodes",{"_index":1246,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{}}}],["non",{"_index":1838,"title":{},"body":{"contributing.html":{}}}],["none",{"_index":476,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["note",{"_index":1764,"title":{},"body":{"contributing.html":{}}}],["notes",{"_index":1895,"title":{},"body":{"contributing.html":{}}}],["nothing",{"_index":605,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["notice",{"_index":2398,"title":{},"body":{"license.html":{}}}],["now",{"_index":1599,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["nowrap",{"_index":492,"title":{},"body":{"components/DataGridComponent.html":{}}}],["npm",{"_index":1982,"title":{"additional-documentation/package-construction/create-an-npm-package.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["null",{"_index":701,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/ObjectConstructor.html":{}}}],["num",{"_index":2276,"title":{},"body":{"index.html":{}}}],["number",{"_index":267,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["number(editormodel[`__hasrangefrom__${this.name",{"_index":923,"title":{},"body":{"components/EditorComponent.html":{}}}],["number(editormodel[`__hasrangeto__${this.name",{"_index":926,"title":{},"body":{"components/EditorComponent.html":{}}}],["number(target.prototype[`__hasrangefrom__${propname",{"_index":1107,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["number(target.prototype[`__hasrangeto__${propname",{"_index":1108,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["numberfallback",{"_index":268,"title":{},"body":{"components/DataGridComponent.html":{}}}],["numbers",{"_index":1189,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"miscellaneous/functions.html":{}}}],["numeric",{"_index":2278,"title":{},"body":{"index.html":{}}}],["numerical",{"_index":2106,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["o",{"_index":20,"title":{},"body":{"interfaces/Array.html":{}}}],["object",{"_index":720,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"interfaces/ObjectConstructor.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"index.html":{}}}],["object's",{"_index":2138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object.equals",{"_index":1173,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["object.equals(x[p",{"_index":1192,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["object.same",{"_index":1164,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["object.same(source[prop",{"_index":1170,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["objectconstructor",{"_index":1155,"title":{"interfaces/ObjectConstructor.html":{}},"body":{"interfaces/ObjectConstructor.html":{}}}],["objects",{"_index":251,"title":{},"body":{"components/DataGridComponent.html":{},"interfaces/ObjectConstructor.html":{},"components/TreeViewComponent.html":{}}}],["occurs",{"_index":1341,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["omit",{"_index":700,"title":{},"body":{"classes/DataGridModel.html":{}}}],["omitted",{"_index":973,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":788,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["onchanges",{"_index":767,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["oncheckchanged",{"_index":1387,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["oncheckchanged(node",{"_index":1400,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["oncollapsechanged",{"_index":1388,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["oncollapsechanged(node",{"_index":1402,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["ondelete",{"_index":357,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{}}}],["ondestroy",{"_index":256,"title":{},"body":{"components/DataGridComponent.html":{}}}],["one",{"_index":63,"title":{},"body":{"components/AutoFormComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["onedit",{"_index":363,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{}}}],["ongoing",{"_index":2754,"title":{},"body":{"additional-documentation/about.html":{}}}],["oninit",{"_index":72,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["onnodeclick",{"_index":1389,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["onnodeclick(node",{"_index":1404,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["onselectedchanged",{"_index":1390,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["onselectedchanged(node",{"_index":1406,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["onvaluechanged",{"_index":856,"title":{},"body":{"components/EditorComponent.html":{}}}],["onvaluechanged(data",{"_index":898,"title":{},"body":{"components/EditorComponent.html":{}}}],["onwards",{"_index":2265,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["open",{"_index":1758,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["open/close",{"_index":1497,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["operating",{"_index":1850,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["opnicon",{"_index":1430,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["option",{"_index":1899,"title":{},"body":{"contributing.html":{}}}],["option.val",{"_index":943,"title":{},"body":{"components/EditorComponent.html":{}}}],["optional",{"_index":19,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["optionally",{"_index":521,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":1242,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["order",{"_index":642,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["ordered",{"_index":2252,"title":{},"body":{"index.html":{}}}],["orderelement",{"_index":2425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ordering",{"_index":447,"title":{},"body":{"components/DataGridComponent.html":{}}}],["orhighlights",{"_index":1381,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["or}highlights",{"_index":1409,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["os",{"_index":2517,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["others",{"_index":2537,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["otherwise",{"_index":370,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{}}}],["ours",{"_index":458,"title":{},"body":{"components/DataGridComponent.html":{}}}],["out",{"_index":1207,"title":{},"body":{"modules/SvogvModule.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/about.html":{}}}],["outcome",{"_index":1673,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["outline",{"_index":1807,"title":{},"body":{"contributing.html":{}}}],["output",{"_index":424,"title":{},"body":{"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["outputs",{"_index":286,"title":{},"body":{"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["over",{"_index":1938,"title":{},"body":{"contributing.html":{}}}],["overflow",{"_index":487,"title":{},"body":{"components/DataGridComponent.html":{},"additional-documentation/package-construction.html":{}}}],["override",{"_index":292,"title":{},"body":{"components/DataGridComponent.html":{}}}],["overview",{"_index":1836,"title":{"overview.html":{}},"body":{"contributing.html":{},"index.html":{},"overview.html":{}}}],["overwhelming",{"_index":2609,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["overwriting",{"_index":451,"title":{},"body":{"components/DataGridComponent.html":{}}}],["overwritten",{"_index":345,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{}}}],["p",{"_index":727,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/ObjectConstructor.html":{},"classes/TreeNodeModel.html":{},"miscellaneous/functions.html":{}}}],["p.push(n",{"_index":1329,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["p.push(this",{"_index":1326,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["package",{"_index":2018,"title":{"dependencies.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["package.json",{"_index":2323,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["packages",{"_index":1680,"title":{},"body":{"changelog.html":{},"additional-documentation/about.html":{}}}],["padding",{"_index":83,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["page",{"_index":790,"title":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}},"body":{"components/DataGridPaginationComponent.html":{}}}],["pageend",{"_index":826,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pageendnumber",{"_index":776,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pagenumber",{"_index":802,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pagenumberchanged",{"_index":774,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pages",{"_index":780,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pagesize",{"_index":566,"title":{},"body":{"classes/DataGridModel.html":{}}}],["pagestartnumber",{"_index":775,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["pagination",{"_index":225,"title":{},"body":{"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"changelog.html":{}}}],["pagination'},{'name",{"_index":204,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["paging",{"_index":562,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["param",{"_index":448,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["parameter",{"_index":972,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"interfaces/Array.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":419,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parent",{"_index":778,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["parseint(target.prototype[`__hasmaxlength__${propname",{"_index":1086,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["parseint(target.prototype[`__hasminlength__${propname",{"_index":1092,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["part",{"_index":158,"title":{},"body":{"components/AutoFormComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["partially",{"_index":2600,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["particular",{"_index":2257,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["parts",{"_index":1451,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pass",{"_index":1890,"title":{},"body":{"contributing.html":{}}}],["passing",{"_index":1909,"title":{},"body":{"contributing.html":{}}}],["password",{"_index":1596,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["patch",{"_index":1881,"title":{},"body":{"contributing.html":{}}}],["path",{"_index":1285,"title":{},"body":{"classes/TreeNodeModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["path.join(__dirname",{"_index":2743,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["paths",{"_index":2685,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pattern",{"_index":690,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["pattern(pattern",{"_index":2101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pattern.decorator.ts",{"_index":2049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pattern.test(item[s",{"_index":692,"title":{},"body":{"classes/DataGridModel.html":{}}}],["patterntype",{"_index":962,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["peace",{"_index":2769,"title":{},"body":{"additional-documentation/about.html":{}}}],["peerdependencies",{"_index":2672,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["penalty",{"_index":2487,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["pendant",{"_index":2291,"title":{},"body":{"index.html":{}}}],["people",{"_index":1581,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":543,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["perf",{"_index":1972,"title":{},"body":{"contributing.html":{}}}],["perfect",{"_index":1677,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":1974,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["perhaps",{"_index":1866,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":2391,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2701,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pfxicon",{"_index":1431,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["phone",{"_index":2212,"title":{},"body":{"index.html":{}}}],["phonenumber",{"_index":2214,"title":{},"body":{"index.html":{}}}],["piece",{"_index":348,"title":{},"body":{"components/DataGridComponent.html":{}}}],["pieces",{"_index":2299,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":412,"title":{"pipes/FormatDataPipe.html":{}},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["pipe.transform(value",{"_index":1154,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["pipeargs",{"_index":1146,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["pipename",{"_index":970,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["pipeparams",{"_index":509,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["pipes",{"_index":741,"title":{},"body":{"classes/DataGridModel.html":{},"pipes/FormatDataPipe.html":{},"miscellaneous/functions.html":{}}}],["pipetoken",{"_index":1145,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["pipetransform",{"_index":1149,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["place",{"_index":1988,"title":{},"body":{"contributing.html":{}}}],["placeholder",{"_index":892,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["placeholder(name",{"_index":2103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholder.decorator.ts",{"_index":2050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholdertype",{"_index":958,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["plain",{"_index":2545,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["plan",{"_index":2189,"title":{},"body":{"index.html":{}}}],["plane",{"_index":2171,"title":{},"body":{"index.html":{}}}],["planned",{"_index":2260,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["please",{"_index":1755,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["plunker",{"_index":1853,"title":{},"body":{"contributing.html":{}}}],["plunkr",{"_index":1783,"title":{},"body":{"contributing.html":{}}}],["plus",{"_index":879,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["point",{"_index":1867,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pointer",{"_index":485,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["pointers",{"_index":2681,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pointing",{"_index":2645,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["port",{"_index":2751,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["possible",{"_index":981,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["potential",{"_index":2616,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pr",{"_index":1869,"title":{},"body":{"contributing.html":{}}}],["pre",{"_index":1589,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["precise",{"_index":1937,"title":{},"body":{"contributing.html":{}}}],["predicate",{"_index":26,"title":{},"body":{"interfaces/Array.html":{}}}],["prefix",{"_index":2222,"title":{},"body":{"index.html":{}}}],["preselectstate",{"_index":1432,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["present",{"_index":1993,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pretty",{"_index":2173,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["prevent",{"_index":1812,"title":{},"body":{"contributing.html":{}}}],["previous",{"_index":1957,"title":{},"body":{"contributing.html":{}}}],["primarily",{"_index":2445,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["primary",{"_index":1369,"title":{},"body":{"classes/TreeNodeOptions.html":{},"additional-documentation/package-construction.html":{}}}],["print",{"_index":2014,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["private",{"_index":270,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["probably",{"_index":2637,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["problem",{"_index":1744,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["procedure",{"_index":1682,"title":{},"body":{"changelog.html":{}}}],["proceed",{"_index":2700,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["process",{"_index":624,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["process.env.karma_filter",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":2767,"title":{},"body":{"additional-documentation/about.html":{}}}],["production",{"_index":1590,"title":{},"body":{"changelog.html":{}}}],["professional",{"_index":2484,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["profits",{"_index":2413,"title":{},"body":{"license.html":{}}}],["progress",{"_index":2451,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["project",{"_index":1634,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["project's",{"_index":2620,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["project.git",{"_index":2723,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["projects",{"_index":2357,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["projects/.../compare.validator.ts",{"_index":2058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../datagrid.model.ts",{"_index":2035,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datagridstyle.model.ts",{"_index":2422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../formvalidator.model.ts",{"_index":2421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../hint",{"_index":2041,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../range.validator.ts",{"_index":2059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../svogv.module.ts",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../test.ts",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../treenodeoptions.model.ts",{"_index":2036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../val",{"_index":2039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../webpack.test.config.ts",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../windowref.ts",{"_index":2038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/decorators/hint",{"_index":2066,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/svogv/src/lib/decorators/val",{"_index":2060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/services/formvalidator.model.ts",{"_index":947,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["projects/svogv/src/lib/services/formvalidator.model.ts:184",{"_index":966,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["projects/svogv/src/lib/services/formvalidator.service.ts",{"_index":1036,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["projects/svogv/src/lib/services/formvalidator.service.ts:20",{"_index":1050,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["projects/svogv/src/lib/services/formvalidator.service.ts:26",{"_index":1052,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["projects/svogv/src/lib/services/validators/compare.validator.ts",{"_index":2140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/services/validators/range.validator.ts",{"_index":2143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/svogv.module.ts",{"_index":1208,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["projects/svogv/src/lib/svogv.module.ts:33",{"_index":1211,"title":{},"body":{"modules/SvogvModule.html":{}}}],["projects/svogv/src/lib/utils/array",{"_index":7,"title":{},"body":{"interfaces/Array.html":{}}}],["projects/svogv/src/lib/utils/object",{"_index":1156,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["projects/svogv/src/lib/utils/windowref.ts",{"_index":1552,"title":{},"body":{"injectables/WindowRef.html":{},"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/utils/windowref.ts:10",{"_index":1555,"title":{},"body":{"injectables/WindowRef.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts",{"_index":213,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:101",{"_index":333,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:108",{"_index":317,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:114",{"_index":340,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:119",{"_index":342,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:124",{"_index":336,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:134",{"_index":344,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:144",{"_index":303,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:154",{"_index":310,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:161",{"_index":362,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:168",{"_index":351,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:170",{"_index":378,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:173",{"_index":376,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:180",{"_index":377,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:188",{"_index":420,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:195",{"_index":366,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:46",{"_index":389,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:61",{"_index":401,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:62",{"_index":399,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:64",{"_index":383,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:65",{"_index":381,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:67",{"_index":387,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:68",{"_index":385,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:70",{"_index":393,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:71",{"_index":391,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:73",{"_index":397,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:74",{"_index":395,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:76",{"_index":302,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:84",{"_index":291,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:90",{"_index":306,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:96",{"_index":326,"title":{},"body":{"components/DataGridComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts",{"_index":550,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:102",{"_index":591,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:104",{"_index":586,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:105",{"_index":590,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:110",{"_index":589,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:115",{"_index":587,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:120",{"_index":597,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:121",{"_index":585,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:123",{"_index":584,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:141",{"_index":633,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:165",{"_index":620,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:177",{"_index":600,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:188",{"_index":618,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:196",{"_index":610,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:200",{"_index":608,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:31",{"_index":648,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:35",{"_index":652,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:39",{"_index":654,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:42",{"_index":656,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:46",{"_index":658,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:53",{"_index":660,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:58",{"_index":664,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:61",{"_index":662,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:65",{"_index":666,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:82",{"_index":668,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:89",{"_index":670,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:96",{"_index":673,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts",{"_index":505,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15",{"_index":523,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:23",{"_index":533,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:28",{"_index":542,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:33",{"_index":538,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:38",{"_index":524,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:43",{"_index":529,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:48",{"_index":526,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:53",{"_index":528,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:7",{"_index":514,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts",{"_index":827,"title":{},"body":{"interfaces/DatagridStyles.html":{},"miscellaneous/typealiases.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts",{"_index":756,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:27",{"_index":777,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:32",{"_index":787,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:38",{"_index":781,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:40",{"_index":803,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:42",{"_index":794,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:46",{"_index":792,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:59",{"_index":801,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:72",{"_index":797,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:80",{"_index":805,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:89",{"_index":807,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts",{"_index":1136,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts:13",{"_index":1147,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts",{"_index":49,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:116",{"_index":118,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:25",{"_index":106,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:31",{"_index":111,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:33",{"_index":122,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:34",{"_index":123,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:39",{"_index":105,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:51",{"_index":120,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts",{"_index":834,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:102",{"_index":894,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:115",{"_index":897,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:169",{"_index":899,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:31",{"_index":884,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:35",{"_index":889,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:39",{"_index":876,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:43",{"_index":874,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:47",{"_index":886,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:51",{"_index":868,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:56",{"_index":872,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:60",{"_index":865,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:65",{"_index":880,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:69",{"_index":869,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:73",{"_index":888,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:77",{"_index":891,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:81",{"_index":885,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:87",{"_index":890,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:90",{"_index":900,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:92",{"_index":864,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:98",{"_index":896,"title":{},"body":{"components/EditorComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts",{"_index":1236,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8",{"_index":1247,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts",{"_index":1284,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:103",{"_index":1314,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:107",{"_index":1316,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:111",{"_index":1318,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:12",{"_index":1297,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:16",{"_index":1298,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:20",{"_index":1294,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:24",{"_index":1296,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:28",{"_index":1295,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:32",{"_index":1299,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34",{"_index":1293,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:49",{"_index":1304,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:61",{"_index":1301,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:65",{"_index":1306,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:69",{"_index":1300,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:77",{"_index":1302,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:87",{"_index":1308,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:90",{"_index":1310,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:99",{"_index":1312,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts",{"_index":1272,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:10",{"_index":1274,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:11",{"_index":1276,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:12",{"_index":1275,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts",{"_index":1278,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9",{"_index":1282,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts",{"_index":1348,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:17",{"_index":1360,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:19",{"_index":1366,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:21",{"_index":1367,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:23",{"_index":1372,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:25",{"_index":1363,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:27",{"_index":1358,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:29",{"_index":1364,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:31",{"_index":1370,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33",{"_index":1357,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts",{"_index":1374,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:20",{"_index":1396,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:21",{"_index":1398,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:22",{"_index":1397,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:23",{"_index":1399,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:24",{"_index":1395,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:30",{"_index":1405,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:34",{"_index":1401,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:38",{"_index":1407,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeview.component.ts:42",{"_index":1403,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts",{"_index":1414,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:136",{"_index":1464,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:140",{"_index":1462,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:144",{"_index":1465,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:148",{"_index":1463,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:154",{"_index":1453,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:165",{"_index":1455,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:171",{"_index":1456,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:183",{"_index":1458,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:213",{"_index":1460,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:35",{"_index":1441,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:43",{"_index":1476,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:44",{"_index":1475,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:45",{"_index":1469,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:51",{"_index":1443,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:56",{"_index":1450,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:61",{"_index":1445,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:66",{"_index":1452,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:71",{"_index":1447,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:73",{"_index":1472,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:74",{"_index":1470,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:75",{"_index":1473,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:76",{"_index":1471,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:77",{"_index":1466,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:78",{"_index":1474,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:80",{"_index":1477,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:82",{"_index":1461,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["projects/svogv/test.ts",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/svogv/webpack.test.config.ts",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominently",{"_index":2655,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["promise",{"_index":2010,"title":{},"body":{"contributing.html":{}}}],["prompt",{"_index":2586,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["prop",{"_index":365,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/ObjectConstructor.html":{}}}],["propdesc",{"_index":731,"title":{},"body":{"classes/DataGridModel.html":{}}}],["properly",{"_index":1693,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["propertie's",{"_index":520,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":95,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["property",{"_index":66,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["property's",{"_index":1573,"title":{},"body":{"changelog.html":{}}}],["propertyname",{"_index":810,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["propname",{"_index":729,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{}}}],["proposal",{"_index":1796,"title":{},"body":{"contributing.html":{}}}],["pros",{"_index":2766,"title":{},"body":{"additional-documentation/about.html":{}}}],["prototype",{"_index":1178,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["provide",{"_index":227,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provided",{"_index":372,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["provider",{"_index":1233,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":1199,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["provides",{"_index":218,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["providing",{"_index":1831,"title":{},"body":{"contributing.html":{}}}],["prs",{"_index":1876,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":96,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvModule.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["published",{"_index":2454,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["pull",{"_index":1792,"title":{},"body":{"contributing.html":{}}}],["pulling",{"_index":2644,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pure",{"_index":595,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["purpose",{"_index":1138,"title":{},"body":{"pipes/FormatDataPipe.html":{},"license.html":{},"additional-documentation/about.html":{}}}],["purposes",{"_index":2447,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["push",{"_index":160,"title":{},"body":{"components/AutoFormComponent.html":{},"contributing.html":{}}}],["put",{"_index":1593,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["putting",{"_index":2711,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["quality",{"_index":2373,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["quest",{"_index":2649,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["question",{"_index":1743,"title":{},"body":{"contributing.html":{}}}],["questions",{"_index":1754,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":2009,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["quickly",{"_index":1787,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["quite",{"_index":2300,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["radio",{"_index":2275,"title":{},"body":{"index.html":{}}}],["radius",{"_index":497,"title":{},"body":{"components/DataGridComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["range",{"_index":772,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["range's",{"_index":2108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range(from",{"_index":2105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range(min",{"_index":795,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["range.decorator.ts",{"_index":2051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rangetype",{"_index":1020,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["re",{"_index":1907,"title":{},"body":{"contributing.html":{}}}],["react",{"_index":2376,"title":{},"body":{"index.html":{}}}],["reactive",{"_index":2307,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["reactiveformsmodule",{"_index":1216,"title":{},"body":{"modules/SvogvModule.html":{},"index.html":{}}}],["read",{"_index":725,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["readable",{"_index":1941,"title":{},"body":{"contributing.html":{}}}],["readers",{"_index":1884,"title":{},"body":{"contributing.html":{}}}],["readible",{"_index":1028,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["reading",{"_index":2615,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["readme",{"_index":215,"title":{},"body":{"components/DataGridComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["readme.md",{"_index":2687,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["readonly",{"_index":861,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["readonly(readonly",{"_index":2111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly.decorator.ts",{"_index":2052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonlytype",{"_index":982,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["ready",{"_index":1799,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["real",{"_index":1416,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["really",{"_index":2301,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["realm",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["rearrange",{"_index":501,"title":{},"body":{"components/DataGridComponent.html":{}}}],["rearrangecolumns",{"_index":278,"title":{},"body":{"components/DataGridComponent.html":{}}}],["rearranged",{"_index":312,"title":{},"body":{"components/DataGridComponent.html":{}}}],["reason",{"_index":2085,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["rebase",{"_index":1910,"title":{},"body":{"contributing.html":{}}}],["receives",{"_index":2064,"title":{},"body":{"miscellaneous/functions.html":{}}}],["recent",{"_index":2453,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["recently",{"_index":602,"title":{},"body":{"classes/DataGridModel.html":{}}}],["recommend",{"_index":2523,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["recursively",{"_index":1194,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["redesign",{"_index":1656,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":1970,"title":{},"body":{"contributing.html":{}}}],["reference",{"_index":107,"title":{},"body":{"components/AutoFormComponent.html":{},"contributing.html":{}}}],["references",{"_index":1717,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["refers",{"_index":2732,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["refine",{"_index":2068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["refinements",{"_index":1725,"title":{},"body":{"changelog.html":{}}}],["reflect",{"_index":1718,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":2402,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":649,"title":{},"body":{"classes/DataGridModel.html":{}}}],["regex",{"_index":1018,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["regexp",{"_index":1019,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["regexp(target.prototype[`__haspattern__${propname",{"_index":1098,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["regexp(this.searchvalue[s",{"_index":691,"title":{},"body":{"classes/DataGridModel.html":{}}}],["register",{"_index":1129,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["regular",{"_index":1571,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["related",{"_index":1861,"title":{},"body":{"contributing.html":{}}}],["relates",{"_index":1871,"title":{},"body":{"contributing.html":{}}}],["release",{"_index":1567,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["releases",{"_index":1580,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":765,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["reliable",{"_index":1637,"title":{},"body":{"changelog.html":{}}}],["remark",{"_index":2269,"title":{},"body":{"index.html":{}}}],["remember",{"_index":707,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["remote",{"_index":1917,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["remove",{"_index":11,"title":{},"body":{"interfaces/Array.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["remove(node",{"_index":1265,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["remove(o",{"_index":12,"title":{},"body":{"interfaces/Array.html":{}}}],["removecolumn",{"_index":571,"title":{},"body":{"classes/DataGridModel.html":{}}}],["removecolumn(colname",{"_index":619,"title":{},"body":{"classes/DataGridModel.html":{}}}],["removed",{"_index":601,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{}}}],["removedvalues",{"_index":33,"title":{},"body":{"interfaces/Array.html":{}}}],["removing",{"_index":1658,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["renaming",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":254,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rendered",{"_index":980,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["renderer",{"_index":403,"title":{},"body":{"components/DataGridComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["renderer2",{"_index":1440,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["rendering",{"_index":2262,"title":{},"body":{"index.html":{}}}],["renders",{"_index":408,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["reorg",{"_index":1644,"title":{},"body":{"changelog.html":{}}}],["rep",{"_index":2572,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["repl",{"_index":2747,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["replaced",{"_index":456,"title":{},"body":{"components/DataGridComponent.html":{}}}],["replacement",{"_index":2448,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["replaces",{"_index":531,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"index.html":{}}}],["report",{"_index":2181,"title":{},"body":{"index.html":{}}}],["reported",{"_index":1824,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":1829,"title":{},"body":{"contributing.html":{}}}],["repositories",{"_index":2463,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["repository",{"_index":1778,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["represents",{"_index":951,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{}}}],["reproduce",{"_index":1852,"title":{},"body":{"contributing.html":{}}}],["reproduction",{"_index":1780,"title":{},"body":{"contributing.html":{}}}],["reps",{"_index":2576,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["request",{"_index":1793,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["requested",{"_index":461,"title":{},"body":{"components/DataGridComponent.html":{}}}],["requests",{"_index":1748,"title":{},"body":{"contributing.html":{}}}],["require",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./tools/gulp/gulpfile');the",{"_index":2745,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["require('path",{"_index":2739,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["require('ts",{"_index":2741,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["require('webpack",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":108,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["required(msg",{"_index":2116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["required.decorator.ts",{"_index":2053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["requiredtype",{"_index":965,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["requires",{"_index":2233,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["reset",{"_index":1206,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["resides",{"_index":2634,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["respond",{"_index":2731,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["rest",{"_index":2004,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":37,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["resulting",{"_index":2411,"title":{},"body":{"license.html":{}}}],["results",{"_index":39,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["return",{"_index":31,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TreeNodeModel.html":{},"injectables/WindowRef.html":{}}}],["returns",{"_index":21,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["revert",{"_index":1955,"title":{},"body":{"contributing.html":{}}}],["reverted",{"_index":1960,"title":{},"body":{"contributing.html":{}}}],["reverts",{"_index":1956,"title":{},"body":{"contributing.html":{}}}],["rid",{"_index":1615,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":89,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["rm",{"_index":1900,"title":{},"body":{"contributing.html":{}}}],["root",{"_index":819,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"modules/SvogvModule.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["roughly",{"_index":2176,"title":{},"body":{"index.html":{}}}],["routermodule",{"_index":1218,"title":{},"body":{"modules/SvogvModule.html":{}}}],["row",{"_index":724,"title":{},"body":{"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["rows",{"_index":561,"title":{},"body":{"classes/DataGridModel.html":{}}}],["rule",{"_index":2266,"title":{},"body":{"index.html":{}}}],["rules",{"_index":297,"title":{},"body":{"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["run",{"_index":1646,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["runner",{"_index":2704,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["running",{"_index":2243,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["rxjs",{"_index":2027,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["s",{"_index":688,"title":{},"body":{"classes/DataGridModel.html":{},"components/TreeViewNodeComponent.html":{}}}],["s3",{"_index":2384,"title":{},"body":{"index.html":{}}}],["safely",{"_index":1915,"title":{},"body":{"contributing.html":{}}}],["same",{"_index":1158,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["same(x",{"_index":1162,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["sample",{"_index":2311,"title":{},"body":{"index.html":{}}}],["sass",{"_index":2705,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["save",{"_index":1713,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["saves",{"_index":2525,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["saveyou",{"_index":2306,"title":{},"body":{"index.html":{}}}],["scan+email",{"_index":2015,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1949,"title":{},"body":{"contributing.html":{}}}],["scopes",{"_index":1979,"title":{},"body":{"contributing.html":{}}}],["screen",{"_index":1883,"title":{},"body":{"contributing.html":{}}}],["screenshots",{"_index":1789,"title":{},"body":{"contributing.html":{}}}],["script",{"_index":2564,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["scripts",{"_index":2618,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["scss",{"_index":2706,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["search",{"_index":592,"title":{},"body":{"classes/DataGridModel.html":{},"contributing.html":{}}}],["searchvalue",{"_index":567,"title":{},"body":{"classes/DataGridModel.html":{}}}],["second",{"_index":2123,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["seconds",{"_index":2312,"title":{},"body":{"index.html":{}}}],["secret",{"_index":2528,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["see",{"_index":214,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["select",{"_index":536,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"classes/TreeNodeOptions.html":{},"index.html":{}}}],["selectable",{"_index":1355,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{}}}],["selected",{"_index":1371,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["selectedchanged",{"_index":1394,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["selectedicon",{"_index":1356,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["selection",{"_index":2219,"title":{},"body":{"index.html":{}}}],["selections",{"_index":2303,"title":{},"body":{"index.html":{}}}],["selector",{"_index":74,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["semi",{"_index":1968,"title":{},"body":{"contributing.html":{}}}],["send",{"_index":1904,"title":{},"body":{"contributing.html":{}}}],["sending",{"_index":1875,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1008,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["server",{"_index":763,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["service",{"_index":838,"title":{},"body":{"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["service's",{"_index":2241,"title":{},"body":{"index.html":{}}}],["services",{"_index":2168,"title":{},"body":{"index.html":{}}}],["services/formvalidator",{"_index":1224,"title":{},"body":{"modules/SvogvModule.html":{}}}],["services/formvalidator.service",{"_index":1222,"title":{},"body":{"modules/SvogvModule.html":{}}}],["set",{"_index":433,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["setcurrentpage",{"_index":773,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["setcurrentpage(pagenumber",{"_index":799,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["setfilter(value",{"_index":421,"title":{},"body":{"components/DataGridComponent.html":{}}}],["setitems(value",{"_index":663,"title":{},"body":{"classes/DataGridModel.html":{}}}],["setstate(value",{"_index":1309,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["settimeout",{"_index":817,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["setting",{"_index":2234,"title":{},"body":{"index.html":{}}}],["settings",{"_index":2237,"title":{},"body":{"index.html":{}}}],["setup",{"_index":1681,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["several",{"_index":1419,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{}}}],["sha",{"_index":1962,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":309,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["sheer",{"_index":2605,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["shell",{"_index":1920,"title":{},"body":{"contributing.html":{}}}],["short",{"_index":2590,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["shortly",{"_index":1632,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["show",{"_index":318,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{}}}],["showactions",{"_index":279,"title":{},"body":{"components/DataGridComponent.html":{}}}],["showdeletebutton",{"_index":280,"title":{},"body":{"components/DataGridComponent.html":{}}}],["showeditbutton",{"_index":281,"title":{},"body":{"components/DataGridComponent.html":{}}}],["showing",{"_index":1711,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":406,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["shows",{"_index":338,"title":{},"body":{"components/DataGridComponent.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sidemenu",{"_index":1608,"title":{},"body":{"changelog.html":{}}}],["sign",{"_index":1872,"title":{},"body":{"contributing.html":{}}}],["signed",{"_index":2008,"title":{},"body":{"contributing.html":{}}}],["significant",{"_index":2184,"title":{},"body":{"index.html":{}}}],["signing",{"_index":1752,"title":{},"body":{"contributing.html":{}}}],["silver",{"_index":81,"title":{},"body":{"components/AutoFormComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["similar",{"_index":1862,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":634,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["simplechange",{"_index":808,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["simpler",{"_index":2244,"title":{},"body":{"index.html":{}}}],["simplest",{"_index":1040,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["simply",{"_index":2165,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["single",{"_index":952,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["size",{"_index":91,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{}}}],["sizing",{"_index":1540,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["skills",{"_index":2387,"title":{},"body":{"index.html":{}}}],["slider",{"_index":2279,"title":{},"body":{"index.html":{}}}],["sm",{"_index":784,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["small",{"_index":1679,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["smaller",{"_index":1636,"title":{},"body":{"changelog.html":{}}}],["smallsize",{"_index":471,"title":{},"body":{"components/DataGridComponent.html":{}}}],["smil",{"_index":1613,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":2394,"title":{},"body":{"license.html":{},"additional-documentation/about.html":{}}}],["solid",{"_index":82,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{}}}],["somehow",{"_index":2197,"title":{},"body":{"index.html":{}}}],["something",{"_index":2514,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["sometimes",{"_index":2298,"title":{},"body":{"index.html":{}}}],["somewhat",{"_index":2735,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["somewhere",{"_index":2087,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["sophisticated",{"_index":2371,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["sort",{"_index":186,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["sortable",{"_index":1705,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sortable(cansort",{"_index":2118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sortable(true",{"_index":2122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sortable.decorator.ts",{"_index":2054,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sortableheader",{"_index":483,"title":{},"body":{"components/DataGridComponent.html":{}}}],["sortcallback",{"_index":510,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sortcolumn",{"_index":572,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sortcolumn(colname",{"_index":630,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sortdirection",{"_index":568,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sorted",{"_index":638,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sorting",{"_index":223,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"injectables/WindowRef.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["source.hasownproperty(prop",{"_index":1168,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["source[prop",{"_index":1169,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["sources",{"_index":2172,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["sourcing",{"_index":2334,"title":{},"body":{"index.html":{}}}],["space",{"_index":491,"title":{},"body":{"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"changelog.html":{},"contributing.html":{}}}],["spec.ts",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["spec\\.ts",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1948,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["specially",{"_index":2288,"title":{},"body":{"index.html":{}}}],["specific",{"_index":978,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["specified",{"_index":637,"title":{},"body":{"classes/DataGridModel.html":{}}}],["specifying",{"_index":1987,"title":{},"body":{"contributing.html":{}}}],["specs",{"_index":1928,"title":{},"body":{"contributing.html":{}}}],["speed",{"_index":2497,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["spend",{"_index":1827,"title":{},"body":{"contributing.html":{}}}],["split",{"_index":2631,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["splittet",{"_index":2628,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src",{"_index":1985,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src/demo",{"_index":2714,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src\\demothe",{"_index":2642,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src\\lib",{"_index":2643,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src\\libbecause",{"_index":2638,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["srcs.json",{"_index":2699,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["stable",{"_index":1678,"title":{},"body":{"changelog.html":{}}}],["stack",{"_index":1840,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["stackoverflow",{"_index":1763,"title":{},"body":{"contributing.html":{}}}],["stages",{"_index":1798,"title":{},"body":{"contributing.html":{}}}],["standard",{"_index":2154,"title":{},"body":{"index.html":{}}}],["start",{"_index":870,"title":{},"body":{"components/EditorComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["starta",{"_index":2318,"title":{},"body":{"index.html":{}}}],["started",{"_index":1562,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["startnumber",{"_index":825,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["startrow",{"_index":577,"title":{},"body":{"classes/DataGridModel.html":{}}}],["state",{"_index":1287,"title":{},"body":{"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["state(value",{"_index":1337,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["statechange",{"_index":1243,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["stateischecked",{"_index":1291,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["stateisdisabled",{"_index":1289,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["stateisexpandend",{"_index":1288,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["stateisselected",{"_index":1290,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["states",{"_index":1525,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["static",{"_index":380,"title":{},"body":{"components/DataGridComponent.html":{},"modules/SvogvModule.html":{},"components/TreeViewNodeComponent.html":{}}}],["stay",{"_index":1733,"title":{},"body":{"changelog.html":{}}}],["steep",{"_index":2489,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["step",{"_index":2479,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["steps",{"_index":1855,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["still",{"_index":625,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["store",{"_index":182,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["strict",{"_index":1187,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["strictly",{"_index":1165,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"changelog.html":{}}}],["string",{"_index":149,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string).tolowercase",{"_index":933,"title":{},"body":{"components/EditorComponent.html":{}}}],["stringfallback",{"_index":269,"title":{},"body":{"components/DataGridComponent.html":{}}}],["stringlength",{"_index":1024,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stringlength(min",{"_index":2125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringlength.decorator.ts",{"_index":2055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringlengthtype",{"_index":963,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":1190,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"index.html":{}}}],["strong",{"_index":2756,"title":{},"body":{"additional-documentation/about.html":{}}}],["strongly",{"_index":2522,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["structure",{"_index":721,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["studio",{"_index":2536,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["stuff",{"_index":2152,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["style",{"_index":1384,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["styled",{"_index":60,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["stylelint",{"_index":2719,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["stylerules",{"_index":541,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/DatagridStyles.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":46,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{}}}],["styleurls",{"_index":258,"title":{},"body":{"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["subject",{"_index":1950,"title":{},"body":{"contributing.html":{}}}],["sublime",{"_index":2541,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["submission",{"_index":1749,"title":{},"body":{"contributing.html":{}}}],["submit",{"_index":1791,"title":{},"body":{"contributing.html":{}}}],["submitted",{"_index":1819,"title":{},"body":{"contributing.html":{}}}],["submitting",{"_index":1776,"title":{},"body":{"contributing.html":{}}}],["subsequent",{"_index":1252,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["successfully",{"_index":1815,"title":{},"body":{"contributing.html":{}}}],["succinct",{"_index":1991,"title":{},"body":{"contributing.html":{}}}],["such",{"_index":414,"title":{},"body":{"components/DataGridComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["sued",{"_index":1645,"title":{},"body":{"changelog.html":{}}}],["sufficient",{"_index":2535,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["suggest",{"_index":1863,"title":{},"body":{"contributing.html":{}}}],["suite",{"_index":1885,"title":{},"body":{"contributing.html":{}}}],["suites",{"_index":1908,"title":{},"body":{"contributing.html":{}}}],["summary",{"_index":217,"title":{},"body":{"components/DataGridComponent.html":{},"index.html":{}}}],["super(options",{"_index":1269,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["support",{"_index":762,"title":{},"body":{"components/DataGridPaginationComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["supported",{"_index":1569,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["supporting",{"_index":2621,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["supports",{"_index":61,"title":{},"body":{"components/AutoFormComponent.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["suppress",{"_index":1068,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["sure",{"_index":1797,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":1614,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svgov",{"_index":2187,"title":{},"body":{"index.html":{}}}],["svogv",{"_index":1209,"title":{},"body":{"modules/SvogvModule.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["svogv';or",{"_index":2220,"title":{},"body":{"index.html":{}}}],["svogv:master",{"_index":1905,"title":{},"body":{"contributing.html":{}}}],["svogv_components",{"_index":1226,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["svogvmodule",{"_index":1195,"title":{"modules/SvogvModule.html":{}},"body":{"modules/SvogvModule.html":{},"modules.html":{},"overview.html":{}}}],["svogvonce",{"_index":2593,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["switch",{"_index":321,"title":{},"body":{"components/DataGridComponent.html":{}}}],["sync",{"_index":2186,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":2248,"title":{},"body":{"index.html":{}}}],["system",{"_index":1851,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["system.componentmodel.dataannotations",{"_index":2201,"title":{},"body":{"index.html":{}}}],["systemjs",{"_index":1621,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["systems",{"_index":2588,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["t",{"_index":583,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":249,"title":{},"body":{"components/DataGridComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["tables",{"_index":222,"title":{},"body":{"components/DataGridComponent.html":{},"index.html":{}}}],["tabs",{"_index":1610,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":2245,"title":{},"body":{"index.html":{}}}],["tagged",{"_index":2092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tags",{"_index":300,"title":{},"body":{"components/DataGridComponent.html":{}}}],["take",{"_index":134,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["takes",{"_index":553,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["talking",{"_index":2614,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["target",{"_index":1053,"title":{},"body":{"injectables/FormValidatorService.html":{},"interfaces/ObjectConstructor.html":{},"index.html":{}}}],["target.prototype",{"_index":1078,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errcompareproperty__${propname",{"_index":1116,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errmaxlength__${propname",{"_index":1085,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errminlength__${propname",{"_index":1091,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errpattern__${propname",{"_index":1097,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errrange__${propname",{"_index":1105,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errrequired__${propname",{"_index":1080,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__withcompare__${propname",{"_index":1117,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target[prop",{"_index":1171,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["target[prop].startswith(source[prop",{"_index":1172,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["target[propname",{"_index":1121,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["targetinstance",{"_index":1066,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["task",{"_index":2753,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tasks",{"_index":2539,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tbd",{"_index":1932,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":1786,"title":{},"body":{"contributing.html":{}}}],["team's",{"_index":1766,"title":{},"body":{"contributing.html":{}}}],["techniques",{"_index":2115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["technologies",{"_index":2374,"title":{},"body":{"index.html":{}}}],["template",{"_index":45,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["templatehint",{"_index":511,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["templatehint(template",{"_index":2126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["templatehint.decorator.ts",{"_index":2056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["templatehintparams",{"_index":512,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["templatehinttype",{"_index":998,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["templateref",{"_index":375,"title":{},"body":{"components/DataGridComponent.html":{}}}],["templates",{"_index":540,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"changelog.html":{}}}],["templateurl",{"_index":93,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["tense",{"_index":1994,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":1181,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tested",{"_index":1183,"title":{},"body":{"interfaces/ObjectConstructor.html":{},"contributing.html":{}}}],["testing",{"_index":2639,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tests",{"_index":1889,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["text",{"_index":341,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["textarea",{"_index":993,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["textbuttonsheader",{"_index":282,"title":{},"body":{"components/DataGridComponent.html":{}}}],["textdeletebutton",{"_index":283,"title":{},"body":{"components/DataGridComponent.html":{}}}],["texteditbutton",{"_index":284,"title":{},"body":{"components/DataGridComponent.html":{}}}],["textnoitems",{"_index":285,"title":{},"body":{"components/DataGridComponent.html":{}}}],["texts",{"_index":2633,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["texttreenodemodel",{"_index":1235,"title":{"classes/TextTreeNodeModel.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{}}}],["th",{"_index":482,"title":{},"body":{"components/DataGridComponent.html":{}}}],["thank",{"_index":1912,"title":{},"body":{"contributing.html":{}}}],["that's",{"_index":989,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["thatappears",{"_index":2426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["that}appears",{"_index":976,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["that’s",{"_index":2759,"title":{},"body":{"additional-documentation/about.html":{}}}],["thebuttons",{"_index":322,"title":{},"body":{"components/DataGridComponent.html":{}}}],["themes",{"_index":2163,"title":{},"body":{"index.html":{}}}],["there's",{"_index":816,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["the}buttons",{"_index":431,"title":{},"body":{"components/DataGridComponent.html":{}}}],["things",{"_index":2507,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["think",{"_index":2650,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["thinks",{"_index":2359,"title":{},"body":{"index.html":{}}}],["this._headers",{"_index":726,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._headers.filter((h",{"_index":694,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._headers.find((h",{"_index":715,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._headers.push(header",{"_index":755,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._items",{"_index":698,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._items.length",{"_index":681,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._state",{"_index":1336,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.backcolor",{"_index":1508,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.checkchanged",{"_index":1479,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.checkchanged.emit(node",{"_index":1411,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["this.checkchanged.emit(this.node",{"_index":1520,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.children",{"_index":1321,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.indexof(node",{"_index":1334,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.length",{"_index":1330,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.push(...(nodes",{"_index":1331,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.push(nodes",{"_index":1332,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.splice(idx",{"_index":1335,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.collapsechanged",{"_index":1481,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapsechanged.emit(node",{"_index":1413,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["this.collapsechanged.emit(this.node",{"_index":1510,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses",{"_index":1482,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.filter",{"_index":1512,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.push('ac",{"_index":1499,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.push(treeviewnodecomponent.clsicon",{"_index":1515,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.push(treeviewnodecomponent.opnicon",{"_index":1501,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.collapseclasses.push(treeviewnodecomponent.pfxicon",{"_index":1500,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.component",{"_index":1283,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["this.createheadersfortype(typeinstance",{"_index":702,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.currentpagenumber",{"_index":812,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["this.deleteitem.emit(item",{"_index":441,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.edititem.emit(item",{"_index":439,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.editors",{"_index":132,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.editors.push",{"_index":162,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.editors.sort((e",{"_index":187,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.errors",{"_index":939,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.errors.push(error",{"_index":942,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.externals[uihint",{"_index":454,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.fb",{"_index":1063,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["this.fb.group(valgroup",{"_index":1125,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["this.first(this.params.filter((e",{"_index":902,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.forecolor",{"_index":1506,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.formgroup",{"_index":137,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{}}}],["this.formgroup.controls",{"_index":143,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.formgroup.controls.hasownproperty(controlname",{"_index":144,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.formgroup.controls[this.name].errors",{"_index":941,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.fromvalue",{"_index":924,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.fv.build(userviewmodel",{"_index":2232,"title":{},"body":{"index.html":{}}}],["this.groups",{"_index":133,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.groups.filter((g",{"_index":168,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.groups.length",{"_index":192,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.groups.push",{"_index":173,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.groups.sort((e",{"_index":191,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["this.haschildren",{"_index":1338,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.href",{"_index":1496,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.iconclasses",{"_index":1483,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.iconclasses.push('fa",{"_index":1493,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.iconclasses.push(this.node.options.icon",{"_index":1494,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.injector.get(pipetoken",{"_index":1153,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["this.isexpanded",{"_index":1516,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.issortable",{"_index":547,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["this.items.sort((a",{"_index":711,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.items.sort(sortcallback",{"_index":710,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.itemsfiltered",{"_index":682,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.itemsfiltered.length",{"_index":683,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.itemsfiltered.slice(this.startrow",{"_index":693,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.label",{"_index":915,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.maxpageindex",{"_index":821,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["this.model",{"_index":435,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.model.ondelete.subscribe(item",{"_index":440,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.model.ondelete.unsubscribe",{"_index":443,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.model.onedit.subscribe(item",{"_index":438,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.model.onedit.unsubscribe",{"_index":442,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.model.searchvalue",{"_index":436,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.myform",{"_index":2231,"title":{},"body":{"index.html":{}}}],["this.name",{"_index":917,"title":{},"body":{"components/EditorComponent.html":{},"classes/TextTreeNodeModel.html":{}}}],["this.node",{"_index":1486,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.haschildren",{"_index":1498,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options",{"_index":1490,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.backcolor",{"_index":1507,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.checkable",{"_index":1518,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.collapsable",{"_index":1517,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.color",{"_index":1505,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.href",{"_index":1495,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.icon",{"_index":1491,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.icon.indexof(`${treeviewnodecomponent.pfxicon",{"_index":1492,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.options.selectable",{"_index":1526,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.state",{"_index":1503,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.statechange.subscribe((se",{"_index":1509,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.stateisdisabled",{"_index":1519,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.stateisexpandend",{"_index":1511,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.node.stateisselected",{"_index":1531,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.nodeclick",{"_index":1478,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.nodeclick.emit(node",{"_index":1410,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["this.nodeclick.emit(this.node",{"_index":1523,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.ondelete.emit(item",{"_index":719,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.onedit.emit(item",{"_index":718,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.onvaluechanged(data",{"_index":904,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.options",{"_index":1320,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.pagenumberchanged.emit(pagenumber",{"_index":822,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["this.pagesize",{"_index":685,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.params",{"_index":901,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.parent",{"_index":1327,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.preselectstate",{"_index":1529,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.readonly",{"_index":938,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.searchvalue",{"_index":689,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.selectedchanged",{"_index":1480,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.selectedchanged.emit(node",{"_index":1412,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["this.selectedchanged.emit(this.node",{"_index":1532,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["this.setcurrentpage(1",{"_index":809,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["this.sortdirection[colname",{"_index":704,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.startrow",{"_index":686,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.state",{"_index":1323,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.statechange",{"_index":1322,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.statechange.emit(this._state",{"_index":1344,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.stringfallback",{"_index":468,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.templatehint",{"_index":548,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["this.text",{"_index":1270,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["this.tooltip",{"_index":918,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.totalrows",{"_index":684,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.tovalue",{"_index":927,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.type",{"_index":911,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.warnprop[prop",{"_index":463,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this.watermark",{"_index":929,"title":{},"body":{"components/EditorComponent.html":{}}}],["this[`${uihint}fallback",{"_index":457,"title":{},"body":{"components/DataGridComponent.html":{}}}],["this[uihint",{"_index":449,"title":{},"body":{"components/DataGridComponent.html":{}}}],["those",{"_index":2624,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["though",{"_index":2205,"title":{},"body":{"index.html":{}}}],["through",{"_index":140,"title":{},"body":{"components/AutoFormComponent.html":{},"components/TreeViewNodeComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["throughout",{"_index":1926,"title":{},"body":{"contributing.html":{}}}],["thrown",{"_index":1837,"title":{},"body":{"contributing.html":{}}}],["throws",{"_index":814,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["time",{"_index":2193,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["title",{"_index":518,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["titles",{"_index":558,"title":{},"body":{"classes/DataGridModel.html":{}}}],["together",{"_index":2162,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":703,"title":{},"body":{"classes/DataGridModel.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{}}}],["toggles",{"_index":645,"title":{},"body":{"classes/DataGridModel.html":{}}}],["toggling",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["tolerant",{"_index":1586,"title":{},"body":{"changelog.html":{}}}],["ton",{"_index":1670,"title":{},"body":{"changelog.html":{}}}],["tons",{"_index":2526,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["tool",{"_index":2461,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tools",{"_index":1954,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tools/gulp",{"_index":2744,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tools/gulp/tasks",{"_index":2738,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["toolsthe",{"_index":2619,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tooltip",{"_index":507,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["top",{"_index":79,"title":{},"body":{"components/AutoFormComponent.html":{},"index.html":{}}}],["tortious",{"_index":2416,"title":{},"body":{"license.html":{}}}],["total",{"_index":560,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction.html":{}}}],["totalfilteredrows",{"_index":574,"title":{},"body":{"classes/DataGridModel.html":{}}}],["totalrows",{"_index":573,"title":{},"body":{"classes/DataGridModel.html":{}}}],["touch",{"_index":2728,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tovalue",{"_index":862,"title":{},"body":{"components/EditorComponent.html":{}}}],["towards",{"_index":2185,"title":{},"body":{"index.html":{}}}],["trace",{"_index":1841,"title":{},"body":{"contributing.html":{}}}],["trade",{"_index":2493,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["traditional",{"_index":2476,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["transfer",{"_index":2533,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["transform",{"_index":1143,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["transform(value",{"_index":1144,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["translate",{"_index":1005,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["translation",{"_index":1006,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["transparent",{"_index":499,"title":{},"body":{"components/DataGridComponent.html":{}}}],["transpiler",{"_index":2692,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["transpilers",{"_index":2481,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["travis",{"_index":2502,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tree",{"_index":48,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["tree'},{'name",{"_index":208,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["tree.treenodeoptions",{"_index":1256,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["tree.treenodestate",{"_index":1248,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.checked",{"_index":1347,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.disabled",{"_index":1345,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.expanded",{"_index":1339,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.selected",{"_index":1346,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.undefined",{"_index":1324,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["treeish",{"_index":2473,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["treenode",{"_index":210,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["treenode.model",{"_index":1268,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodebase.model",{"_index":1319,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["treenodebasemodel",{"_index":1263,"title":{"interfaces/TreeNodeBaseModel.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["treenodecomponentmodel",{"_index":1277,"title":{"classes/TreeNodeComponentModel.html":{}},"body":{"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel",{"_index":1239,"title":{"classes/TreeNodeModel.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["treenodemodel:12",{"_index":1257,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:16",{"_index":1258,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:20",{"_index":1251,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:24",{"_index":1254,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:28",{"_index":1253,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:32",{"_index":1259,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:34",{"_index":1250,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:61",{"_index":1264,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:69",{"_index":1261,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:77",{"_index":1266,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodeoptions",{"_index":1245,"title":{"classes/TreeNodeOptions.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeOptions.html":{}}}],["treenodeoptions.model",{"_index":1267,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["treenodestate",{"_index":1373,"title":{},"body":{"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["treenodestate.checked",{"_index":1504,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treenodestate.expanded",{"_index":1524,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treenodestate.selected",{"_index":1530,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treeview",{"_index":1375,"title":{},"body":{"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"index.html":{}}}],["treeview.component.html",{"_index":1386,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["treeviewcomponent",{"_index":207,"title":{"components/TreeViewComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["treeviewnode.component.css",{"_index":1423,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treeviewnode.component.html",{"_index":1424,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treeviewnodecomponent",{"_index":209,"title":{"components/TreeViewNodeComponent.html":{}},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["treeviewnodecomponent.clsicon",{"_index":1513,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["treeviewnodecomponent.opnicon",{"_index":1514,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["triage",{"_index":1858,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":110,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/ObjectConstructor.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1071,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["trying",{"_index":1848,"title":{},"body":{"contributing.html":{}}}],["ts",{"_index":1069,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ts/js",{"_index":2501,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["tsc",{"_index":2315,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":2698,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tsconfig.json",{"_index":2691,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tslib",{"_index":2029,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":2717,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tslint:disable",{"_index":444,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{}}}],["tuned",{"_index":1734,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1595,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"interfaces/DatagridStyles.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["type's",{"_index":1030,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type.hasownproperty(p",{"_index":728,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type=\"checkbox",{"_index":2273,"title":{},"body":{"index.html":{}}}],["type=\"checkbox\"&gt",{"_index":987,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type=\"date",{"_index":2281,"title":{},"body":{"index.html":{}}}],["type=\"date\"&gt",{"_index":986,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type=\"hidden",{"_index":2095,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type=\"number",{"_index":2277,"title":{},"body":{"index.html":{}}}],["type=\"number\"&gt",{"_index":988,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type=\"text",{"_index":2270,"title":{},"body":{"index.html":{}}}],["type=\"text\"&gt",{"_index":985,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type[`__issortable__${p",{"_index":737,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__pipeparams__${p",{"_index":751,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__sortcallback__${p",{"_index":739,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__templatehint__${p",{"_index":744,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__templatehintparams__${p",{"_index":747,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__uipipe__${p",{"_index":749,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[p",{"_index":745,"title":{},"body":{"classes/DataGridModel.html":{}}}],["typealiases",{"_index":2419,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc.json",{"_index":2695,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["typeinstance",{"_index":699,"title":{},"body":{"classes/DataGridModel.html":{}}}],["typeof",{"_index":27,"title":{},"body":{"interfaces/Array.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"interfaces/ObjectConstructor.html":{}}}],["types",{"_index":368,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/EditorComponent.html":{},"index.html":{}}}],["typescript",{"_index":983,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["typically",{"_index":2296,"title":{},"body":{"index.html":{}}}],["typing",{"_index":2729,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["typings",{"_index":2662,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ui",{"_index":709,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TreeNodeComponentModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["uihint",{"_index":373,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uihint(uihintrule",{"_index":2134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uihint.decorator.ts",{"_index":2057,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["uihint.hintrule(type",{"_index":753,"title":{},"body":{"classes/DataGridModel.html":{}}}],["uihintrule",{"_index":2139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ul.treeview",{"_index":1534,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["umd",{"_index":2169,"title":{},"body":{"index.html":{}}}],["unambiguous",{"_index":1854,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":527,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/ObjectConstructor.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["undefined,undefined",{"_index":632,"title":{},"body":{"classes/DataGridModel.html":{}}}],["under",{"_index":1611,"title":{},"body":{"changelog.html":{}}}],["underlaying",{"_index":759,"title":{},"body":{"components/DataGridPaginationComponent.html":{}}}],["underlying",{"_index":248,"title":{},"body":{"components/DataGridComponent.html":{}}}],["unfortunately",{"_index":1700,"title":{},"body":{"changelog.html":{}}}],["ungrouped",{"_index":112,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["ungroupedafter",{"_index":103,"title":{},"body":{"components/AutoFormComponent.html":{}}}],["unit",{"_index":1929,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["universal",{"_index":2308,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2527,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["up",{"_index":308,"title":{},"body":{"components/DataGridComponent.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["update",{"_index":708,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{}}}],["updates",{"_index":1906,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["updateyou",{"_index":2727,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["upon",{"_index":2249,"title":{},"body":{"index.html":{}}}],["upper",{"_index":2652,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["upstream",{"_index":1916,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":2664,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["usable",{"_index":1600,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":70,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridPaginationComponent.html":{},"injectables/FormValidatorService.html":{},"components/TreeViewComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["use",{"_index":320,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["used",{"_index":250,"title":{},"body":{"components/DataGridComponent.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":450,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["user\\'s",{"_index":2211,"title":{},"body":{"index.html":{}}}],["userform",{"_index":1698,"title":{},"body":{"changelog.html":{}}}],["username",{"_index":2216,"title":{},"body":{"index.html":{}}}],["users",{"_index":2336,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["userviewmodel",{"_index":2207,"title":{},"body":{"index.html":{}}}],["uses",{"_index":2071,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["using",{"_index":517,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/ObjectConstructor.html":{},"modules/SvogvModule.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["usually",{"_index":2150,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["utils/object",{"_index":676,"title":{},"body":{"classes/DataGridModel.html":{}}}],["val",{"_index":2285,"title":{},"body":{"index.html":{}}}],["val,cal",{"_index":2280,"title":{},"body":{"index.html":{}}}],["valdiate",{"_index":2145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valgroup",{"_index":1064,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["valgroup)[propname",{"_index":1120,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["valid",{"_index":948,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["validatecompare",{"_index":1058,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["validatecompare(p",{"_index":2141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validaterange",{"_index":1056,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["validaterange(f",{"_index":2144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validates",{"_index":2077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":62,"title":{},"body":{"components/AutoFormComponent.html":{},"components/EditorComponent.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["validator",{"_index":1037,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":836,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["validators.compose(validators",{"_index":1123,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.length",{"_index":1119,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validatecompare(compare",{"_index":1118,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validaterange(f",{"_index":1112,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.maxlength(maxlength",{"_index":1087,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.minlength(minlength",{"_index":1093,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.pattern(pattern",{"_index":1099,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.required",{"_index":1081,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators/compare.validator",{"_index":1059,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators/range.validator",{"_index":1057,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators[0",{"_index":1122,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validatortype",{"_index":1009,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["value",{"_index":32,"title":{},"body":{"interfaces/Array.html":{},"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"interfaces/ObjectConstructor.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewNodeComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["valueorpredicate",{"_index":28,"title":{},"body":{"interfaces/Array.html":{}}}],["values",{"_index":866,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["var",{"_index":197,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["variables",{"_index":2427,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":252,"title":{},"body":{"components/DataGridComponent.html":{},"components/TreeViewComponent.html":{},"contributing.html":{},"index.html":{}}}],["version",{"_index":1923,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["versionif",{"_index":2597,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["versions",{"_index":1663,"title":{},"body":{"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["vertical",{"_index":851,"title":{},"body":{"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["very",{"_index":1585,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["via",{"_index":360,"title":{},"body":{"components/DataGridComponent.html":{},"contributing.html":{},"index.html":{}}}],["view",{"_index":535,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/TreeNodeOptions.html":{},"components/TreeViewNodeComponent.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["viewchild",{"_index":422,"title":{},"body":{"components/DataGridComponent.html":{}}}],["viewchild('boolean",{"_index":382,"title":{},"body":{"components/DataGridComponent.html":{}}}],["viewchild('date",{"_index":386,"title":{},"body":{"components/DataGridComponent.html":{}}}],["viewchild('enum",{"_index":392,"title":{},"body":{"components/DataGridComponent.html":{}}}],["viewchild('number",{"_index":396,"title":{},"body":{"components/DataGridComponent.html":{}}}],["viewchild('string",{"_index":400,"title":{},"body":{"components/DataGridComponent.html":{}}}],["viewchild(templateref",{"_index":428,"title":{},"body":{"components/DataGridComponent.html":{}}}],["viewmodel",{"_index":54,"title":{},"body":{"components/AutoFormComponent.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["viewmodel's",{"_index":415,"title":{},"body":{"components/DataGridComponent.html":{}}}],["viewmodels",{"_index":723,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["vim",{"_index":2542,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["visible",{"_index":325,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{}}}],["visual",{"_index":1856,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["vit",{"_index":2730,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["void",{"_index":121,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"components/EditorComponent.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"components/TreeViewComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["walk",{"_index":1325,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["want",{"_index":1582,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["warnprop",{"_index":271,"title":{},"body":{"components/DataGridComponent.html":{}}}],["warranties",{"_index":2401,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":465,"title":{},"body":{"components/DataGridComponent.html":{}}}],["watermark",{"_index":863,"title":{},"body":{"components/EditorComponent.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["watermarks",{"_index":1594,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":1041,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ways",{"_index":236,"title":{},"body":{"components/DataGridComponent.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["wd",{"_index":1220,"title":{},"body":{"modules/SvogvModule.html":{}}}],["wd.autoformcomponent",{"_index":1232,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.datagridcomponent",{"_index":1227,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.datagridpaginationcomponent",{"_index":1228,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.editorcomponent",{"_index":1231,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.formatdatapipe",{"_index":1204,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}],["wd.treeviewcomponent",{"_index":1229,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["wd.treeviewnodecomponent",{"_index":1230,"title":{},"body":{"modules/SvogvModule.html":{},"miscellaneous/variables.html":{}}}],["we'll",{"_index":2013,"title":{},"body":{"contributing.html":{}}}],["we're",{"_index":2560,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["web",{"_index":1918,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["webpack",{"_index":1618,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["websites",{"_index":2607,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["welcome",{"_index":2512,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["well",{"_index":1953,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["what's",{"_index":2500,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["whatsoever",{"_index":2410,"title":{},"body":{"license.html":{}}}],["wheather",{"_index":327,"title":{},"body":{"components/DataGridComponent.html":{}}}],["whether",{"_index":1574,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["white",{"_index":490,"title":{},"body":{"components/DataGridComponent.html":{},"contributing.html":{}}}],["whole",{"_index":1707,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["widget",{"_index":835,"title":{},"body":{"components/EditorComponent.html":{},"index.html":{}}}],["widget/grid",{"_index":257,"title":{},"body":{"components/DataGridComponent.html":{},"components/DataGridPaginationComponent.html":{}}}],["widget/tree",{"_index":1383,"title":{},"body":{"components/TreeViewComponent.html":{}}}],["widgets",{"_index":1598,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["widgets/index",{"_index":1221,"title":{},"body":{"modules/SvogvModule.html":{}}}],["width",{"_index":86,"title":{},"body":{"components/AutoFormComponent.html":{},"components/DataGridComponent.html":{},"components/EditorComponent.html":{},"components/TreeViewNodeComponent.html":{}}}],["width:15px",{"_index":1545,"title":{},"body":{"components/TreeViewNodeComponent.html":{}}}],["window",{"_index":1560,"title":{},"body":{"injectables/WindowRef.html":{},"index.html":{}}}],["windowref",{"_index":1551,"title":{"injectables/WindowRef.html":{}},"body":{"injectables/WindowRef.html":{}}}],["windows",{"_index":2510,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["wish",{"_index":615,"title":{},"body":{"classes/DataGridModel.html":{}}}],["with@hidden",{"_index":2093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["with@sortable(false",{"_index":2119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["within",{"_index":1142,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["without",{"_index":1489,"title":{},"body":{"components/TreeViewNodeComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["withproperty",{"_index":2065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["word",{"_index":2002,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":977,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["worked",{"_index":2182,"title":{},"body":{"index.html":{}}}],["working",{"_index":1623,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["world",{"_index":1591,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["worries",{"_index":2521,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["wrap",{"_index":1935,"title":{},"body":{"contributing.html":{}}}],["write",{"_index":2086,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["writing",{"_index":2548,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["written",{"_index":2339,"title":{},"body":{"index.html":{}}}],["writtenon",{"_index":1045,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["written}on",{"_index":1061,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["wrote",{"_index":2450,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["www.joergkrause.de",{"_index":2342,"title":{},"body":{"index.html":{}}}],["x",{"_index":1161,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["x.constructor",{"_index":1175,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["x.hasownproperty(p",{"_index":1182,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["x[p",{"_index":1185,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["y",{"_index":1160,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["y.constructor",{"_index":1176,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["y.hasownproperty(p",{"_index":1184,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["y[p",{"_index":1186,"title":{},"body":{"interfaces/ObjectConstructor.html":{}}}],["years",{"_index":2345,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["yes",{"_index":374,"title":{},"body":{"components/DataGridComponent.html":{},"classes/DataGridModel.html":{},"components/DataGridPaginationComponent.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["you're",{"_index":2294,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["yours",{"_index":2679,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["yourself",{"_index":1865,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["zipped",{"_index":2179,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":2031,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["zoom",{"_index":1205,"title":{},"body":{"modules/SvogvModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Array.html":{"url":"interfaces/Array.html","title":"interface - Array","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Array\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/utils/array-extensions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    remove\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(o: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/utils/array-extensions.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare interface Array {\n  remove(o: any): Array;\n}\n\nArray.prototype.remove = function(valueOrPredicate: any): any[] {\n  const predicate =\n    typeof valueOrPredicate === 'function'\n      ? valueOrPredicate\n      : function(value: any) {\n          return value === valueOrPredicate;\n        };\n  const removedValues = new Array();\n  console.log(valueOrPredicate, this);\n  for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AutoFormComponent.html":{"url":"components/AutoFormComponent.html","title":"component - AutoFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AutoFormComponent\n\n\n\n        \n            API\n        \n        \n            Live Demo\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            Source: Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts\n\n\n    \n        Description\n    \n    \n        This component creates a complete editor from a viewmodel. The viewmodel should have\ndecorators to control the form's behavior. The form can be styled an supports validation.\nIt creates one field for each property not decorated with Hiddendecorator.\nExample of usage:\n/#/editor\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-autoform\n            \n\n\n            \n                styles\n                fieldset { border-top: 1px silver solid; padding: 10px; },legend { width: auto; padding-left: 10px; padding-right: 10px; font-size: 1em;}\n            \n\n\n            \n                templateUrl\n                ./autoform.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editors\n                            \n                            \n                                    Public\n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                grouped\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                ungroupedAfter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:25\n                            \n                        \n                \n                    \n                        A reference to the form. Required.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ungroupedAfter\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:31\n                            \n                        \n                \n                    \n                        Ungrouped element will appear at the end, after all groupes.\nIf there are no groups this will be ignored. Optional.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            grouped\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    grouped()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform/autoform.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n/**\n * This component creates a complete editor from a viewmodel. The viewmodel should have\n * decorators to control the form's behavior. The form can be styled an supports validation.\n * It creates one field for each property not decorated with {@link Hidden}decorator.\n *\n * Example of usage:\n * /#/editor\n */\n@Component({\n  selector: 'ac-autoform',\n  styles: [\n    'fieldset { border-top: 1px silver solid; padding: 10px; }',\n    'legend { width: auto; padding-left: 10px; padding-right: 10px; font-size: 1em;}'\n  ],\n  templateUrl: './autoform.component.html'\n})\nexport class AutoFormComponent implements OnInit {\n  /**\n   * A reference to the form. Required.\n   */\n  @Input()\n  public formGroup: FormGroup;\n  /**\n   * Ungrouped element will appear at the end, after all groupes.\n   * If there are no groups this will be ignored. Optional.\n   */\n  @Input()\n  public ungroupedAfter = true;\n\n  public editors: Array;\n  public groups: Array;\n  }>;\n\n  constructor() {\n    this.editors = new Array();\n    this.groups = new Array;\n    }>();\n  }\n\n  public ngOnInit() {\n    // take all controls as is\n    const hasDecorators: boolean = (this.formGroup as any).__editorModel__;\n    // loop through all fields\n    for (const controlName in this.formGroup.controls) {\n      if (!this.formGroup.controls.hasOwnProperty(controlName)) {\n        continue;\n      }\n      let displayOrder = 0;\n      let groupOrder = 0;\n      let groupName: string;\n      let groupDesc: string;\n      let isInGroup = false;\n      if (hasDecorators) {\n        displayOrder = ( this.formGroup as any).__editorModel__[\n          `__displayOrder__${controlName}`\n        ];\n        isInGroup = !!( this.formGroup as any).__editorModel__[\n          `__isGrouped__${controlName}`\n        ];\n        if (isInGroup) {\n          groupName = ( this.formGroup as any).__editorModel__[\n            `__groupName__${controlName}`\n          ];\n          groupOrder = ( this.formGroup as any).__editorModel__[\n            `__groupOrder__${controlName}`\n          ];\n          groupDesc = ( this.formGroup as any).__editorModel__[\n            `__groupDesc__${controlName}`\n          ];\n        }\n      }\n      if (!isInGroup) {\n        // if not part of any group just push to main group\n        this.editors.push({\n          key: displayOrder,\n          editor: controlName\n        });\n      } else {\n        // check if group already exists\n        const existingGroupArray = this.groups.filter((g) => g.name === groupName);\n        const groupExists = existingGroupArray.length === 1;\n        if (!groupExists) {\n          this.groups.push({\n            key: groupOrder,\n            name: groupName,\n            desc: groupDesc,\n            editors: new Array()\n          });\n        }\n        // add field to existing group (assume that here the group always exists)\n        const existingGroup = this.groups.filter((g) => g.name === groupName)[0];\n        // and store\n        existingGroup.editors.push({\n          key: displayOrder,\n          editor: controlName\n        });\n      }\n    }\n    // check the display decorator and sort\n    this.editors.sort((e, n) => e.key - n.key);\n    // sort groups\n    this.groups.sort((e, n) => e.key - n.key);\n  }\n\n  public grouped(): boolean {\n    return this.groups && this.groups.length > 0;\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n  \n    {{ group.name }}\n    \n  \n\n\n  \n\n\n    \n\n    \n            fieldset { border-top: 1px silver solid; padding: 10px; }\nlegend { width: auto; padding-left: 10px; padding-right: 10px; font-size: 1em;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ group.name }}        '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AutoFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataGridComponent.html":{"url":"components/DataGridComponent.html","title":"component - DataGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataGridComponent\n\n\n\n        \n            API\n        \n        \n            Live Demo\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            Source: Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts\n\n\n    \n        Description\n    \n    \n        \nSee README for a complete documentation.\n\nSummary\nThe datagrid provides basic functions for data tables:\n\nsorting\nfiltering\npagination\nediting\n\nProvide an decorator enhanced model and the grid appears driven by model meta data.\nThere are many attributes and ways to change the appearance. Also some classes can be controlled by\nthe host component:\n\n.col-borders\n.col-last\n.col-first\nAll these styles are applied to the  elements of the underlying table.\n\nThe model used in the example is an array of objects, where the properties are decorated with\nvarious decorators used to control the grid's render behavior.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    ```\n  \n   ```\n\n/#/widget/grid\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-datagrid\n            \n\n            \n                styleUrls\n                ./datagrid.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datagrid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                boolean\n                            \n                            \n                                    Public\n                                booleanFallback\n                            \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                dateFallback\n                            \n                            \n                                    Public\n                                directionEnumHelper\n                            \n                            \n                                    Public\n                                enum\n                            \n                            \n                                    Public\n                                enumFallback\n                            \n                            \n                                    Public\n                                number\n                            \n                            \n                                    Public\n                                numberFallback\n                            \n                            \n                                    Public\n                                string\n                            \n                            \n                                    Public\n                                stringFallback\n                            \n                            \n                                    Private\n                                warnProp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveTemplate\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnStyle\n                            \n                            \n                                externals\n                            \n                            \n                                filter\n                            \n                            \n                                model\n                            \n                            \n                                reArrangeColumns\n                            \n                            \n                                showActions\n                            \n                            \n                                showDeleteButton\n                            \n                            \n                                showEditButton\n                            \n                            \n                                textButtonsHeader\n                            \n                            \n                                textDeleteButton\n                            \n                            \n                                textEditButton\n                            \n                            \n                                textNoItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItem\n                            \n                            \n                                editItem\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnStyle\n                    \n                \n                \n                    \n                        Type :         DatagridStyles\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:84\n                            \n                        \n                \n                    \n                        Override the internal styles by giving directly CSS rules based on the column tags.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        externals\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:76\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:144\n                            \n                        \n                \n                    \n                        The filter value to filter the content. The data is of type\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         DataGridModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:90\n                            \n                        \n                \n                    \n                        The model that makes up the content. Shall provide properties with decorators to control appearance.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        reArrangeColumns\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:154\n                            \n                        \n                \n                    \n                        If true the columns can be rearranged by moving around with drag 'n drop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showActions\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:108\n                            \n                        \n                \n                    \n                        Show the action column at all. Use and  @see showEditButton to switch thebuttons\non or off individually. Default is true (actions visible).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showDeleteButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:96\n                            \n                        \n                \n                    \n                        Wheather to show a delete button. Clicking it fires the DataGridModel.OnDeleteevent.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showEditButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:101\n                            \n                        \n                \n                    \n                        Wheather to show an edit button. Clicking it fires the DataGridModel.OnEditevent.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        textButtonsHeader\n                    \n                \n                \n                    \n                        Default value : 'Actions'\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:124\n                            \n                        \n                \n                    \n                        The column header of the column that shows the buttons. Default is 'Actions'.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        textDeleteButton\n                    \n                \n                \n                    \n                        Default value : 'Delete'\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:114\n                            \n                        \n                \n                    \n                        The text that appears on the Delete button. Default is 'Delete'.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        textEditButton\n                    \n                \n                \n                    \n                        Default value : 'Edit'\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:119\n                            \n                        \n                \n                    \n                        The text that appears on the Edit button. Default is 'Edit'.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        textNoItems\n                    \n                \n                \n                    \n                        Default value : 'There are no items to show'\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:134\n                            \n                        \n                \n                    \n                        The text that appears if there are no items to show. Can also be overwritten by a more complex piece\nof code by adding a template like this:\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteItem\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:168\n                            \n                        \n                \n                    \n                        Event forwarded from model class and being fired after the model class's onDelete event.\nThe event is invoked by the appropriate internal button via click.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editItem\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:161\n                            \n                        \n                \n                    \n                        Event forwarded from model class and being fired after the model class's onEdit event.\nThe event is invoked by the appropriate internal button via click.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getActiveTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActiveTemplate(uiHint: string, prop?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:195\n                \n            \n\n\n            \n                \n                    Controls the template used to display certain data types.\nIf the host provides a template it's being used, otherwise a fallback is provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uiHint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Property of \n\n                                    \n                                \n                                \n                                    prop\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TemplateRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            boolean\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('boolean', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanFallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('boolean', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('date', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateFallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('date', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            directionEnumHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Direction\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('enum', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enumFallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('enum', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('number', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberFallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('number', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            string\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild('string', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringFallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('string', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:61\n                            \n                        \n\n                \n                    \n                        Access to the string renderer fallback template. The template used internally looks like shown in the example\nThat means, it renders data \"as is\", but can be modified by handling a custom pipe. To apply such\na pipe, your viewmodel's properties must be decorated with the FormatPipe decorator.\nExample:\n\n  {{ data | formatData: modelpipe: params }}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            warnProp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:188\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n\n\n                \n                    \n                        setfilter(value: literal type)\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:144\n                                \n                            \n                    \n                        \n                                The filter value to filter the content. The data is of type\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        literal type\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                        Example :\n                                            \n                                                { [prop: string]: any }\n                                            \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ContentChild,\n         TemplateRef, EventEmitter, AfterViewInit, Output, OnDestroy } from '@angular/core';\nimport { DataGridModel, Direction } from './models/datagrid.model';\nimport { DatagridStyles } from './models/datagridstyle.model';\n\n/**\n * > See README for a complete documentation.\n *\n * ### Summary\n *\n * The datagrid provides basic functions for data tables:\n * * sorting\n * * filtering\n * * pagination\n * * editing\n *\n * Provide an decorator enhanced model and the grid appears driven by model meta data.\n *\n * There are many attributes and ways to change the appearance. Also some classes can be controlled by\n * the host component:\n * * `.col-borders`\n * * `.col-last`\n * * `.col-first`\n * All these styles are applied to the  elements of the underlying table.\n *\n * The model used in the example is an array of objects, where the properties are decorated with\n * various decorators used to control the grid's render behavior.\n *\n * @example\n * ```\n  \n   ```\n *\n * /#/widget/grid\n */\n@Component({\n  selector: 'ac-datagrid',\n  templateUrl: './datagrid.component.html',\n  styleUrls: ['./datagrid.component.scss']\n})\nexport class DataGridComponent implements OnInit, AfterViewInit, OnDestroy {\n  public directionEnumHelper = Direction;\n\n  /**\n   * Access to the string renderer fallback template. The template used internally looks like shown in the example\n   * That means, it renders data \"as is\", but can be modified by handling a custom pipe. To apply such\n   * a pipe, your viewmodel's properties must be decorated with the {@link FormatPipe} decorator.\n   *\n   * __Example:__\n   * ~~~~~~~~\n   * \n   *  {{ data | formatData: modelpipe: params }}\n   * \n   * ~~~~~~~~\n   *\n   */\n  @ViewChild('string', { static: true }) public stringFallback: TemplateRef;\n  @ContentChild('string', { static: true }) public string: TemplateRef;\n\n  @ViewChild('boolean', { static: true }) public booleanFallback: TemplateRef;\n  @ContentChild('boolean', { static: true }) public boolean: TemplateRef;\n\n  @ViewChild('date', { static: true }) public dateFallback: TemplateRef;\n  @ContentChild('date', { static: true }) public date: TemplateRef;\n\n  @ViewChild('enum', { static: true }) public enumFallback: TemplateRef;\n  @ContentChild('enum', { static: true }) public enum: TemplateRef;\n\n  @ViewChild('number', { static: true }) public numberFallback: TemplateRef;\n  @ContentChild('number', { static: true }) public number: TemplateRef;\n\n  @Input() public externals: { [key: string]: any } = {};\n\n  // @ViewChild(TemplateRef) template: TemplateRef;\n\n  /**\n   * Override the internal styles by giving directly CSS rules based on the column tags.\n   */\n  @Input()\n  public columnStyle: DatagridStyles;\n\n  /**\n   * The model that makes up the content. Shall provide properties with decorators to control appearance.\n   */\n  @Input()\n  public model: DataGridModel;\n\n  /**\n   * Wheather to show a delete button. Clicking it fires the {@link DataGridModel.OnDelete}event.\n   */\n  @Input()\n  public showDeleteButton: boolean;\n  /**\n   * Wheather to show an edit button. Clicking it fires the {@link DataGridModel.OnEdit}event.\n   */\n  @Input()\n  public showEditButton: boolean;\n\n  /**\n   * Show the action column at all. Use {@link showDeleteButton and  @see showEditButton to switch the}buttons\n   * on or off individually. Default is `true` (actions visible).\n   */\n  @Input()\n  public showActions = true;\n\n  /**\n   * The text that appears on the Delete button. Default is 'Delete'.\n   */\n  @Input()\n  public textDeleteButton = 'Delete';\n  /**\n   * The text that appears on the Edit button. Default is 'Edit'.\n   */\n  @Input()\n  public textEditButton = 'Edit';\n  /**\n   * The column header of the column that shows the buttons. Default is 'Actions'.\n   */\n  @Input()\n  public textButtonsHeader = 'Actions';\n  /**\n   * The text that appears if there are no items to show. Can also be overwritten by a more complex piece\n   * of code by adding a template like this:\n   * @example\n   * \n   *   The grid is empty\n   * \n   */\n  @Input()\n  public textNoItems = 'There are no items to show';\n  /**\n   * The filter value to filter the content. The data is of type\n   *\n   * @example\n   * { [prop: string]: any }\n   *\n   *\n   */\n  @Input()\n  public set filter(value: { [prop: string]: any }) {\n    if (this.model) {\n      this.model.searchValue = value;\n    }\n  }\n\n  /**\n   * If `true` the columns can be rearranged by moving around with drag 'n drop.\n   */\n  @Input()\n  public reArrangeColumns: boolean;\n\n  /**\n   * Event forwarded from model class and being fired after the model class's onEdit event.\n   * The event is invoked by the appropriate internal button via click.\n   */\n  @Output()\n  public editItem: EventEmitter = new EventEmitter();\n\n  /**\n   * Event forwarded from model class and being fired after the model class's onDelete event.\n   * The event is invoked by the appropriate internal button via click.\n   */\n  @Output()\n  public deleteItem: EventEmitter = new EventEmitter();\n\n  public ngOnInit(): void {\n    console.log('Model', this.model);\n  }\n  public ngAfterViewInit(): void {\n    if (this.model) {\n      this.model.onEdit.subscribe(item => this.editItem.emit(item));\n      this.model.onDelete.subscribe(item => this.deleteItem.emit(item));\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this.model) {\n      this.model.onEdit.unsubscribe();\n      this.model.onDelete.unsubscribe();\n    }\n  }\n\n  // tslint:disable-next-line:member-ordering\n  private warnProp: { [prop: string]: string } = {};\n\n  /**\n   * Controls the template used to display certain data types.\n   * If the host provides a template it's being used, otherwise a fallback is provided\n   * @param uiHint Property of @UiHint decorator\n   */\n  public getActiveTemplate(uiHint: string, prop?: string): TemplateRef {\n    if (this[uiHint]) {\n      // if provided by user via ContentChild and overwriting defaults (string == string etc.)\n      return this[uiHint];\n    }\n    if (this.externals[uiHint]) {\n      // if provided by user via ContentChild but completely replaced\n      return this.externals[uiHint];\n    }\n    if (this[`${uiHint}Fallback`]) {\n      // otherwise we take ours from ng-template via ViewChild\n      return this[`${uiHint}Fallback`];\n    }\n    // if we go here the model requested a custom template that didn't exists\n    if (this.warnProp[prop] !== uiHint) {\n      console.warn(`Property ${prop} requested the template ${uiHint}, but it wasn't provided. Falling back to \"string\".`);\n      this.warnProp[prop] = uiHint;\n    }\n    return this.stringFallback;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n        \n        \n      \n      \n        \n          \n            {{ header.text }}\n            \n              \n                \n              \n              \n                \n              \n            \n          \n          \n            {{ textButtonsHeader }}\n          \n        \n      \n      \n        \n          \n            \n              \n                \n              \n              {{  textNoItems }}\n            \n          \n        \n        \n          \n            \n          \n          \n            \n              {{ textEditButton }}\n            \n            \n              {{ textDeleteButton }}\n            \n          \n        \n      \n      \n        \n          \n            \n              \n            \n            &copy;\n          \n        \n      \n    \n  \n\n\n  {{ data | formatData: modelpipe: params }}\n\n\n  \n\n\n  {{ data }}\n\n\n  {{ data }}\n\n\n  {{ data | formatData: modelpipe: params }}\n\n\n    \n\n    \n                \n                    ./datagrid.component.scss\n                \n                $smallSize: 16px;\n$padding: 1px;\n\n.colborders col {\n  border-right: $padding solid azure;\n}\n\ncol.last {\n  border-right: none !important;\n}\n\ncol.first {\n  background-color: #eee;\n}\n\nth {\n  background: none;\n\n  &.sortableHeader {\n    cursor: pointer;\n  }\n\n}\n\n.headerText {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  display: inline-block;\n  text-overflow: ellipsis;\n}\n\n.sort {\n  float: right;\n\n  button {\n    width: $smallSize;\n    height: $smallSize;\n    border-radius: 0;\n    padding: $padding;\n    border: 0px;\n    background-color: transparent !important;\n    cursor: pointer;\n\n    &.up {\n      left: 0px;\n    }\n\n    &.down{\n      left: -$smallSize;\n    }\n\n  }\n}\n\n.rearrange {\n  width: $smallSize;\n  height: $smallSize;\n  margin: 2px;\n  float: right;\n  border: none;\n  background-color: transparent;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                              {{ header.text }}                                                                                                                                                {{ textButtonsHeader }}                                                                                                                      {{  textNoItems }}                                                                                                          {{ textEditButton }}                                      {{ textDeleteButton }}                                                                                                              ©                                {{ data | formatData: modelpipe: params }}    {{ data }}  {{ data }}  {{ data | formatData: modelpipe: params }}'\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataGridHeaderModel.html":{"url":"classes/DataGridHeaderModel.html","title":"class - DataGridHeaderModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataGridHeaderModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts\n        \n\n            \n                Description\n            \n            \n                Describe a header field with name, tooltip and other properties.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                desc\n                            \n                            \n                                    Public\n                                hidden\n                            \n                            \n                                isSortable\n                            \n                            \n                                pipe\n                            \n                            \n                                    Optional\n                                pipeParams\n                            \n                            \n                                    Public\n                                prop\n                            \n                            \n                                    Optional\n                                sortCallback\n                            \n                            \n                                templateHint\n                            \n                            \n                                    Optional\n                                templateHintParams\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                uiHint\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string, desc: string, prop: string, hidden: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:7\n                            \n                        \n\n                \n                    \n                            The ctor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The text to display.\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : A tooltip that is shown on mouseover (using the title attribute).\n\n                                                        \n                                                \n                                                \n                                                        prop\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The propertie's internal name.\n\n                                                        \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : optionally set a field as hidden and hence do not show in the grid.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        : A tooltip that is shown on mouseover (using the `title` attribute).\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        : optionally set a field as hidden and hence do not show in the grid.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:38\n                            \n                        \n\n                \n                    \n                        Display the sort buttons and connect to sort functions. Default is true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Pipe\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:48\n                            \n                        \n\n                \n                    \n                        Provides a pipe for all data of this column. Default is no pipe (undefined).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pipeParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:53\n                            \n                        \n\n                \n                    \n                        Optional parameters for a pipe.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        : The propertie's internal name.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:43\n                            \n                        \n\n                \n                    \n                        An optional sort callback function that replaces the default Array.prototype.sort.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateHint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:23\n                            \n                        \n\n                \n                    \n                        Hint from view model to select a certain template. Default is text (format as string).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            templateHintParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:33\n                            \n                        \n\n                \n                    \n                        Additional parameters some templates may use. Optional.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        : The text to display.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uiHint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StyleRules\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:28\n                            \n                        \n\n                \n                    \n                        Custom styles directly applied to the grid's header on a per model base.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Pipe } from '@angular/core';\nimport { StyleRules } from './datagridstyle.model';\n\n/**\n * Describe a header field with name, tooltip and other properties.\n */\nexport class DataGridHeaderModel {\n  /**\n   * The ctor\n   * @param text: The text to display.\n   * @param desc: A tooltip that is shown on mouseover (using the `title` attribute).\n   * @param prop: The propertie's internal name.\n   * @param hidden: optionally set a field as hidden and hence do not show in the grid.\n   */\n  constructor(public text: string, public desc: string, public prop: string, public hidden: boolean = false) {\n    this.isSortable = true;\n    this.templateHint = 'text';\n  }\n\n  /**\n   * Hint from view model to select a certain template. Default is *text* (format as string).\n   */\n  templateHint: string;\n\n  /**\n   * Custom styles directly applied to the grid's header on a per model base.\n   */\n  uiHint: StyleRules;\n\n  /**\n   * Additional parameters some templates may use. Optional.\n   */\n  templateHintParams?: any[];\n\n  /**\n   * Display the sort buttons and connect to sort functions. Default is `true`.\n   */\n  isSortable: boolean;\n\n  /**\n   * An optional sort callback function that replaces the default `Array.prototype.sort`.\n  */\n  sortCallback?: (a, b) => 1 | -1 | 0;\n\n  /**\n   * Provides a pipe for all data of this column. Default is no pipe (`undefined`).\n   */\n  pipe: Pipe;\n\n  /**\n   * Optional parameters for a pipe.\n   */\n  pipeParams?: any[];\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataGridModel.html":{"url":"classes/DataGridModel.html","title":"class - DataGridModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataGridModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts\n        \n\n            \n                Description\n            \n            \n                The controlling class for Grid applications.\nThis class takes an array of elements and handles:\n\nvisible headers, managed by @Hidden() decorator\ncreate header titles, managed by @Display() decorator\nsorting\nfiltering\ncount total rows\npaging\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _headers\n                            \n                            \n                                    Private\n                                _items\n                            \n                            \n                                    Public\n                                currentPageIndex\n                            \n                            \n                                    Public\n                                onDelete\n                            \n                            \n                                    Public\n                                onEdit\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                searchValue\n                            \n                            \n                                    Public\n                                sortDirection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Private\n                                createHeadersForType\n                            \n                            \n                                    Public\n                                deleteItem\n                            \n                            \n                                    Public\n                                editItem\n                            \n                            \n                                    Public\n                                removeColumn\n                            \n                            \n                                    Public\n                                sortColumn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalRows\n                                \n                                \n                                    totalFilteredRows\n                                \n                                \n                                    currentRowStart\n                                \n                                \n                                    currentRowEnd\n                                \n                                \n                                    startRow\n                                \n                                \n                                    maxPageIndex\n                                \n                                \n                                    items\n                                \n                                \n                                    itemsFiltered\n                                \n                                \n                                    itemsOnCurrentPage\n                                \n                                \n                                    headers\n                                \n                                \n                                    headersNotVisible\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[], type: Type, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:123\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataGridHeaderModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPageIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:115\n                            \n                        \n\n                \n                    \n                        Event fired if user clicks Delete button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:110\n                            \n                        \n\n                \n                    \n                        Event fired if user clicks Edit button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:102\n                            \n                        \n\n                \n                    \n                        The search value filters the rows. Provide the property name and the filter instruction. Search is pure client.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sortDirection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:120\n                            \n                        \n\n                \n                    \n                        Current sort direction per column.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(colname: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:177\n                \n            \n\n\n            \n                \n                    Add a column to the current grid, that has been removed recently.\nIt's just adding columns that already exists in the headers collection.\nIf the column name provided does not exists, the method does nothing.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createHeadersForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createHeadersForType(type: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteItem(item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:196\n                \n            \n\n\n            \n                \n                    Called by infrastructure to inform caller of delete wish\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editItem(item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:188\n                \n            \n\n\n            \n                \n                    Called by infrastructure to inform caller of edit wish\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeColumn(colname: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:165\n                \n            \n\n\n            \n                \n                    Make a column invisible. This is just changing the render process, the column is still\nin the headers collection and can be made visible again by calling addColumnlater.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sortColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortColumn(colName: string, dir: Direction, sortCallback?: (undefined,undefined) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:141\n                \n            \n\n\n            \n                \n                    Simple sort fucntion that makes a array sort call for the specified column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    colName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The column which has to be sorted after.\n// tslint:disable-next-line:max-line-length\n\n                                    \n                                \n                                \n                                    dir\n                                    \n                                                Direction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The order, descended is desc, any other string is ascending.\nIf nothing is provided, the direction toggles. Initital value is ascending.\n\n                                    \n                                \n                                \n                                    sortCallback\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalRows\n                    \n                \n\n                \n                    \n                        gettotalRows()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:31\n                                \n                            \n                    \n                        \n                                Returns the number of rows regardless the actual filter (the total).\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        totalFilteredRows\n                    \n                \n\n                \n                    \n                        gettotalFilteredRows()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentRowStart\n                    \n                \n\n                \n                    \n                        getcurrentRowStart()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentRowEnd\n                    \n                \n\n                \n                    \n                        getcurrentRowEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        startRow\n                    \n                \n\n                \n                    \n                        getstartRow()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        maxPageIndex\n                    \n                \n\n                \n                    \n                        getmaxPageIndex()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n\n                \n                    \n                        getitems()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:61\n                                \n                            \n\n                \n                    \n                        setitems(value: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:58\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsFiltered\n                    \n                \n\n                \n                    \n                        getitemsFiltered()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        itemsOnCurrentPage\n                    \n                \n\n                \n                    \n                        getitemsOnCurrentPage()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        headers\n                    \n                \n\n                \n                    \n                        getheaders()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:89\n                                \n                            \n                    \n                        \n                                Get all headers (column names) and their properties.\n\n\n                                \n                                    Returns :         DataGridHeaderModel[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        headersNotVisible\n                    \n                \n\n                \n                    \n                        getheadersNotVisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:96\n                                \n                            \n                    \n                        \n                                Returns the columns currently not shown. and @see removeColumn for moreinformation.\n\n\n                                \n                                    Returns :         DataGridHeaderModel[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Type, EventEmitter, Directive } from '@angular/core';\n\nimport '../../../utils/object-extensions';\nimport { DataGridHeaderModel } from './datagridheader.model';\nimport { Display, Hidden, UiHint } from '../../../decorators';\n\n/**\n * Sort direction, controlled by simple string comparision or a callback.\n */\nexport enum Direction {\n  Ascending,\n  Descending\n}\n\n/**\n * The controlling class for Grid applications.\n *\n * This class takes an array of elements and handles:\n * - visible headers, managed by @Hidden() decorator\n * - create header titles, managed by @Display() decorator\n * - sorting\n * - filtering\n * - count total rows\n * - paging\n */\nexport class DataGridModel {\n\n  /**\n   * Returns the number of rows regardless the actual filter (the total).\n   */\n  get totalRows(): number {\n    return this._items.length;\n  }\n\n  get totalFilteredRows(): number {\n    return this.itemsFiltered ? this.itemsFiltered.length : 0;\n  }\n\n  private get currentRowStart(): number {\n    return this.totalRows > this.pageSize ? this.startRow + 1 : this.totalRows === 0 ? 0 : 1;\n  }\n  private get currentRowEnd(): number {\n    return this.startRow + this.pageSize  {\n      // tslint:disable-next-line:forin\n      for (const s in this.searchValue) {\n        const pattern = new RegExp(this.searchValue[s]);\n        if (pattern.test(item[s])) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  get itemsOnCurrentPage(): T[] {\n    return this.itemsFiltered.slice(this.startRow, this.startRow + this.pageSize);\n  }\n\n  /**\n   * Get all headers (column names) and their properties.\n   */\n  public get headers(): DataGridHeaderModel[] {\n    return this._headers.filter((h) => !h.hidden);\n  }\n\n  /**\n   * Returns the columns currently not shown. {@link addColumn and @see removeColumn for more}information.\n   */\n  public get headersNotVisible(): DataGridHeaderModel[] {\n    return this._headers.filter((h) => h.hidden);\n  }\n  /**\n   * The search value filters the rows. Provide the property name and the filter instruction. Search is pure client.\n   */\n  public searchValue: { [prop: string]: any } = {};\n\n  public currentPageIndex = 1;\n  public pageSize: number;\n\n  /**\n   * Event fired if user clicks Edit button.\n   */\n  public onEdit: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired if user clicks Delete button.\n   */\n  public onDelete: EventEmitter = new EventEmitter();\n\n  /**\n   * Current sort direction per column.\n   */\n  public sortDirection: { [column: string]: Direction } = {};\n  private _items: T[];\n\n  private _headers: DataGridHeaderModel[];\n  constructor(items: T[], type: Type, pageSize = 10) {\n    this._items = items;\n    this.pageSize = pageSize;\n    const typeInstance = new type();\n    if (typeInstance) {\n      // make header from decorators, omit if null\n      this.createHeadersForType(typeInstance);\n    }\n  }\n\n  /**\n   * Simple sort fucntion that makes a array sort call for the specified column.\n   * @param colName The column which has to be sorted after.\n   * // tslint:disable-next-line:max-line-length\n   * @param dir The order, descended is *desc*, any other string is ascending.\n   *            If nothing is provided, the direction toggles. Initital value is *ascending*.\n   */\n  public sortColumn(colName: string, dir: Direction, sortCallback?: (a, b) => 1 | -1 | 0) {\n    if (!dir) {\n      // if nothing is provided, toggle current\n      dir = this.sortDirection[colName] === Direction.Ascending ? Direction.Descending : Direction.Ascending;\n    }\n    // remember last and update UI\n    this.sortDirection[colName] = dir;\n    if (sortCallback) {\n      this.items.sort(sortCallback);\n    } else {\n      this.items.sort((a: any, b: any) => {\n        if (dir === Direction.Descending) {\n          return a[colName] > b[colName] ? 1 : -1;\n        } else {\n          return a[colName] > b[colName] ? -1 : 1;\n        }\n      });\n    }\n  }\n\n  /**\n   * Make a column invisible. This is just changing the render process, the column is still\n   * in the headers collection and can be made visible again by calling {@link addColumn}later.\n   */\n  public removeColumn(colname: string) {\n    const col = this._headers.find((h) => h.prop === colname);\n    if (col) {\n      col.hidden = true;\n    }\n  }\n\n  /**\n   * Add a column to the current grid, that has been removed recently.\n   * It's just adding columns that already exists in the headers collection.\n   * If the column name provided does not exists, the method does nothing.\n   */\n  public addColumn(colname: string) {\n    const col = this._headers.find((h) => h.prop === colname);\n    if (col) {\n      col.hidden = false;\n    }\n  }\n\n  /**\n   * Called by infrastructure to inform caller of edit wish\n   * @param item The item to edit\n   */\n  public editItem(item: T) {\n    this.onEdit.emit(item);\n  }\n\n  /**\n   * Called by infrastructure to inform caller of delete wish\n   * @param item The item to delete\n   */\n  public deleteItem(item: T) {\n    this.onDelete.emit(item);\n  }\n\n  private createHeadersForType(type: any): void {\n    // assume simple object structure, iterating an array of viewmodels\n    // has at least one row, so we can read the headers\n    // first we read the properties\n    this._headers = new Array();\n    for (const p in type) {\n      if (!type.hasOwnProperty(p)) {\n        continue;\n      }\n      const propName = Display.Name(type, p, p);\n      const propDesc = Display.Desc(type, p, p);\n      // check if hidden, show if no hidden decorator\n      const isHidden = Hidden.IsHidden(type, p, false);\n      const header = new DataGridHeaderModel(propName, propDesc, p, isHidden);\n      // sorting\n      header.isSortable = type[`__isSortable__${p}`] === undefined ? true : !!type[`__isSortable__${p}`];\n      header.sortCallback = type[`__sortCallback__${p}`] || undefined;\n      // look for templates and pipes provided by user, if none, we have templates for all ES types\n      header.templateHint = type[`__templatehint__${p}`] || typeof type[p];\n      header.templateHintParams = type[`__templatehintParams__${p}`];\n      header.pipe = type[`__uipipe__${p}`];\n      header.pipeParams = type[`__pipeparams__${p}`];\n      header.uiHint = UiHint.HintRule(type, p, {});\n      console.log('Header', header);\n      this._headers.push(header);\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataGridPaginationComponent.html":{"url":"components/DataGridPaginationComponent.html","title":"component - DataGridPaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataGridPaginationComponent\n\n\n\n        \n            API\n        \n        \n            Live Demo\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            Source: Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts\n\n\n    \n        Description\n    \n    \n        The pagination component creates a few buttons to navigate a grid. The underlaying model\nis going to handle the date on the client. The pagination does not support a server backend,\nall relevant data must be loaded first.\nExample of usage:\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    ```html\n * \n * ```\n\n/#/widget/grid\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-datagrid-pagination\n            \n\n            \n                styleUrls\n                ./datagridpagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datagridpagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPageNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                range\n                            \n                            \n                                setCurrentPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                maxPageIndex\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumberChanged\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pageStartNumber\n                                \n                                \n                                    pageEndNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        maxPageIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:27\n                            \n                        \n                \n                    \n                        The parent component calculated the pages the component can handle.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:38\n                            \n                        \n                \n                    \n                        The size for pagination, according bootstrap rules. ('sm' == 'pagination-sm', 'lg' = 'pagination-lg').\nDefault is medium.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageNumberChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:32\n                            \n                        \n                \n                    \n                        An event fired once the user has changed the page by clicking a button.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            range\n                        \n                        \n                    \n                \n            \n            \n                \nrange(min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCurrentPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetCurrentPage(pageNumber: number, event?: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPageNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pageStartNumber\n                    \n                \n\n                \n                    \n                        getpageStartNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pageEndNumber\n                    \n                \n\n                \n                    \n                        getpageEndNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:89\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component, OnInit, OnChanges, SimpleChange, Input, Output, EventEmitter\n} from '@angular/core';\n\n/**\n * The pagination component creates a few buttons to navigate a grid. The underlaying model\n * is going to handle the date on the client. The pagination does not support a server backend,\n * all relevant data must be loaded first.\n *\n * Example of usage:\n * @example\n * ```html\n * \n * ```\n *\n * /#/widget/grid\n */\n@Component({\n  selector: 'ac-datagrid-pagination',\n  styleUrls: ['./datagridpagination.component.scss' ],\n  templateUrl: './datagridpagination.component.html'\n})\nexport class DataGridPaginationComponent implements OnInit, OnChanges {\n  /**\n   * The parent component calculated the pages the component can handle.\n   */\n  @Input() maxPageIndex: number;\n\n  /**\n   * An event fired once the user has changed the page by clicking a button.\n   */\n  @Output() pageNumberChanged = new EventEmitter();\n\n  /**\n   * The size for pagination, according bootstrap rules. ('sm' == 'pagination-sm', 'lg' = 'pagination-lg').\n   * Default is medium.\n   */\n  @Input() size: string;\n\n  currentPageNumber = 1;\n\n  ngOnInit() {\n    this.setCurrentPage(1);\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes['maxPageIndex']) {\n      const change = changes['maxPageIndex'];\n      if (this.currentPageNumber > change.currentValue) {\n        // throws ExpressionChangedAfterItHasBeenCheckedException\n        // if there's no setTimeout.\n        // no need to add setTimeout if ngOnChanges\n        // is fired after changes made on root component.\n        setTimeout(() => this.setCurrentPage(1), 1);\n      }\n    }\n  }\n\n  setCurrentPage(pageNumber: number, event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (pageNumber === 0 || pageNumber > this.maxPageIndex\n      || pageNumber === this.currentPageNumber) {\n      return;\n    }\n\n    this.pageNumberChanged.emit(pageNumber);\n    this.currentPageNumber = pageNumber;\n  }\n\n  range(min: number, max: number): number[] {\n    const result = new Array();\n    for (let i = min; i = this.maxPageIndex - 3\n        ? this.maxPageIndex - 6\n        : this.currentPageNumber - 3;\n    return startNumber  this.maxPageIndex ? this.maxPageIndex : pageEnd;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        «\n      \n    \n    \n      \n        ‹\n      \n    \n    \n      \n        {{ index }}\n      \n    \n    \n      \n        ›\n      \n    \n    \n      \n        »\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./datagridpagination.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    «                            ‹                            {{ index }}                            ›                            »            '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataGridPaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridStyles.html":{"url":"interfaces/DatagridStyles.html","title":"interface - DatagridStyles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridStyles\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        actionCell\n                                \n                                \n                                            Optional\n                                        first\n                                \n                                \n                                            Optional\n                                        footer\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        header\n                                \n                                \n                                            Optional\n                                        headerButton\n                                \n                                \n                                            Optional\n                                        headerRemoveButton\n                                \n                                \n                                            Optional\n                                        headerSortButton\n                                \n                                \n                                            Optional\n                                        last\n                                \n                                \n                                            Optional\n                                        middle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionCell\n                                    \n                                \n                                \n                                    \n                                        actionCell:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                    \n                                \n                                \n                                    \n                                        footer:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerButton\n                                    \n                                \n                                \n                                    \n                                        headerButton:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerRemoveButton\n                                    \n                                \n                                \n                                    \n                                        headerRemoveButton:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerSortButton\n                                    \n                                \n                                \n                                    \n                                        headerSortButton:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middle\n                                    \n                                \n                                \n                                    \n                                        middle:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type StyleRules = { [name: string]: string };\n\nexport interface DatagridStyles {\n  first?: StyleRules;\n  middle?: StyleRules;\n  last?: StyleRules;\n  group?: StyleRules;\n  header?: StyleRules;\n  headerButton?: StyleRules;\n  headerSortButton?: StyleRules;\n  headerRemoveButton?: StyleRules;\n  footer?: StyleRules;\n  actionCell?: StyleRules;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorComponent.html":{"url":"components/EditorComponent.html","title":"component - EditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorComponent\n\n\n\n        \n            API\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            Source: Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/editors/editor/editor.component.ts\n\n\n    \n        Description\n    \n    \n        The Editor Widget. Creates a field with all required validators using decorators and forms service.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-editor\n            \n\n\n            \n                styles\n                input[type=\"checkbox\"] { display: none; },input[type=\"checkbox\"] + label:before { font-family: FontAwesome; },input[type=\"checkbox\"] + label:before { content: \"\\f096\"; },input[type=\"checkbox\"]:checked + label:before { content: \"\\f046\"; },\n      input[type='checkbox'] + label {\n        display: inline-block;\n        width: 15px;\n        height: 20px;\n        margin: -1px 4px 0 0;\n        vertical-align: middle;\n        cursor: pointer;\n      }\n    \n            \n\n\n            \n                templateUrl\n                ./editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errors\n                            \n                            \n                                    Public\n                                params\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                first\n                            \n                            \n                                    Public\n                                getParams\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                onValueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enumValues\n                            \n                            \n                                formGroup\n                            \n                            \n                                fromValue\n                            \n                            \n                                inline\n                            \n                            \n                                label\n                            \n                            \n                                labelDivider\n                            \n                            \n                                listValues\n                            \n                            \n                                name\n                            \n                            \n                                readonly\n                            \n                            \n                                tooltip\n                            \n                            \n                                toValue\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                            \n                                waterMark\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:92\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enumValues\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:60\n                            \n                        \n                \n                    \n                        The values of the select field provided by an enum. For other fieldtypes it's being ignored.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:51\n                            \n                        \n                \n                    \n                        The form's group object.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fromValue\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:69\n                            \n                        \n                \n                    \n                        The start value for a range field. Other field types ignore this value.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        inline\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:56\n                            \n                        \n                \n                    \n                        If set to true the label and the field appears in one row.\nOtherwise the label is above the field. Default is true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:43\n                            \n                        \n                \n                    \n                        The label's name.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelDivider\n                    \n                \n                \n                    \n                        Default value : ': '\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:39\n                            \n                        \n                \n                    \n                        A character after the fields label. Default is ': ' (colon plus space);\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listValues\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:65\n                            \n                        \n                \n                    \n                        The values of the select field provided by a list. For other fieldtypes it's being ignored.\nThe value shall be an Array that a *ngFor directive can execute.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:31\n                            \n                        \n                \n                    \n                        Field name\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:81\n                            \n                        \n                \n                    \n                        Renders the field as read only.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:47\n                            \n                        \n                \n                    \n                        A tooltip\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toValue\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:73\n                            \n                        \n                \n                    \n                        The end value for a range field. Other field types ignore this value.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:35\n                            \n                        \n                \n                    \n                        Editor type. Default is 'text';\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:87\n                            \n                        \n                \n                    \n                        The value set to and read from the field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        waterMark\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:77\n                            \n                        \n                \n                    \n                        An optional placeholder for empty field. The default is empty (no watermark).\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            first\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    first(array: Array, n: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParams(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onValueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onValueChanged(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/editor.component.ts:90\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n/**\n * The Editor Widget. Creates a field with all required validators using decorators and forms service.\n */\n@Component({\n  selector: 'ac-editor',\n  styles: [\n    'input[type=\"checkbox\"] { display: none; }',\n    'input[type=\"checkbox\"] + label:before { font-family: FontAwesome; }',\n    'input[type=\"checkbox\"] + label:before { content: \"\\\\f096\"; }',\n    'input[type=\"checkbox\"]:checked + label:before { content: \"\\\\f046\"; }',\n    `\n      input[type='checkbox'] + label {\n        display: inline-block;\n        width: 15px;\n        height: 20px;\n        margin: -1px 4px 0 0;\n        vertical-align: middle;\n        cursor: pointer;\n      }\n    `\n  ],\n  templateUrl: './editor.component.html'\n}) //\nexport class EditorComponent implements OnInit {\n  /**\n   * Field name\n   */\n  @Input() public name: string;\n  /**\n   * Editor type. Default is 'text';\n   */\n  @Input() public type = 'text';\n  /**\n   * A character after the fields label. Default is ': ' (colon plus space);\n   */\n  @Input() public labelDivider = ': ';\n  /**\n   * The label's name.\n   */\n  @Input() public label: string;\n  /**\n   * A tooltip\n   */\n  @Input() public tooltip: string;\n  /**\n   * The form's group object.\n   */\n  @Input() public formGroup: FormGroup;\n  /**\n   * If set to true the label and the field appears in one row.\n   * Otherwise the label is above the field. Default is `true`.\n   */\n  @Input() public inline = true;\n  /**\n   * The values of the select field provided by an enum. For other fieldtypes it's being ignored.\n   */\n  @Input() public enumValues: any;\n  /**\n   * The values of the select field provided by a list. For other fieldtypes it's being ignored.\n   * The value shall be an Array that a `*ngFor` directive can execute.\n   */\n  @Input() public listValues: any[];\n  /**\n   * The start value for a range field. Other field types ignore this value.\n   */\n  @Input() public fromValue = 0;\n  /**\n   * The end value for a range field. Other field types ignore this value.\n   */\n  @Input() public toValue = 100;\n  /**\n   * An optional placeholder for empty field. The default is empty (no watermark).\n   */\n  @Input() public waterMark = '';\n  /**\n   * Renders the field as read only.\n   */\n  @Input() public readonly = false;\n  /**\n   * The value set to and read from the field.\n   */\n  @Output()\n  @Input()\n  public value: any;\n\n  // additional values provided by TemplateHint decorator\n  public params: Array;\n\n  public errors: string[];\n\n  constructor() {\n    this.params = new Array();\n  }\n\n  public getParams(key: string): any {\n    return this.first(this.params.filter((e) => e.key === key), 0);\n  }\n\n  public first(array: Array, n: number): any {\n    if (array == null) {\n      return void 0;\n    }\n    if (n == null) {\n      return array[0];\n    }\n    if (n  this.onValueChanged(data));\n    // this is set by FormValidatorService\n    const editorModel = (this.formGroup as any).__editorModel__;\n    // get type from form\n    if (editorModel) {\n      // get elementary types, this might get overwritten later according to decorators found\n      if (typeof editorModel[this.name] === 'string') {\n        this.type = 'text';\n      }\n      if (typeof editorModel[this.name] === 'boolean') {\n        this.type = 'boolean';\n      }\n      if (typeof editorModel[this.name] === 'number') {\n        this.type = 'number';\n      }\n      if (editorModel[this.name] instanceof Date) {\n        this.type = 'calendar';\n      }\n      // make an instance to read the properties\n      this.label = editorModel[`__displayName__${this.name}`] || this.label || this.name;\n      this.tooltip = editorModel[`__displayDesc__${this.name}`] || this.tooltip || this.name;\n      // render as range id there is a range definition\n      if (editorModel[`__hasRangeFrom__${this.name}`] && Number(editorModel[`__hasRangeFrom__${this.name}`])) {\n        this.fromValue = editorModel[`__hasRangeFrom__${this.name}`] as number;\n        this.type = 'range';\n      }\n      if (editorModel[`__hasRangeTo__${this.name}`] && Number(editorModel[`__hasRangeTo__${this.name}`])) {\n        this.toValue = editorModel[`__hasRangeTo__${this.name}`] as number;\n        this.type = 'range';\n      }\n      // placeholder\n      if (editorModel[`__hasWatermark__${this.name}`]) {\n        this.waterMark = editorModel[`__watermark__${this.name}`];\n      }\n      // templates\n      if (editorModel[`__hasTemplateHint__${this.name}`]) {\n        this.type = (editorModel[`__templatehint__${this.name}`] as string).toLowerCase();\n        if (editorModel[`__templatehintParams__${this.name}`]) {\n          this.params = editorModel[`__templatehintParams__${this.name}`] as Array;\n        }\n      }\n\n      // render hidden fields as hidden even in forms\n      if (editorModel[`__isHidden__${this.name}`]) {\n        this.type = 'hidden';\n      }\n      // check readonly\n      if (editorModel[`__isReadonly__${this.name}`]) {\n        this.readonly = !!editorModel[`__isReadonly__${this.name}`];\n      }\n    }\n  }\n\n  private onValueChanged(data: any) {\n    // check validation on change\n    this.errors = new Array();\n    // tslint:disable-next-line:forin\n    for (const error in this.formGroup.controls[this.name].errors) {\n      this.errors.push(error);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ label }}{{ labelDivider }} \n  \n    \n    \n    \n      {{option.val}}\n    \n    \n      {{option.val}}\n    \n    \n    \n    \n    \n    \n    \n    \n        \n    \n    \n    \n    {{ formGroup.controls[name]['messages'][error] }}\n    \n  \n\n\n  \n\n\n    \n\n    \n            input[type=\"checkbox\"] { display: none; }\ninput[type=\"checkbox\"] + label:before { font-family: FontAwesome; }\ninput[type=\"checkbox\"] + label:before { content: \"\\f096\"; }\ninput[type=\"checkbox\"]:checked + label:before { content: \"\\f046\"; }\n\n      input[type='checkbox'] + label {\n        display: inline-block;\n        width: 15px;\n        height: 20px;\n        margin: -1px 4px 0 0;\n        vertical-align: middle;\n        cursor: pointer;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}{{ labelDivider }}                     {{option.val}}              {{option.val}}                                                        {{ formGroup.controls[name][\\'messages\\'][error] }}        '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormValidatorModel.html":{"url":"interfaces/FormValidatorModel.html","title":"interface - FormValidatorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormValidatorModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/formvalidator.model.ts\n        \n\n            \n                Description\n            \n            \n                The form description model. Use this to have a valid JSON object that can be used\ninstead of the decorators. Each type represents a single decorator. The basic\nstructure looks like this:\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [field: string]:        displayType | displayGroupType | formatType | hiddenType | placeHolderType | compareType | maxlengthType | minlengthType | patternType | stringLengthType | emailType | requiredType\n\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/services/formvalidator.model.ts:184\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export type displayGroupType = {\n  displaygroup: {\n    name: string;\n    order?: number;\n    description?: string;\n  };\n};\n\n/**\n * This element describes the UI elements label, tooltip, and order.\n */\nexport type displayType = {\n  display: {\n    name: string;\n    order?: number;\n    description?: string;\n  };\n};\n\n/**\n * A pipe driven formatting instruction.\n */\nexport type formatType = {\n  format: {\n    pipeName: any;\n    pipeParams?: any[];\n  };\n};\n/**\n * The field will not appear in autoforms if decorated as hidden. If the parameter\n * is omitted the type returns true due to its pure existence.\n */\nexport type hiddenType = {\n  hidden?: boolean;\n};\n/**\n * A watermark can be applied. The {@link name property is the value that}appears\n * in the field. This may not work for specific controls, such as list boxes.\n */\nexport type placeHolderType = {\n  placeholder: {\n    name: string;\n  };\n};\n/**\n * The field in rendered as readonly, if possible.\n */\nexport type readonlyType = {\n  readonly: boolean;\n};\n/**\n * This controls the actual control type. The default values are (TypeScript type: decorator type: rendered element):\n *\n * * string: text: &lt;input type=\"text\"&gt;\n * * date: calendar: &lt;input type=\"date\"&gt;\n * * boolean: boolean: &lt;input type=\"checkbox\"&gt;\n * * number: number: &lt;input type=\"number\"&gt;\n *\n * This is the formatting that's autoamtically applied. The template hint goes after and can change any of these values.\n * The allows values are:\n *\n * * any: textarea: &lt;textarea&gt;\n * * array: enum:  &lt;select&gt;\n * * array: list: &lt;select&gt;\n * * any: template: The content of the editor element (does not work with &lt;ac-autoform&gt;)\n *\n */\nexport type templateHintType = {\n  templatehint: {\n    hint: string;\n  };\n};\n\n/**\n * Base type for validators.\n *\n * Give a private error message in @param msg. If omitted a error message will be generated.\n * Set to active by using @param active. Default is true.\n * Active i18n by using the @param translate. The translation module must be used separately.\n */\nexport type validatorType = {\n  msg?: string;\n  active?: boolean;\n  translate?: boolean;\n};\n/**\n * Compare to fields.\n */\nexport type compareType = {\n  compare:\n    | {\n        fieldToCompare: string;\n      }\n    | validatorType;\n};\n/**\n * Email\n */\nexport type emailType = {\n  email: validatorType;\n};\n/**\n * Maximum allowed length (string only)\n */\nexport type maxlengthType = {\n  maxlength:\n    | {\n        max: number;\n      }\n    | validatorType;\n};\n/**\n * Minimum allowed length (string only)\n */\nexport type minlengthType = {\n  minlength:\n    | {\n        min: number;\n      }\n    | validatorType;\n};\n/**\n * Any regex pattern\n */\nexport type patternType = {\n  pattern:\n    | {\n        pattern: string | RegExp;\n      }\n    | validatorType;\n};\n/**\n * A range for number or Date only.\n */\nexport type rangeType = {\n  range:\n    | {\n        from: number | Date;\n        to: number | Date;\n      }\n    | validatorType;\n};\n/**\n * This field is mandatory.\n */\nexport type requiredType = {\n  required: validatorType;\n};\n/**\n * Maximal and minimal allowed length (string only).\n */\nexport type stringLengthType = {\n  stringlength:\n    | {\n        min: number;\n        max: number;\n      }\n    | validatorType;\n};\n\n/**\n * The form description model. Use this to have a valid JSON object that can be used\n * instead of the decorators. Each type represents a single decorator. The basic\n * structure looks like this:\n *\n * @example {\n *            \"fieldName\": {\n *               \"display\": {\n *                  \"name\": \"The field's human readible name\"\n *               }\n *            }\n *          }\n *\n * See the different type's descriptions for detailled information.\n *\n */\nexport interface FormValidatorModel {\n  [field: string]:\n    | displayType\n    | displayGroupType\n    | formatType\n    | hiddenType\n    | placeHolderType\n    | compareType\n    | maxlengthType\n    | minlengthType\n    | patternType\n    | stringLengthType\n    | emailType\n    | requiredType;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormValidatorService.html":{"url":"injectables/FormValidatorService.html","title":"injectable - FormValidatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormValidatorService\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/formvalidator.service.ts\n        \n\n            \n                Description\n            \n            \n                The form validator service creates a FormGroup object from a viewmodel. If the viewmodel\nhas been decorated with validation decorators the validators are created accordingly.\nThe simplest way is creating a class with properties and add decorators, such as\nThe service will than create a @see FormGroup that contains avalidator\nof type for the property the decorator is writtenon.\nThe decorators provide properties for additional information, such as a custom error message.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/services/formvalidator.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build(target: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/services/formvalidator.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/services/formvalidator.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\n\nimport { validateRange } from './validators/range.validator';\nimport { validateCompare } from './validators/compare.validator';\n\n/**\n * The form validator service creates a FormGroup object from a viewmodel. If the viewmodel\n * has been decorated with validation decorators the validators are created accordingly.\n *\n * The simplest way is creating a class with properties and add decorators, such as\n * {@link StringLength. The service will than create a @see FormGroup that contains a}validator\n * of type {@link StringLength for the property the decorator is written}on.\n *\n * The decorators provide properties for additional information, such as a custom error message.\n *\n */\n@Injectable()\nexport class FormValidatorService {\n  private fb: FormBuilder;\n\n  constructor(@Inject(FormBuilder) fb: FormBuilder) {\n    this.fb = fb;\n  }\n\n  public build(target: any): FormGroup {\n    const valGroup: any = {};\n    const errGroup: any = {};\n    let form: FormGroup;\n    let targetInstance: any;\n    if (target) {\n      // the cast is just to suppress TS errors and shows it's intentionally\n      try {\n        targetInstance = new target();\n      } catch (ex) {\n        console.error('Invalid viewmodel for FormValidatorService');\n      }\n    }\n    if (targetInstance) {\n      // tslint:disable-next-line:forin\n      for (const propName in targetInstance) {\n        const validators = new Array();\n        const errmsgs = new Object();\n        const isRequired = `__isRequired__${propName}` in target.prototype;\n        if (isRequired) {\n          (errmsgs)['required'] = target.prototype[`__errRequired__${propName}`];\n          validators.push(Validators.required);\n        }\n        const hasMaxLength = `__hasMaxLength__${propName}` in target.prototype;\n        if (hasMaxLength) {\n          (errmsgs)['maxlength'] = target.prototype[`__errMaxLength__${propName}`];\n          const maxLength = parseInt(target.prototype[`__hasMaxLength__${propName}`], 10);\n          validators.push(Validators.maxLength(maxLength));\n        }\n        const hasMinLength = `__hasMinLength__${propName}` in target.prototype;\n        if (hasMinLength) {\n          (errmsgs)['minlength'] = target.prototype[`__errMinLength__${propName}`];\n          const minLength = parseInt(target.prototype[`__hasMinLength__${propName}`], 10);\n          validators.push(Validators.minLength(minLength));\n        }\n        const hasPattern = `__hasPattern__${propName}` in target.prototype;\n        if (hasPattern) {\n          (errmsgs)['pattern'] = target.prototype[`__errPattern__${propName}`];\n          const pattern = new RegExp(target.prototype[`__hasPattern__${propName}`]);\n          validators.push(Validators.pattern(pattern));\n        }\n        const hasRangeFrom = `__hasRangeFrom__${propName}` in target.prototype;\n        const hasRangeTo = `__hasRangeTo__${propName}` in target.prototype;\n        if (hasRangeFrom || hasRangeTo) {\n          (errmsgs)['range'] = target.prototype[`__errRange__${propName}`];\n          let f: number | Date = Number(target.prototype[`__hasRangeFrom__${propName}`]);\n          let t: number | Date = Number(target.prototype[`__hasRangeTo__${propName}`]);\n          if (!f && !t) {\n            // If NaN assume Date\n            f = Date.parse(f.toString());\n            t = Date.parse(t.toString());\n          }\n          validators.push(validateRange(f, t));\n        }\n        const hasCompare = `__hasCompareProperty__${propName}` in target.prototype;\n        if (hasCompare) {\n          (errmsgs)['compare'] = target.prototype[`__errCompareProperty__${propName}`];\n          const compare = target.prototype[`__withCompare__${propName}`];\n          validators.push(validateCompare(compare));\n        }\n        if (validators.length === 0) {\n          // even if there is no validator we need to add the property to the group\n          (valGroup)[propName] = [target[propName]];\n        }\n        if (validators.length === 1) {\n          (valGroup)[propName] = [target[propName] || '', validators[0]];\n        }\n        if (validators.length >= 1) {\n          (valGroup)[propName] = [target[propName] || '', Validators.compose(validators)];\n        }\n        (errGroup)[propName] = errmsgs;\n      }\n      // create form group\n      form = this.fb.group(valGroup);\n      // forward the model to the editors for easy access to other decorators\n      // the cast is just to suppress TS errors and shows it's intentionally\n      (form)['__editorModel__'] = targetInstance;\n      // register controls and add messages\n      // tslint:disable-next-line:forin\n      for (const propName in errGroup) {\n        const ctrl = form.controls[propName];\n        if (!ctrl) {\n          continue; // control might not be in the form\n        }\n        (form.controls[propName])['messages'] = (errGroup)[propName];\n      }\n    }\n    // return FormGroup for immediate usage\n    return form;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FormatDataPipe.html":{"url":"pipes/FormatDataPipe.html","title":"pipe - FormatDataPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FormatDataPipe\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe allows the dynamic formatting of data. It is just for internal use.\nThe purpose is the forwarding of an externally defined pipe to the pipe formatter within the grid.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        formatData\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, pipeToken: Type, pipeArgs: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pipeToken\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pipeArgs\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injector, Pipe, PipeTransform, Type } from '@angular/core';\n\n/**\n * This pipe allows the dynamic formatting of data. It is just for internal use.\n * The purpose is the forwarding of an externally defined pipe to the pipe formatter within the grid.\n */\n@Pipe({\n  name: 'formatData'\n})\nexport class FormatDataPipe implements PipeTransform {\n  public constructor(private injector: Injector) {}\n\n  transform(value: any, pipeToken: Type, pipeArgs: any[]): any {\n    if (!pipeToken) {\n      console.log('FormatDataPipe:NoPipeToken');\n      return value;\n    } else {\n      console.log('FormatDataPipe:PipeToken:', pipeToken);\n      const pipe = this.injector.get(pipeToken);\n      return pipe.transform(value, ...pipeArgs || []);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ObjectConstructor.html":{"url":"interfaces/ObjectConstructor.html","title":"interface - ObjectConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ObjectConstructor\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/utils/object-extensions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    equals\n                                \n                                \n                                    same\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \nequals(x: any, y: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/utils/object-extensions.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            same\n                        \n                        \n                    \n                \n            \n            \n                \nsame(x: any, y: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/utils/object-extensions.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        declare interface ObjectConstructor {\n  equals(x: any, y: any): boolean;\n  same(x: any, y: any): boolean;\n}\n\nObject.same = function (source, target): boolean {\n  if (source === target) {\n    return true;\n  }\n  if (!(source instanceof Object) || !(target instanceof Object)) { return false; }\n  // if they are not strictly equal, they both need to be Objects\n  for (const prop in source) {\n    if (!source.hasOwnProperty(prop)) { continue; }\n    if (source[prop] === undefined || source[prop] === null || source[prop] === '') { continue; }\n    if (typeof source[prop] === 'object' && Object.same(source[prop], target[prop])) { continue; }\n\n    if (typeof source[prop] === 'string' && target[prop].startsWith(source[prop])) { continue; }\n    if (source[prop] === target[prop]) { continue; }\n\n    return false;\n  }\n\n  return true;\n};\n\nObject.equals = function (x: any, y: any): boolean {\n  if (x === y) { return true; }\n  // if both x and y are null or undefined and exactly the same\n\n  if (!(x instanceof Object) || !(y instanceof Object)) { return false; }\n  // if they are not strictly equal, they both need to be Objects\n\n  if (x.constructor !== y.constructor) { return false; }\n  // they must have the exact same prototype chain, the closest we can do is\n  // test there constructor.\n\n  for (const p in x) {\n    if (!x.hasOwnProperty(p)) { continue; }\n    // other properties were tested using x.constructor === y.constructor\n\n    if (!y.hasOwnProperty(p)) { return false; }\n    // allows to compare x[ p ] and y[ p ] when set to undefined\n\n    if (x[p] === y[p]) { continue; }\n    // if they have the same strict value or identity then they are equal\n\n    if (typeof (x[p]) !== 'object') { return false; }\n    // Numbers, Strings, Functions, Booleans must be strictly equal\n\n    if (!Object.equals(x[p], y[p])) { return false; }\n    // Objects and Arrays must be tested recursively\n  }\n\n  for (const p in y) {\n    if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) { return false; }\n    // allows x[ p ] to be set to undefined\n  }\n  return true;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SvogvModule.html":{"url":"modules/SvogvModule.html","title":"module - SvogvModule","body":"\n                   \n\n\n\n\n    Modules\n    SvogvModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SvogvModule\n\n\n\ncluster_SvogvModule_declarations\n\n\n\ncluster_SvogvModule_providers\n\n\n\n\nwd.FormatDataPipe\n\nwd.FormatDataPipe\n\n\n\nSvogvModule\n\nSvogvModule\n\nSvogvModule -->\n\nwd.FormatDataPipe->SvogvModule\n\n\n\n\n\nFormValidatorService\n\nFormValidatorService\n\nSvogvModule -->\n\nFormValidatorService->SvogvModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API\n    \n    \n        Source: Code\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/svogv/src/lib/svogv.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The actual SVOGV Module definition using the root module.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            wd.FormatDataPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormValidatorService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/svogv.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport * as wd from './widgets/index';\n\nimport { FormValidatorService } from './services/formvalidator.service';\n// import { FormValidatorFromJsonService } from './services/formvalidator-fromjson.service';\n\nconst SVOGV_COMPONENTS = [\n  wd.DataGridComponent,\n  wd.DataGridPaginationComponent,\n  wd.TreeViewComponent,\n  wd.TreeViewNodeComponent,\n  wd.EditorComponent,\n  wd.AutoFormComponent\n];\n\nconst provider = [FormValidatorService]; // , FormValidatorFromJsonService];\n\n/**\n * The actual SVOGV Module definition using the root module.\n */\n@NgModule({\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, FormsModule],\n  declarations: [...SVOGV_COMPONENTS, wd.FormatDataPipe],\n  providers: provider,\n  exports: SVOGV_COMPONENTS\n})\nexport class SvogvModule {\n\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SvogvModule,\n      providers: provider\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextTreeNodeModel.html":{"url":"classes/TextTreeNodeModel.html","title":"class - TextTreeNodeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextTreeNodeModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts\n        \n\n            \n                Description\n            \n            \n                A text node\n\n            \n\n            \n                Extends\n            \n            \n                        TreeNodeModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                            \n                                    Private\n                                _state\n                            \n                            \n                                children\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parent\n                            \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                hasDirectAncestor\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[])\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        TreeNodeModel | TreeNodeModel[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeState\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:20\n\n                            \n                        \n\n                \n                    \n                        Subsequent nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:28\n\n                            \n                        \n\n                \n                    \n                        Field id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:24\n\n                            \n                        \n\n                \n                    \n                        An identifier.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:12\n\n                            \n                        \n\n                \n                    \n                        Control appearance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:16\n\n                            \n                        \n\n                \n                    \n                        structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:32\n\n                            \n                        \n\n                \n                    \n                        behavior\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(nodes: TreeNodeModel | TreeNodeModel[])\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                TreeNodeModel | TreeNodeModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TreeNodeOptions } from './treenodeoptions.model';\nimport { TreeNodeModel } from './treenode.model';\n\n/**\n * A text node\n */\nexport class TextTreeNodeModel extends TreeNodeModel {\n    text: string;\n\n    constructor(text: string, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n        super(options, nodes);\n        this.text = text;\n        this.name = text; // default, must be set explicitly\n    }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeNodeBaseModel.html":{"url":"interfaces/TreeNodeBaseModel.html","title":"interface - TreeNodeBaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeNodeBaseModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts\n        \n\n            \n                Description\n            \n            \n                The base class.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        options\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                                \n                                    hasDirectAncestor\n                                \n                                \n                                    remove\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(node: TreeNodeBaseModel | TreeNodeBaseModel[])\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel | TreeNodeBaseModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         TreeNodeBaseModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNodeBaseModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         TreeNodeOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNodeOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         TreeNodeBaseModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNodeBaseModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TreeNodeOptions } from './treenodeoptions.model';\n\n/**\n * The base class.\n */\nexport interface TreeNodeBaseModel {\n    parent: TreeNodeBaseModel;\n    children: TreeNodeBaseModel[];\n    options: TreeNodeOptions;\n    add(node: TreeNodeBaseModel | TreeNodeBaseModel[]): void;\n    remove(node: TreeNodeBaseModel): boolean;\n    hasDirectAncestor(node: TreeNodeBaseModel): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeComponentModel.html":{"url":"classes/TreeNodeComponentModel.html","title":"class - TreeNodeComponentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeComponentModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts\n        \n\n            \n                Description\n            \n            \n                This type can load a component's UI into the node.\n\n            \n\n            \n                Extends\n            \n            \n                        TreeNodeModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                    Private\n                                _state\n                            \n                            \n                                children\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parent\n                            \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                hasDirectAncestor\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(component: Type, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[])\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        TreeNodeModel | TreeNodeModel[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeState\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:20\n\n                            \n                        \n\n                \n                    \n                        Subsequent nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:28\n\n                            \n                        \n\n                \n                    \n                        Field id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:24\n\n                            \n                        \n\n                \n                    \n                        An identifier.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:12\n\n                            \n                        \n\n                \n                    \n                        Control appearance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:16\n\n                            \n                        \n\n                \n                    \n                        structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:32\n\n                            \n                        \n\n                \n                    \n                        behavior\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(nodes: TreeNodeModel | TreeNodeModel[])\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                TreeNodeModel | TreeNodeModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type, Component } from '@angular/core';\nimport { TreeNodeOptions } from './treenodeoptions.model';\nimport { TreeNodeModel } from './treenode.model';\n\n/**\n * This type can load a component's UI into the node.\n */\nexport class TreeNodeComponentModel extends TreeNodeModel {\n    component: Type;\n    constructor(component: Type, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n        super(options, nodes);\n        this.component = component;\n    }\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeModel.html":{"url":"classes/TreeNodeModel.html","title":"class - TreeNodeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts\n        \n\n            \n                Description\n            \n            \n                The base class for tree nodes.\n\n            \n\n\n            \n                Implements\n            \n            \n                            TreeNodeBaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _state\n                            \n                            \n                                children\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parent\n                            \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                hasDirectAncestor\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    path\n                                \n                                \n                                    hasChildren\n                                \n                                \n                                    state\n                                \n                                \n                                    stateIsExpandend\n                                \n                                \n                                    stateIsDisabled\n                                \n                                \n                                    stateIsSelected\n                                \n                                \n                                    stateIsChecked\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: tree.TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[])\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        tree.TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        TreeNodeModel | TreeNodeModel[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeState\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:20\n                            \n                        \n\n                \n                    \n                        Subsequent nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:28\n                            \n                        \n\n                \n                    \n                        Field id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:24\n                            \n                        \n\n                \n                    \n                        An identifier.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:12\n                            \n                        \n\n                \n                    \n                        Control appearance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:16\n                            \n                        \n\n                \n                    \n                        structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:32\n                            \n                        \n\n                \n                    \n                        behavior\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(nodes: TreeNodeModel | TreeNodeModel[])\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                TreeNodeModel | TreeNodeModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n\n                \n                    \n                        getpath()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasChildren\n                    \n                \n\n                \n                    \n                        gethasChildren()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:87\n                                \n                            \n\n                \n                    \n                        setstate(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:90\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsExpandend\n                    \n                \n\n                \n                    \n                        getstateIsExpandend()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsDisabled\n                    \n                \n\n                \n                    \n                        getstateIsDisabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsSelected\n                    \n                \n\n                \n                    \n                        getstateIsSelected()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:107\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsChecked\n                    \n                \n\n                \n                    \n                        getstateIsChecked()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:111\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport * as tree from './treenodeoptions.model';\nimport { TreeNodeBaseModel } from './treenodebase.model';\n\n/**\n * The base class for tree nodes.\n */\nexport class TreeNodeModel implements TreeNodeBaseModel {\n  /**\n   * Control appearance\n   */\n  options: tree.TreeNodeOptions;\n  /**\n   * structure\n   */\n  parent: TreeNodeModel;\n  /**\n   * Subsequent nodes.\n   */\n  children: TreeNodeModel[];\n  /**\n   * An identifier.\n   */\n  name: string;\n  /**\n   * Field id\n   */\n  id: number;\n  /**\n   * behavior\n   */\n  stateChange: EventEmitter;\n\n  private _state: tree.TreeNodeState;\n\n  constructor(options?: tree.TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n    this.options = options || new tree.TreeNodeOptions();\n    if (nodes && nodes instanceof Array) {\n      this.children = nodes;\n    } else {\n      if (nodes) {\n        this.children = [nodes];\n      }\n    }\n    this.stateChange = new EventEmitter();\n    this.state = tree.TreeNodeState.undefined;\n  }\n\n  get path(): Array {\n    // walk up tree and return path with names\n    const p: Array = new Array();\n    p.push(this);\n    let n: TreeNodeModel = this;\n    while (this.parent) {\n      n = n.parent;\n      p.push(n);\n    }\n    return p;\n  }\n\n  hasDirectAncestor(node: TreeNodeBaseModel): boolean {\n    return this.parent !== undefined;\n  }\n\n  get hasChildren(): boolean {\n    return this.children !== undefined && this.children.length > 0;\n  }\n\n  add(nodes: TreeNodeModel | TreeNodeModel[]): void {\n    if (nodes && nodes instanceof Array) {\n      this.children.push(...(nodes));\n    } else {\n      this.children.push(nodes);\n    }\n  }\n\n  remove(node: TreeNodeModel): boolean {\n    const idx: number = this.children.indexOf(node);\n    if (idx > -1) {\n      this.children.splice(idx, 1);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get state(): tree.TreeNodeState {\n    return this._state;\n  }\n  set state(value: tree.TreeNodeState) {\n    this._state = value;\n    if (!this.hasChildren && (this.state & tree.TreeNodeState.expanded) === tree.TreeNodeState.expanded) {\n      // if an expandable event occurs and there a no children, don't fire\n      return;\n    }\n    this.stateChange.emit(this._state);\n  }\n\n  get stateIsExpandend(): boolean {\n    return (this.state & tree.TreeNodeState.expanded) === tree.TreeNodeState.expanded;\n  }\n\n  get stateIsDisabled(): boolean {\n    return (this.state & tree.TreeNodeState.disabled) === tree.TreeNodeState.disabled;\n  }\n\n  get stateIsSelected(): boolean {\n    return (this.state & tree.TreeNodeState.selected) === tree.TreeNodeState.selected;\n  }\n\n  get stateIsChecked(): boolean {\n    return (this.state & tree.TreeNodeState.checked) === tree.TreeNodeState.checked;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeOptions.html":{"url":"classes/TreeNodeOptions.html","title":"class - TreeNodeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeOptions\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts\n        \n\n            \n                Description\n            \n            \n                The view options of node\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backColor\n                            \n                            \n                                checkable\n                            \n                            \n                                collapsable\n                            \n                            \n                                color\n                            \n                            \n                                href\n                            \n                            \n                                icon\n                            \n                            \n                                iconColor\n                            \n                            \n                                selectable\n                            \n                            \n                                selectedIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: TreeNodeOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:27\n                            \n                        \n\n                \n                    \n                        backColor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33\n                            \n                        \n\n                \n                    \n                        Node can be checked \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapsable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:17\n                            \n                        \n\n                \n                    \n                        Show the expand icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:25\n                            \n                        \n\n                \n                    \n                        Text color \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            href\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:29\n                            \n                        \n\n                \n                    \n                        A hyperlink \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:19\n                            \n                        \n\n                \n                    \n                        An additional icon, must be a fontawesome class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:21\n                            \n                        \n\n                \n                    \n                        An additional icon's primary color \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:31\n                            \n                        \n\n                \n                    \n                        Node can be selected \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:23\n                            \n                        \n\n                \n                    \n                        An additional icon on select \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum TreeNodeState {\n    undefined = 0,\n    checked = 1 \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeViewComponent.html":{"url":"components/TreeViewComponent.html","title":"component - TreeViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeViewComponent\n\n\n\n        \n            API\n        \n        \n            Live Demo\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            Source: Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/treeview/treeview.component.ts\n\n\n    \n        Description\n    \n    \n        The treeview can held any tree of nodes, which can be styles, linked, and bound to events.\nClicking on the items fires various events.\nThe component creates a treeview that can handle objects that create text, checkboxes, orhighlights.\nA node can have an icon. The icons are based on FontAwesome's css classes.\nExample of usage:\n/#/widget/tree\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-tree\n            \n\n\n            \n                styles\n                .treeview { list-style: none; margin-left: -25px; }\n            \n\n\n            \n                templateUrl\n                ./treeview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCheckChanged\n                            \n                            \n                                onCollapseChanged\n                            \n                            \n                                onNodeClick\n                            \n                            \n                                onSelectedChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkChanged\n                            \n                            \n                                collapseChanged\n                            \n                            \n                                nodeClick\n                            \n                            \n                                selectedChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        nodes\n                    \n                \n                \n                    \n                        Type :         TreeNodeModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checkChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        collapseChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonCheckChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCollapseChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonCollapseChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNodeClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNodeClick(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectedChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectedChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { TreeNodeModel } from './models';\n\n/**\n * The treeview can held any tree of nodes, which can be styles, linked, and bound to events.\n * Clicking on the items fires various events.\n *\n * The component creates a treeview that can handle {@link TreeNodeModel objects that create text, checkboxes, or}highlights.\n * A node can have an icon. The icons are based on FontAwesome's css classes.\n *\n * Example of usage:\n * /#/widget/tree\n */\n@Component({\n    selector: 'ac-tree',\n    templateUrl: './treeview.component.html',\n    styles: ['.treeview { list-style: none; margin-left: -25px; }']\n}) //\nexport class TreeViewComponent {\n    @Input() nodes: TreeNodeModel;\n    @Output() nodeClick: EventEmitter = new EventEmitter();\n    @Output() checkChanged: EventEmitter = new EventEmitter();\n    @Output() selectedChanged: EventEmitter = new EventEmitter();\n    @Output() collapseChanged: EventEmitter = new EventEmitter();\n\n    constructor() {\n\n    }\n\n    onNodeClick(node: TreeNodeModel) {\n        this.nodeClick.emit(node);\n    }\n\n    onCheckChanged(node: TreeNodeModel) {\n        this.checkChanged.emit(node);\n    }\n\n    onSelectedChanged(node: TreeNodeModel) {\n        this.selectedChanged.emit(node);\n    }\n\n    onCollapseChanged(node: TreeNodeModel) {\n        this.collapseChanged.emit(node);\n    }\n\n}\n\n    \n\n    \n        ﻿\n  \n\n\n    \n\n    \n            .treeview { list-style: none; margin-left: -25px; }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿  '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeViewNodeComponent.html":{"url":"components/TreeViewNodeComponent.html","title":"component - TreeViewNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeViewNodeComponent\n\n\n\n        \n            API\n        \n        \n            Source: Template\n        \n        \n            Source: Code\n        \n        \n            Source: Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts\n\n\n    \n        Description\n    \n    \n        The TreeNodeModel class represents a single TreeNodeModel for the treeview. Actually, this renders the real UI.\nThe component needs this input value:\n\n@Input() node: AcTextTreeNode;\n\nThe several options are set through the AcTreeNodeOptions object that is being held by the\nAcTextTreeNode class. This includes colors, icons, and other styles.\nThe component can fire these events:\n\n@Output() nodeClick: EventEmitter;\n@Output() checkChanged: EventEmitter;\n@Output() selectedChanged: EventEmitter;\n@Output() collapseChanged: EventEmitter;\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-treenode\n            \n\n            \n                styleUrls\n                ./treeviewnode.component.css\n            \n\n\n\n            \n                templateUrl\n                ./treeviewnode.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backColor\n                            \n                            \n                                    Private\n                                    Static\n                                clsIcon\n                            \n                            \n                                    Public\n                                collapseClasses\n                            \n                            \n                                    Public\n                                foreColor\n                            \n                            \n                                    Public\n                                href\n                            \n                            \n                                    Public\n                                iconClasses\n                            \n                            \n                                    Public\n                                isExpanded\n                            \n                            \n                                    Private\n                                    Static\n                                opnIcon\n                            \n                            \n                                    Private\n                                    Static\n                                pfxIcon\n                            \n                            \n                                    Private\n                                preSelectState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCheckChange\n                            \n                            \n                                handleClick\n                            \n                            \n                                handleCollapse\n                            \n                            \n                                handlePreSelection\n                            \n                            \n                                handleSelection\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCheckChanged\n                            \n                            \n                                onCollapseChanged\n                            \n                            \n                                onNodeClick\n                            \n                            \n                                onSelectedChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                node\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkChanged\n                            \n                            \n                                collapseChanged\n                            \n                            \n                                nodeClick\n                            \n                            \n                                selectedChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         TextTreeNodeModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:51\n                            \n                        \n                \n                    \n                        The object that controls the node's appearance.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checkChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:61\n                            \n                        \n                \n                    \n                        Fired if a checkable field is being clicked.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        collapseChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:71\n                            \n                        \n                \n                    \n                        Fired if a node collapses or expands.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:56\n                            \n                        \n                \n                    \n                        Fired on click and hence fired even if any of the other parts are being fired.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:66\n                            \n                        \n                \n                    \n                        Fired if a selectable field is being clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCheckChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCheckChange()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick($event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCollapse\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCollapse()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handlePreSelection\n                        \n                        \n                    \n                \n            \n            \n                \nhandlePreSelection(state: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleSelection\n                        \n                        \n                    \n                \n            \n            \n                \nhandleSelection($event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonCheckChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCollapseChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonCollapseChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNodeClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNodeClick(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectedChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectedChanged(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            clsIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'fa-minus'\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            collapseClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            foreColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            href\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            opnIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'fa-plus'\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            pfxIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'fa'\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            preSelectState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { TextTreeNodeModel, TreeNodeModel, TreeNodeState } from '../models';\n\n/**\n * The TreeNodeModel class represents a single TreeNodeModel for the treeview. Actually, this renders the real UI.\n *\n * The component needs this input value:\n *\n * * @Input() node: AcTextTreeNode;\n *\n * The several options are set through the AcTreeNodeOptions object that is being held by the\n * AcTextTreeNode class. This includes colors, icons, and other styles.\n *\n * The component can fire these events:\n *\n * * @Output() nodeClick: EventEmitter;\n * * @Output() checkChanged: EventEmitter;\n * * @Output() selectedChanged: EventEmitter;\n * * @Output() collapseChanged: EventEmitter;\n *\n */\n@Component({\n  selector: 'ac-treenode',\n  templateUrl: './treeviewnode.component.html',\n  styleUrls: ['./treeviewnode.component.css']\n})\nexport class TreeViewNodeComponent implements OnInit {\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    this.nodeClick = new EventEmitter();\n    this.checkChanged = new EventEmitter();\n    this.selectedChanged = new EventEmitter();\n    this.collapseChanged = new EventEmitter();\n  }\n  private static pfxIcon = 'fa';\n  private static opnIcon = 'fa-plus';\n  private static clsIcon = 'fa-minus';\n\n  /**\n   * The object that controls the node's appearance.\n   */\n  @Input()\n  node: TextTreeNodeModel;\n  /**\n   * Fired on click and hence fired even if any of the other parts are being fired.\n   */\n  @Output()\n  nodeClick: EventEmitter;\n  /**\n   * Fired if a checkable field is being clicked.\n   */\n  @Output()\n  checkChanged: EventEmitter;\n  /**\n   * Fired if a selectable field is being clicked.\n   */\n  @Output()\n  selectedChanged: EventEmitter;\n  /**\n   * Fired if a node collapses or expands.\n   */\n  @Output()\n  collapseChanged: EventEmitter;\n\n  public href: string;\n  public collapseClasses: Array;\n  public iconClasses: Array;\n  public foreColor: string;\n  public backColor: string;\n  public isExpanded = false;\n\n  private preSelectState: boolean;\n\n  ngOnInit() {\n    // set HTML according to options\n    this.collapseClasses = new Array();\n    this.iconClasses = new Array();\n    // expander area with icon\n    if (this.node) {\n      // expect a font-awesome class with or without fa class\n      if (this.node.options && this.node.options.icon) {\n        if (\n          this.node.options.icon.indexOf(`${TreeViewNodeComponent.pfxIcon} `) !== 0\n        ) {\n          this.iconClasses.push('fa');\n        }\n        this.iconClasses.push(this.node.options.icon);\n      }\n      if (this.node.options && this.node.options.href) {\n        this.href = this.node.options.href;\n      } else {\n        this.href = '';\n      }\n      // open/close area for elements with children\n      if (this.node.hasChildren) {\n        this.collapseClasses.push('ac-icon'); // base class\n        this.collapseClasses.push(TreeViewNodeComponent.pfxIcon);\n        this.collapseClasses.push(TreeViewNodeComponent.opnIcon);\n        // collapsed by default\n        this.node.state &= ~TreeNodeState.checked;\n      }\n      if (this.node.options && this.node.options.color) {\n        this.foreColor = this.node.options.color;\n      }\n      if (this.node.options && this.node.options.backColor) {\n        this.backColor = this.node.options.backColor;\n      }\n      this.node.stateChange.subscribe((se: any) => {\n        this.collapseChanged.emit(this.node);\n        if (!this.node.stateIsExpandend) {\n          this.collapseClasses = this.collapseClasses.filter(\n            s => s !== TreeViewNodeComponent.clsIcon\n          );\n          this.collapseClasses.push(TreeViewNodeComponent.opnIcon);\n        } else {\n          this.collapseClasses = this.collapseClasses.filter(\n            s => s !== TreeViewNodeComponent.opnIcon\n          );\n          this.collapseClasses.push(TreeViewNodeComponent.clsIcon);\n        }\n        this.isExpanded = this.node.stateIsExpandend;\n      });\n    }\n  }\n\n  // forward events in the node tree\n\n  onNodeClick(node: TreeNodeModel) {\n    this.nodeClick.emit(node);\n  }\n\n  onCheckChanged(node: TreeNodeModel) {\n    this.checkChanged.emit(node);\n  }\n\n  onSelectedChanged(node: TreeNodeModel) {\n    this.selectedChanged.emit(node);\n  }\n\n  onCollapseChanged(node: TreeNodeModel) {\n    if (this.node.options.collapsable && this.node.hasChildren) {\n      this.collapseChanged.emit(node);\n    }\n  }\n\n  handleCheckChange(): void {\n    if (this.node.options.checkable && !this.node.stateIsDisabled) {\n      if (this.node.state & TreeNodeState.checked) {\n        this.node.state &= ~TreeNodeState.checked;\n      } else {\n        this.node.state |= TreeNodeState.checked;\n      }\n      this.checkChanged.emit(this.node);\n    }\n  }\n\n  handleClick($event: any): void {\n    $event.stopPropagation();\n    // always emit click\n    this.nodeClick.emit(this.node);\n  }\n\n  handleCollapse(): void {\n    // if collapsable handle icons and view state\n    if (this.node.options.collapsable) {\n      // toggle state\n      if (this.node.state && this.node.state & TreeNodeState.expanded) {\n        this.node.state &= ~TreeNodeState.expanded;\n      } else {\n        this.node.state |= TreeNodeState.expanded;\n      }\n    }\n  }\n\n  handlePreSelection(state: boolean): void {\n    // handle the states according to options\n    if (this.node.options.selectable && !this.node.stateIsDisabled) {\n      if (state) {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.backColor;\n        } else {\n          this.foreColor = '#fff';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.color;\n        } else {\n          this.backColor = '#000';\n        }\n      } else {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.color;\n        } else {\n          this.foreColor = '#000';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.backColor;\n        } else {\n          this.backColor = '#fff';\n        }\n      }\n      this.preSelectState = state;\n    }\n  }\n\n  handleSelection($event: any): void {\n    // handle the states according to options\n    if (\n      this.node.options.selectable &&\n      !this.node.stateIsDisabled &&\n      this.preSelectState === true\n    ) {\n      if (this.node.state & TreeNodeState.selected) {\n        this.node.state &= ~TreeNodeState.selected;\n      } else {\n        this.node.state |= TreeNodeState.selected;\n      }\n      if (this.node.stateIsSelected) {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.backColor;\n        } else {\n          this.foreColor = '#fff';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.color;\n        } else {\n          this.backColor = '#000';\n        }\n      } else {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.color;\n        } else {\n          this.foreColor = '#000';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.backColor;\n        } else {\n          this.backColor = '#fff';\n        }\n      }\n      this.selectedChanged.emit(this.node);\n    }\n    if (!this.href) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n  }\n}\n\n    \n\n    \n        ﻿\n    \n    \n    \n    \n    \n    \n        {{ node.text }}\n    \n    \n        \n        \n                       \n\n    \n\n    \n                \n                    ./treeviewnode.component.css\n                \n                ﻿ul.treeview { list-style: none; margin-left: -2em; }\nli.treeview  { margin-left: 10px; margin-bottom: 3px; box-sizing: border-box; }\nli.treeview a.ac-container { border-radius: 2px; display: inline-block; padding: 3px; text-decoration: none; }\nli.treeview input[type=\"checkbox\"] { display: none; }\nli.treeview input[type=\"checkbox\"] + label:before { font-family: FontAwesome; }\nli.treeview input[type=\"checkbox\"] + label:before { content: \"\\f096\"; }\nli.treeview input[type=\"checkbox\"]:checked + label:before { content: \"\\f046\"; }\nli.treeview input[type=\"checkbox\"] + label { display:inline-block; width:15px; height: 20px; margin: -1px 4px 0 0; vertical-align:middle; cursor: pointer; }\nli.treeview i.ac-collapse { width: 15px; cursor: pointer; display: inline-block; margin-left: -1.7em; }\nli.treeview i.ac-icon { width: 15px; cursor: pointer; display: inline-block }\nli.treeview .ac-node-disabled { color: silver; cursor: not-allowed; }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿                                {{ node.text }}                                               '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeViewNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowRef.html":{"url":"injectables/WindowRef.html","title":"injectable - WindowRef","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowRef\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/utils/windowref.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/utils/windowref.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  // return the global native browser window object\n  return window;\n}\n\n@Injectable()\nexport class WindowRef {\n  get nativeWindow(): any {\n    return _window();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n0.0.8 (2017-01-01)\nFirst release of SVOGV!\nThis inaugural release includes these components:\n\nHidden: Element will not be rendered as column in ac-datagrid\nDisplay: Change columns header or label name and add a tooltip optionally\n\nAlso several validation decorators are supported:\n\nRequired: Property must have a value\nMaxLength: Max number of chars (string only)\nMinLength: Min number of chars (string only)\nPattern: A regular expression\nRange: A range of type number or of type Date for the property's value\nEmail: Check whether the property contains a valid email\n\nAs the alpha process continues, these components will continue to evolve. There will be\nbreaking changes between alpha releases; the alpha releases are here for people that want an\nearly look or who like to live on the edge and are very tolerant of breaking API and behavior\nchanges.\n\n0.0.23 (2017-01-20)\nA pre-production release of SVOGV!\nThis is the first we use in production to see how to use basic functions in real world environment.\n\nPlaceholder: A new decorator to put watermarks into editor elements\n\nNew validation decorators:\n\nCompare: Compare two fields, such as in password field combinations\n\nSeveral widgets are now usable:\n\nDataGrid\nEditors\nInfoBox\nMenu, which comes in two flavors:\nDropMenu -- a complex multi level menu\nSideMenu -- a simple one level menu\n\n\nTreeView\nBreadCrumb\nTabs\n\nStill under construction, because of SMIL we use for SVG and that we still need to get rid of:\n\nAnalogClock\nLoaderIcon\n\nThe demo does now use WebPack 2 to create the bundles. SystemJS loader is still working for debugging.\n\n0.2.1 (2017-09-14)\nSVOGV in usable state\nThe base library with the decorators and controls is usable. The HUD part is still very experimental. I'm going to remove this part shortly and create another project out of it. It will make the lib smaller and more reliable.\nThese to elements are now working and good for production:\n\nAnalogClock\nLoaderIcon\n\nThere are many fixes in both, demo and lib.\n\n0.2.3 (2017-09-15)\nA release mostly dedicated to fixes and reorg. Some components sued just to run the demo were actually in the main lib and hence I have removed them and put in the demo. So the code is still there, but nit as part of the main lib. This makes the lib a lot smaller and it clarifies the intention not competing with the other UI libs but put the focus on forms and validation.\n\n0.3.5 (2018-01-15)\nA redesign, mainly removing all experimental parts.\n\n0.6.0 (2018-09-15)\nAn update to support Angular 5 and 6. This is also a change in naming the versions. 0.6.* is for Angular 6, 0.7.* will be the one for Angular 7 and so on.\nAlso, this is a big change from Gulp/Rollup based build process to using the Angular CLI. After a ton of experiments with WebPack 4 and almost very loader the outcome was more or less fruststrating. With Angular CLI, I must admit, the results are perfect, stable and small packages, and an easy setup procedure.\n\n0.7.0 (2019-01-31)\nAgain a big redesign. Mostly renaming and reorg. It's a need for the way to 1.0. It follows more strictly the Angular guide line for code.\nAlso, it's now made for Angular 7 and TypeScript 3.\n\n0.7.1 (2019-04-24)\nSome fixes and some function are now working properly that didn't made it into 7.0.0.\n\nTreeView event behavior\nDatagrid Pagination styles\nDatagrid Templates\nDatagrid Pipe support\n\n\n0.7.2 (2019-04-30)\nRenamed property userForm to formGroup for editor component. Equals the autoform now and is less irritating. Unfortunately, this is a breaking change.\n\n0.7.3 (2019-05-02)\nAdded the decorator Sortable to suppress sorting (default is on for all columns) or provide a custom sort function. Made the sorting available for the whole header element (additionally to the sort buttons) and hence it's now toggling. This is a more intuitive behavior. The button currently showing the sort direction by being in disabled state.\nAdded the decorator UiHint to add custom styles to grid's header or, in case of an editor element, to the input element.\nRemoved some not used classes to save code space.\n\n0.8.0 (2019-08-13)\nUpdate references and dependencies to reflect Angular 8.\n\n0.9.0 (2020-03-31)\nUpdate references and dependencies to reflect Angular 9. Several bug fixes and refinements for the grid.\nClean up code, improve documentation and follow current linter rules.\nThis is the last release before we convert to new project structure in the @svogv realm. Stay tuned!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to SVOGV\nWe would love for you to contribute to SVOGV and help make it ever better!\nAs a contributor, here are the guidelines we would like you to follow:\n\nCode of Conduct\nQuestion or Problem?\nIssues and Bugs\nFeature Requests\nSubmission Guidelines\nCoding Rules\nCommit Message Guidelines\nSigning the CLA\n\nIn case of any questions please contact me at !\n Code of Conduct\nHelp us keep Angular open and inclusive. Please read and follow our Code of Conduct.\n Got a Question or Problem?\nIf you have questions about how to use SVOGV, please direct them to the \nGoogle Group discussion list or StackOverflow. \nPlease note that SVOGV is still in very early development, and the team's capacity \nto answer usage questions is limited. Community chat is also available on Gitter.\n Found an Issue?\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our GitHub Repository. Including an issue \nreproduction (via CodePen, JsBin, Plunkr, etc.) is the absolute best way to help the team quickly\ndiagnose the problem. Screenshots are also helpful.\nYou can help the team even more and submit a Pull Request with a fix.\n Want a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nRepository. If you would like to implement a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it. SVOGV is in very early \nstages and we are not ready to accept major contributions ahead of the full release.\nPlease consider what kind of change it is:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project.\nSmall Features can be crafted and directly submitted as a Pull Request.\n\n Submitting an Issue\nBefore you submit an issue, search the archive, maybe your question was already answered.\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\nOverview of the Issue - if an error is being thrown a non-minified stack trace helps\nAngular and Bootstrap Versions - which versions of Angular and Bootstrap are affected\n  (e.g. 2.2.0)\nMotivation for or Use Case - explain what are you trying to do and why the current behavior\n  is a bug for you\nBrowsers and Operating System - is this a problem with all browsers?\nReproduce the Error - provide a live example (using CodePen, JsBin,\n  Plunker, etc.) or a unambiguous set of steps\nScreenshots - Due to the visual nature of the SVOGV widgets, screenshots can help the team\n  triage issues far more quickly than a text descrption.\nRelated Issues - has a similar issue been reported before?\nSuggest a Fix - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\nYou can file new issues by providing the above information here.\n Submitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR\nthat relates to your submission. You don't want to duplicate effort.\n\nPlease sign our Contributor License Agreement (CLA) before sending PRs.\nWe cannot accept code without this.\n\nMake your changes in a new git branch:\n   git checkout -b my-fix-branch master\nCreate your patch, including appropriate test cases.\n\nFollow our Coding Rules.\n\nTest your changes with our supported browsers and screen readers.\n\nRun the full SVOGV test suite, as described in the developer documentation,\nand ensure that all tests pass.\n\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions\nis necessary because release notes are automatically generated from these messages.\n   git commit -aNote: the optional commit -a command line option will automatically \"add\" and \"rm\" edited files.\n\nPush your branch to GitHub:\n  git push my-fork my-fix-branch\nIn GitHub, send a pull request to svogv:master.\n\nIf we suggest changes then:\n\nMake the required updates.\n\nRe-run the SVOGV test suites to ensure tests are still passing.\n\nRebase your branch and force push to your GitHub repository (this will update your Pull\nRequest):\ngit rebase master -i\ngit push -f\n\n\n\nThat's it! Thank you for your contribution!\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell as\n  follows:\n  git push my-fork --delete my-fix-branch\nCheck out the master branch:\n  git checkout master -f\nDelete the local branch:\n  git branch -D my-fix-branch\nUpdate your master with the latest upstream version:\n  git pull --ff upstream master\n\n Coding Rules\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\nAll public API methods must be documented. (Details TBD).\nWe follow Google's JavaScript Style Guide, but wrap all code at\n100 characters.\n\n Commit Message Guidelines\nWe have very precise rules over how our git commit messages can be formatted.  This leads to more\nreadable messages that are easy to follow when looking through the project history.  But also,\nwe use the git commit messages to generate the SVOGV change log.\nCommit Message Format\nEach commit message consists of a header, a body and a footer.  The header has a special\nformat that includes a type, a scope and a subject:\n(): \n\n\n\nThe header is mandatory and the scope of the header is optional.\nAny line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools.\nRevert\nIf the commit reverts a previous commit, it should begin with revert:, followed by the header of\nthe reverted commit. In the body it should say: This reverts commit ., where the hash is\nthe SHA of the commit being reverted.\nType\nMust be one of the following:\n\nfeat: A new feature\nfix: A bug fix\ndocs: Documentation only changes\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing\nsemi-colons, etc)\nrefactor: A code change that neither fixes a bug nor adds a feature\nperf: A code change that improves performance\ntest: Adding missing tests or correcting existing tests\nbuild: Changes that affect the build system, CI configuration or external dependencies      (example scopes: gulp, broccoli, npm)\nchore: Other changes that don't modify src or test files\n\nScope\nThe scope could be anything specifying place of the commit change. For example\ndatepicker, dialog, etc.\nSubject\nThe subject contains succinct description of the change:\n\nuse the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\ndon't capitalize first letter\nno dot (.) at the end\n\nBody\nJust as in the subject, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior.\nFooter\nThe footer should contain any information about Breaking Changes and is also the place to\nreference GitHub issues that this commit Closes.\nBreaking Changes should start with the word BREAKING CHANGE: with a space or two newlines.\nThe rest of the commit message is then used for this.\nA detailed explanation can be found in this document.\n Signing the CLA\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\nFor individuals we have a simple click-through form.\nFor corporations we'll need you to\nprint, sign and one of scan+email, fax or mail the form.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^9.1.0\n        \n            @angular/compiler : ^9.1.0\n        \n            @angular/core : ^9.1.0\n        \n            @angular/forms : ^9.1.0\n        \n            @angular/platform-browser : ^9.1.0\n        \n            @angular/platform-browser-dynamic : ^9.1.0\n        \n            @angular/router : ^9.1.0\n        \n            bootstrap : ^4.4.1\n        \n            core-js : ^3.6.4\n        \n            font-awesome : ^4.7.0\n        \n            rxjs : ^6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Direction   (projects/.../datagrid.model.ts)\n                        \n                        \n                            TreeNodeState   (projects/.../treenodeoptions.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Direction\n                    \n                \n                    \n                        \n                            Sort direction, controlled by simple string comparision or a callback.\n\n                        \n                    \n                        \n                            \n                                 Ascending\n                            \n                        \n                        \n                            \n                                 Descending\n                            \n                        \n            \n        \n\n    projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TreeNodeState\n                    \n                \n                    \n                        \n                            The state of node\n\n                        \n                    \n                        \n                            \n                                 undefined\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 checked\n                            \n                        \n                        \n                            \n                                 disabled\n                            \n                        \n                        \n                            \n                                 expanded\n                            \n                        \n                        \n                            \n                                 selected\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _window   (projects/.../windowref.ts)\n                        \n                        \n                            Compare   (projects/.../val-compare.decorator.ts)\n                        \n                        \n                            Display   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            DisplayGroup   (projects/.../hint-displaygroup.decorator.ts)\n                        \n                        \n                            Email   (projects/.../val-email.decorator.ts)\n                        \n                        \n                            FormatPipe   (projects/.../hint-formatpipe.decorator.ts)\n                        \n                        \n                            Hidden   (projects/.../hint-hidden.decorator.ts)\n                        \n                        \n                            MaxLength   (projects/.../val-maxlength.decorator.ts)\n                        \n                        \n                            MinLength   (projects/.../val-minlength.decorator.ts)\n                        \n                        \n                            Pattern   (projects/.../val-pattern.decorator.ts)\n                        \n                        \n                            Placeholder   (projects/.../hint-placeholder.decorator.ts)\n                        \n                        \n                            Range   (projects/.../val-range.decorator.ts)\n                        \n                        \n                            Readonly   (projects/.../hint-readonly.decorator.ts)\n                        \n                        \n                            Required   (projects/.../val-required.decorator.ts)\n                        \n                        \n                            Sortable   (projects/.../hint-sortable.decorator.ts)\n                        \n                        \n                            StringLength   (projects/.../val-stringlength.decorator.ts)\n                        \n                        \n                            TemplateHint   (projects/.../hint-templatehint.decorator.ts)\n                        \n                        \n                            UiHint   (projects/.../hint-uihint.decorator.ts)\n                        \n                        \n                            validateCompare   (projects/.../compare.validator.ts)\n                        \n                        \n                            validateRange   (projects/.../range.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/utils/windowref.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            _window\n                        \n                        \n                    \n                \n            \n            \n                \n_window()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-compare.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Compare\n                        \n                        \n                    \n                \n            \n            \n                \nCompare(withProperty, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The compare decorator compares two field's values and\nshows an error message on the decorated field. The other field (compared to) does\nnot has a decorator nor receives a message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    withProperty\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : A string that represents the compared field's name.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-display.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Display\n                        \n                        \n                    \n                \n            \n            \n                \nDisplay(name, order, description?)\n                \n            \n\n\n\n\n            \n                \n                    The Display decorator.\nThis decorator can be used on fields. It's being used to create label in EditorComponent and\nheaders in the DataGridComponent. Additional parameters are provided to refine forms further.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name or Label that appears in forms or as header in grids.\n\n                                    \n                                \n                                \n                                    order\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        If one uses {\n\n                                    \n                                \n                                \n                                    description\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A tooltip, which can be used optionally.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-displaygroup.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            DisplayGroup\n                        \n                        \n                    \n                \n            \n            \n                \nDisplayGroup(name, order, description?)\n                \n            \n\n\n\n\n            \n                \n                    The DisplayGroup decorator. Groups fields in auto forms; see AutoFormComponent.\nJust define a name (that appears as the group's name) and\nput the very same name on all members of the group.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name or Label that appears in forms as the groups legend.\n\n                                    \n                                \n                                \n                                    order\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        If one uses {\n\n                                    \n                                \n                                \n                                    description\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A tooltip, which can be used optionally.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-email.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Email\n                        \n                        \n                    \n                \n            \n            \n                \nEmail(msg?)\n                \n            \n\n\n\n\n            \n                \n                    Validates a field against an email pattern.\nBased on \"pattern\", so in form one must use hasError('pattern') to get validation results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message. If not provided \"The field ffff must contain a valid e-mail address.\"\n   will be generated, while ffff is the property name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-formatpipe.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            FormatPipe\n                        \n                        \n                    \n                \n            \n            \n                \nFormatPipe(pipe, pipeParams)\n                \n            \n\n\n\n\n            \n                \n                    The FormatPipe decorator. Provide the name of a Pipe that's being used by the\ndynamic pipe formatter. Hence, the form does not need to apply forms manually.\nThe reason is that you may create forms automatically and hence can't write\nactual Pipes somewhere. This applies especially if you create a table and loop\nthrough properties.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pipe\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pipeParams\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-hidden.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Hidden\n                        \n                        \n                    \n                \n            \n            \n                \nHidden(hide)\n                \n            \n\n\n\n\n            \n                \n                    The Hidden decorator.\nThe DataGrid\">does not show columns for properties tagged with@Hidden().\nFields in forms that render automatically\nusing the AcEditor\">component will render as type=\"hidden\">.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hide\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional, default is true.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-maxlength.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MaxLength\n                        \n                        \n                    \n                \n            \n            \n                \nMaxLength(len, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The maxlength decorator assures that a string field contains not more than a number of characters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    len\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the maximum length.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-minlength.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MinLength\n                        \n                        \n                    \n                \n            \n            \n                \nMinLength(len, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The minlength decorator assures that a string field contains at least a number of characters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    len\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the required length.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-pattern.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Pattern\n                        \n                        \n                    \n                \n            \n            \n                \nPattern(pattern, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The decorator assures that a string field fullfilles a regular expression pattern.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pattern\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The expression as RegExp.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-placeholder.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Placeholder\n                        \n                        \n                    \n                \n            \n            \n                \nPlaceholder(name)\n                \n            \n\n\n\n\n            \n                \n                    The Placeholder decorator.\nThe placeholder adds the given text as a watermark to any input fields.\nThere is no function in DataGrid.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name that appears in form fields as a watermark.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-range.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Range\n                        \n                        \n                    \n                \n            \n            \n                \nRange(from, to, msg?)\n                \n            \n\n\n\n\n            \n                \n                    Validates a field against an range. Applies to numerical values or dates.\nThe range's values are included in the valid range.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The minimum value (included) as number or Date\n\n                                    \n                                \n                                \n                                    to\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The maximum value (included) as number or Date\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A custom message. If not provided \"The field [field] does not fall into the range from [from] to [to]\"\nwill be generated, while [field] is the propertie's name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-readonly.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Readonly\n                        \n                        \n                    \n                \n            \n            \n                \nReadonly(readonly)\n                \n            \n\n\n\n\n            \n                \n                    The Readonly decorator. The field is readonly in the form. It just renders grayed out\nand handles the internals using default HTML5 techniques.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    readonly\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional, default is true.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-required.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Required\n                        \n                        \n                    \n                \n            \n            \n                \nRequired(msg?)\n                \n            \n\n\n\n\n            \n                \n                    This decorator is for validation of mandatory fields.\nThe default message is 'The field {keyName} is required'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The error message shown in case of error. A default value is being provided if omitted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-sortable.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Sortable\n                        \n                        \n                    \n                \n            \n            \n                \nSortable(canSort: boolean, sortCallback?)\n                \n            \n\n\n\n\n            \n                \n                    The Sortable decorator.\nThe DataGrid\">does not sort columns for properties tagged with@Sortable(false).\nThe default is that all columsn are sortable. Either avoid this decorator or use @Sortable(true).\nAdditionally, if the decorator is provided, you can add a sort function callback as second parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    canSort\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Suppress or allow sorting.\n\n                                    \n                                \n                                \n                                    sortCallback\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional callback that provides a sort instruction. If omitted, Array.prototype.sort is being used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-stringlength.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StringLength\n                        \n                        \n                    \n                \n            \n            \n                \nStringLength(min, max, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The decorator that assures that a string field contains at least a number of characters and a minimum number, too.\nThe default message is 'The field {fieldname} needs at least {minlength} characters'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The required length.\n\n                                    \n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The maximum length.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : Optionally a custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-templatehint.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            TemplateHint\n                        \n                        \n                    \n                \n            \n            \n                \nTemplateHint(template, params?)\n                \n            \n\n\n\n\n            \n                \n                    The Template decorator.\nOne can define the way a property gets rendered.\nCurrently supported:\n\nTextArea\nCalendar\nRange\nNumber\nText\n\nThe Calendar creates Date-fielsd. However, in casde of a datatype Date the date field will be created anyway.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    template\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name that appears in form fields as a watermark.\n\n                                    \n                                \n                                \n                                    params\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Depending of template some additional values as a dictionary.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-uihint.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            UiHint\n                        \n                        \n                    \n                \n            \n            \n                \nUiHint(uiHintRule)\n                \n            \n\n\n\n\n            \n                \n                    The UiHint decorator.\nCurrently it can contain any set of style rules that apply to the  element that forms the grid's table header cells.\nThe application makes use of the [ngStyle] directive. The object's structure must be made in a way [ngStyle] can handle it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uiHintRule\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/services/validators/compare.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validateCompare\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateCompare(p)\n                \n            \n\n\n\n\n            \n                \n                    A custom validator to compare two fields. This is internally to support the infrastructure\nand not intended to being used by custom code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    p\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The field's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/services/validators/range.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validateRange\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateRange(f, t)\n                \n            \n\n\n\n\n            \n                \n                    A custom validator to valdiate a range of numbers or dates.\nThis is internally to support the infarstructure and not intended to being used by custom code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n SVOGV Grid and Forms Library\n\n\n\n\n\n\n\n\nTarget Audience\nThis library is for Angular Version 2 or newer. The current release is for Angular 8 and matches the current Angular version usually.\nThe design / UI stuff is made using Bootstrap 4, and even here the current version is used.\nIt's for developers who create standard forms and want to automate the development process.\n\nDemo and project are made using Angular CLI. Current version is made using @angular/cli.\n\nIntroduction\nThis library is for making forms. Easy and fast. It has these advantages:\n\nAll form parts are being created dynamically by using decorators. These control the UI and validation.\nAll styles are based on Bootstrap 4, can be used together with themes and custom parts can be changed.\nA grid component makes data tables very easy to use.\nA tree view is another component.\nDynamic editors and an autoform component creates the whole form without code.\n\nWhat is it?\nThe approach was simply to improve the creation of forms as simple as ever in Angular. It's an extension to Angular that comes as a set of classes (injectable services) and components.\nIt's available as source code or as ready to use umd-bundle. The bundle is plane JavaScript. The sources are available via npm and from github.\n\nIt's pretty small, too. It's 300 KB as a bundle and roughly 39 KB minified, close to 10 KB zipped.\n\nIssues?\nAs of version 0.6 none known issues. Please report issues through Github.\nHave you worked with the version 0.3 before? 0.6 has breaking changes because of a new build process.\nIn 0.7 I have again made significant changes towards the 1.0 release.\nI'm using Angular CLI for all steps and sync the version with Angular (Angular 6 is SVGOV 0.6, Angular 7 is SVGOV 0.7, and so on). After the first final is being release I plan to jump the version to match the Angular major release. Hence, 0.6 is 6, 0.7 is 7 and if I could move to 1.0 and at that time Angular 9 is out, it will become SVOGV 9.\nAngular Data Annotations\nThe idea of data annotations is somehow heavily inspired by the namespace System.ComponentModel.DataAnnotations of .NET Core. There is absolutely no dependency at all, though. You can find more here.\nThe basic idea is that we usually use view models anyway. So, why not using them to provide all information necessary to create a form that way?\nHow does it work?\nLet's assume you have a viewmodel like this:\nexport class UserViewModel {\n\n  @Hidden()\n  id: Number = 0;\n\n  @Display('E-Mail', 'E-Mail address')\n  @Required()\n  @MaxLength(100)\n  @Email()\n  email: string = '';\n\n  @Display('Phone Number', 'The user\\'s phone')\n  @Required()\n  @MaxLength(20)\n  phoneNumber: string = '';\n\n  @Display('User Name', 'The full name')\n  @Required()\n  @MaxLength(100)\n  userName: string = '';\n\n}As you see there are several decorators. SVOGV has decorators for display hints, such as @Display. And it has decorators to manage the validation, such as @MaxLength().\nThe usage is simple; just import like this (selection, there are more options):\nimport {\n  Required,\n  MaxLength,\n  Range,\n  Email,\n  Display,\n  Hidden,\n  UiHint,\n  Format\n} from 'svogv';Or alternatively prefix your import:\nimport * as FormHints from 'svogv';\n\nexport class UserViewModel {\n\n  @FormHints.Display('E-Mail')\n  eMail: string = '';\n\n}Using in Forms\nThe form needs to be aware of the decorators. Hence, there is a service that creates an advanced FormGroup instance. It's called FormValidatorService. Internally it's using Angular's ReactiveFormsModule, so this is a dependency.\nIn a component's code it looks like this:\nimport { FormValidatorService } from 'svogv';\n\nexport class EditUserComponent implements OnInit {\n\n  myForm: FormGroup;\n\n  constructor(private fv: FormValidatorService) {\n  }\n\n  ngOnInit() {\n    // get validators and error messages from viewmodel type\n    this.myForm = this.fv.build(UserViewModel);\n  }\n}In this example UserViewModel is the decorated view model. It's just the type that the service requires, not an actual instance. However, the service will create an instance, and hence the model must be a class, not an interface. Also, all properties must be set, usually by setting defaults, because internally the properties are read by a for of loop.\nNow the form knows all about the view model. Let's build a form on top on this:\n\n  \n    Edit current user\n      \n      \n      \n      Save\n  \nThe important part is the component . This component checks the property type, the decorators, and the form's settings and creates a complete form element in Bootstrap 4 style (the template is, of course, customizable). The connection between the service's outcome -- the FormGroup -- and the components is being made through setting the form group's instance (here myForm) using the input property formGroup.\nAnd that's it. The form is pretty, has fully working validation, and is easy to access from your component. And yes, there is no additional code necessary to get it running.\nAuto Forms\nEven simpler, you can create a complete form with just one tag. Just go like this:\n\n  \n    Edit current user\n    \n    \n      \n         Save\n      \n    \n  \nThe only component here is  that connects to the form using the attribute formGroup. Use binding syntax here as this is an object. The form is build upon Bootstrap 4 again and can be modified by several helper decorators.\nValidation Decorators\n\n\n\nDecorator\nUsage\n\n\n\n\n@StringLength\nSet the strings minimum (optional) and maximum length. It's a summary of @MinLength and @MaxLength.\n\n\n@MaxLength\nThe maximum length of a text input.\n\n\n@MinLength\nThe minimum length of a text input.\n\n\n@Pattern\nA regular expression that is used to test the text or number input.\n\n\n@Range\nA range (from-to) for either numerical values or dates.\n\n\n@Required\nMakes the field mandatory.\n\n\n@EMail\nChecks input against a (very good) regular expression to test for valid e-mail pattern.\n\n\n@Compare\nCompares with another field, usually for password comparision.\n\n\n\nUI Decorators\n\n\n\nDecorator\nUsage\n...Grid\n...Editor\n...Auto Form\n...Tree**\n\n\n\n\n@Display\nDetermine the label's name and a tooltip ( optionally), You can also provide the fields' order.\nYes, Header row\nYes, label text\nYes, label text\nNo\n\n\n@DisplayGroup\nGroups components in  elements. Can be ordered inside the form.\nNo\nNo\nYes, fieldset\nNo\n\n\n@Hidden\nExclude as field from an autoform.\nYes, excludes column\nYes, makes hidden field\nYes\nYes\n\n\n@Sortable\nMakes a column sortable. Default is true.\nYes\nNo\nNo\nNo\n\n\n@Placeholder\nA watermark that appears in empty form fields\nNo\nYes\nYes\nNo\n\n\n@TemplateHint\nForces a particular render type. Usually you get fields a shown in the table below. With a hint you can force other types.\nYes, replaces cell content with template\nNo\nNo\nPlanned\n\n\n@ReadOnly\nRenders the field readonly, if the shown element can support this. For all other fields this is being ignored.\nNo\nYes\nYes\nYes\n\n\n@FormatPipe\nExecutes the pipe before rendering the data. Usually used in the grid component.\nYes, applies pipe to cell's content\nNo\nNo\nNo\n\n\n@UiHint\nAdditional custom styles*.\nYes\nYes\nYes\nYes\n\n\n\n* This is available from 0.7.4 onwards. Style apply to columns' header and cells as well as to form elements in editor. The object required is a style object in the form { 'style': 'rule' }.\n** This is available from 0.7.5 onwards.\nThe editor component is able to determine the appearance dependent on the type:\n\n\n\nData Type\nTemplate Hint\nField Type\nOptions for @TemplateHint\nRemark\n\n\n\n\nstring\ntext (no params)\ntype=\"text\"\nText, TextArea\nTextArea accepts additional parameters for row and col\n\n\nboolean\nbool (no params)\ntype=\"checkbox\"\nCheckbox, Toggle, Radio\nDefault is checkbox\n\n\nnumber\nnum (no params)\ntype=\"number\"\nRange\nDefault is numeric field, Range is a slider\n\n\nDate\ndate (val,cal)*\ntype=\"date\"\nCalendar\nCalender is provided by browser feature\n\n\nenum\nenum (no params)\n-Box\n-\nRenders an Enum as Dropdown list\n\n\n\n* With cal it shows a calendar, with val just the value. Use a pipe and @FormatPipe(DatePipe) for formatting. Calendar appears in edit mode only.\nServer Support through JSON\nAs of version 0.3.5 it's possible to use a specially designed JSON object to configure the forms. It's an exact pendant to the decorators. The difference is that you don't need to write any viewmodels in TypeScript. Just deliver an appropriate formatted document from your API and you're set. Here is the definition for the JSON structure:\nexport interface FormValidatorModel {\n  [field: string]:\n      displayType |\n      displayGroupType |\n      formatType |\n      hiddenType |\n      placeHolderType |\n      compareType |\n      maxlengthType |\n      minlengthType |\n      patternType |\n      stringLengthType |\n      emailType |\n      requiredType;\n}The types have the same description as the decorators.\nThe Components\nThe components complement the editor by adding more parts typically used in forms apps. There are many such components available, but sometimes there are pieces that we need quite often but nothing is really handy. So I created a small set of such components:\n\nTreeView: An advanced tree view with icon support and many options such as selections and checkboxes. Uses EventEmitter to fire several tree node events.\nDataGrid: A classic data grid. It provides a model to handle:\npaging\nfiltering\nsorting\ndynamic columns\n\n\n\nThe grid is controlled by decorators (see table above), so the view model actually creates the grid's appearance.\nWhere to get?\nIt's available from npm by using this command:\nnpm install svogv --saveYou get these parts:\n\nFormValidatorService -- am injectable class to build reactive forms\nFormValidatorFromJsonService -- am injectable class to build reactive forms from server data\nEditor -- the universal editor component for one field\nAutoForm -- the universal editor component for complete multi field forms\nDataGrid -- an advanced grid component, model driven\nTreeView -- a tree with some nice features\nDecorators -- a set of decorators to manage the behavior and appearance of grid, tree and forms\n\nMore to read\nFor more information read the Getting started guide.\nSee demo and API docs running on SVOGV.\nDemo App\nThere is a demo app where you can see the components in action.\nSee demo and API docs running on SVOGV.\nQuick Start\nTo have a running sample in seconds do the following:\n\nClone the repository from Github\nAssure you have node running and npm and Typescript (tsc) is in the path\nExecute this command: npm install\nExecute this command: npm run build\n\nIf everything goes fine start the demo:\nnpm startA browser window shall open automatically (if not, open http://locahost:4200) and shows a dashboard from where you can navigate the various components.\nSelect these options in the left hand menu:\n\nForms Demo: All about the decorators\nWidgets > Overview: The UI widgets demo\n\n\nThe demo app is independent and has it's own package.json and node_modules folder and hence needs it's own setup. The first command (setup) takes care of this all.\n\nLicensing?\nIt's ISC licensed and it's free. I deeply believe in Open Source and will support the ecosystem by open sourcing all parts of the project. For commercial users such as enterprises I have support options.\nAbout the Author\nThe SVOGV Widget Library was written by Joerg  Krause, www.joergkrause.de, Berlin / Germany. He has many years of experience with Web-Frameworks. He were in the business in the early JavaScript days, know every single bit in jQuery and learnt a lot about Knockout, Angular, and Durandal. But time goes on. So he moved almost all projects to either AngularJS or Angular 2+. He thinks that knowing one Framework really well is more for our customers than knowing a lot just good. So he decided to do more and start contributing to the Angular ecosystem by creating awesome libraries and components.\nCan one contribute?\nYes, drop me an email with some \"about me\" stuff. Even simple feedback is appreciated.\n\nLooking for an Angular Dev?\nYes, I'm available for all kind of remote jobs. If you need a really good full-stack dev, than drop me an email (joerg@krause.de) or write through my homepage's contact form.\nI write sophisticated stuff quickly and in very high quality in these technologies:\n\nFrontend: Angular, React\nBackend: Node, ASP.NET Core, Entity Framework Core\nCloud: Azure CosmosDb, Azure Functions, Azure Event Hub, Azure IoT, AWS S3, AWS Lambda\nOther: Alexa Skills\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nISC License\nCopyright (c) [2016-2018], [Joerg  Krause]\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SvogvModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SvogvModule\n\n\n\ncluster_SvogvModule_declarations\n\n\n\ncluster_SvogvModule_providers\n\n\n\n\nwd.FormatDataPipe\n\nwd.FormatDataPipe\n\n\n\nSvogvModule\n\nSvogvModule\n\nSvogvModule -->\n\nwd.FormatDataPipe->SvogvModule\n\n\n\n\n\nFormValidatorService\n\nFormValidatorService\n\nSvogvModule -->\n\nFormValidatorService->SvogvModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            displayGroupType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            displayType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            emailType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            formatType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            hiddenType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            maxlengthType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            minlengthType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            patternType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            placeHolderType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            rangeType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            readonlyType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            requiredType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            stringLengthType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            StyleRules   (projects/.../datagridstyle.model.ts)\n                        \n                        \n                            templateHintType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            validatorType   (projects/.../formvalidator.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/services/formvalidator.model.ts\n    \n    \n        \n            \n                \n                    \n                    compareType\n                \n            \n            \n                \n                    Compare to fields.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    displayGroupType\n                \n            \n            \n                \n                    This elements describes the grouping of elements in fieldset-controls. Each\nfield that is decorated in an DisplayGroup with the very same name is grouped\ninto that part. The name appears in the fieldsets legend-control. The\ndescription makes a tooltip. If there are more groups the order is controlled\nby the orderelement.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    displayType\n                \n            \n            \n                \n                    This element describes the UI elements label, tooltip, and order.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    emailType\n                \n            \n            \n                \n                    Email\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    formatType\n                \n            \n            \n                \n                    A pipe driven formatting instruction.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    hiddenType\n                \n            \n            \n                \n                    The field will not appear in autoforms if decorated as hidden. If the parameter\nis omitted the type returns true due to its pure existence.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    maxlengthType\n                \n            \n            \n                \n                    Maximum allowed length (string only)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    minlengthType\n                \n            \n            \n                \n                    Minimum allowed length (string only)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    patternType\n                \n            \n            \n                \n                    Any regex pattern\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    placeHolderType\n                \n            \n            \n                \n                    A watermark can be applied. The property is the value thatappears\nin the field. This may not work for specific controls, such as list boxes.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    rangeType\n                \n            \n            \n                \n                    A range for number or Date only.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    readonlyType\n                \n            \n            \n                \n                    The field in rendered as readonly, if possible.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    requiredType\n                \n            \n            \n                \n                    This field is mandatory.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    stringLengthType\n                \n            \n            \n                \n                    Maximal and minimal allowed length (string only).\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    templateHintType\n                \n            \n            \n                \n                    This controls the actual control type. The default values are (TypeScript type: decorator type: rendered element):\n\nstring: text: \ndate: calendar: \nboolean: boolean: \nnumber: number: \n\nThis is the formatting that's autoamtically applied. The template hint goes after and can change any of these values.\nThe allows values are:\n\nany: textarea: \narray: enum:  \narray: list: \nany: template: The content of the editor element (does not work with )\n\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    validatorType\n                \n            \n            \n                \n                    Base type for validators.\nGive a private error message in @param msg. If omitted a error message will be generated.\nSet to active by using @param active. Default is true.\nActive i18n by using the @param translate. The translation module must be used separately.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts\n    \n    \n        \n            \n                \n                    \n                    StyleRules\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            displayDesc   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            displayName   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            displayOrder   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            FILTER   (projects/.../webpack.test.config.ts)\n                        \n                        \n                            hasSortCallback   (projects/.../hint-sortable.decorator.ts)\n                        \n                        \n                            isHidden   (projects/.../hint-hidden.decorator.ts)\n                        \n                        \n                            isSortable   (projects/.../hint-sortable.decorator.ts)\n                        \n                        \n                            KARMA_SPEC_FILTER   (projects/.../webpack.test.config.ts)\n                        \n                        \n                            provider   (projects/.../svogv.module.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            SVOGV_COMPONENTS   (projects/.../svogv.module.ts)\n                        \n                        \n                            uiHint   (projects/.../hint-uihint.decorator.ts)\n                        \n                        \n                            webpack   (projects/.../webpack.test.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-display.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            displayDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'displayDesc'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'displayName'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'displayOrder'\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/webpack.test.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FILTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.KARMA_FILTER\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            KARMA_SPEC_FILTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/.spec.ts$/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            webpack\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('webpack')\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-sortable.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasSortCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sortCallback'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'isSortable'\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-hidden.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'isHidden'\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/svogv.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FormValidatorService]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SVOGV_COMPONENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  wd.DataGridComponent,\n  wd.DataGridPaginationComponent,\n  wd.TreeViewComponent,\n  wd.TreeViewNodeComponent,\n  wd.EditorComponent,\n  wd.AutoFormComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-uihint.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiHint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'uiHint'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/package-construction.html":{"url":"additional-documentation/package-construction.html","title":"additional-page - Package Construction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nThis documentation describes the background and internal functionality of the SVOGV project. It's primarily for learning purposes.\nIt's not a replacement of the common documentation for developers using the library.\nMaking Of -- How I wrote a NPM package\n\nThis is work in progress. Come back often to get recent updates. Currently it's version 0.7.3, published May 1st, 2019. The current version embraces Angular 7.x. It's working with Angular 2.x onwards.\n\nThe primary part is a almost complete introduction into the world of modern web frontend development. It encapsulates the\ntool chain, languages, repositories, cloud service and everything else you need to create awesome apps.\nThe second part is the actual development work -- the app's code and frameworks. I decided to use Angular 2 and Bootstrap 4\nas a foundation. Angular 2 introduced as familiar concept in a new way for the web: components. By building a component tree a web app gets better maintainability and clear design, that's closer to the \"treeish\" nature of HTML. It fits better in the Browser's ecosystem\nthan the traditional MVC (model view controller) model.\nA big step for web developers was the usage of TypeScript. While other pre-compilers or transpilers are around for years (CoffeeScript for instance),\nTypeScript had the most mature and professional approach. It brings web development to an enter a new level.\nHowever, this comes with a penalty. The learning curve is steep. The setup is huge and confusing. And the effort to get a simple app running\nis enormous. If you create a huge app, however, it's a trade off. Your code becomes cleaner, easier to maintain, better to read. Your development\nspeed will grow and you can be fast, really fast creating stuff. The setup effort is a one time process and hence it's usually a no-brainer.\nWhat's this about\nThis document describes the following:\n\nThe foundation of the TS/JS-ecosystem\nUsing Gulp as a build tool\nUsing Travis for CI (continues integration)\nSetup of a professional NPM package\nRules to develop a concise library\n\nThe foundation\nFirst, you need to now how to create stuff and how to deploy stuff. You need these things first:\n\nAn editor\nA command line and some tools to build and deploy your stuff\nA server to host your stuff\nA browser to view your stuff\n\nSo, that's it.\nMissing the Operating System? No problem. Choose what you like. Everything shown here will run on Linux, Windows, and even a Mac.\nSimply don't care. Welcome to the brave new world.\nNeed something to buy? No, not at all. Everything is open source and free. At least as long as you build OS stuff by yourself. For enterprises\nare some more options, such as private repositories. That's the way some companies make some money. But even so, it's really cheap. So no\nworries again.\nSome of the tools run in the cloud. I strongly recommend considering to use these tools. It saves you tons of time and money. Unless you work\nfor a secret service you don't get any benefits from doing everything locally. The amount of data you need to transfer is small. Even a bad\nconnection is usually sufficient.\nTo setup a project like this you start right now that way:\n1. Load an Editor\nI use Visual Studio Code, but you may try some others to achieve your code tasks. Some alternatives are:\n\nSublime Text\nVIM\nAtom\n\n\nA good description of all of these can be found here.\n\n2. Setup your project\nModern web development is file based. No hidden stuff, no secret folders, nothing but plain text files. Any drawback? Yes, there are many\ndifferent files needed. A lot of them, really. While writing this I made a quick count of SVOGV project, locally:\n46.822 files, 6.323 folders\nYou say: you're kidding, dude? I say: No, bro, that's the way it is. But I have good news to you. The majority is from references, dependencies\nI have to get my stuff running. Most of the libraries we use are from NPM (node package manager). That's the repository for node moduls. We take a look\ninto this shortly. The folder where all the stuff is has the name node_modules. What's in it:\n30.107 files, 4.233 folders\nSo we're pretty much down by 60%, but it's still way to many. So let's exclude more:\n\na folder /dist where my project gets published to. That generated from a script and hence I don't care (1.987 files, 170 folders).\nagain a folder named node_modules and another one called bower_components in the Demo app, counting for 13.596 files and 1.607 folders.\n\nSo what we get:\n\n\n\nPart\nFiles\nFolder\n\n\n\n\nNode Rep\n30107\n4233\n\n\nDist\n1987\n170\n\n\nDemo Reps.\n13569\n1607\n\n\n-----------\n-------\n--------\n\n\nTotal\n45690\n6010\n\n\n\nSo, finally, my own stuff is 1.132 files in 313 folders. That's still a lot, but not a much as I don't can't handle it.\nSo, start creating a folder where all the files go. Let's call it like the project: 'svogv' (you choose another name for your project, of course).\nSomewhere on my disc I type:\n$ mkdir svogv\nThe prompt I use here is $ like most *nix systems have. I remove the concrete path and you can do same on Windows as well. I recommend to choose a short start point, such as C:\\App>, too.\n\nThen go into this:\n$ cd svogvOnce you're here it's boring empty. So we need some tools to get stuff in here. The first set of tools is part of the JavaScript ecosystem:\n\nGit - host your repository and manage versions\nNode - The engine that does the hard work\n\nAnd here is how to setup node.\nNext, Git is required. Check first if it is already present on your system:\n$ git --versionIf not, install according your operating system. \nThen, an account on Github is required. Finally, the package will be hostet on Github and partially distributed to NPM. While there are alternative ways, such as Bitbucket, I recommend Github for beginners because the sheer amount of literature, support, websites, and answers on Stack Overflow\nis overwhelming. And it is, last but not least, easy enough to get the point in short time.\nSo, go to GitHub, and set up an account.\nNow, we're set and the journey into the package creation can begin. The package is about Angular 2 components and I assume that you have at least a basic\ninterest in Angular 2 stuff. So apart from talking about the package structure I'm going to explain all the component stuff as well.\nYou can continue reading here:\n\nCreate an NPM package\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/package-construction/create-an-npm-package.html":{"url":"additional-documentation/package-construction/create-an-npm-package.html","title":"additional-page - Create an NPM package","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCreate an NPM package\nWhile we host the whole development project on Github the NPM package shall contain just that part a potential user will use.\nHence, we have to create a folder structure that supports this. A good structure would look like this:\n\\src  \n\\test\n\\dist\n\\docs\n\\guides\n\n\\node_modules\\\n\\scripts\n\\toolsThe first block is the working part, here is where you write your project's code. The second block is the supporting infrastructure and\ndepends on what you really need and want. Usually the code in here is either from an external repository (node_modules) or is being\ncreated one time and than just invokes tasks once needed.\nThe working part consists has two special folders: \\docs and \\guides. As you may know is a good documentation the foundation of your\nwhole project. Without the docs everything has less value. The documentation shall support two parts. Those who want to learn about the \nproject before making a decision to give it a try. And those who actively work with the code. In my project I have splittet the two parts\naccordingly. The reason is not necessarily the ability to split the documentation. It's because Github has a distinct support for such\ntexts and I want to make use of it. The first folder we're looking into is \\docs. This is where this very text resides.\nRead about Github Pages and Markdown to get a head start.\nSetup the Sources\nYou probably want to start with a \"real\" project and take care about the supporting stuff later. That's fine. So let's first setup what we need\nat least to get things into NPM. For my project it's sort of a library. So I create a folder \\lib:\n\\src\\libBecause a library needs a lot of testing I am lazy writing plain text a demo app is a good choice. That resides in another folder:\n\\src\\demoThe pure package is in \\src\\lib. This is what you get when pulling the package from NPM. Everything else is on Github and the user who wants\nmore must go there. That's why we need the README files. It's all about pointing quickly to the right folders.\nInitialize the Package\nNow once you in the \\lib folder you can start creating your project. Open a command prompt and enter this:\nnpm initIt's an interactive quest:\n\nThere are few things you need to think about before you start:\n\nName of the project (in lower case only -- NPM does not allow upper case characters)\nLicense (such as ISC, MIT, or Apache)\nDescription (this will appear very prominently on NPM)\nKeywords (in case you care about new users)\n\nThis will create a new file package.json. It's more or less the center of your app. It's where all commands you can start come from. \nThe final file in my project looks like this:\n{\n  \"name\": \"svogv\",\n  \"version\": \"0.6.0\",\n  \"description\": \"An advanced library for Angular 6 (Angular in general) for model driven forms and validation support.\",\n  \"main\": \"./bundles/svogv.umd.js\",\n  \"module\": \"./index.js\",\n  \"typings\": \"./index.d.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/joergkrause/svogv.git\"\n  },\n  \"keywords\": [\n    \"angular\",\n    \"angular2\",\n    \"angular4\",\n    \"Reactive\",\n    \"Forms\",\n    \"Validation\",\n    \"Viewmodel\",\n    \"decorators\",\n    \"components\"\n  ],\n  \"license\": \"ICS\",\n  \"bugs\": {\n    \"url\": \"https://github.com/joergkrause/svogv/issues\"\n  },\n  \"homepage\": \"https://github.com/joergkrause/svogv#readme\",\n  \"peerDependencies\": {\n    \"@angular/common\": \"^2.2.0\",\n    \"@angular/compiler\": \"^2.2.0\",\n    \"@angular/core\": \"^2.2.0\",\n    \"@angular/forms\": \"^2.2.0\",\n    \"@angular/http\": \"^2.2.0\",\n    \"@angular/platform-browser\": \"^2.2.0\",\n    \"@angular/platform-browser-dynamic\": \"^2.2.0\",\n    \"@angular/router\": \"^3.1.0\",\n    \"core-js\": \"^2.4.1\",\n    \"rxjs\": \"^5.4.2\",\n    \"systemjs\": \"^0.19.38\",\n    \"zone.js\": \"^0.8.16\"\n  }\n}If you now compare this with yours you find that some parts are missing. Let's dive into package.json first to get what's important. There are few \noptions that simply help others to navigate in your project. These parts are:\n  \"bugs\": {\n    \"url\": \"https://github.com/joergkrause/svogv/issues\"\n  },\n  \"homepage\": \"https://github.com/joergkrause/svogv#readme\",\nThey are just pointers to the repository. NPM will extract the values and use this to create links:\n\nFortunatly, if your repository already exists, the paths are right where they shall be. \nAnother part is not yet missing: the dependencies. This part we develop while creating the project. So leave it empty right now. \nThe Project's Core files\nThe project we create is an Angular 2 library, created with TypeScript. So we need to setup this properly. The files we need are:\n\nREADME.md: \n  The documentation's entry point. This file is shown on NPM (not on GitHub). It's sort of your homepage. Remember that we're currently in the \\src\\lib\\ folder and create just the library. The Github's readme will come later.  \n\ntsconfig.json:\n  The configuration for the TypeScript transpiler. That's covered in the chapter about TypeScript.\n\ntypedoc.json:\n  The configuration for the API documentation generator. That's covered in the chapter about API Documentation.\n\nTwo files are just for testing. That's covered in the chapter about unit testing:\n\nsystem-config-spec.ts\ntsconfig-srcs.json\n\n\n\nBefore you can proceed we need to setup a basic build tool chain. The build process is not part of the library nor the demo we write. It's our personal\neffort to assure things go well for our users. That happens in the main (root) folder of the project.\nYou remember the folder structure we started with? \n  \\root\n    \\src\n      \\lib\n      \\demo\n    \\node_modules\n    \\scripts\n    \\test\n    \\tools\nThe part in \\src\\lib is almost done. Now we go to the root folder and setup the build tool chain. We use these tools here:\n\nGulp: An script runner to automate tasks\nTypeScript: The transpiler from TS in JS\nSass: Transpiler for SCSS files into CSS\nTravis: A continuees integration tool to monitor the builds\nKarma: Unit Tests for JavaScript\n\nSetup the Core\nThere are two ways to setup a project. You can use npm and the command line to execute all parts one by one. Or you can create a file named package.json and\nlet the npm tool request all dependencies. Because of the sheer amount of tools we usually need the second way is now way better. So, start by putting this file\nin your root folder:\n{\n  \"name\": \"your-project\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Some good description.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"build\": \"gulp build\",\n    \"demoall\": \"gulp build && cd src/demo && npm run exec\",\n    \"execdemo\": \"cd src/demo && npm run exec\",\n    \"test\": \"gulp test\",\n    \"tslint\": \"gulp lint\",\n    \"stylelint\": \"gulp lint\",\n    \"deploy\": \"firebase deploy\",\n    \"docs\": \"gulp docs\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/your-git-name/your-project.git\"\n  },\n  \"keywords\": [\n    \"Angular\",\n    \"Reactive\",\n    \"Forms\",\n    \"Forms\",\n    \"Validation\",\n    \"Viewmodel\",\n    \"decorators\"\n  ],\n  \"author\": \"Your Public Name\",\n  \"license\": \"ISC\",\n  \"engines\": {\n    \"node\": \">= 5.4.1 Remember changing the descriptive parts:\n\nSave this as package.json into the root. Open a command prompt and excute this command:\nnpm updateYou will have a new folder right now: node_modules. There is no need to touch this folder, ever. npm will do this for you. First check if Gulp is now\npresent by typing \ngulp -vIt should respond like this:\n\n\nIf you see nothing or just an error that gulp is not yet present setup Gulp first.\n\nThe first part of the setup refers to Gulp. Gulp requires a file called gulpfile.js \nto run so called tasks. Because I want use TypeScript my gulpfile is somewhat special:\n'use strict';\n/**\n * Load the TypeScript compiler, then load the TypeScript gulpfile which simply loads all\n * the tasks. The tasks are really inside tools/gulp/tasks.\n */\n\nconst path = require('path');\n\n// Register TS compilation.\nrequire('ts-node').register({\n  project: path.join(__dirname, 'tools/gulp')\n});\n\nrequire('./tools/gulp/gulpfile');The ts-node is a TypeScript execution environment and REPL (Read Execute Print Loop) for node. It's hence sort of an on-the-fly transpiler for TypeScript.\nUsing this we can write the Gulp stuff in TypeScript and Gulp will still execute plain JavaScript.\nBuild tasks\nYou can build and start everything like this:\n\nGo to root of the project\nrun npm run build: build the library \nrun npm run demoall: build libary, demo, and run the demo using local HTTP server on port 3000\nrun npm run execdemo: build and run demo using local HTTP server, but keep library as is\nrun npm run tslint: run the linter for the library\n\n\nYou can run more tasks specific to the demo from there\ncd src/demo and then the particular task \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/about.html":{"url":"additional-documentation/about.html","title":"additional-page - About","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\nSVOGV is an ongoing project that helps Angular developers to create awesome apps quite fast.\n\nAbout me\nI have many years of experience with Web-Frameworks. I’m in the business since the early JavaScript days, know every single bit\nin jQuery and learnt a lot about Knockout, Angular, and Durandal. But time goes on.\nNow Angular is here for a while – the very first time in years – such a strong feeling in our guts that’s now the first step from ancient\ncrap into something really professional. It brings the level we all know from Java and C# and the mature backend frameworks to the front\nend.\nAnd it goes on. TypeScript is here and know we have something that’s an improvement for front end developers that matters:\nTypeScript brings a whole new level to pros like us. And it makes out world easier – at least a bit. And it improves the quality of our\nproduct – not just a bit, a whole new step.\nThe last years brought a lot experience and some nice projects and the outcome is an advanced peace of software that’s going to make our life\nwith Angular a lot easier.\nPurpose\nThis is a project that helps creating sophisticated Angular components. It's not really just for adding to packages and using, but more for\nlearning. There will be a book available that explains the making of completely (planned by June 2019).\nImpress\n  Jörg Krause\n  Hafersteig 113\n  12683 Berlin\n  Germany\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
