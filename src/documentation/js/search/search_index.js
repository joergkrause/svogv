var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/DataGridHeaderModel.html",[0,0.395,1,2.271]],["body/classes/DataGridHeaderModel.html",[0,0.355,1,2.824,2,0.963,3,0.462,4,0.519,5,0.355,6,0.519,7,2.874,8,0.563,9,3.974,10,2.212,11,1.729,12,0.756,13,2.322,14,1.354,15,0.581,16,2.357,17,4.405,18,2.305,19,3.76,20,2.155,21,1.322,22,3.237,23,4.405,24,2.845,25,2.845,26,4.555,27,1.759,28,2.273,29,1.294,30,2.372,31,1.207,32,1.622,33,1.608,34,2.874,35,3.974,36,1.569,37,0.039,38,0.622,39,2.574,40,2.05,41,4.555,42,1.527,43,4.555,44,3.76,45,3.76,46,3.237,47,2.845,48,1.527,49,2.273,50,2.845,51,2.273,52,4.915,53,1.896,54,0.716,55,2.482,56,2.874,57,2.663,58,3.281,59,3.974,60,2.21,61,1.682,62,2.874,63,2.824,64,2.21,65,2.482,66,2.21,67,2.874,68,2.845,69,2.874,70,2.482,71,3.281,72,3.281,73,2.874,74,2.482,75,2.482,76,2.212,77,2.482,78,3.974,79,2.21,80,2.482,81,2.874,82,1.619,83,2.824,84,1.332,85,3.237,86,2.874,87,2.21,88,2.824,89,3.281,90,2.824,91,2.482,92,3.281,93,1.983,94,1.208,95,1.061,96,2.874,97,0.646,98,2.733,99,2.874,100,2.874,101,2.874,102,2.042,103,1.789,104,1.171,105,0.018,106,0.024,107,0.018]],["title/classes/DataGridModel.html",[0,0.395,108,2.638]],["body/classes/DataGridModel.html",[0,0.494,1,3.184,2,0.532,3,0.255,4,0.287,5,0.196,6,0.287,8,0.517,10,1.643,12,0.727,14,1.101,15,0.321,16,2.412,17,2.102,18,1.628,21,1.047,23,1.31,24,2.28,28,0.792,29,0.714,31,1.068,32,0.483,33,1.594,36,1.416,37,0.039,38,0.618,39,1.591,40,1.146,50,0.991,51,1.821,53,1.339,54,1.229,55,2.28,57,2.236,61,1.178,65,3.409,66,1.416,68,0.991,70,0.991,83,1.809,92,2.102,94,1.11,95,0.586,97,0.573,98,2.03,102,1.809,103,2.22,104,1.487,105,0.01,106,0.016,107,0.01,108,2.102,109,1.31,110,2.547,111,2.547,112,2.102,113,2.129,114,1.416,115,2.102,116,3.65,117,4.236,118,3.65,119,1.799,120,0.853,121,2.547,122,1.992,123,2.102,124,2.102,125,3.013,126,4.266,127,2.102,128,2.052,129,3.189,130,3.189,131,3.189,132,3.189,133,3.189,134,4.482,135,3.189,136,3.189,137,0.941,138,3.189,139,2.547,140,2.547,141,2.547,142,3.65,143,2.547,144,2.102,145,3.189,146,3.189,147,3.189,148,3.189,149,2.547,150,2.547,151,3.65,152,2.547,153,3.189,154,3.189,155,2.547,156,3.646,157,1.56,158,2.547,159,1.587,160,1.587,161,2.673,162,1.898,163,1.587,164,2.03,165,3.65,166,2.839,167,3.65,168,3.521,169,3.013,170,1.587,171,3.521,172,1.587,173,2.102,174,1.587,175,3.013,176,2.547,177,1.271,178,1.146,179,3.65,180,1.591,181,1.591,182,2.547,183,1.587,184,2.222,185,3.504,186,2.547,187,1.587,188,0.941,189,2.102,190,2.547,191,0.853,192,1.591,193,2.28,194,1.591,195,3.013,196,3.65,197,2.372,198,2.102,199,2.496,200,4.266,201,1.771,202,2.547,203,1.587,204,2.591,205,2.547,206,1.587,207,2.28,208,2.593,209,3.65,210,3.65,211,3.65,212,4.659,213,2.547,214,1.587,215,2.547,216,1.587,217,1.591,218,2.547,219,2.102,220,1.809,221,1.271,222,1.416,223,1.416,224,1.591,225,2.547,226,1.587,227,2.547,228,4.659,229,1.587,230,1.587,231,1.821,232,2.547,233,1.271,234,1.809,235,2.102,236,2.547,237,2.633,238,2.266,239,2.547,240,1.416,241,1.416,242,1.416,243,2.547,244,3.299,245,2.547,246,2.547,247,0.647,248,1.587,249,1.587,250,2.547,251,1.146,252,1.587,253,1.587,254,1.587,255,1.587,256,1.587,257,1.587,258,1.587,259,1.587,260,1.587,261,1.587,262,1.587,263,1.587,264,1.587,265,1.587,266,1.587,267,1.587,268,1.587,269,1.587,270,1.587,271,1.587,272,2.102,273,1.587,274,1.587,275,1.416,276,1.271,277,1.587,278,1.128,279,1.587,280,1.587,281,1.587,282,1.271,283,0.991,284,1.31,285,0.792,286,1.31,287,2.854,288,1.587,289,1.587,290,1.587,291,2.547,292,3.65,293,3.189,294,1.31,295,2.461,296,1.587,297,1.587,298,0.714,299,1.587,300,1.587,301,1.587,302,2.547,303,2.547,304,1.809,305,1.587,306,1.128,307,1.587,308,2.547,309,1.587,310,1.587,311,1.587,312,1.31,313,2.547,314,2.547,315,2.547,316,1.31,317,0.883,318,1.128,319,0.714,320,1.587,321,1.587,322,2.547,323,2.547,324,1.587,325,3.013,326,2.547,327,2.547,328,2.547,329,1.587,330,1.587,331,0.991,332,0.883,333,0.532,334,1.587,335,1.31,336,0.647,337,1.128,338,1.271,339,0.647,340,1.587,341,3.31,342,1.587,343,0.991,344,1.31,345,1.587,346,2.547,347,1.587,348,0.883,349,2.102,350,1.587,351,1.587,352,1.587,353,2.547,354,1.587,355,1.587,356,0.991,357,1.128,358,1.587,359,1.587,360,1.128,361,1.587,362,1.587,363,1.587,364,1.587,365,1.587,366,1.587,367,1.587,368,1.587,369,1.587,370,1.587,371,1.587,372,1.587,373,1.587]],["title/interfaces/DatagridStyles.html",[374,1.438,375,2.638]],["body/interfaces/DatagridStyles.html",[3,0.624,4,0.702,5,0.48,6,0.702,8,0.55,10,2.489,12,0.55,14,1.335,15,0.785,21,1.402,31,0.979,37,0.038,38,0.647,51,2.418,85,4.48,97,1.09,105,0.024,106,0.03,107,0.024,317,3.075,339,2.253,374,1.749,375,4.001,376,2.427,377,3.207,378,4.847,379,3.027,380,5.53,381,4.565,382,3.075,383,5.53,384,5.53,385,5.53,386,5.53]],["title/classes/EditorModel.html",[0,0.395,387,2.638]],["body/classes/EditorModel.html",[0,0.347,2,0.94,3,0.451,4,0.507,5,0.347,6,0.507,11,2.038,12,0.769,13,2.302,14,1.077,15,0.567,16,2.538,21,0.879,27,1.479,31,1.137,33,1.614,37,0.039,38,0.635,48,1.31,53,1.986,54,1.491,55,2.441,61,1.956,77,3.038,94,0.853,97,0.631,104,1.592,105,0.017,106,0.024,107,0.017,113,1.95,157,1.188,191,1.63,197,2.705,278,2.777,285,1.95,332,2.173,336,1.592,337,2.777,338,1.95,360,3.456,382,2.173,387,3.226,388,2.806,389,4.497,390,3.308,391,4.497,392,3.712,393,2.809,394,4.497,395,4.497,396,2.501,397,4.497,398,2.844,399,2.806,400,2.427,401,4.864,402,2.427,403,4.015,404,2.806,405,3.226,406,2.806,407,2.173,408,2.427,409,4.864,410,2.806,411,2.173,412,3.908,413,2.441,414,2.806,415,3.226,416,2.806,417,3.908,418,1.95,419,3.908,420,3.908,421,2.777,422,2.806,423,2.173,424,2.441,425,3.908,426,2.777,427,2.806,428,2.806,429,2.777,430,2.806,431,3.226,432,2.806,433,2.777,434,2.806,435,1.95,436,2.806,437,2.173,438,3.038,439,1.56]],["title/interfaces/FormValidatorModel.html",[374,1.438,440,2.271]],["body/interfaces/FormValidatorModel.html",[3,0.39,4,0.438,5,0.3,6,0.438,8,0.685,11,1.691,12,0.715,13,1.092,18,1.435,20,0.896,22,1.723,25,1.515,27,0.737,31,1.172,32,1.535,33,0.668,37,0.039,38,0.64,39,1.758,40,1.586,42,1.181,48,0.813,53,1.181,54,0.605,61,1.301,74,2.201,76,1.586,79,1.959,80,1.515,84,1.181,90,2.504,93,1.21,97,1.319,98,2.308,105,0.015,106,0.022,107,0.015,113,1.758,114,1.349,119,1.868,128,0.988,157,1.702,178,1.092,180,1.515,181,1.515,201,0.813,241,2.308,242,2.308,251,1.092,276,1.758,282,1.758,285,1.21,298,1.868,304,1.723,319,1.092,332,1.959,333,1.181,374,1.092,376,1.515,393,1.21,396,1.959,398,1.349,400,2.071,408,1.758,418,1.21,423,1.959,435,1.21,437,1.349,440,2.504,441,2.002,442,1.959,443,1.959,444,2.909,445,2.071,446,3.524,447,2.504,448,2.909,449,2.504,450,1.959,451,2.504,452,2.949,453,2.909,454,3.524,455,3.524,456,3.524,457,2.201,458,2.426,459,2.949,460,2.949,461,2.949,462,2.949,463,2.949,464,2.949,465,2.949,466,2.949,467,2.949,468,2.949,469,2.949,470,2.949,471,2.426,472,1.515,473,2.308,474,1.723,475,1.515,476,1.959,477,2.426,478,1.515,479,2.002,480,1.349,481,1.723,482,2.504,483,1.723,484,2.002,485,2.426,486,1.758,487,1.723,488,1.959,489,0.988,490,2.002,491,2.201,492,1.723,493,2.002,494,1.092,495,1.092,496,4.555,497,2.426,498,2.273,499,1.515,500,2.426,501,2.426,502,2.426,503,1.092,504,1.349,505,1.515,506,1.515,507,1.515,508,1.515,509,2.426,510,3.524,511,1.723,512,2.426,513,2.426,514,2.002,515,1.515,516,1.723,517,1.586,518,1.959,519,2.504,520,1.349,521,3.76,522,2.002,523,2.909,524,2.002,525,1.21,526,2.002,527,4.49,528,1.586,529,2.426,530,1.959,531,1.515,532,3.426,533,1.349,534,2.504,535,1.515,536,1.349,537,2.504,538,2.002,539,2.002,540,2.002,541,1.349,542,1.21,543,2.002,544,2.002,545,1.515,546,2.002,547,2.002,548,2.426,549,2.426]],["title/injectables/FormValidatorService.html",[550,1.996,551,1.595]],["body/injectables/FormValidatorService.html",[0,0.525,3,0.406,4,0.457,5,0.312,6,0.457,8,0.514,12,0.514,14,1.41,15,0.511,16,1.73,21,0.816,29,1.138,33,1.171,36,1.104,37,0.039,38,0.585,76,2.213,82,1.479,87,2.019,94,1.412,95,0.934,97,0.568,98,1.406,103,1.634,104,1.03,105,0.016,106,0.022,107,0.016,113,1.261,119,1.634,120,1.648,128,1.73,137,1.341,156,3.299,157,1.104,162,1.891,177,2.317,178,1.912,188,1.715,191,1.217,198,2.997,201,1.217,234,2.579,237,2.997,238,2.579,282,2.631,287,2.019,294,2.997,295,2.959,298,1.138,304,3.299,306,2.579,331,1.579,332,2.734,343,1.579,344,2.997,382,2.019,390,3.594,439,1.406,442,2.932,443,2.582,457,2.268,480,2.019,488,1.406,489,1.891,494,1.138,498,2.12,515,3.197,517,1.634,518,2.019,528,1.138,533,1.406,536,1.406,545,2.9,550,2.268,551,2.12,552,2.528,553,2.528,554,3.506,555,3.299,556,2.579,557,3.494,558,2.019,559,2.268,560,2.997,561,3.63,562,1.634,563,2.019,564,2.268,565,3.63,566,3.63,567,5.119,568,1.811,569,2.528,570,5.119,571,3.63,572,3.63,573,2.528,574,2.579,575,3.832,576,2.528,577,2.086,578,2.528,579,2.086,580,2.528,581,2.528,582,2.528,583,2.528,584,3.63,585,4.917,586,3.63,587,2.579,588,2.997,589,3.63,590,2.579,591,3.63,592,1.796,593,2.528,594,2.528,595,2.528,596,3.63,597,3.63,598,2.528,599,5.273,600,2.528,601,2.528,602,2.528,603,3.63,604,2.528,605,2.528,606,2.528,607,2.528,608,2.528,609,3.63,610,2.528,611,2.528,612,2.528,613,2.528,614,2.528,615,3.63,616,2.528,617,2.528,618,2.528,619,2.528,620,2.528,621,3.63,622,2.528,623,3.63,624,2.528,625,2.528,626,2.528,627,3.018,628,2.528,629,2.528,630,2.528,631,2.528,632,2.528,633,2.528,634,3.63,635,2.528,636,2.528,637,2.528,638,2.528,639,2.528,640,4.248,641,1.579,642,1.138,643,4.248,644,4.248,645,2.528,646,2.528,647,3.63,648,2.528,649,2.528,650,1.796,651,1.406,652,2.086,653,2.528,654,2.086,655,1.796,656,3.63,657,2.528,658,2.528,659,2.528,660,1.579]],["title/pipes/FormatDataPipe.html",[20,1.18,661,2.638]],["body/pipes/FormatDataPipe.html",[0,0.501,3,0.651,4,0.733,5,0.501,6,0.733,8,0.574,12,0.762,16,1.652,20,2.232,21,0.912,33,1.483,36,1.233,37,0.039,38,0.614,46,3.535,51,2.483,54,1.24,64,2.767,84,1.668,94,1.233,95,1.497,97,0.912,105,0.025,106,0.031,107,0.025,137,1.497,201,1.359,287,2.767,295,2.023,357,2.881,476,2.767,507,3.108,661,4.107,662,4.055,663,2.767,664,3.535,665,4.976,666,4.976,667,4.107,668,4.976,669,4.055,670,4.976,671,4.055,672,4.976,673,5.761,674,5.614,675,4.055,676,5.384,677,4.976,678,2.881,679,3.347,680,4.055,681,4.055,682,4.055,683,4.055]],["title/modules/SvogvCoreModule.html",[525,1.595,684,1.996]],["body/modules/SvogvCoreModule.html",[0,0.492,3,0.639,4,0.719,5,0.492,6,0.719,8,0.563,16,1.62,33,1.096,37,0.039,94,1.775,95,1.469,97,0.894,105,0.024,106,0.03,107,0.024,137,1.469,201,1.333,251,2.213,287,2.212,295,1.985,439,2.212,525,2.663,551,2.912,684,3.763,685,2.826,686,1.62,687,2.484,688,4.406,689,1.985,690,4.603,691,3.283,692,3.283,693,3.283,694,3.283,695,4.73,696,4.059,697,3.283,698,1.79,699,3.283,700,2.213,701,4.059,702,4.917,703,5.338,704,3.977,705,5.338,706,5.338,707,4.917,708,2.826,709,4.059,710,4.917,711,3.977,712,3.977,713,3.977,714,4.059,715,3.977,716,3.977,717,4.406,718,3.977]],["title/classes/TextTreeNodeModel.html",[0,0.395,719,2.638]],["body/classes/TextTreeNodeModel.html",[0,0.429,2,1.162,3,0.557,4,0.627,5,0.429,6,0.627,8,0.491,11,1.162,12,0.798,14,1.242,15,0.701,21,1.192,27,1.768,29,1.561,30,3.721,31,1.138,32,1.37,33,1.656,36,1.612,37,0.039,38,0.64,48,1.162,53,1.162,94,1.37,97,0.78,105,0.021,106,0.028,107,0.021,128,1.836,137,1.665,157,1.054,161,1.928,188,1.665,201,1.678,204,1.928,247,1.836,333,1.162,494,1.561,719,3.721,720,3.467,721,1.958,722,3.721,723,3.898,724,3.202,725,2.815,726,3.128,727,2.239,728,2.815,729,3.202,730,2.815,731,2.249,732,2.949,733,4.003,734,4.507,735,2.463,736,4.895,737,2.862,738,2.862,739,2.463,740,2.862,741,2.862,742,2.463,743,2.463,744,2.862,745,2.166,746,2.862,747,2.862,748,1.73,749,2.463,750,2.862,751,2.166,752,2.506,753,2.862,754,2.166,755,2.862,756,2.166,757,2.862,758,2.862,759,3.467,760,3.467,761,3.467]],["title/interfaces/TreeNodeBaseModel.html",[374,1.438,752,1.777]],["body/interfaces/TreeNodeBaseModel.html",[0,0.612,3,0.646,4,0.727,5,0.497,6,0.727,8,0.57,12,0.76,14,1.365,15,0.813,21,1.206,32,1.702,33,1.479,36,1.631,37,0.039,38,0.624,93,2.472,94,1.224,97,0.905,105,0.025,106,0.03,107,0.025,137,1.829,188,1.829,201,1.798,204,2.754,374,1.811,376,2.514,721,1.982,725,3.497,727,2.281,728,3.497,730,3.094,731,2.472,732,3.113,751,3.094,752,3.476,754,3.094,756,2.514,762,4.024,763,4.953,764,4.024,765,4.024,766,4.024]],["title/classes/TreeNodeComponentModel.html",[0,0.395,767,2.638]],["body/classes/TreeNodeComponentModel.html",[0,0.426,2,1.155,3,0.553,4,0.623,5,0.426,6,0.623,8,0.488,11,1.155,12,0.796,14,1.237,15,0.696,21,1.189,29,1.551,31,0.696,32,1.365,33,1.654,36,1.608,37,0.039,38,0.657,94,1.518,95,1.272,97,0.775,105,0.021,106,0.028,107,0.021,128,1.828,137,1.658,157,1.047,161,1.916,188,1.658,201,1.673,204,1.916,247,1.828,319,2.02,333,1.155,494,1.551,721,1.954,722,3.705,723,3.896,724,3.189,725,2.804,726,3.119,727,2.234,728,2.804,729,3.189,730,2.804,731,2.24,732,2.941,733,3.996,735,2.448,736,4.89,737,2.844,738,2.844,739,2.448,740,2.844,741,2.844,742,2.448,743,2.448,744,2.844,745,2.152,746,2.844,747,2.844,748,1.719,749,2.448,750,2.844,751,2.152,752,2.496,753,2.844,754,2.152,755,2.844,756,2.152,757,2.844,758,2.844,767,3.705,768,3.445,769,3.189,770,3.705,771,3.513,772,4.489,773,4.489,774,3.445]],["title/classes/TreeNodeModel.html",[0,0.395,723,1.996]],["body/classes/TreeNodeModel.html",[0,0.536,2,0.88,3,0.422,4,0.474,5,0.325,6,0.474,8,0.372,11,1.25,12,0.772,14,1.028,15,0.531,21,1.122,29,1.182,31,0.754,32,1.686,33,1.648,36,1.517,37,0.039,38,0.606,48,0.88,54,0.93,55,1.64,61,0.97,66,2.074,93,1.861,94,1.319,95,0.97,97,0.59,103,1.679,104,1.07,105,0.016,106,0.023,107,0.016,113,2.165,128,1.767,137,1.378,144,3.079,157,1.319,161,2.627,162,1.767,164,1.46,188,1.378,201,1.583,204,2.413,247,1.519,272,2.167,287,3.194,295,1.861,333,1.25,341,2.65,494,1.679,678,2.65,721,1.378,723,3.824,724,3.083,725,2.951,726,3.117,727,2.032,728,2.71,729,3.083,730,2.33,731,1.861,733,4.171,735,3.356,739,2.65,742,2.65,743,3.683,745,2.33,748,1.861,749,2.65,751,2.33,752,2.883,754,2.33,756,1.64,775,2.626,776,3.356,777,2.951,778,4.339,779,3.083,780,4.339,781,4.339,782,4.339,783,4.339,784,3.079,785,3.73,786,2.626,787,2.626,788,2.626,789,2.626,790,2.626,791,2.626,792,2.626,793,2.626,794,2.626,795,2.626,796,2.626,797,2.626,798,2.626,799,2.626,800,2.626,801,2.626,802,2.626,803,2.626,804,2.626,805,2.626,806,2.626,807,2.626,808,2.626,809,2.626,810,2.626,811,2.626,812,2.626,813,3.73,814,4.339,815,2.626,816,5.184,817,2.626,818,2.626,819,1.866,820,2.626,821,3.73,822,3.73,823,2.626,824,2.626,825,2.626,826,2.626,827,2.626,828,3.73,829,2.626,830,2.626,831,3.73,832,2.626,833,2.626,834,4.724,835,2.626,836,2.626,837,1.64,838,2.167,839,2.626,840,3.73,841,3.73,842,3.73]],["title/classes/TreeNodeOptions.html",[0,0.395,732,1.777]],["body/classes/TreeNodeOptions.html",[0,0.496,2,1.345,3,0.644,4,0.725,5,0.496,6,0.725,8,0.568,12,0.568,14,1.362,15,0.811,21,0.902,27,1.22,29,1.806,31,1.182,32,1.629,33,1.673,36,1.22,37,0.038,38,0.647,50,2.506,66,2.231,75,2.506,77,2.506,82,2.183,97,0.902,103,1.806,104,1.634,105,0.025,106,0.03,107,0.025,247,1.634,285,2.002,721,1.979,727,2.014,732,2.98,784,3.312,843,3.312,844,5.359,845,4.944,846,4.944,847,5.593,848,4.944,849,4.617,850,4.944,851,4.944,852,4.944,853,4.944,854,4.012,855,4.081,856,4.012,857,4.012,858,4.012,859,4.012,860,4.012,861,4.012,862,4.012,863,4.012,864,4.012,865,4.012,866,3.312,867,4.012,868,3.312,869,4.012,870,3.312]],["title/changelog.html",[871,1.509,872,1.354,873,2.714]],["body/changelog.html",[2,0.877,3,0.42,5,0.583,10,1.949,11,0.877,12,0.37,13,1.177,18,1.065,20,0.966,28,1.305,31,0.752,37,0.023,38,0.396,39,1.305,42,0.877,47,1.634,49,1.856,51,1.305,53,0.877,54,0.927,57,2.16,58,2.159,60,1.454,65,1.634,68,2.324,83,1.858,84,1.58,87,2.069,88,2.643,91,1.634,93,1.305,105,0.016,106,0.023,107,0.023,114,2.069,119,1.949,120,1.247,122,2.324,157,1.316,162,1.763,164,1.454,169,2.159,177,1.305,178,1.949,184,1.454,185,1.858,188,1.374,189,3.071,191,1.451,193,2.324,217,1.305,221,1.856,222,2.77,223,2.407,224,1.634,231,1.305,233,1.305,240,1.454,275,1.454,276,1.305,282,2.16,298,1.177,317,1.454,318,3.076,319,1.177,333,0.877,336,1.515,339,1.515,343,1.634,348,1.454,356,1.634,379,1.634,390,1.634,393,1.305,402,1.305,408,1.856,418,1.305,421,1.858,435,2.16,437,1.454,443,1.454,445,1.305,450,1.454,473,2.622,488,1.454,489,1.065,491,1.634,495,1.177,498,1.305,506,2.946,528,1.674,530,2.069,533,1.454,534,1.858,536,1.454,537,1.858,542,1.305,558,2.407,562,1.177,564,1.634,568,1.305,574,1.858,587,1.858,642,1.674,650,1.858,651,1.454,686,1.515,698,1.177,700,2.122,731,1.305,748,2.16,771,1.634,779,2.643,819,1.858,874,2.616,875,4.716,876,4.982,877,3.54,878,2.616,879,2.159,880,2.407,881,2.616,882,3.54,883,3.574,884,1.858,885,3.72,886,1.858,887,1.858,888,2.616,889,2.159,890,4.329,891,2.159,892,2.616,893,3.574,894,3.071,895,2.159,896,3.72,897,1.305,898,2.616,899,1.634,900,1.634,901,2.159,902,2.616,903,1.949,904,2.616,905,2.616,906,2.616,907,2.159,908,4.329,909,2.159,910,1.858,911,1.858,912,3.574,913,2.616,914,2.324,915,2.159,916,2.616,917,1.858,918,2.962,919,4.329,920,2.616,921,3.574,922,1.858,923,2.616,924,2.616,925,2.159,926,2.159,927,2.643,928,2.616,929,3.071,930,2.616,931,2.616,932,2.616,933,2.159,934,2.616,935,2.159,936,2.616,937,3.72,938,3.72,939,2.946,940,3.72,941,1.634,942,2.616,943,2.159,944,3.72,945,2.407,946,2.616,947,2.616,948,4.329,949,2.616,950,1.634,951,2.616,952,2.407,953,3.72,954,1.858,955,1.858,956,2.159,957,1.634,958,1.856,959,4.113,960,3.72,961,1.921,962,2.616,963,1.634,964,1.634,965,3.893,966,2.616,967,2.616,968,4.329,969,3.72,970,2.616,971,3.72,972,2.616,973,1.454,974,2.324,975,2.616,976,1.454,977,2.616,978,2.616,979,2.616,980,2.616,981,2.616,982,1.634,983,2.159,984,3.72,985,3.72,986,2.616,987,2.616,988,2.159,989,1.856,990,2.764,991,2.616,992,3.071,993,2.616,994,1.858,995,2.616,996,2.616,997,3.071,998,3.071,999,2.616,1000,1.634,1001,3.071,1002,2.616,1003,2.616,1004,1.858,1005,1.858,1006,3.071,1007,2.616,1008,2.616,1009,2.616,1010,2.616,1011,1.634,1012,2.159,1013,1.634,1014,2.616,1015,2.616,1016,3.54,1017,3.72,1018,2.616,1019,2.616,1020,2.159,1021,2.616,1022,1.858,1023,2.159,1024,2.616,1025,3.72,1026,2.616,1027,2.159,1028,2.616,1029,2.616,1030,2.616,1031,2.616,1032,2.616,1033,2.616,1034,2.616,1035,2.616,1036,2.159,1037,2.616,1038,2.616,1039,2.159,1040,2.616,1041,2.616,1042,3.72,1043,1.858,1044,1.634,1045,1.454,1046,2.159,1047,2.616,1048,2.616,1049,2.616,1050,2.159,1051,1.634,1052,1.858,1053,1.858,1054,2.616,1055,2.616,1056,2.616,1057,3.071,1058,3.72,1059,2.616,1060,2.616,1061,2.159,1062,2.616,1063,2.616,1064,2.159,1065,2.616,1066,2.616,1067,2.159,1068,1.634,1069,2.159,1070,2.159,1071,1.634,1072,1.634,1073,2.616,1074,2.616,1075,2.616,1076,2.616]],["title/contributing.html",[871,1.509,872,1.354,1077,1.929]],["body/contributing.html",[3,0.32,4,0.549,5,0.671,6,0.36,8,0.282,10,2.003,16,0.811,21,0.684,27,0.605,37,0.029,38,0.324,42,1.019,48,0.667,80,1.899,84,1.572,89,1.643,102,1.414,105,0.012,106,0.019,107,0.012,120,0.667,137,0.735,162,1.988,168,3.41,175,2.51,177,0.993,184,1.107,188,0.735,191,0.667,192,1.899,194,1.243,217,1.841,221,0.993,222,1.691,231,0.993,240,2.052,318,2.16,319,0.896,336,1.503,338,1.517,339,1.503,348,1.107,381,3.046,382,1.107,402,1.841,407,1.107,411,1.107,413,1.243,421,2.16,423,1.107,431,2.51,433,1.414,442,1.691,445,0.993,447,1.414,452,2.621,457,2.305,476,1.107,483,1.414,486,1.517,503,0.896,504,1.691,506,3.343,507,1.243,517,1.369,518,2.868,520,1.107,541,1.107,542,0.993,562,0.896,564,1.243,568,1.517,627,2.16,641,1.243,642,0.896,651,1.107,655,2.935,660,1.243,686,0.811,689,1.517,698,0.896,700,2.321,748,1.517,837,2.305,877,2.16,879,1.643,884,1.414,893,3.046,894,4.583,897,1.517,899,1.899,900,1.899,901,1.643,903,1.661,914,1.243,917,1.414,945,1.107,958,1.517,961,1.682,965,2.51,973,1.691,974,1.243,990,1.841,994,2.16,1011,1.243,1020,2.51,1022,1.414,1044,1.243,1051,1.899,1064,4.029,1068,2.305,1069,3.673,1071,2.779,1072,2.779,1077,1.414,1078,1.99,1079,1.643,1080,4.154,1081,2.16,1082,3.69,1083,4.45,1084,3.69,1085,3.69,1086,3.673,1087,4.88,1088,1.643,1089,4.029,1090,3.041,1091,3.041,1092,3.69,1093,5.819,1094,3.041,1095,4.45,1096,3.69,1097,5.033,1098,1.643,1099,2.51,1100,2.58,1101,1.99,1102,1.643,1103,1.99,1104,1.99,1105,1.99,1106,1.99,1107,1.243,1108,1.99,1109,1.99,1110,1.99,1111,1.99,1112,1.99,1113,1.99,1114,1.99,1115,2.51,1116,5.494,1117,1.414,1118,1.99,1119,4.131,1120,3.287,1121,2.58,1122,2.51,1123,1.99,1124,1.643,1125,3.041,1126,3.041,1127,1.99,1128,4.131,1129,1.99,1130,1.99,1131,3.69,1132,2.621,1133,1.99,1134,3.69,1135,1.99,1136,4.131,1137,5.351,1138,4.258,1139,5.158,1140,1.99,1141,3.041,1142,1.99,1143,1.99,1144,1.643,1145,3.041,1146,3.041,1147,1.99,1148,1.99,1149,2.51,1150,3.041,1151,1.643,1152,1.99,1153,1.99,1154,1.414,1155,1.99,1156,1.99,1157,1.99,1158,1.99,1159,1.99,1160,1.99,1161,3.041,1162,3.046,1163,1.99,1164,1.99,1165,1.99,1166,1.99,1167,1.99,1168,1.99,1169,3.041,1170,1.99,1171,2.16,1172,1.99,1173,1.99,1174,1.99,1175,3.041,1176,3.041,1177,2.621,1178,1.99,1179,1.99,1180,1.99,1181,1.243,1182,1.99,1183,1.99,1184,1.643,1185,1.414,1186,1.99,1187,1.643,1188,1.99,1189,1.99,1190,1.643,1191,3.041,1192,1.643,1193,1.99,1194,3.69,1195,1.643,1196,2.16,1197,1.99,1198,1.99,1199,1.99,1200,1.99,1201,1.643,1202,1.643,1203,1.99,1204,1.99,1205,1.99,1206,1.99,1207,1.99,1208,3.041,1209,1.414,1210,1.643,1211,1.99,1212,1.414,1213,1.99,1214,3.69,1215,1.99,1216,1.99,1217,3.69,1218,1.899,1219,3.041,1220,3.041,1221,1.99,1222,1.243,1223,3.904,1224,5.428,1225,3.041,1226,4.691,1227,1.99,1228,1.643,1229,3.333,1230,1.99,1231,1.99,1232,1.99,1233,1.99,1234,1.99,1235,1.99,1236,3.69,1237,3.673,1238,1.99,1239,1.643,1240,3.041,1241,1.99,1242,1.643,1243,1.99,1244,1.99,1245,1.243,1246,1.99,1247,1.99,1248,1.99,1249,2.16,1250,4.45,1251,3.041,1252,1.99,1253,1.99,1254,1.643,1255,1.99,1256,1.99,1257,1.99,1258,3.041,1259,1.643,1260,1.99,1261,1.99,1262,3.041,1263,1.99,1264,3.69,1265,1.643,1266,2.621,1267,1.243,1268,2.51,1269,1.99,1270,1.99,1271,1.99,1272,1.243,1273,1.99,1274,1.99,1275,1.99,1276,1.99,1277,1.99,1278,1.99,1279,1.643,1280,1.99,1281,1.99,1282,1.99,1283,1.99,1284,1.107,1285,2.16,1286,1.99,1287,2.16,1288,1.99,1289,1.99,1290,1.643,1291,1.99,1292,1.99,1293,1.414,1294,1.99,1295,1.99,1296,1.99,1297,1.643,1298,4.131,1299,1.414,1300,4.131,1301,4.131,1302,1.99,1303,1.414,1304,1.243,1305,1.643,1306,1.414,1307,3.041,1308,3.041,1309,3.041,1310,1.643,1311,1.99,1312,3.041,1313,1.99,1314,1.643,1315,1.99,1316,1.414,1317,3.041,1318,1.99,1319,1.99,1320,2.16,1321,1.99,1322,1.99,1323,1.99,1324,1.643,1325,1.99,1326,1.643,1327,1.643,1328,1.99,1329,1.99,1330,1.643,1331,1.643,1332,1.643,1333,1.99,1334,1.414,1335,1.99,1336,1.107,1337,1.99,1338,1.643,1339,1.643,1340,1.99,1341,1.99,1342,3.041,1343,1.99,1344,1.99,1345,1.99,1346,3.041,1347,2.16,1348,3.041,1349,2.51,1350,1.99,1351,1.99,1352,1.99,1353,1.99,1354,1.99,1355,1.414,1356,1.99,1357,1.99,1358,1.99,1359,1.99,1360,1.99,1361,1.99,1362,1.99,1363,1.414,1364,1.99,1365,1.414,1366,1.99,1367,1.99,1368,1.99,1369,1.99,1370,1.99,1371,1.643,1372,1.99,1373,1.99,1374,1.414]],["title/dependencies.html",[686,1.556,1375,1.509]],["body/dependencies.html",[37,0.039,95,1.627,105,0.027,106,0.032,107,0.027,439,2.449,663,2.449,686,1.794,689,2.198,708,3.129,1314,4.318,1376,4.405,1377,6.087,1378,4.405,1379,5.231,1380,5.231,1381,3.636,1382,4.405,1383,4.318,1384,2.909,1385,3.636,1386,4.405,1387,3.129,1388,3.636,1389,4.405,1390,4.405,1391,2.751,1392,4.405,1393,4.405,1394,4.405,1395,4.405,1396,3.636,1397,4.405,1398,4.405,1399,4.405,1400,3.636,1401,4.405]],["title/miscellaneous/enumerations.html",[1402,1.106,1403,3.152]],["body/miscellaneous/enumerations.html",[15,0.939,31,0.939,37,0.035,54,1.158,57,2.319,66,2.584,70,2.902,104,1.893,105,0.029,106,0.033,107,0.029,109,3.836,185,4.054,231,2.319,244,3.836,283,2.902,284,3.836,286,3.836,721,1.716,779,3.301,843,3.836,855,3.836,868,3.836,870,4.456,1050,3.836,1402,1.893,1403,3.836,1404,4.647,1405,4.647,1406,4.647]],["title/miscellaneous/functions.html",[60,2.124,1402,1.106]],["body/miscellaneous/functions.html",[5,0.388,8,0.829,10,1.414,11,1.921,12,0.86,13,1.414,14,1.044,15,0.42,18,1.543,20,1.399,21,1.327,22,2.232,24,1.962,25,2.366,27,0.955,28,1.89,31,0.916,32,0.955,36,1.78,37,0.037,38,0.335,39,1.89,40,0.935,42,1.053,45,1.715,47,2.366,48,0.696,49,1.567,50,1.298,53,1.66,54,0.944,57,1.89,60,1.155,61,1.16,63,1.476,68,1.962,70,1.962,72,1.715,76,0.935,79,1.747,82,1.279,84,1.269,87,3.047,91,1.298,105,0.013,106,0.019,107,0.019,115,1.715,117,1.715,119,2.623,120,1.415,122,1.298,156,2.232,157,1.506,177,1.037,178,1.414,180,1.298,188,0.767,191,0.696,193,1.962,197,2.522,208,1.476,220,2.232,223,1.155,233,1.037,241,2.348,242,2.522,247,2.232,251,0.935,275,1.747,276,1.037,278,1.476,298,2.147,333,0.696,336,1.72,341,1.476,357,1.476,382,1.155,393,1.89,396,2.522,398,2.106,400,2.107,402,2.38,408,2.472,411,2.522,418,2.545,429,1.476,437,2.348,442,2.652,443,1.747,445,2.545,448,1.715,472,2.366,473,1.155,480,1.155,481,1.476,482,2.691,488,1.155,491,1.298,498,2.263,499,1.962,503,0.935,504,1.747,508,1.298,517,1.705,518,3.047,519,3.978,520,1.747,528,1.9,530,2.106,531,2.366,533,2.106,534,2.232,535,1.962,536,2.348,537,1.476,539,1.715,541,1.155,542,2.263,545,1.962,546,1.715,547,3.127,554,2.593,556,1.476,558,1.747,559,1.298,562,1.414,564,2.366,577,2.593,579,2.593,587,1.476,590,1.476,627,1.476,642,0.935,663,1.155,667,1.715,687,1.298,698,0.935,882,1.476,884,1.476,886,1.476,887,2.232,903,0.935,912,1.715,914,1.962,961,0.846,982,3.186,989,1.567,1000,1.298,1043,3,1045,1.155,1046,1.715,1051,1.298,1052,1.476,1071,1.298,1154,1.476,1209,1.476,1266,1.476,1285,1.476,1287,3,1324,1.715,1355,2.232,1374,1.476,1402,0.846,1407,5.1,1408,3.141,1409,4.31,1410,2.593,1411,3.141,1412,3.141,1413,3.127,1414,3.141,1415,2.593,1416,3.141,1417,3.141,1418,3.141,1419,3.141,1420,3.141,1421,3.141,1422,3.141,1423,2.593,1424,3.141,1425,3.141,1426,2.593,1427,2.077,1428,2.077,1429,5.1,1430,2.077,1431,1.715,1432,3.141,1433,2.077,1434,2.077,1435,4.31,1436,2.077,1437,2.077,1438,3.141,1439,2.077,1440,2.077,1441,1.715,1442,2.593,1443,3.141,1444,2.077,1445,2.077,1446,2.232,1447,1.715,1448,3.141,1449,1.715,1450,1.298,1451,2.077,1452,2.077,1453,3.141,1454,2.593,1455,2.077,1456,3.141,1457,1.715,1458,1.715,1459,2.077,1460,2.593,1461,2.077,1462,1.715,1463,1.476,1464,1.715,1465,2.593,1466,2.077,1467,2.593,1468,1.476,1469,3.141,1470,2.077,1471,3.141,1472,2.077,1473,2.077,1474,2.077,1475,2.077,1476,4.222,1477,3.141,1478,2.077,1479,2.077,1480,2.077,1481,2.077,1482,2.077,1483,2.077,1484,1.715,1485,2.593,1486,2.077,1487,3.788,1488,2.077,1489,2.077,1490,2.077,1491,2.077,1492,2.077,1493,2.077,1494,2.077,1495,2.077,1496,2.077,1497,2.077,1498,2.077,1499,2.077,1500,2.077,1501,2.077,1502,1.476,1503,2.077,1504,2.077,1505,1.476,1506,2.077,1507,2.593,1508,1.715,1509,2.077,1510,2.077,1511,1.715,1512,2.077,1513,2.077,1514,2.077,1515,1.715,1516,2.077,1517,3.141,1518,2.077,1519,1.476,1520,2.077,1521,2.077,1522,2.077,1523,2.593,1524,3.141,1525,2.077,1526,2.077,1527,2.077,1528,2.077,1529,2.077]],["title/index.html",[15,0.548,871,1.509,872,1.354]],["body/index.html",[0,0.518,2,0.51,3,0.498,4,0.445,5,0.44,8,0.216,10,1.109,11,1.631,12,0.439,13,0.685,14,0.679,18,1.451,20,1.145,21,0.342,25,1.539,27,1.34,28,1.229,31,0.846,32,0.463,36,0.463,37,0.037,38,0.469,39,1.778,40,1.109,42,1.631,44,1.257,47,0.951,48,1.403,49,1.548,51,2.532,53,1.039,54,0.38,60,0.847,61,0.562,63,1.75,64,2.635,65,1.539,71,1.257,74,1.539,75,2.615,76,1.884,77,0.951,79,1.725,80,0.951,82,1.263,84,1.403,87,1.37,88,1.75,91,0.951,94,1.19,97,0.801,104,0.62,105,0.009,106,0.015,107,0.009,112,1.257,114,1.37,119,1.109,120,1.311,122,0.951,123,1.257,127,1.257,157,1.083,161,0.847,164,0.847,166,1.75,171,2.56,177,1.229,178,1.109,184,2.176,191,1.796,192,0.951,193,1.539,197,0.847,199,0.951,207,0.951,220,1.082,221,0.76,223,1.981,224,0.951,231,1.548,233,1.778,235,1.257,241,1.725,242,0.847,247,2.3,251,0.685,276,1.952,282,2.644,283,0.951,285,1.548,298,1.109,306,1.082,312,1.257,319,1.604,325,1.257,331,0.951,332,1.981,333,0.51,335,2.033,336,1.451,337,1.75,338,1.548,339,0.62,360,1.75,374,1.109,379,2.615,390,2.444,392,1.257,393,1.229,396,1.37,398,0.847,400,0.76,402,1.548,403,1.257,405,1.257,407,1.725,408,1.952,411,1.37,413,0.951,415,1.257,418,1.778,423,0.847,424,0.951,426,1.75,429,1.75,435,2.289,437,0.847,438,0.951,440,1.082,442,3.06,443,0.847,444,2.56,445,1.952,449,1.082,450,0.847,451,1.082,452,1.082,457,1.539,459,1.082,460,1.082,461,1.082,462,1.082,463,1.082,464,1.082,465,1.082,466,1.082,467,1.082,468,1.082,469,1.082,470,1.082,472,0.951,473,1.37,475,0.951,476,0.847,480,0.847,486,0.76,489,1.705,492,1.082,494,0.685,495,1.109,498,1.229,499,1.937,503,0.685,504,0.847,505,1.539,508,1.539,511,1.75,515,0.951,517,0.685,528,0.685,530,2.45,531,1.539,533,1.981,535,1.539,536,1.37,541,0.847,542,2.089,545,0.951,550,1.937,551,1.778,555,2.204,556,2.204,557,1.75,558,1.981,559,1.539,562,0.685,563,0.847,568,1.952,574,1.082,575,1.257,590,1.75,641,1.539,642,1.396,650,1.082,651,1.725,652,1.257,655,1.082,660,1.937,663,1.37,678,1.082,679,1.257,689,1.548,700,1.884,701,1.257,709,1.257,714,1.257,721,1.145,726,0.951,727,1.594,745,1.937,748,0.76,770,1.257,771,3.169,776,2.974,777,0.951,837,0.951,838,1.257,849,1.257,871,0.847,872,0.76,877,1.082,880,2.768,882,1.75,883,2.56,886,1.75,887,1.75,895,1.257,897,1.952,899,0.951,900,0.951,903,1.604,911,1.082,915,1.257,917,1.75,918,0.847,921,1.257,922,1.082,925,1.257,926,1.257,929,2.033,939,2.96,941,1.539,945,0.847,950,2.226,952,1.725,954,1.082,957,1.539,958,1.229,961,1.795,963,1.937,964,1.937,973,0.847,974,0.951,976,1.37,982,3.268,983,1.257,989,1.952,990,2.532,1000,0.951,1001,1.257,1004,2.204,1005,1.082,1011,1.539,1013,1.539,1022,1.082,1036,2.941,1043,1.75,1044,2.753,1045,0.847,1052,2.78,1053,1.75,1067,1.257,1072,0.951,1077,1.082,1079,1.257,1089,1.257,1098,1.257,1100,2.226,1107,0.951,1117,1.082,1120,1.539,1121,0.951,1124,1.257,1132,1.082,1144,1.257,1149,2.033,1151,1.257,1162,1.257,1177,1.082,1181,0.951,1184,1.257,1185,1.082,1222,0.951,1228,1.257,1229,1.75,1242,2.033,1245,2.226,1259,1.257,1265,1.257,1266,2.204,1267,0.951,1272,2.226,1284,1.37,1285,2.532,1290,1.257,1293,1.082,1304,1.539,1305,1.257,1316,1.75,1336,2.45,1349,1.257,1363,1.082,1365,1.082,1374,2.532,1384,1.37,1387,2.204,1391,0.951,1413,1.257,1431,1.257,1441,1.257,1442,1.257,1446,1.082,1447,2.033,1449,1.257,1450,0.951,1454,1.257,1457,2.033,1458,1.257,1460,1.257,1463,2.204,1465,1.257,1467,2.941,1468,1.082,1484,1.257,1485,1.257,1505,1.75,1507,2.941,1511,1.257,1515,1.257,1519,1.082,1523,2.033,1530,1.523,1531,1.523,1532,1.523,1533,1.523,1534,2.974,1535,1.257,1536,2.204,1537,1.523,1538,1.523,1539,1.523,1540,1.082,1541,1.523,1542,1.257,1543,1.523,1544,1.257,1545,1.539,1546,1.082,1547,1.523,1548,1.523,1549,1.523,1550,1.523,1551,2.532,1552,1.523,1553,1.523,1554,1.257,1555,1.523,1556,1.523,1557,1.523,1558,3.102,1559,1.523,1560,1.257,1561,1.082,1562,1.257,1563,1.523,1564,1.523,1565,1.523,1566,3.102,1567,1.523,1568,1.257,1569,2.033,1570,1.523,1571,3.102,1572,1.523,1573,1.523,1574,1.523,1575,1.523,1576,2.463,1577,2.463,1578,1.523,1579,1.523,1580,1.523,1581,1.523,1582,1.523,1583,1.523,1584,1.523,1585,2.463,1586,1.523,1587,1.523,1588,1.75,1589,3.102,1590,1.523,1591,2.463,1592,1.523,1593,1.523,1594,1.523,1595,1.523,1596,1.523,1597,1.523,1598,1.523,1599,1.523,1600,2.033,1601,1.523,1602,1.523,1603,1.523,1604,1.523,1605,1.523,1606,1.523,1607,1.523,1608,2.941,1609,1.523,1610,2.463,1611,1.523,1612,1.523,1613,2.463,1614,1.523,1615,1.523,1616,1.523,1617,1.523,1618,1.257,1619,2.463,1620,1.523,1621,1.523,1622,1.523,1623,1.257,1624,2.463,1625,1.523,1626,2.56,1627,1.257,1628,1.523,1629,1.082,1630,1.523,1631,1.523,1632,3.23,1633,1.523,1634,1.523,1635,1.082,1636,1.523,1637,1.523,1638,1.523,1639,1.523,1640,1.523,1641,1.523,1642,1.523,1643,1.523,1644,1.523,1645,2.463,1646,1.523,1647,1.257,1648,1.257,1649,1.257,1650,1.523,1651,1.523,1652,1.257,1653,1.523,1654,1.523,1655,1.257,1656,1.523,1657,1.523,1658,1.523,1659,1.523,1660,2.033,1661,1.523,1662,1.523,1663,1.523,1664,1.523,1665,1.523,1666,1.523,1667,1.523,1668,1.523,1669,2.463,1670,1.523,1671,1.523,1672,1.523,1673,1.523,1674,1.523,1675,1.523,1676,1.523,1677,1.523,1678,1.523,1679,1.523,1680,1.523,1681,1.523,1682,1.523,1683,1.523,1684,1.75,1685,1.523,1686,1.523,1687,1.523,1688,1.523,1689,1.523,1690,1.523,1691,1.523,1692,1.257,1693,1.523,1694,1.257,1695,1.523,1696,2.033,1697,1.523,1698,1.523,1699,1.082,1700,1.523,1701,1.523,1702,1.257,1703,1.937,1704,1.523,1705,1.523,1706,1.523,1707,1.523,1708,1.523,1709,2.033,1710,1.523,1711,1.523,1712,2.033,1713,2.463,1714,1.257,1715,2.204,1716,1.257,1717,1.523,1718,1.523,1719,1.523,1720,1.257,1721,1.523,1722,1.082,1723,1.257,1724,1.523,1725,1.523,1726,1.523,1727,1.523,1728,1.257,1729,1.523,1730,1.523,1731,1.523,1732,1.257,1733,1.082,1734,1.082,1735,1.082,1736,1.523,1737,1.082,1738,1.523,1739,1.257,1740,1.523,1741,1.523,1742,2.033,1743,1.523,1744,1.523,1745,1.257,1746,1.257,1747,1.082,1748,1.523,1749,1.523,1750,1.257,1751,1.082,1752,1.523,1753,1.257,1754,1.257,1755,1.082,1756,1.082,1757,1.257,1758,1.257,1759,1.082,1760,1.257,1761,1.257,1762,1.257,1763,1.257,1764,2.463,1765,0.951,1766,1.523,1767,1.257,1768,1.523,1769,1.523,1770,2.463,1771,2.463,1772,1.523,1773,1.257,1774,1.257,1775,2.463,1776,1.523,1777,1.523,1778,2.463,1779,1.523,1780,1.523,1781,1.523,1782,1.257,1783,1.523,1784,1.257,1785,1.523,1786,1.257,1787,1.257,1788,1.523,1789,1.523,1790,1.257,1791,3.563,1792,1.523,1793,1.523,1794,1.523,1795,2.463,1796,1.523,1797,1.523,1798,1.523,1799,1.523]],["title/license.html",[871,1.509,872,1.354,1218,1.696]],["body/license.html",[37,0.032,64,2.425,84,1.862,105,0.027,106,0.032,107,0.027,164,2.425,197,2.892,413,2.725,424,2.725,478,2.725,664,3.099,698,1.963,889,3.601,1061,3.601,1102,3.601,1122,3.601,1218,2.725,1222,2.725,1299,3.099,1327,3.601,1338,3.601,1629,3.099,1716,4.293,1737,3.099,1747,3.695,1750,3.601,1751,3.099,1800,5.201,1801,3.601,1802,4.362,1803,5.201,1804,4.362,1805,4.362,1806,4.362,1807,4.75,1808,4.362,1809,4.362,1810,4.362,1811,5.201,1812,4.362,1813,4.362,1814,5.201,1815,4.362,1816,4.362,1817,4.362,1818,4.362,1819,4.362,1820,4.362,1821,4.362,1822,5.201,1823,4.362,1824,4.362,1825,4.362,1826,4.362,1827,4.362,1828,4.362,1829,4.362,1830,4.362]],["title/modules.html",[685,3.035]],["body/modules.html",[37,0.034,105,0.03,106,0.034,107,0.03,684,3.027,685,3.443,935,4.001,989,2.418,1384,2.695,1831,4.846]],["title/overview.html",[1181,2.668]],["body/overview.html",[2,1.534,20,1.69,37,0.036,103,2.552,105,0.028,106,0.033,107,0.028,376,2.858,525,2.669,550,2.858,551,2.829,684,3.766,686,1.864,687,2.858,688,3.777,689,2.283,690,3.777,691,3.777,692,3.777,693,3.777,694,3.777,695,4.68,696,4.416,697,3.777,698,2.06,997,3.777,1023,3.777,1181,2.858]],["title/miscellaneous/typealiases.html",[1402,1.106,1832,3.819]],["body/miscellaneous/typealiases.html",[8,0.476,11,1.824,12,0.625,13,1.987,15,0.679,18,1.368,20,1.241,27,1.021,31,1.058,32,1.342,37,0.03,38,0.66,42,1.48,48,1.126,53,1.48,54,0.837,61,1.631,74,2.099,79,2.455,85,3.137,90,3.137,93,1.676,98,2.743,105,0.021,106,0.027,107,0.021,113,2.203,114,2.455,119,1.512,128,1.368,157,1.5,173,5.043,178,1.512,180,2.099,181,2.099,201,1.126,233,1.676,241,2.743,242,2.455,251,1.512,283,2.099,285,1.676,298,1.512,319,1.512,377,2.773,393,1.676,396,1.868,398,1.868,400,2.461,408,1.676,411,1.868,418,1.676,423,2.455,435,1.676,441,2.773,445,1.676,447,2.387,459,3.137,460,3.137,461,3.137,462,3.137,463,3.137,464,3.137,465,3.137,466,3.137,467,3.137,468,3.137,469,3.137,470,3.137,472,2.099,473,2.913,474,3.137,475,2.099,476,2.455,478,2.099,479,2.773,480,2.455,481,2.387,482,3.137,483,2.387,484,2.773,486,2.203,487,2.387,488,2.743,489,1.368,490,2.773,491,2.758,492,2.387,493,3.645,494,1.987,495,1.512,498,2.203,499,2.099,503,1.512,504,1.868,505,2.099,506,2.099,507,2.099,508,2.099,511,2.387,514,3.645,515,2.099,516,2.387,517,1.987,518,2.455,519,2.387,520,1.868,521,4.071,522,2.773,523,2.773,524,2.773,525,1.676,526,2.773,527,3.645,528,1.512,530,1.868,531,2.099,532,4.071,535,2.099,538,2.773,540,3.645,541,1.868,543,2.773,544,2.773,687,2.099,903,1.512,952,1.868,961,1.368,1402,1.368,1446,2.387,1450,2.099,1648,2.773,1833,3.36,1834,6.09,1835,3.36,1836,3.36,1837,3.36,1838,3.36,1839,3.36,1840,3.36]],["title/miscellaneous/variables.html",[1402,1.106,1841,3.152]],["body/miscellaneous/variables.html",[15,0.82,19,4.447,24,2.536,28,2.688,31,1.201,37,0.039,38,0.644,53,2.026,54,1.507,61,1.5,105,0.025,106,0.031,107,0.025,349,4.447,551,2.026,699,3.352,717,4.111,1402,1.654,1409,4.905,1410,4.636,1415,4.111,1423,4.447,1426,4.111,1435,4.636,1841,3.352,1842,4.98,1843,4.98,1844,5.387,1845,5.387,1846,5.387,1847,4.98,1848,4.061,1849,4.98,1850,4.061,1851,4.061,1852,4.061]],["title/additional-documentation/package-construction.html",[82,0.961,933,1.947,1375,1.312,1853,1.676]],["body/additional-documentation/package-construction.html",[4,0.413,5,0.547,6,0.413,8,0.323,12,0.478,18,0.93,27,1.025,37,0.03,38,0.243,40,1.028,42,1.343,46,1.623,48,1.343,49,1.683,64,1.27,75,2.106,76,1.518,84,1.582,103,1.028,105,0.014,106,0.021,107,0.014,120,1.483,124,1.886,125,1.886,128,0.93,162,1.633,184,1.27,191,1.795,194,1.427,199,1.427,207,1.427,217,1.14,221,1.14,222,1.875,223,1.27,224,2.106,231,1.14,234,1.623,238,1.623,240,1.27,247,0.93,251,1.028,275,1.27,317,1.27,331,1.427,333,0.766,336,1.374,338,1.14,339,1.803,343,1.427,348,1.27,356,1.427,407,2.229,435,1.683,438,1.427,450,1.27,453,1.886,474,2.396,486,2.209,489,1.633,495,1.518,503,2.224,520,1.27,542,1.683,555,2.396,562,2.125,563,1.875,568,2,592,1.623,641,2.504,642,2.224,651,1.27,660,1.427,686,0.93,689,1.14,700,1.992,721,1.744,727,0.93,731,1.14,769,1.623,771,2.106,776,1.623,777,1.427,819,1.623,837,2.765,866,1.886,880,1.875,891,1.886,897,2.55,907,1.886,910,2.396,918,2.229,922,1.623,927,1.623,939,2.106,941,2.949,945,1.27,950,2.106,952,2.461,954,1.623,955,1.623,956,1.886,957,2.106,958,2.55,961,1.374,963,2.106,964,2.106,973,1.875,976,1.875,989,1.14,990,2.466,994,1.623,998,1.886,1000,1.427,1004,1.623,1011,1.427,1013,3.086,1016,1.623,1039,1.886,1057,1.886,1068,2.106,1071,1.427,1081,2.848,1086,1.886,1100,1.427,1107,2.949,1115,1.886,1120,2.765,1121,2.106,1171,2.396,1177,1.623,1185,1.623,1192,1.886,1195,2.784,1196,2.848,1201,1.886,1202,1.886,1209,1.623,1210,1.886,1212,2.396,1223,2.848,1245,1.427,1249,3.806,1254,1.886,1267,3.086,1272,2.106,1284,1.27,1303,1.623,1304,2.106,1306,3.355,1310,1.886,1320,1.623,1330,1.886,1334,1.623,1336,2.625,1347,1.623,1363,1.623,1365,1.623,1375,2.917,1384,1.27,1391,1.427,1450,1.427,1464,1.886,1502,1.623,1508,2.784,1519,1.623,1534,2.396,1535,1.886,1536,4.049,1540,2.396,1544,1.886,1545,1.427,1546,2.396,1554,1.886,1560,1.886,1561,1.623,1562,1.886,1569,1.886,1588,2.396,1600,1.886,1608,1.886,1626,1.886,1627,1.886,1629,1.623,1632,2.784,1635,2.848,1649,1.886,1660,1.886,1684,1.623,1692,2.784,1694,2.784,1699,1.623,1703,2.504,1709,1.886,1715,3.145,1722,3.145,1733,2.396,1734,3.355,1735,2.396,1739,1.886,1742,3.309,1746,1.886,1755,1.623,1756,1.623,1765,2.504,1773,1.886,1774,1.886,1786,1.886,1790,2.784,1854,2.284,1855,2.284,1856,2.284,1857,2.784,1858,2.284,1859,2.284,1860,2.284,1861,2.284,1862,2.284,1863,1.886,1864,2.284,1865,2.284,1866,3.372,1867,2.284,1868,2.284,1869,2.284,1870,2.284,1871,3.372,1872,2.284,1873,2.784,1874,1.886,1875,2.284,1876,3.372,1877,2.284,1878,3.309,1879,2.284,1880,2.284,1881,2.284,1882,2.284,1883,2.284,1884,2.284,1885,2.284,1886,2.284,1887,2.284,1888,2.284,1889,2.284,1890,2.284,1891,2.284,1892,1.886,1893,2.284,1894,2.284,1895,2.284,1896,2.284,1897,1.886,1898,2.784,1899,1.886,1900,1.886,1901,2.284,1902,2.284,1903,2.284,1904,3.372,1905,2.284,1906,2.284,1907,2.284,1908,2.284,1909,2.284,1910,2.284,1911,2.284,1912,2.284,1913,2.284,1914,2.784,1915,2.284,1916,1.886,1917,1.886,1918,1.886,1919,2.284,1920,2.784,1921,1.886,1922,2.784,1923,4.009,1924,2.284,1925,3.372,1926,2.284,1927,2.284,1928,2.284,1929,1.886,1930,2.284,1931,2.284,1932,2.284,1933,2.284,1934,3.372,1935,2.284,1936,2.284,1937,2.284,1938,4.009,1939,2.284,1940,2.284,1941,2.284,1942,2.284,1943,3.372,1944,2.284,1945,2.284,1946,3.372,1947,2.784,1948,2.284,1949,2.284,1950,2.284,1951,1.886,1952,2.284,1953,1.886,1954,2.284,1955,1.886,1956,2.284,1957,2.284,1958,2.284,1959,2.284,1960,4.079,1961,1.886,1962,2.284,1963,1.886,1964,1.886,1965,2.284,1966,2.284,1967,2.284,1968,2.284,1969,2.284,1970,2.284,1971,2.284,1972,2.284,1973,2.284,1974,1.886,1975,2.284,1976,2.284,1977,2.784,1978,3.372,1979,2.284,1980,2.284,1981,2.784,1982,1.886,1983,2.284,1984,3.372,1985,1.886,1986,2.284,1987,2.284,1988,2.284,1989,2.284,1990,2.284,1991,2.284,1992,2.284,1993,2.284,1994,2.284,1995,2.284,1996,2.284,1997,2.284,1998,2.284,1999,2.284,2000,2.284,2001,2.284,2002,2.284,2003,1.886,2004,2.284,2005,2.284,2006,2.284,2007,3.372,2008,2.284,2009,1.886,2010,2.284,2011,2.284,2012,2.284,2013,2.284,2014,2.284,2015,2.284,2016,3.372,2017,2.284,2018,2.284,2019,2.284,2020,2.284,2021,1.886,2022,2.284,2023,2.284,2024,1.886,2025,2.284,2026,2.284,2027,2.284,2028,2.284,2029,2.284,2030,2.284,2031,2.284,2032,2.284,2033,2.284,2034,2.284,2035,2.284]],["title/additional-documentation/package-construction/create-an-npm-package.html",[82,0.85,120,0.699,1336,1.16,1375,1.16,1853,1.482]],["body/additional-documentation/package-construction/create-an-npm-package.html",[3,0.481,5,0.451,6,0.841,8,0.579,12,0.579,16,0.795,27,0.911,37,0.037,38,0.319,40,0.878,42,1.222,49,1.495,54,0.486,57,1.819,76,0.878,84,1.624,95,0.721,105,0.012,106,0.018,107,0.012,120,1.676,162,1.485,166,2.128,181,1.219,191,1.676,194,1.219,195,1.611,199,1.219,207,1.871,208,1.386,217,0.974,219,1.611,221,0.974,222,1.085,240,1.085,275,1.085,276,0.974,282,1.495,295,0.974,316,3.009,333,1.222,336,1.485,338,1.495,339,1.974,348,1.085,356,1.219,379,2.908,400,0.974,402,0.974,407,2.695,424,2.277,426,2.59,438,1.219,439,1.085,450,1.085,451,1.386,475,1.219,478,1.219,486,0.974,487,1.386,489,1.22,495,2.356,503,1.985,516,1.386,517,0.878,525,0.974,528,0.878,557,2.128,558,2.027,559,1.871,560,1.611,562,1.348,563,1.665,568,2.696,588,3.009,592,1.386,642,2.308,654,1.611,663,1.085,686,1.22,700,0.878,708,1.386,721,1.346,727,0.795,769,2.128,777,1.219,872,0.974,880,1.085,897,1.819,899,2.755,903,1.348,909,1.611,911,1.386,914,2.755,918,2.695,939,3.027,941,1.219,943,1.611,945,1.665,950,3.203,952,2.781,957,1.871,958,2.83,959,3.009,961,1.485,963,2.554,973,3.104,974,2.277,976,1.085,982,2.554,988,1.611,989,1.819,990,2.201,992,1.611,1006,2.472,1013,3.203,1027,1.611,1045,1.665,1051,2.277,1053,1.386,1068,2.755,1070,1.611,1072,2.277,1080,1.611,1081,1.386,1088,2.472,1099,1.611,1100,1.871,1107,1.219,1117,1.386,1120,2.755,1121,2.755,1132,1.386,1138,1.611,1154,1.386,1171,1.386,1190,4.001,1196,1.386,1212,1.386,1218,2.277,1222,1.219,1223,2.59,1229,2.905,1237,1.611,1239,1.611,1245,2.554,1249,3.134,1268,2.472,1272,1.871,1279,2.472,1284,1.665,1287,1.386,1293,1.386,1297,1.611,1299,2.128,1304,1.219,1306,2.59,1316,3.307,1320,2.128,1331,2.472,1332,1.611,1334,3.967,1336,3.194,1339,2.472,1347,2.128,1355,1.386,1371,1.611,1375,2.452,1381,1.611,1383,2.472,1384,1.665,1385,1.611,1387,2.59,1388,2.472,1396,1.611,1400,1.611,1462,1.611,1463,2.59,1468,1.386,1502,2.128,1505,1.386,1534,2.128,1536,2.128,1542,1.611,1545,1.219,1551,1.386,1561,2.128,1568,1.611,1588,2.128,1618,1.611,1623,1.611,1635,2.905,1647,1.611,1652,1.611,1684,2.128,1703,1.871,1712,2.472,1715,2.128,1720,1.611,1722,2.59,1723,1.611,1728,1.611,1732,3.375,1733,2.905,1734,3.839,1735,2.128,1737,2.128,1745,2.472,1747,1.386,1759,1.386,1765,1.219,1863,2.472,1873,3.375,1874,2.472,1878,1.611,1900,1.611,1914,1.611,1916,1.611,1917,1.611,1918,1.611,1920,2.472,1921,3.009,1922,1.611,1947,1.611,1951,3.375,1953,1.611,1955,4.001,1960,2.472,1961,2.472,1963,1.611,1964,1.611,1974,1.611,1977,2.472,1981,1.611,1982,1.611,1985,1.611,2003,2.472,2009,3.009,2021,1.611,2024,1.611,2036,1.951,2037,1.951,2038,2.995,2039,3.645,2040,1.951,2041,2.995,2042,2.995,2043,2.995,2044,1.951,2045,1.951,2046,2.995,2047,2.995,2048,1.951,2049,1.951,2050,1.951,2051,1.951,2052,1.951,2053,1.951,2054,1.951,2055,1.951,2056,1.951,2057,2.995,2058,1.951,2059,1.951,2060,1.951,2061,1.951,2062,2.995,2063,1.951,2064,3.645,2065,1.951,2066,1.951,2067,1.951,2068,3.645,2069,1.951,2070,2.995,2071,1.951,2072,1.951,2073,1.951,2074,1.951,2075,1.951,2076,2.995,2077,1.951,2078,1.951,2079,1.951,2080,1.951,2081,1.951,2082,1.951,2083,3.645,2084,1.951,2085,1.951,2086,1.951,2087,1.951,2088,1.951,2089,2.995,2090,1.951,2091,1.951,2092,4.088,2093,1.951,2094,1.951,2095,1.951,2096,1.951,2097,2.995,2098,3.645,2099,2.995,2100,1.951,2101,1.951,2102,1.951,2103,1.951,2104,1.951,2105,1.951,2106,1.951,2107,1.951,2108,1.951,2109,1.951,2110,1.951,2111,1.951,2112,1.951,2113,1.951,2114,1.951,2115,1.951,2116,1.951,2117,1.951,2118,1.951,2119,1.951,2120,4.088,2121,3.645,2122,3.645,2123,1.951,2124,1.951,2125,1.951,2126,1.951,2127,1.951,2128,1.951,2129,1.951,2130,1.951,2131,1.951,2132,4.655,2133,1.951,2134,1.951,2135,1.951,2136,1.951,2137,1.951,2138,1.951,2139,1.951,2140,1.951,2141,1.951,2142,1.951,2143,1.951,2144,2.995,2145,3.645,2146,2.995,2147,2.995,2148,2.995,2149,2.995,2150,1.951,2151,1.951,2152,1.951,2153,1.951,2154,1.951,2155,1.951,2156,1.951,2157,1.951,2158,1.951,2159,1.951,2160,1.951,2161,1.951,2162,1.951,2163,1.951,2164,1.951,2165,2.995,2166,1.951,2167,1.951,2168,1.951,2169,1.951,2170,1.951,2171,1.951,2172,1.951,2173,1.951,2174,1.951,2175,1.951,2176,1.951,2177,1.951,2178,1.951,2179,1.951,2180,1.951,2181,1.951,2182,2.995,2183,1.951,2184,1.951,2185,1.951]],["title/additional-documentation/about.html",[82,1.302,1853,2.271]],["body/additional-documentation/about.html",[37,0.036,42,1.304,105,0.024,106,0.03,107,0.024,120,1.304,162,1.976,191,1.304,192,2.431,217,1.942,233,1.942,317,2.164,339,1.976,433,3.447,449,2.765,489,1.585,495,2.183,505,3.03,563,2.164,664,2.765,698,1.751,700,1.751,880,2.164,897,2.421,900,2.431,903,1.751,910,2.765,918,2.697,927,3.447,955,2.765,958,2.421,961,1.585,964,2.431,976,2.939,990,2.841,1005,2.765,1012,3.212,1016,2.765,1044,2.431,1045,2.697,1187,4.004,1267,2.431,1284,2.164,1303,3.447,1326,3.212,1391,2.431,1540,3.447,1545,2.431,1546,2.765,1551,2.765,1655,3.212,1696,4.004,1699,2.765,1702,3.212,1703,3.03,1714,3.212,1751,2.765,1753,3.212,1754,3.212,1755,3.755,1756,3.447,1757,3.212,1758,3.212,1759,3.755,1760,4.363,1761,3.212,1762,3.212,1763,3.212,1765,3.03,1767,3.212,1782,3.212,1784,3.212,1787,3.212,1801,3.212,1807,3.212,1857,3.212,1892,4.004,1897,3.212,1898,3.212,1899,4.004,1929,4.004,2186,3.891,2187,3.891,2188,3.891,2189,3.891,2190,3.891,2191,3.891,2192,5.285,2193,3.891,2194,3.891,2195,3.891,2196,4.851,2197,3.891,2198,3.891,2199,3.891,2200,3.891,2201,3.891,2202,3.891,2203,3.891,2204,3.891,2205,3.891,2206,3.891,2207,3.891,2208,3.891,2209,3.891,2210,3.891,2211,3.891,2212,3.891]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["0",{"_index":104,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["0.0.1",{"_index":2143,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.0.23",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["0.11.3",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["0.19.38",{"_index":2105,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.2.1",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":983,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.6",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":988,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.7",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["0.7.2",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["0.7.3",{"_index":1039,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["0.7.4",{"_index":1659,"title":{},"body":{"index.html":{}}}],["0.7.5",{"_index":1662,"title":{},"body":{"index.html":{}}}],["0.8.0",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["0.8.16",{"_index":2106,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["0.9.0",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":103,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"overview.html":{},"additional-documentation/package-construction.html":{}}}],["1.0",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["1.132",{"_index":1999,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1.607",{"_index":1989,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1.987",{"_index":1983,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["10",{"_index":306,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{}}}],["100",{"_index":431,"title":{},"body":{"classes/EditorModel.html":{},"contributing.html":{}}}],["11",{"_index":1532,"title":{},"body":{"index.html":{}}}],["11.0.1",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["11.0.2",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["113",{"_index":2211,"title":{},"body":{"additional-documentation/about.html":{}}}],["12683",{"_index":2212,"title":{},"body":{"additional-documentation/about.html":{}}}],["13",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["13.596",{"_index":1988,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["13569",{"_index":1995,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["14",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["1607",{"_index":1996,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["170",{"_index":1984,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1987",{"_index":1993,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["1st",{"_index":1867,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["2",{"_index":941,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["2.0.3",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1190,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["2.4.1",{"_index":2103,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["2.x",{"_index":1870,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["20",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["2016",{"_index":1802,"title":{},"body":{"license.html":{}}}],["2017",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["2019",{"_index":1016,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["2020",{"_index":1061,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["24",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1023,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["3.1.0",{"_index":2102,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["3.8.0",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["30.107",{"_index":1975,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["300",{"_index":1570,"title":{},"body":{"index.html":{}}}],["3000",{"_index":2184,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["30107",{"_index":1991,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["31",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["313",{"_index":2000,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["39",{"_index":1573,"title":{},"body":{"index.html":{}}}],["4",{"_index":1004,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["4.1.3",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["4.233",{"_index":1976,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["4.5.3",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["4233",{"_index":1992,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["45690",{"_index":1997,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["46.822",{"_index":1965,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["5",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["5.4.1",{"_index":2156,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["5.4.2",{"_index":2104,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["5e645f926",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":992,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["6.323",{"_index":1966,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["6.6.3",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1980,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["6010",{"_index":1998,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["7",{"_index":997,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["7.0.0",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["7.x",{"_index":1869,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["8",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["__hascompareproperty__${propname",{"_index":635,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasmaxlength__${propname",{"_index":604,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasminlength__${propname",{"_index":610,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__haspattern__${propname",{"_index":616,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasrangefrom__${propname",{"_index":622,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__hasrangeto__${propname",{"_index":624,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["__isrequired__${propname",{"_index":598,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["_headers",{"_index":129,"title":{},"body":{"classes/DataGridModel.html":{}}}],["_items",{"_index":130,"title":{},"body":{"classes/DataGridModel.html":{}}}],["_state",{"_index":724,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["a[colname",{"_index":322,"title":{},"body":{"classes/DataGridModel.html":{}}}],["ability",{"_index":2053,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["above",{"_index":413,"title":{},"body":{"classes/EditorModel.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["absolute",{"_index":1129,"title":{},"body":{"contributing.html":{}}}],["absolutely",{"_index":1584,"title":{},"body":{"index.html":{}}}],["ac",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["accept",{"_index":1145,"title":{},"body":{"contributing.html":{}}}],["accepted",{"_index":1161,"title":{},"body":{"contributing.html":{}}}],["accepts",{"_index":1666,"title":{},"body":{"index.html":{}}}],["access",{"_index":652,"title":{},"body":{"injectables/FormValidatorService.html":{},"index.html":{}}}],["accessors",{"_index":144,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TreeNodeModel.html":{}}}],["according",{"_index":2015,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["accordingly",{"_index":560,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["account",{"_index":2016,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["achieve",{"_index":1954,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["action",{"_index":1716,"title":{},"body":{"index.html":{},"license.html":{}}}],["actioncell",{"_index":380,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["active",{"_index":521,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["actively",{"_index":2050,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["actual",{"_index":251,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"modules/SvogvCoreModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["actually",{"_index":574,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{}}}],["add",{"_index":188,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["add(node",{"_index":763,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["add(nodes",{"_index":749,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["addcolumn",{"_index":138,"title":{},"body":{"classes/DataGridModel.html":{}}}],["addcolumn(colname",{"_index":186,"title":{},"body":{"classes/DataGridModel.html":{}}}],["addcolumnlater",{"_index":226,"title":{},"body":{"classes/DataGridModel.html":{}}}],["addcolumn}later",{"_index":324,"title":{},"body":{"classes/DataGridModel.html":{}}}],["added",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["adding",{"_index":192,"title":{},"body":{"classes/DataGridModel.html":{},"contributing.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["additional",{"_index":82,"title":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["additionally",{"_index":1046,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["address",{"_index":1458,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["adds",{"_index":1324,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{}}}],["adherence",{"_index":1241,"title":{},"body":{"contributing.html":{}}}],["admit",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":1551,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["advantages",{"_index":1547,"title":{},"body":{"index.html":{}}}],["affect",{"_index":1317,"title":{},"body":{"contributing.html":{}}}],["affected",{"_index":1188,"title":{},"body":{"contributing.html":{}}}],["again",{"_index":224,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["against",{"_index":1454,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["agreement",{"_index":1219,"title":{},"body":{"contributing.html":{}}}],["ahead",{"_index":1148,"title":{},"body":{"contributing.html":{}}}],["aka",{"_index":1552,"title":{},"body":{"index.html":{}}}],["alexa",{"_index":1798,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1833,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":1154,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["allowed",{"_index":532,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":507,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["alone",{"_index":1556,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":194,"title":{},"body":{"classes/DataGridModel.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["alternative",{"_index":2020,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["alternatively",{"_index":1603,"title":{},"body":{"index.html":{}}}],["alternatives",{"_index":1956,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["amount",{"_index":1947,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["analogclock",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["ancient",{"_index":2193,"title":{},"body":{"additional-documentation/about.html":{}}}],["and/or",{"_index":1805,"title":{},"body":{"license.html":{}}}],["angular",{"_index":990,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["angular's",{"_index":1609,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":1543,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":708,"title":{},"body":{"modules/SvogvCoreModule.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/compiler",{"_index":1381,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/core",{"_index":95,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/forms",{"_index":439,"title":{},"body":{"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"modules/SvogvCoreModule.html":{},"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/http",{"_index":2101,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/material",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1383,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular/router",{"_index":1385,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular2",{"_index":2094,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angular4",{"_index":2095,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["angularjs",{"_index":1768,"title":{},"body":{"index.html":{}}}],["annotations",{"_index":1576,"title":{},"body":{"index.html":{}}}],["anote",{"_index":1244,"title":{},"body":{"contributing.html":{}}}],["another",{"_index":957,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["answer",{"_index":1110,"title":{},"body":{"contributing.html":{}}}],["answered",{"_index":1167,"title":{},"body":{"contributing.html":{}}}],["answers",{"_index":2027,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["anything",{"_index":1340,"title":{},"body":{"contributing.html":{}}}],["anyway",{"_index":1511,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["apache",{"_index":2081,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["apart",{"_index":2033,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["api",{"_index":3,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["app",{"_index":1715,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["app's",{"_index":1877,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["appear",{"_index":478,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["appearance",{"_index":745,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"index.html":{}}}],["appears",{"_index":411,"title":{},"body":{"classes/EditorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["application",{"_index":1516,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applications",{"_index":111,"title":{},"body":{"classes/DataGridModel.html":{}}}],["applied",{"_index":90,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["applies",{"_index":1465,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["apply",{"_index":1460,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["appreciated",{"_index":1777,"title":{},"body":{"index.html":{}}}],["approach",{"_index":1560,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["appropriate",{"_index":1228,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["apps",{"_index":1699,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["archive",{"_index":1165,"title":{},"body":{"contributing.html":{}}}],["arising",{"_index":1830,"title":{},"body":{"license.html":{}}}],["around",{"_index":1895,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["array",{"_index":113,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"miscellaneous/typealiases.html":{}}}],["array.prototype.sort",{"_index":72,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/functions.html":{}}}],["ascending",{"_index":244,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["asp.net",{"_index":1788,"title":{},"body":{"index.html":{}}}],["assume",{"_index":331,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["assure",{"_index":1720,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["assures",{"_index":1476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["atom",{"_index":1959,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["attribute",{"_index":44,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"index.html":{}}}],["audience",{"_index":1530,"title":{},"body":{"index.html":{}}}],["author",{"_index":1747,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["auto",{"_index":1447,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["autoform",{"_index":1036,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["autoform&gt",{"_index":513,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["autoformcomponent",{"_index":1443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["autoforms",{"_index":479,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["automate",{"_index":1542,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["automatically",{"_index":504,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["available",{"_index":1044,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["avoid",{"_index":1500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aware",{"_index":1607,"title":{},"body":{"index.html":{}}}],["awesome",{"_index":1391,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["aws",{"_index":1795,"title":{},"body":{"index.html":{}}}],["azure",{"_index":1791,"title":{},"body":{"index.html":{}}}],["a}validator",{"_index":565,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["b",{"_index":102,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"contributing.html":{}}}],["b[colname",{"_index":323,"title":{},"body":{"classes/DataGridModel.html":{}}}],["back",{"_index":1864,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["backcolor",{"_index":844,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["backend",{"_index":1787,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["background",{"_index":1854,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["bad",{"_index":1949,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["base",{"_index":93,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":1000,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["basic",{"_index":450,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["becomes",{"_index":1908,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["before",{"_index":1072,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["begin",{"_index":1310,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["beginners",{"_index":2023,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["behavior",{"_index":748,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["being",{"_index":402,"title":{},"body":{"classes/EditorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["believe",{"_index":1741,"title":{},"body":{"index.html":{}}}],["below",{"_index":1653,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":1944,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["berlin",{"_index":1753,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["best",{"_index":1130,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":1081,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["between",{"_index":895,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["big",{"_index":998,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["binding",{"_index":1637,"title":{},"body":{"index.html":{}}}],["bit",{"_index":1760,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["bitbucket",{"_index":2022,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["block",{"_index":2041,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["body",{"_index":1298,"title":{},"body":{"contributing.html":{}}}],["book",{"_index":2204,"title":{},"body":{"additional-documentation/about.html":{}}}],["bool",{"_index":1667,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":32,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":689,"title":{},"body":{"modules/SvogvCoreModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/package-construction.html":{}}}],["boring",{"_index":2011,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["both",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["bower_components",{"_index":1986,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["box",{"_index":1678,"title":{},"body":{"index.html":{}}}],["boxes",{"_index":490,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["brainer",{"_index":1913,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["branch",{"_index":1224,"title":{},"body":{"contributing.html":{}}}],["brave",{"_index":1928,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["breadcrumb",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":893,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["brings",{"_index":1899,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["bro",{"_index":1969,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["broccoli",{"_index":1335,"title":{},"body":{"contributing.html":{}}}],["brought",{"_index":2201,"title":{},"body":{"additional-documentation/about.html":{}}}],["browse",{"_index":1831,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1384,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["browser's",{"_index":1888,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["browsers",{"_index":1194,"title":{},"body":{"contributing.html":{}}}],["bug",{"_index":1064,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["bugs",{"_index":1088,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["build",{"_index":568,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["build(target",{"_index":572,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["building",{"_index":1882,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["builds",{"_index":2140,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["bundle",{"_index":1566,"title":{},"body":{"index.html":{}}}],["bundles",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["bundles/svogv.umd.js",{"_index":2088,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["business",{"_index":1757,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["button",{"_index":169,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{}}}],["buttons",{"_index":58,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{}}}],["buy",{"_index":1930,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["c",{"_index":1801,"title":{},"body":{"license.html":{},"additional-documentation/about.html":{}}}],["c:\\app",{"_index":2008,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["cal",{"_index":1680,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":499,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["calender",{"_index":1677,"title":{},"body":{"index.html":{}}}],["call",{"_index":234,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"additional-documentation/package-construction.html":{}}}],["callback",{"_index":70,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":207,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["caller",{"_index":210,"title":{},"body":{"classes/DataGridModel.html":{}}}],["calling",{"_index":225,"title":{},"body":{"classes/DataGridModel.html":{}}}],["can't",{"_index":1209,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["cansort",{"_index":1503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capability",{"_index":1559,"title":{},"body":{"index.html":{}}}],["capacity",{"_index":1109,"title":{},"body":{"contributing.html":{}}}],["capitalize",{"_index":1350,"title":{},"body":{"contributing.html":{}}}],["care",{"_index":1735,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["casde",{"_index":1509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":1051,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["cases",{"_index":1230,"title":{},"body":{"contributing.html":{}}}],["cast",{"_index":586,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["catch",{"_index":593,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["causing",{"_index":1213,"title":{},"body":{"contributing.html":{}}}],["cd",{"_index":2009,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["cell",{"_index":1654,"title":{},"body":{"index.html":{}}}],["cell's",{"_index":1658,"title":{},"body":{"index.html":{}}}],["cells",{"_index":1515,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["center",{"_index":2084,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["certain",{"_index":78,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["chain",{"_index":1874,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["chances",{"_index":1179,"title":{},"body":{"contributing.html":{}}}],["change",{"_index":506,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["changed",{"_index":1349,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["changelog",{"_index":873,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":894,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["changing",{"_index":219,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["chapter",{"_index":2122,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["character",{"_index":417,"title":{},"body":{"classes/EditorModel.html":{}}}],["characters",{"_index":1287,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["chars",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["chat",{"_index":1113,"title":{},"body":{"contributing.html":{}}}],["cheap",{"_index":1935,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["check",{"_index":348,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["checkable",{"_index":845,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["checkbox",{"_index":1669,"title":{},"body":{"index.html":{}}}],["checkboxes",{"_index":1707,"title":{},"body":{"index.html":{}}}],["checked",{"_index":855,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["checkout",{"_index":1225,"title":{},"body":{"contributing.html":{}}}],["checks",{"_index":1624,"title":{},"body":{"index.html":{}}}],["children",{"_index":725,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["choice",{"_index":2066,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["choose",{"_index":1923,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["chore",{"_index":1337,"title":{},"body":{"contributing.html":{}}}],["ci",{"_index":1330,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["cla",{"_index":1095,"title":{},"body":{"contributing.html":{}}}],["clarifies",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":0,"title":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["classic",{"_index":1705,"title":{},"body":{"index.html":{}}}],["clean",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["cleaner",{"_index":1909,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["clear",{"_index":1884,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["cli",{"_index":1001,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["click",{"_index":1368,"title":{},"body":{"contributing.html":{}}}],["clicks",{"_index":167,"title":{},"body":{"classes/DataGridModel.html":{}}}],["client",{"_index":182,"title":{},"body":{"classes/DataGridModel.html":{}}}],["clone",{"_index":1719,"title":{},"body":{"index.html":{}}}],["close",{"_index":1574,"title":{},"body":{"index.html":{}}}],["closed",{"_index":1215,"title":{},"body":{"contributing.html":{}}}],["closer",{"_index":1885,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["closes",{"_index":1357,"title":{},"body":{"contributing.html":{}}}],["cloud",{"_index":1790,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["cluster_svogvcoremodule",{"_index":692,"title":{},"body":{"modules/SvogvCoreModule.html":{},"overview.html":{}}}],["cluster_svogvcoremodule_declarations",{"_index":693,"title":{},"body":{"modules/SvogvCoreModule.html":{},"overview.html":{}}}],["cluster_svogvcoremodule_providers",{"_index":694,"title":{},"body":{"modules/SvogvCoreModule.html":{},"overview.html":{}}}],["code",{"_index":5,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["codepen",{"_index":1125,"title":{},"body":{"contributing.html":{}}}],["coding",{"_index":1092,"title":{},"body":{"contributing.html":{}}}],["coffeescript",{"_index":1896,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["col",{"_index":325,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["col.hidden",{"_index":328,"title":{},"body":{"classes/DataGridModel.html":{}}}],["collapsable",{"_index":846,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["collection",{"_index":196,"title":{},"body":{"classes/DataGridModel.html":{}}}],["colname",{"_index":200,"title":{},"body":{"classes/DataGridModel.html":{}}}],["colon",{"_index":419,"title":{},"body":{"classes/EditorModel.html":{}}}],["colons",{"_index":1322,"title":{},"body":{"contributing.html":{}}}],["color",{"_index":847,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["column",{"_index":65,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"index.html":{}}}],["columns",{"_index":193,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["columsn",{"_index":1499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["combinations",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":1863,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["comes",{"_index":922,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["command",{"_index":1245,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["commands",{"_index":2085,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["commercial",{"_index":1744,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1093,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1860,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["commonmodule",{"_index":707,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["community",{"_index":1112,"title":{},"body":{"contributing.html":{}}}],["companies",{"_index":1933,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["compare",{"_index":528,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["compare(withproperty",{"_index":1430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compare.decorator.ts",{"_index":1408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compared",{"_index":1432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compares",{"_index":1431,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["comparetype",{"_index":464,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["comparision",{"_index":284,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["comparisons",{"_index":1644,"title":{},"body":{"index.html":{}}}],["competing",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["compilation",{"_index":2172,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["compiler",{"_index":2168,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["compilers",{"_index":1893,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["complement",{"_index":1697,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1626,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["completely",{"_index":2206,"title":{},"body":{"additional-documentation/about.html":{}}}],["complex",{"_index":925,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":771,"title":{},"body":{"classes/TreeNodeComponentModel.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["component's",{"_index":770,"title":{},"body":{"classes/TreeNodeComponentModel.html":{},"index.html":{}}}],["components",{"_index":880,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["concept",{"_index":1881,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["concise",{"_index":1919,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["concrete",{"_index":2006,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["conduct",{"_index":1084,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":2125,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["configuration",{"_index":1331,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["configure",{"_index":1687,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":1905,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["connect",{"_index":59,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["connection",{"_index":1629,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/package-construction.html":{}}}],["connects",{"_index":1636,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":1821,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1150,"title":{},"body":{"contributing.html":{}}}],["considering",{"_index":1939,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["consistency",{"_index":1274,"title":{},"body":{"contributing.html":{}}}],["consists",{"_index":1297,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["console.error('invalid",{"_index":595,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["console.log('formatdatapipe:nopipetoken",{"_index":680,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["console.log('formatdatapipe:pipetoken",{"_index":681,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["const",{"_index":295,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TreeNodeModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["construction",{"_index":933,"title":{"additional-documentation/package-construction.html":{}},"body":{"changelog.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{}}}],["constructor(@inject(formbuilder",{"_index":581,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["constructor(component",{"_index":772,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["constructor(fb",{"_index":569,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["constructor(items",{"_index":155,"title":{},"body":{"classes/DataGridModel.html":{}}}],["constructor(options",{"_index":784,"title":{},"body":{"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{}}}],["constructor(private",{"_index":679,"title":{},"body":{"pipes/FormatDataPipe.html":{},"index.html":{}}}],["constructor(public",{"_index":99,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["constructor(text",{"_index":30,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/TextTreeNodeModel.html":{}}}],["contact",{"_index":1098,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["contain",{"_index":1355,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["contains",{"_index":564,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["content",{"_index":511,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["context",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":343,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["continuees",{"_index":2138,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["continues",{"_index":891,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["contract",{"_index":1827,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":1354,"title":{},"body":{"contributing.html":{}}}],["contribute",{"_index":1079,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["contributing",{"_index":1077,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":1261,"title":{},"body":{"contributing.html":{}}}],["contributions",{"_index":1147,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1082,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":494,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["controlled",{"_index":283,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["controller",{"_index":1891,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["controlling",{"_index":110,"title":{},"body":{"classes/DataGridModel.html":{}}}],["controls",{"_index":488,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["conventions",{"_index":1240,"title":{},"body":{"contributing.html":{}}}],["convert",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["coordinate",{"_index":1155,"title":{},"body":{"contributing.html":{}}}],["copies",{"_index":1812,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1804,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1800,"title":{},"body":{"license.html":{}}}],["core",{"_index":1387,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["corporations",{"_index":1369,"title":{},"body":{"contributing.html":{}}}],["correcting",{"_index":1328,"title":{},"body":{"contributing.html":{}}}],["cosmosdb",{"_index":1792,"title":{},"body":{"index.html":{}}}],["count",{"_index":124,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction.html":{}}}],["counting",{"_index":1987,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["course",{"_index":1627,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["covered",{"_index":2121,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["craft",{"_index":1159,"title":{},"body":{"contributing.html":{}}}],["crafted",{"_index":1163,"title":{},"body":{"contributing.html":{}}}],["crap",{"_index":2194,"title":{},"body":{"additional-documentation/about.html":{}}}],["create",{"_index":120,"title":{"additional-documentation/package-construction/create-an-npm-package.html":{}},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["created",{"_index":559,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["createheadersfortype",{"_index":139,"title":{},"body":{"classes/DataGridModel.html":{}}}],["createheadersfortype(type",{"_index":202,"title":{},"body":{"classes/DataGridModel.html":{}}}],["creates",{"_index":556,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["creating",{"_index":563,"title":{},"body":{"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["creation",{"_index":1562,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["css",{"_index":2137,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ctor",{"_index":35,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["ctrl",{"_index":656,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["current",{"_index":184,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["currently",{"_index":275,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["currentpageindex",{"_index":131,"title":{},"body":{"classes/DataGridModel.html":{}}}],["currentrowend",{"_index":148,"title":{},"body":{"classes/DataGridModel.html":{}}}],["currentrowstart",{"_index":147,"title":{},"body":{"classes/DataGridModel.html":{}}}],["curve",{"_index":1902,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["custom",{"_index":87,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["customers",{"_index":1772,"title":{},"body":{"index.html":{}}}],["customizable",{"_index":1628,"title":{},"body":{"index.html":{}}}],["d",{"_index":1270,"title":{},"body":{"contributing.html":{}}}],["damages",{"_index":1822,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":1727,"title":{},"body":{"index.html":{}}}],["data",{"_index":64,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"pipes/FormatDataPipe.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction.html":{}}}],["datagrid",{"_index":882,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["datagrid\">does",{"_index":1497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datagridcomponent",{"_index":1438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datagridheader.model",{"_index":281,"title":{},"body":{"classes/DataGridModel.html":{}}}],["datagridheadermodel",{"_index":1,"title":{"classes/DataGridHeaderModel.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["datagridheadermodel(propname",{"_index":351,"title":{},"body":{"classes/DataGridModel.html":{}}}],["datagridmodel",{"_index":108,"title":{"classes/DataGridModel.html":{}},"body":{"classes/DataGridModel.html":{}}}],["datagridstyle.model",{"_index":96,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["datagridstyles",{"_index":375,"title":{"interfaces/DatagridStyles.html":{}},"body":{"interfaces/DatagridStyles.html":{}}}],["datatype",{"_index":1510,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":498,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["date.parse(f.tostring",{"_index":631,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["date.parse(t.tostring",{"_index":632,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["datepicker",{"_index":1343,"title":{},"body":{"contributing.html":{}}}],["dates",{"_index":1485,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["days",{"_index":1758,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["dealt",{"_index":1180,"title":{},"body":{"contributing.html":{}}}],["debugging",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["decided",{"_index":1773,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["decision",{"_index":2049,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["declarations",{"_index":688,"title":{},"body":{"modules/SvogvCoreModule.html":{},"overview.html":{}}}],["decorated",{"_index":480,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decorator",{"_index":119,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["decorators",{"_index":282,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dedicated",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["deeply",{"_index":1740,"title":{},"body":{"index.html":{}}}],["default",{"_index":53,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1620,"title":{},"body":{"index.html":{}}}],["define",{"_index":1448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":33,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{}}}],["definition",{"_index":701,"title":{},"body":{"modules/SvogvCoreModule.html":{},"index.html":{}}}],["delete",{"_index":168,"title":{},"body":{"classes/DataGridModel.html":{},"contributing.html":{}}}],["deleteitem",{"_index":140,"title":{},"body":{"classes/DataGridModel.html":{}}}],["deleteitem(item",{"_index":205,"title":{},"body":{"classes/DataGridModel.html":{}}}],["deliver",{"_index":1691,"title":{},"body":{"index.html":{}}}],["demo",{"_index":939,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["demoall",{"_index":2144,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dependencies",{"_index":686,"title":{"dependencies.html":{}},"body":{"modules/SvogvCoreModule.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dependency",{"_index":1585,"title":{},"body":{"index.html":{}}}],["dependent",{"_index":1663,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1512,"title":{},"body":{"miscellaneous/functions.html":{}}}],["depends",{"_index":2044,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["deploy",{"_index":1920,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["desc",{"_index":17,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["descended",{"_index":243,"title":{},"body":{"classes/DataGridModel.html":{}}}],["descending",{"_index":286,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":9,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["described",{"_index":1234,"title":{},"body":{"contributing.html":{}}}],["describes",{"_index":474,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["descriptions",{"_index":455,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["descriptive",{"_index":1239,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["descrption",{"_index":1205,"title":{},"body":{"contributing.html":{}}}],["design",{"_index":1535,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["designed",{"_index":1686,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1361,"title":{},"body":{"contributing.html":{}}}],["detailled",{"_index":456,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["details",{"_index":1281,"title":{},"body":{"contributing.html":{}}}],["determine",{"_index":1645,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1778,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1918,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["developer",{"_index":1235,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1540,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["development",{"_index":1107,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["diagnose",{"_index":1133,"title":{},"body":{"contributing.html":{}}}],["dialog",{"_index":1344,"title":{},"body":{"contributing.html":{}}}],["dictionary",{"_index":1513,"title":{},"body":{"miscellaneous/functions.html":{}}}],["didn't",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":1690,"title":{},"body":{"index.html":{}}}],["different",{"_index":453,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"additional-documentation/package-construction.html":{}}}],["dir",{"_index":228,"title":{},"body":{"classes/DataGridModel.html":{}}}],["direct",{"_index":1102,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["direction",{"_index":185,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["direction.ascending",{"_index":314,"title":{},"body":{"classes/DataGridModel.html":{}}}],["direction.descending",{"_index":315,"title":{},"body":{"classes/DataGridModel.html":{}}}],["directive",{"_index":278,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"miscellaneous/functions.html":{}}}],["directly",{"_index":89,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"contributing.html":{}}}],["disabled",{"_index":1050,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["disc",{"_index":2001,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["disclaims",{"_index":1813,"title":{},"body":{"license.html":{}}}],["discussed",{"_index":1153,"title":{},"body":{"contributing.html":{}}}],["discussion",{"_index":1104,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":39,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["display('e",{"_index":1590,"title":{},"body":{"index.html":{}}}],["display('phone",{"_index":1592,"title":{},"body":{"index.html":{}}}],["display('user",{"_index":1597,"title":{},"body":{"index.html":{}}}],["display(name",{"_index":1436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["display.decorator.ts",{"_index":1410,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["display.desc(type",{"_index":347,"title":{},"body":{"classes/DataGridModel.html":{}}}],["display.name(type",{"_index":345,"title":{},"body":{"classes/DataGridModel.html":{}}}],["displaydesc",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displaygroup",{"_index":472,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["displaygroup(name",{"_index":1445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["displaygroup.decorator.ts",{"_index":1411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["displaygrouptype",{"_index":460,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["displayname",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayorder",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displaytype",{"_index":459,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["dist",{"_index":1981,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["distinct",{"_index":2055,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["distribute",{"_index":1806,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2019,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["dive",{"_index":2108,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["docs",{"_index":1316,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["document",{"_index":1363,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["documentation",{"_index":1068,"title":{},"body":{"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["documentation's",{"_index":2116,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["documented",{"_index":1280,"title":{},"body":{"contributing.html":{}}}],["doing",{"_index":1945,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["don't",{"_index":837,"title":{},"body":{"classes/TreeNodeModel.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["done",{"_index":2133,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dot",{"_index":1352,"title":{},"body":{"contributing.html":{}}}],["down",{"_index":1979,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["drawback",{"_index":1962,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["driven",{"_index":475,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["drop",{"_index":1775,"title":{},"body":{"index.html":{}}}],["dropdown",{"_index":1679,"title":{},"body":{"index.html":{}}}],["dropmenu",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["dude",{"_index":1968,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["due",{"_index":483,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["duplicate",{"_index":1175,"title":{},"body":{"contributing.html":{}}}],["duplication",{"_index":1158,"title":{},"body":{"contributing.html":{}}}],["durandal",{"_index":2188,"title":{},"body":{"additional-documentation/about.html":{}}}],["dynamic",{"_index":663,"title":{},"body":{"pipes/FormatDataPipe.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["dynamically",{"_index":1548,"title":{},"body":{"index.html":{}}}],["e",{"_index":1457,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["e.g",{"_index":1189,"title":{},"body":{"contributing.html":{}}}],["each",{"_index":447,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["early",{"_index":900,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["easier",{"_index":1303,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["easy",{"_index":651,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["ecosystem",{"_index":1742,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["edge",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["edit",{"_index":171,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["edited",{"_index":1248,"title":{},"body":{"contributing.html":{}}}],["editing",{"_index":1558,"title":{},"body":{"index.html":{}}}],["edititem",{"_index":141,"title":{},"body":{"classes/DataGridModel.html":{}}}],["edititem(item",{"_index":213,"title":{},"body":{"classes/DataGridModel.html":{}}}],["editor",{"_index":435,"title":{},"body":{"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["editorcomponent",{"_index":1437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorcomponent\">editorcomponent",{"_index":1473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editormodel",{"_index":387,"title":{"classes/EditorModel.html":{}},"body":{"classes/EditorModel.html":{}}}],["editors",{"_index":650,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{}}}],["editusercomponent",{"_index":1611,"title":{},"body":{"index.html":{}}}],["effort",{"_index":1171,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["efforts",{"_index":1156,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":473,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["element's",{"_index":1444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elements",{"_index":114,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["email",{"_index":530,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["email(msg",{"_index":1452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["email.decorator.ts",{"_index":1412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emailtype",{"_index":469,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["embraces",{"_index":1868,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["empty",{"_index":438,"title":{},"body":{"classes/EditorModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["encapsulates",{"_index":1872,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["end",{"_index":433,"title":{},"body":{"classes/EditorModel.html":{},"contributing.html":{},"additional-documentation/about.html":{}}}],["engine",{"_index":2012,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["engines",{"_index":2155,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["enormous",{"_index":1906,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["enough",{"_index":2030,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["ensure",{"_index":1236,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":1900,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["enterprises",{"_index":1746,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["entity",{"_index":1789,"title":{},"body":{"index.html":{}}}],["entry",{"_index":2117,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["enum",{"_index":285,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TreeNodeOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["enumerations",{"_index":1403,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumvalues",{"_index":389,"title":{},"body":{"classes/EditorModel.html":{}}}],["environment",{"_index":911,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["equals",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["errgroup",{"_index":584,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errgroup)[propname",{"_index":647,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs",{"_index":596,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['compare",{"_index":636,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['maxlength",{"_index":605,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['minlength",{"_index":611,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['pattern",{"_index":617,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['range",{"_index":625,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["errmsgs)['required",{"_index":600,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["error",{"_index":517,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["errors",{"_index":589,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["es",{"_index":359,"title":{},"body":{"classes/DataGridModel.html":{}}}],["especially",{"_index":1466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etc",{"_index":1128,"title":{},"body":{"contributing.html":{}}}],["even",{"_index":641,"title":{},"body":{"injectables/FormValidatorService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["event",{"_index":164,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["eventemitter",{"_index":161,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"index.html":{}}}],["events",{"_index":1708,"title":{},"body":{"index.html":{}}}],["everything",{"_index":1722,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["evolve",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["ex",{"_index":594,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["exact",{"_index":1688,"title":{},"body":{"index.html":{}}}],["example",{"_index":452,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"index.html":{}}}],["exclude",{"_index":1649,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["excludes",{"_index":1650,"title":{},"body":{"index.html":{}}}],["excute",{"_index":2157,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["exec",{"_index":2146,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["execdemo",{"_index":2147,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["execute",{"_index":426,"title":{},"body":{"classes/EditorModel.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["executes",{"_index":1656,"title":{},"body":{"index.html":{}}}],["execution",{"_index":2178,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["existence",{"_index":484,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["existing",{"_index":1329,"title":{},"body":{"contributing.html":{}}}],["exists",{"_index":195,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["expand",{"_index":857,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["expandable",{"_index":835,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["expanded",{"_index":1406,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["experience",{"_index":1696,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["experimental",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["experiments",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["explain",{"_index":1192,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["explains",{"_index":2205,"title":{},"body":{"additional-documentation/about.html":{}}}],["explanation",{"_index":1362,"title":{},"body":{"contributing.html":{}}}],["explicitly",{"_index":761,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["export",{"_index":97,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"index.html":{}}}],["exports",{"_index":691,"title":{},"body":{"modules/SvogvCoreModule.html":{},"overview.html":{}}}],["expression",{"_index":887,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["extends",{"_index":722,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["extension",{"_index":1563,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":280,"title":{},"body":{"classes/DataGridModel.html":{}}}],["external",{"_index":1332,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["externally",{"_index":666,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["extract",{"_index":2110,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["f",{"_index":627,"title":{},"body":{"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["fall",{"_index":1488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":55,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"classes/TreeNodeModel.html":{}}}],["familiar",{"_index":1880,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["far",{"_index":1204,"title":{},"body":{"contributing.html":{}}}],["fast",{"_index":1546,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["fax",{"_index":1373,"title":{},"body":{"contributing.html":{}}}],["fb",{"_index":567,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["feat",{"_index":1315,"title":{},"body":{"contributing.html":{}}}],["feature",{"_index":1089,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["features",{"_index":1162,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["fee",{"_index":1808,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":1776,"title":{},"body":{"index.html":{}}}],["feeling",{"_index":2190,"title":{},"body":{"additional-documentation/about.html":{}}}],["few",{"_index":2076,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ff",{"_index":1273,"title":{},"body":{"contributing.html":{}}}],["ffff",{"_index":1456,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field",{"_index":11,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["field's",{"_index":547,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["fieldname",{"_index":546,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["fields",{"_index":418,"title":{},"body":{"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fieldset",{"_index":1648,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["fieldsets",{"_index":1838,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fieldtocompare",{"_index":529,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["fieldtypes",{"_index":401,"title":{},"body":{"classes/EditorModel.html":{}}}],["file",{"_index":6,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["files",{"_index":1249,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["filter",{"_index":179,"title":{},"body":{"classes/DataGridModel.html":{}}}],["filtering",{"_index":123,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["filters",{"_index":176,"title":{},"body":{"classes/DataGridModel.html":{}}}],["final",{"_index":2086,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["finally",{"_index":1694,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["find",{"_index":1117,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["fine",{"_index":1723,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["fire",{"_index":838,"title":{},"body":{"classes/TreeNodeModel.html":{},"index.html":{}}}],["firebase",{"_index":2151,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["fired",{"_index":165,"title":{},"body":{"classes/DataGridModel.html":{}}}],["first",{"_index":339,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["fitness",{"_index":1818,"title":{},"body":{"license.html":{}}}],["fits",{"_index":1554,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["fix",{"_index":1139,"title":{},"body":{"contributing.html":{}}}],["fixes",{"_index":965,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["fixing",{"_index":1173,"title":{},"body":{"contributing.html":{}}}],["flavors",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["fly",{"_index":2180,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["focus",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":1734,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["folders",{"_index":1960,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["follow",{"_index":1069,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["followed",{"_index":1311,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1177,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["follows",{"_index":1020,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["font",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["fontawesome",{"_index":863,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["footer",{"_index":381,"title":{},"body":{"interfaces/DatagridStyles.html":{},"contributing.html":{}}}],["force",{"_index":1259,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["forces",{"_index":1651,"title":{},"body":{"index.html":{}}}],["fork",{"_index":1251,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":442,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["form's",{"_index":405,"title":{},"body":{"classes/EditorModel.html":{},"index.html":{}}}],["form)['__editormodel__",{"_index":653,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["form.controls[propname",{"_index":657,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["form.controls[propname])['messages",{"_index":658,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["format",{"_index":80,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"contributing.html":{},"index.html":{}}}],["formatdata",{"_index":670,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["formatdatapipe",{"_index":661,"title":{"pipes/FormatDataPipe.html":{}},"body":{"pipes/FormatDataPipe.html":{}}}],["formatpipe",{"_index":1413,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["formatpipe(datepipe",{"_index":1682,"title":{},"body":{"index.html":{}}}],["formatpipe(pipe",{"_index":1459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatpipe.decorator.ts",{"_index":1414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatted",{"_index":1290,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["formatter",{"_index":667,"title":{},"body":{"pipes/FormatDataPipe.html":{},"miscellaneous/functions.html":{}}}],["formatting",{"_index":476,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["formattype",{"_index":461,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["formbuilder",{"_index":570,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["formgroup",{"_index":390,"title":{},"body":{"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{}}}],["formhints",{"_index":1605,"title":{},"body":{"index.html":{}}}],["formhints.display('e",{"_index":1606,"title":{},"body":{"index.html":{}}}],["forms",{"_index":982,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["formsmodule",{"_index":710,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["formvalidatorfromjsonservice",{"_index":714,"title":{},"body":{"modules/SvogvCoreModule.html":{},"index.html":{}}}],["formvalidatormodel",{"_index":440,"title":{"interfaces/FormValidatorModel.html":{}},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{}}}],["formvalidatorservice",{"_index":551,"title":{"injectables/FormValidatorService.html":{}},"body":{"injectables/FormValidatorService.html":{},"modules/SvogvCoreModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["forroot",{"_index":703,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["fortunatly",{"_index":2112,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["forward",{"_index":649,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["forwarding",{"_index":665,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["found",{"_index":1115,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["foundation",{"_index":1878,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["framework",{"_index":1771,"title":{},"body":{"index.html":{}}}],["frameworks",{"_index":1756,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["free",{"_index":1739,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["fromjson.service",{"_index":716,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["fromvalue",{"_index":391,"title":{},"body":{"classes/EditorModel.html":{}}}],["front",{"_index":2196,"title":{},"body":{"additional-documentation/about.html":{}}}],["frontend",{"_index":1786,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["fruststrating",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["fucntion",{"_index":232,"title":{},"body":{"classes/DataGridModel.html":{}}}],["full",{"_index":1149,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["fullfilles",{"_index":1480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fully",{"_index":1631,"title":{},"body":{"index.html":{}}}],["function",{"_index":68,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":1855,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["functions",{"_index":60,"title":{"miscellaneous/functions.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["further",{"_index":1440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fv",{"_index":1614,"title":{},"body":{"index.html":{}}}],["general",{"_index":2087,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["generate",{"_index":1295,"title":{},"body":{"contributing.html":{}}}],["generated",{"_index":520,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["generator",{"_index":2124,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["germany",{"_index":1754,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["getcurrentrowend",{"_index":256,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getcurrentrowstart",{"_index":254,"title":{},"body":{"classes/DataGridModel.html":{}}}],["gethaschildren",{"_index":797,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getheaders",{"_index":270,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getheadersnotvisible",{"_index":273,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getitems",{"_index":262,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getitemsfiltered",{"_index":266,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getitemsoncurrentpage",{"_index":268,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getmaxpageindex",{"_index":260,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getpath",{"_index":795,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["gets",{"_index":1508,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["getstartrow",{"_index":258,"title":{},"body":{"classes/DataGridModel.html":{}}}],["getstate",{"_index":799,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateischecked",{"_index":809,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateisdisabled",{"_index":805,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateisexpandend",{"_index":803,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getstateisselected",{"_index":807,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["getting",{"_index":871,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettotalfilteredrows",{"_index":252,"title":{},"body":{"classes/DataGridModel.html":{}}}],["gettotalrows",{"_index":248,"title":{},"body":{"classes/DataGridModel.html":{}}}],["git",{"_index":1223,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["git+https://github.com/your",{"_index":2152,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["github",{"_index":1120,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["github's",{"_index":2118,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gitter",{"_index":1114,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":516,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["given",{"_index":1482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["go",{"_index":1635,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["goal",{"_index":1693,"title":{},"body":{"index.html":{}}}],["goes",{"_index":505,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/about.html":{}}}],["going",{"_index":955,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["good",{"_index":963,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["google",{"_index":1103,"title":{},"body":{"contributing.html":{}}}],["google's",{"_index":1283,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1810,"title":{},"body":{"license.html":{}}}],["grayed",{"_index":1490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["grid",{"_index":51,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"pipes/FormatDataPipe.html":{},"changelog.html":{},"index.html":{}}}],["grid's",{"_index":91,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["grids",{"_index":1441,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["group",{"_index":382,"title":{},"body":{"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["group's",{"_index":1449,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["grouped",{"_index":1837,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["grouping",{"_index":1836,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["groups",{"_index":1446,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["grow",{"_index":1912,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["guide",{"_index":1022,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["guidelines",{"_index":1083,"title":{},"body":{"contributing.html":{}}}],["guides",{"_index":2038,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gulp",{"_index":1334,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gulp/rollup",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["gulpfile",{"_index":2165,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["gulpfile.js",{"_index":2164,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["guts",{"_index":2191,"title":{},"body":{"additional-documentation/about.html":{}}}],["h.hidden",{"_index":303,"title":{},"body":{"classes/DataGridModel.html":{}}}],["h.prop",{"_index":327,"title":{},"body":{"classes/DataGridModel.html":{}}}],["hafersteig",{"_index":2210,"title":{},"body":{"additional-documentation/about.html":{}}}],["hand",{"_index":1730,"title":{},"body":{"index.html":{}}}],["handle",{"_index":1519,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["handles",{"_index":115,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/functions.html":{}}}],["handy",{"_index":1704,"title":{},"body":{"index.html":{}}}],["happens",{"_index":2131,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["hard",{"_index":2013,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["haschildren",{"_index":778,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["hascompare",{"_index":634,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasdirectancestor",{"_index":730,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["hasdirectancestor(node",{"_index":751,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["haserror('pattern",{"_index":1455,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hash",{"_index":1313,"title":{},"body":{"contributing.html":{}}}],["hasmaxlength",{"_index":603,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasminlength",{"_index":609,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasn't",{"_index":1168,"title":{},"body":{"contributing.html":{}}}],["haspattern",{"_index":615,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasrangefrom",{"_index":621,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hasrangeto",{"_index":623,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["hassortcallback",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["head",{"_index":2060,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["header",{"_index":10,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["header.issortable",{"_index":352,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.pipe",{"_index":367,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.pipeparams",{"_index":369,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.sortcallback",{"_index":354,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.templatehint",{"_index":361,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.templatehintparams",{"_index":365,"title":{},"body":{"classes/DataGridModel.html":{}}}],["header.uihint",{"_index":371,"title":{},"body":{"classes/DataGridModel.html":{}}}],["headerbutton",{"_index":383,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["headerremovebutton",{"_index":384,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["headers",{"_index":117,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/functions.html":{}}}],["headersnotvisible",{"_index":154,"title":{},"body":{"classes/DataGridModel.html":{}}}],["headersortbutton",{"_index":385,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["heavily",{"_index":1579,"title":{},"body":{"index.html":{}}}],["help",{"_index":1080,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["helper",{"_index":1641,"title":{},"body":{"index.html":{}}}],["helpful",{"_index":1135,"title":{},"body":{"contributing.html":{}}}],["helps",{"_index":1187,"title":{},"body":{"contributing.html":{},"additional-documentation/about.html":{}}}],["hence",{"_index":49,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["here",{"_index":897,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["hereby",{"_index":1809,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":18,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["hidden\">hidden",{"_index":1472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hidden(hide",{"_index":1470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hidden.decorator.ts",{"_index":1415,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hidden.ishidden(type",{"_index":350,"title":{},"body":{"classes/DataGridModel.html":{}}}],["hiddentype",{"_index":462,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["hide",{"_index":1474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["high",{"_index":1783,"title":{},"body":{"index.html":{}}}],["highlightjs",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["hint",{"_index":74,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["hints",{"_index":1599,"title":{},"body":{"index.html":{}}}],["history",{"_index":1294,"title":{},"body":{"contributing.html":{}}}],["homepage",{"_index":2098,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["homepage's",{"_index":1781,"title":{},"body":{"index.html":{}}}],["host",{"_index":1922,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["hostet",{"_index":2017,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["href",{"_index":848,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["html",{"_index":1887,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["html5",{"_index":1492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http",{"_index":2182,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["http://locahost:4200",{"_index":1726,"title":{},"body":{"index.html":{}}}],["https://github.com/joergkrause/svogv#readme",{"_index":2099,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["https://github.com/joergkrause/svogv.git",{"_index":2093,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["https://github.com/joergkrause/svogv/issues",{"_index":2097,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["hub",{"_index":1793,"title":{},"body":{"index.html":{}}}],["hud",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["huge",{"_index":1904,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["human",{"_index":548,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["hyperlink",{"_index":861,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["i'm",{"_index":954,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["i18n",{"_index":522,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["icon",{"_index":849,"title":{},"body":{"classes/TreeNodeOptions.html":{},"index.html":{}}}],["icon's",{"_index":865,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["iconcolor",{"_index":850,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["icons",{"_index":858,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["ics",{"_index":2096,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["id",{"_index":726,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"index.html":{}}}],["idea",{"_index":1577,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":742,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["idx",{"_index":828,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["ignore",{"_index":409,"title":{},"body":{"classes/EditorModel.html":{}}}],["ignored",{"_index":403,"title":{},"body":{"classes/EditorModel.html":{},"index.html":{}}}],["immediate",{"_index":659,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["imperative",{"_index":1346,"title":{},"body":{"contributing.html":{}}}],["implement",{"_index":1140,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":678,"title":{},"body":{"pipes/FormatDataPipe.html":{},"classes/TreeNodeModel.html":{},"index.html":{}}}],["implied",{"_index":1816,"title":{},"body":{"license.html":{}}}],["import",{"_index":94,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"index.html":{}}}],["important",{"_index":1623,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["imports",{"_index":718,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["impress",{"_index":2208,"title":{},"body":{"additional-documentation/about.html":{}}}],["improve",{"_index":1067,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["improvement",{"_index":2197,"title":{},"body":{"additional-documentation/about.html":{}}}],["improves",{"_index":1326,"title":{},"body":{"contributing.html":{},"additional-documentation/about.html":{}}}],["inaugural",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1353,"title":{},"body":{"contributing.html":{}}}],["included",{"_index":1487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["includes",{"_index":879,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["including",{"_index":1122,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["inclusive",{"_index":1101,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1178,"title":{},"body":{"contributing.html":{}}}],["independent",{"_index":1731,"title":{},"body":{"index.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.d.ts",{"_index":2091,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["index.js",{"_index":2089,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["indexable",{"_index":458,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["indirect",{"_index":1820,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":1367,"title":{},"body":{"contributing.html":{}}}],["infarstructure",{"_index":1529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infobox",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["inform",{"_index":209,"title":{},"body":{"classes/DataGridModel.html":{}}}],["information",{"_index":457,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"index.html":{}}}],["infrastructure",{"_index":208,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["inherited",{"_index":736,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["initialize",{"_index":2072,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["initit's",{"_index":2073,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["initital",{"_index":246,"title":{},"body":{"classes/DataGridModel.html":{}}}],["inject",{"_index":576,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["injectable",{"_index":550,"title":{"injectables/FormValidatorService.html":{}},"body":{"injectables/FormValidatorService.html":{},"index.html":{},"overview.html":{}}}],["injectables",{"_index":552,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["injector",{"_index":676,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["inline",{"_index":392,"title":{},"body":{"classes/EditorModel.html":{},"index.html":{}}}],["input",{"_index":1052,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["inside",{"_index":1647,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["inspired",{"_index":1580,"title":{},"body":{"index.html":{}}}],["install",{"_index":1709,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["instance",{"_index":1608,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["instanceof",{"_index":813,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["instead",{"_index":446,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["instruction",{"_index":180,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["integration",{"_index":1917,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["intended",{"_index":1524,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intention",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["intentionally",{"_index":591,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["interactive",{"_index":2074,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["interest",{"_index":2032,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["interface",{"_index":374,"title":{"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/TreeNodeBaseModel.html":{}},"body":{"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"index.html":{}}}],["interfaces",{"_index":376,"title":{},"body":{"interfaces/DatagridStyles.html":{},"interfaces/FormValidatorModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"overview.html":{}}}],["internal",{"_index":46,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"pipes/FormatDataPipe.html":{},"additional-documentation/package-construction.html":{}}}],["internally",{"_index":1523,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["internals",{"_index":1491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["introduced",{"_index":1879,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["introduction",{"_index":1544,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["intuitive",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["invisible",{"_index":218,"title":{},"body":{"classes/DataGridModel.html":{}}}],["invokes",{"_index":2045,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["iot",{"_index":1794,"title":{},"body":{"index.html":{}}}],["irritating",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["isc",{"_index":1737,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ishidden",{"_index":349,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/variables.html":{}}}],["isrequired",{"_index":597,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["issortable",{"_index":19,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1116,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1087,"title":{},"body":{"contributing.html":{}}}],["it's",{"_index":191,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["item",{"_index":212,"title":{},"body":{"classes/DataGridModel.html":{}}}],["items",{"_index":151,"title":{},"body":{"classes/DataGridModel.html":{}}}],["itemsfiltered",{"_index":152,"title":{},"body":{"classes/DataGridModel.html":{}}}],["itemsoncurrentpage",{"_index":153,"title":{},"body":{"classes/DataGridModel.html":{}}}],["iterating",{"_index":334,"title":{},"body":{"classes/DataGridModel.html":{}}}],["i’m",{"_index":2187,"title":{},"body":{"additional-documentation/about.html":{}}}],["java",{"_index":2195,"title":{},"body":{"additional-documentation/about.html":{}}}],["javascript",{"_index":1284,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["jobs",{"_index":1779,"title":{},"body":{"index.html":{}}}],["joerg",{"_index":1750,"title":{},"body":{"index.html":{},"license.html":{}}}],["joerg@krause.de",{"_index":1780,"title":{},"body":{"index.html":{}}}],["journey",{"_index":2031,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["jquery",{"_index":1761,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["js",{"_index":1388,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["jsbin",{"_index":1126,"title":{},"body":{"contributing.html":{}}}],["json",{"_index":444,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{}}}],["june",{"_index":2207,"title":{},"body":{"additional-documentation/about.html":{}}}],["jörg",{"_index":2209,"title":{},"body":{"additional-documentation/about.html":{}}}],["karma",{"_index":2141,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["kb",{"_index":1571,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1099,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["keyname",{"_index":1495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keywords",{"_index":2083,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["kidding",{"_index":1967,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["kind",{"_index":1151,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["knockout",{"_index":1763,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["know",{"_index":1759,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["knowing",{"_index":1770,"title":{},"body":{"index.html":{}}}],["knows",{"_index":1621,"title":{},"body":{"index.html":{}}}],["krause",{"_index":1751,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/about.html":{}}}],["label",{"_index":393,"title":{},"body":{"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["label's",{"_index":415,"title":{},"body":{"classes/EditorModel.html":{},"index.html":{}}}],["labeldivider",{"_index":394,"title":{},"body":{"classes/EditorModel.html":{}}}],["lambda",{"_index":1797,"title":{},"body":{"index.html":{}}}],["languages",{"_index":1875,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["last",{"_index":317,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["later",{"_index":2062,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["latest",{"_index":1271,"title":{},"body":{"contributing.html":{}}}],["lazy",{"_index":2065,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["leads",{"_index":1291,"title":{},"body":{"contributing.html":{}}}],["learn",{"_index":2048,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["learning",{"_index":1857,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["learnt",{"_index":1762,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["leave",{"_index":2114,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["left",{"_index":1729,"title":{},"body":{"index.html":{}}}],["legend",{"_index":687,"title":{},"body":{"modules/SvogvCoreModule.html":{},"miscellaneous/functions.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["len",{"_index":1477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["length",{"_index":241,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["less",{"_index":1006,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["let's",{"_index":1588,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["letter",{"_index":1351,"title":{},"body":{"contributing.html":{}}}],["level",{"_index":927,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["liable",{"_index":1819,"title":{},"body":{"license.html":{}}}],["lib",{"_index":959,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["libary",{"_index":2181,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["libraries",{"_index":1774,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["library",{"_index":950,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["libs",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1218,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["licensed",{"_index":1738,"title":{},"body":{"index.html":{}}}],["licensing",{"_index":1736,"title":{},"body":{"index.html":{}}}],["life",{"_index":2203,"title":{},"body":{"additional-documentation/about.html":{}}}],["limited",{"_index":1111,"title":{},"body":{"contributing.html":{}}}],["line",{"_index":240,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["line:forin",{"_index":294,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{}}}],["line:max",{"_index":239,"title":{},"body":{"classes/DataGridModel.html":{}}}],["link",{"_index":304,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{}}}],["links",{"_index":2111,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["lint",{"_index":2149,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["linter",{"_index":1070,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["linux",{"_index":1924,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["list",{"_index":423,"title":{},"body":{"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["listvalues",{"_index":395,"title":{},"body":{"classes/EditorModel.html":{}}}],["literal",{"_index":173,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/typealiases.html":{}}}],["literature",{"_index":2025,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["live",{"_index":901,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["load",{"_index":769,"title":{},"body":{"classes/TreeNodeComponentModel.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["loader",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["loadericon",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":2169,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["local",{"_index":1268,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["locally",{"_index":1946,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["log",{"_index":1296,"title":{},"body":{"contributing.html":{}}}],["long",{"_index":1931,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["longer",{"_index":1302,"title":{},"body":{"contributing.html":{}}}],["look",{"_index":356,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["looking",{"_index":1293,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["looks",{"_index":451,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["loop",{"_index":1468,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["loss",{"_index":1825,"title":{},"body":{"license.html":{}}}],["lot",{"_index":976,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["love",{"_index":1078,"title":{},"body":{"contributing.html":{}}}],["lower",{"_index":2078,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["lt;ac",{"_index":512,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["lt;input",{"_index":496,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["lt;select&gt",{"_index":510,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["lt;textarea&gt",{"_index":509,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["mac",{"_index":1926,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["made",{"_index":223,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["mail",{"_index":1374,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["main",{"_index":974,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["mainly",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["maintain",{"_index":1910,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["maintainability",{"_index":1883,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["major",{"_index":1146,"title":{},"body":{"contributing.html":{}}}],["majority",{"_index":1971,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["make",{"_index":217,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["makes",{"_index":233,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/about.html":{}}}],["making",{"_index":1545,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["manage",{"_index":1600,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["managed",{"_index":118,"title":{},"body":{"classes/DataGridModel.html":{}}}],["manager",{"_index":1972,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["mandatory",{"_index":541,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["manually",{"_index":1461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["many",{"_index":964,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["markdown",{"_index":2059,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["master",{"_index":1226,"title":{},"body":{"contributing.html":{}}}],["matches",{"_index":1533,"title":{},"body":{"index.html":{}}}],["matching",{"_index":106,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["material",{"_index":1538,"title":{},"body":{"index.html":{}}}],["matters",{"_index":2198,"title":{},"body":{"additional-documentation/about.html":{}}}],["mature",{"_index":1897,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["max",{"_index":534,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["maximal",{"_index":543,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["maximize",{"_index":1170,"title":{},"body":{"contributing.html":{}}}],["maximum",{"_index":531,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["maxlength",{"_index":533,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["maxlength(100",{"_index":1591,"title":{},"body":{"index.html":{}}}],["maxlength(20",{"_index":1595,"title":{},"body":{"index.html":{}}}],["maxlength(len",{"_index":1475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxlength.decorator.ts",{"_index":1416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxlengthtype",{"_index":465,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["maxpageindex",{"_index":150,"title":{},"body":{"classes/DataGridModel.html":{}}}],["maybe",{"_index":1166,"title":{},"body":{"contributing.html":{}}}],["meaning",{"_index":1318,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menu",{"_index":921,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["merchantability",{"_index":1817,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1262,"title":{},"body":{"contributing.html":{}}}],["message",{"_index":518,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":655,"title":{},"body":{"injectables/FormValidatorService.html":{},"contributing.html":{},"index.html":{}}}],["metadata",{"_index":669,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["method",{"_index":198,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{}}}],["methods",{"_index":137,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"contributing.html":{}}}],["middle",{"_index":386,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["min",{"_index":537,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["mind",{"_index":1276,"title":{},"body":{"contributing.html":{}}}],["minified",{"_index":1184,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["minimal",{"_index":544,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["minimum",{"_index":535,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["minlength",{"_index":536,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["minlength(len",{"_index":1478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minlength.decorator.ts",{"_index":1417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minlengthtype",{"_index":466,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":1402,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1320,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["mistake",{"_index":1118,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":2080,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["mkdir",{"_index":2002,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["mode",{"_index":1683,"title":{},"body":{"index.html":{}}}],["model",{"_index":76,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["models",{"_index":1587,"title":{},"body":{"index.html":{}}}],["modern",{"_index":1871,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["modified",{"_index":1640,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1338,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["module",{"_index":525,"title":{"modules/SvogvCoreModule.html":{}},"body":{"interfaces/FormValidatorModel.html":{},"modules/SvogvCoreModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["modules",{"_index":685,"title":{"modules.html":{}},"body":{"modules/SvogvCoreModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":705,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["moduls",{"_index":1973,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["money",{"_index":1934,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["monitor",{"_index":2139,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["more",{"_index":961,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["moreinformation",{"_index":277,"title":{},"body":{"classes/DataGridModel.html":{}}}],["more}information",{"_index":305,"title":{},"body":{"classes/DataGridModel.html":{}}}],["mostly",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["motivation",{"_index":1191,"title":{},"body":{"contributing.html":{}}}],["mouseover",{"_index":41,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["moved",{"_index":1766,"title":{},"body":{"index.html":{}}}],["msg",{"_index":519,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["much",{"_index":1978,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["multi",{"_index":926,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mvc",{"_index":1890,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["myform",{"_index":1613,"title":{},"body":{"index.html":{}}}],["n",{"_index":821,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["n.parent",{"_index":823,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["name/your",{"_index":2153,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["named",{"_index":1985,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["names",{"_index":272,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TreeNodeModel.html":{}}}],["namespace",{"_index":1581,"title":{},"body":{"index.html":{}}}],["naming",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["nan",{"_index":630,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["nature",{"_index":1202,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["navigate",{"_index":1728,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["necessarily",{"_index":2052,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["necessary",{"_index":1242,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["need",{"_index":642,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["needed",{"_index":1963,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["needs",{"_index":1505,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["negligence",{"_index":1828,"title":{},"body":{"license.html":{}}}],["net",{"_index":1583,"title":{},"body":{"index.html":{}}}],["new",{"_index":162,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["newer",{"_index":1531,"title":{},"body":{"index.html":{}}}],["newlines",{"_index":1359,"title":{},"body":{"contributing.html":{}}}],["news",{"_index":1970,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["next",{"_index":238,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"additional-documentation/package-construction.html":{}}}],["ngfor",{"_index":425,"title":{},"body":{"classes/EditorModel.html":{}}}],["ngmodule",{"_index":706,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["ngoninit",{"_index":1615,"title":{},"body":{"index.html":{}}}],["ngstyle",{"_index":1517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ngx",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["nice",{"_index":1714,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["nit",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["nix",{"_index":2004,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["node",{"_index":721,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["node').register",{"_index":2174,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["node_modules",{"_index":1733,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["nodes",{"_index":733,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["non",{"_index":1183,"title":{},"body":{"contributing.html":{}}}],["none",{"_index":358,"title":{},"body":{"classes/DataGridModel.html":{}}}],["note",{"_index":1106,"title":{},"body":{"contributing.html":{}}}],["notes",{"_index":1243,"title":{},"body":{"contributing.html":{}}}],["nothing",{"_index":199,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["notice",{"_index":1811,"title":{},"body":{"license.html":{}}}],["now",{"_index":918,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["npm",{"_index":1336,"title":{"additional-documentation/package-construction/create-an-npm-package.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["null",{"_index":310,"title":{},"body":{"classes/DataGridModel.html":{}}}],["num",{"_index":1671,"title":{},"body":{"index.html":{}}}],["number",{"_index":157,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["number(target.prototype[`__hasrangefrom__${propname",{"_index":628,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["number(target.prototype[`__hasrangeto__${propname",{"_index":629,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["numbers",{"_index":1528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["numeric",{"_index":1673,"title":{},"body":{"index.html":{}}}],["numerical",{"_index":1484,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["object",{"_index":332,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{}}}],["object's",{"_index":1518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["occurs",{"_index":836,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["omit",{"_index":309,"title":{},"body":{"classes/DataGridModel.html":{}}}],["omitted",{"_index":482,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":2046,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ondelete",{"_index":132,"title":{},"body":{"classes/DataGridModel.html":{}}}],["one",{"_index":336,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["onedit",{"_index":133,"title":{},"body":{"classes/DataGridModel.html":{}}}],["ongoing",{"_index":2186,"title":{},"body":{"additional-documentation/about.html":{}}}],["oninit",{"_index":1612,"title":{},"body":{"index.html":{}}}],["onwards",{"_index":1660,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["open",{"_index":1100,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["operating",{"_index":1195,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["option",{"_index":1246,"title":{},"body":{"contributing.html":{}}}],["optional",{"_index":21,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["optionally",{"_index":47,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":727,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["order",{"_index":242,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["ordered",{"_index":1646,"title":{},"body":{"index.html":{}}}],["orderelement",{"_index":1839,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["organize",{"_index":1557,"title":{},"body":{"index.html":{}}}],["os",{"_index":1932,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["others",{"_index":1953,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["otherwise",{"_index":412,"title":{},"body":{"classes/EditorModel.html":{}}}],["out",{"_index":698,"title":{},"body":{"modules/SvogvCoreModule.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{},"overview.html":{},"additional-documentation/about.html":{}}}],["outcome",{"_index":1005,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["outline",{"_index":1152,"title":{},"body":{"contributing.html":{}}}],["over",{"_index":1289,"title":{},"body":{"contributing.html":{}}}],["overflow",{"_index":2028,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["overview",{"_index":1181,"title":{"overview.html":{}},"body":{"contributing.html":{},"index.html":{},"overview.html":{}}}],["overwhelming",{"_index":2029,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["p",{"_index":341,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TreeNodeModel.html":{},"miscellaneous/functions.html":{}}}],["p.push(n",{"_index":824,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["p.push(this",{"_index":820,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["package",{"_index":1375,"title":{"dependencies.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["package.json",{"_index":1732,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["packages",{"_index":1012,"title":{},"body":{"changelog.html":{},"additional-documentation/about.html":{}}}],["page",{"_index":1853,"title":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}},"body":{}}],["pages",{"_index":2058,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pagesize",{"_index":134,"title":{},"body":{"classes/DataGridModel.html":{}}}],["pagination",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["paging",{"_index":127,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["param",{"_index":98,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/typealiases.html":{}}}],["parameter",{"_index":481,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":36,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":1507,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["parent",{"_index":728,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["parseint(target.prototype[`__hasmaxlength__${propname",{"_index":607,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["parseint(target.prototype[`__hasminlength__${propname",{"_index":613,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["part",{"_index":952,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["partially",{"_index":2018,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["particular",{"_index":1652,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["parts",{"_index":379,"title":{},"body":{"interfaces/DatagridStyles.html":{},"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pass",{"_index":1238,"title":{},"body":{"contributing.html":{}}}],["passing",{"_index":1257,"title":{},"body":{"contributing.html":{}}}],["password",{"_index":915,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["patch",{"_index":1227,"title":{},"body":{"contributing.html":{}}}],["path",{"_index":777,"title":{},"body":{"classes/TreeNodeModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["path.join(__dirname",{"_index":2175,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["paths",{"_index":2113,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pattern",{"_index":298,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["pattern(pattern",{"_index":1479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pattern.decorator.ts",{"_index":1418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pattern.test(item[s",{"_index":300,"title":{},"body":{"classes/DataGridModel.html":{}}}],["patterntype",{"_index":467,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["peace",{"_index":2202,"title":{},"body":{"additional-documentation/about.html":{}}}],["peerdependencies",{"_index":2100,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["penalty",{"_index":1901,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["pendant",{"_index":1689,"title":{},"body":{"index.html":{}}}],["people",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":92,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["perf",{"_index":1325,"title":{},"body":{"contributing.html":{}}}],["perfect",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":1327,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["perhaps",{"_index":1211,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1803,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2130,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["phone",{"_index":1594,"title":{},"body":{"index.html":{}}}],["phonenumber",{"_index":1596,"title":{},"body":{"index.html":{}}}],["pieces",{"_index":1701,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":20,"title":{"pipes/FormatDataPipe.html":{}},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["pipe's",{"_index":1469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipe.transform(value",{"_index":683,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["pipeargs",{"_index":674,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["pipename",{"_index":477,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["pipeparams",{"_index":22,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["pipes",{"_index":357,"title":{},"body":{"classes/DataGridModel.html":{},"pipes/FormatDataPipe.html":{},"miscellaneous/functions.html":{}}}],["pipetoken",{"_index":673,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["pipetransform",{"_index":677,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["place",{"_index":1342,"title":{},"body":{"contributing.html":{}}}],["placeholder",{"_index":437,"title":{},"body":{"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["placeholder(name",{"_index":1481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholder.decorator.ts",{"_index":1419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholdertype",{"_index":463,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["plain",{"_index":1961,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["plane",{"_index":1567,"title":{},"body":{"index.html":{}}}],["planned",{"_index":1655,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["please",{"_index":1097,"title":{},"body":{"contributing.html":{}}}],["plunker",{"_index":1198,"title":{},"body":{"contributing.html":{}}}],["plunkr",{"_index":1127,"title":{},"body":{"contributing.html":{}}}],["plus",{"_index":420,"title":{},"body":{"classes/EditorModel.html":{}}}],["point",{"_index":1212,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pointers",{"_index":2109,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pointing",{"_index":2071,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["port",{"_index":2183,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["possible",{"_index":492,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["potential",{"_index":2036,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pr",{"_index":1214,"title":{},"body":{"contributing.html":{}}}],["pre",{"_index":907,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["precise",{"_index":1288,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":1604,"title":{},"body":{"index.html":{}}}],["present",{"_index":1347,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pretty",{"_index":1569,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["prevent",{"_index":1157,"title":{},"body":{"contributing.html":{}}}],["previous",{"_index":1309,"title":{},"body":{"contributing.html":{}}}],["primarily",{"_index":1856,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["primary",{"_index":866,"title":{},"body":{"classes/TreeNodeOptions.html":{},"additional-documentation/package-construction.html":{}}}],["print",{"_index":1371,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["private",{"_index":128,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["probably",{"_index":2061,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["problem",{"_index":1086,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["procedure",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["proceed",{"_index":2129,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["process",{"_index":221,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["product",{"_index":2200,"title":{},"body":{"additional-documentation/about.html":{}}}],["production",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["professional",{"_index":1898,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["profits",{"_index":1826,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1862,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["project",{"_index":958,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["project's",{"_index":2042,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["project.git",{"_index":2154,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["projects",{"_index":1767,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["projects/.../compare.validator.ts",{"_index":1427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../datagrid.model.ts",{"_index":1404,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datagridstyle.model.ts",{"_index":1835,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../formvalidator.model.ts",{"_index":1834,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../hint",{"_index":1409,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../range.validator.ts",{"_index":1428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../svogv.module.ts",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../test.ts",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../treenodeoptions.model.ts",{"_index":1405,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../val",{"_index":1407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/decorators/hint",{"_index":1435,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/svogv/src/lib/decorators/val",{"_index":1429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/services/formvalidator.model.ts",{"_index":441,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["projects/svogv/src/lib/services/formvalidator.model.ts:185",{"_index":471,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["projects/svogv/src/lib/services/formvalidator.service.ts",{"_index":553,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["projects/svogv/src/lib/services/formvalidator.service.ts:20",{"_index":571,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["projects/svogv/src/lib/services/formvalidator.service.ts:32",{"_index":573,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["projects/svogv/src/lib/services/validators/compare.validator.ts",{"_index":1521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/services/validators/range.validator.ts",{"_index":1525,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/svogv/src/lib/svogv.module.ts",{"_index":699,"title":{},"body":{"modules/SvogvCoreModule.html":{},"miscellaneous/variables.html":{}}}],["projects/svogv/src/lib/svogv.module.ts:22",{"_index":704,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts",{"_index":109,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/enumerations.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:102",{"_index":174,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:104",{"_index":160,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:105",{"_index":172,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:110",{"_index":170,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:115",{"_index":163,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:120",{"_index":183,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:121",{"_index":159,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:123",{"_index":158,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:141",{"_index":230,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:165",{"_index":216,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:177",{"_index":187,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:189",{"_index":214,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:197",{"_index":206,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:201",{"_index":203,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:31",{"_index":249,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:35",{"_index":253,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:39",{"_index":255,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:42",{"_index":257,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:46",{"_index":259,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:53",{"_index":261,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:58",{"_index":265,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:61",{"_index":263,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:65",{"_index":267,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:82",{"_index":269,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:89",{"_index":271,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:96",{"_index":274,"title":{},"body":{"classes/DataGridModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts",{"_index":7,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15",{"_index":52,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:23",{"_index":73,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:28",{"_index":86,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:33",{"_index":81,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:38",{"_index":56,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:43",{"_index":69,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:48",{"_index":62,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:53",{"_index":67,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:7",{"_index":34,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts",{"_index":377,"title":{},"body":{"interfaces/DatagridStyles.html":{},"miscellaneous/typealiases.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts",{"_index":662,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts:13",{"_index":675,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts",{"_index":388,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:11",{"_index":434,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:15",{"_index":416,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:19",{"_index":414,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:23",{"_index":430,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:27",{"_index":404,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:32",{"_index":410,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:36",{"_index":399,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:41",{"_index":422,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:45",{"_index":406,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:49",{"_index":432,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:53",{"_index":436,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:57",{"_index":428,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:7",{"_index":427,"title":{},"body":{"classes/EditorModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts",{"_index":720,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8",{"_index":734,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts",{"_index":775,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:103",{"_index":806,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:107",{"_index":808,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:111",{"_index":810,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:12",{"_index":789,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:16",{"_index":790,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:20",{"_index":786,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:24",{"_index":788,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:28",{"_index":787,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:32",{"_index":791,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34",{"_index":785,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:49",{"_index":796,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:61",{"_index":793,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:65",{"_index":798,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:69",{"_index":792,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:77",{"_index":794,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:87",{"_index":800,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:90",{"_index":802,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:99",{"_index":804,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts",{"_index":762,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:10",{"_index":764,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:11",{"_index":766,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:12",{"_index":765,"title":{},"body":{"interfaces/TreeNodeBaseModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts",{"_index":768,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9",{"_index":773,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts",{"_index":843,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:17",{"_index":856,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:19",{"_index":862,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:21",{"_index":864,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:23",{"_index":869,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:25",{"_index":859,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:27",{"_index":854,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:29",{"_index":860,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:31",{"_index":867,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33",{"_index":853,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["projects/svogv/test.ts",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominently",{"_index":2082,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["promise",{"_index":1366,"title":{},"body":{"contributing.html":{}}}],["prompt",{"_index":2003,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["prop",{"_index":23,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{}}}],["propdesc",{"_index":346,"title":{},"body":{"classes/DataGridModel.html":{}}}],["properly",{"_index":1027,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["propertie's",{"_index":45,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":14,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["property",{"_index":178,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["property's",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["propname",{"_index":344,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{}}}],["proposal",{"_index":1141,"title":{},"body":{"contributing.html":{}}}],["pros",{"_index":2199,"title":{},"body":{"additional-documentation/about.html":{}}}],["provide",{"_index":177,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provided",{"_index":197,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["provider",{"_index":717,"title":{},"body":{"modules/SvogvCoreModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":690,"title":{},"body":{"modules/SvogvCoreModule.html":{},"overview.html":{}}}],["provides",{"_index":63,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["providing",{"_index":1176,"title":{},"body":{"contributing.html":{}}}],["prs",{"_index":1221,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":16,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["published",{"_index":1866,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["pull",{"_index":1137,"title":{},"body":{"contributing.html":{}}}],["pulling",{"_index":2069,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["pure",{"_index":181,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["purpose",{"_index":664,"title":{},"body":{"pipes/FormatDataPipe.html":{},"license.html":{},"additional-documentation/about.html":{}}}],["purposes",{"_index":1858,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["push",{"_index":1250,"title":{},"body":{"contributing.html":{}}}],["put",{"_index":912,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["putting",{"_index":2142,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["quality",{"_index":1784,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["quest",{"_index":2075,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["question",{"_index":1085,"title":{},"body":{"contributing.html":{}}}],["questions",{"_index":1096,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":1365,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["quickly",{"_index":1132,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["quite",{"_index":1702,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["radio",{"_index":1670,"title":{},"body":{"index.html":{}}}],["range",{"_index":408,"title":{},"body":{"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["range's",{"_index":1486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range(from",{"_index":1483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["range.decorator.ts",{"_index":1420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rangetype",{"_index":540,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["re",{"_index":1255,"title":{},"body":{"contributing.html":{}}}],["react",{"_index":1764,"title":{},"body":{"index.html":{}}}],["reactive",{"_index":1712,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["reactiveformsmodule",{"_index":709,"title":{},"body":{"modules/SvogvCoreModule.html":{},"index.html":{}}}],["read",{"_index":338,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["readable",{"_index":1292,"title":{},"body":{"contributing.html":{}}}],["readers",{"_index":1232,"title":{},"body":{"contributing.html":{}}}],["readible",{"_index":549,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["reading",{"_index":2035,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["readme",{"_index":2070,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["readme.md",{"_index":2115,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["readonly",{"_index":396,"title":{},"body":{"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["readonly(readonly",{"_index":1489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly.decorator.ts",{"_index":1421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonlytype",{"_index":493,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["ready",{"_index":1144,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["real",{"_index":909,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["really",{"_index":1703,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["realm",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1462,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["rebase",{"_index":1258,"title":{},"body":{"contributing.html":{}}}],["receives",{"_index":1433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["recent",{"_index":1865,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["recently",{"_index":190,"title":{},"body":{"classes/DataGridModel.html":{}}}],["recommend",{"_index":1938,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["redesign",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":1323,"title":{},"body":{"contributing.html":{}}}],["reference",{"_index":1356,"title":{},"body":{"contributing.html":{}}}],["references",{"_index":1057,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["refers",{"_index":2163,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["refine",{"_index":1439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["refinements",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["reflect",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":1815,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":250,"title":{},"body":{"classes/DataGridModel.html":{}}}],["regex",{"_index":538,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["regexp",{"_index":539,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["regexp(target.prototype[`__haspattern__${propname",{"_index":619,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["regexp(this.searchvalue[s",{"_index":299,"title":{},"body":{"classes/DataGridModel.html":{}}}],["register",{"_index":654,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["regular",{"_index":886,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["related",{"_index":1206,"title":{},"body":{"contributing.html":{}}}],["relates",{"_index":1216,"title":{},"body":{"contributing.html":{}}}],["release",{"_index":877,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["releases",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["reliable",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["remark",{"_index":1664,"title":{},"body":{"index.html":{}}}],["remember",{"_index":316,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["remote",{"_index":1265,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["remove",{"_index":731,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["remove(node",{"_index":754,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["removecolumn",{"_index":142,"title":{},"body":{"classes/DataGridModel.html":{}}}],["removecolumn(colname",{"_index":215,"title":{},"body":{"classes/DataGridModel.html":{}}}],["removed",{"_index":189,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{}}}],["removing",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["renaming",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":220,"title":{},"body":{"classes/DataGridModel.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rendered",{"_index":491,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["rendering",{"_index":1657,"title":{},"body":{"index.html":{}}}],["renders",{"_index":429,"title":{},"body":{"classes/EditorModel.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["reorg",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["rep",{"_index":1990,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["repl",{"_index":2179,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["replacement",{"_index":1859,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["replaces",{"_index":71,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"index.html":{}}}],["reported",{"_index":1169,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":1174,"title":{},"body":{"contributing.html":{}}}],["repositories",{"_index":1876,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["repository",{"_index":1121,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["represents",{"_index":448,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{}}}],["reproduce",{"_index":1197,"title":{},"body":{"contributing.html":{}}}],["reproduction",{"_index":1123,"title":{},"body":{"contributing.html":{}}}],["reps",{"_index":1994,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["request",{"_index":1138,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["requests",{"_index":1090,"title":{},"body":{"contributing.html":{}}}],["require",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('./tools/gulp/gulpfile');the",{"_index":2177,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["require('path",{"_index":2171,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["require('ts",{"_index":2173,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["require.context",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":542,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["required(msg",{"_index":1494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["required.decorator.ts",{"_index":1422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["requiredtype",{"_index":470,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["requires",{"_index":1618,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["reset",{"_index":697,"title":{},"body":{"modules/SvogvCoreModule.html":{},"overview.html":{}}}],["resides",{"_index":2057,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["respond",{"_index":2162,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["rest",{"_index":1360,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":105,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["resulting",{"_index":1824,"title":{},"body":{"license.html":{}}}],["results",{"_index":107,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["return",{"_index":287,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TreeNodeModel.html":{}}}],["returns",{"_index":201,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"miscellaneous/typealiases.html":{}}}],["revert",{"_index":1307,"title":{},"body":{"contributing.html":{}}}],["reverted",{"_index":1312,"title":{},"body":{"contributing.html":{}}}],["reverts",{"_index":1308,"title":{},"body":{"contributing.html":{}}}],["rid",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1951,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["rm",{"_index":1247,"title":{},"body":{"contributing.html":{}}}],["root",{"_index":2132,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["roughly",{"_index":1572,"title":{},"body":{"index.html":{}}}],["row",{"_index":337,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"index.html":{}}}],["rows",{"_index":126,"title":{},"body":{"classes/DataGridModel.html":{}}}],["rule",{"_index":1661,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1071,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["run",{"_index":973,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["runner",{"_index":2134,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["running",{"_index":1632,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["rxjs",{"_index":1396,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["s",{"_index":296,"title":{},"body":{"classes/DataGridModel.html":{}}}],["s3",{"_index":1796,"title":{},"body":{"index.html":{}}}],["safely",{"_index":1263,"title":{},"body":{"contributing.html":{}}}],["same",{"_index":1450,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["sample",{"_index":1717,"title":{},"body":{"index.html":{}}}],["sass",{"_index":2135,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["save",{"_index":1053,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["saves",{"_index":1940,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["saveyou",{"_index":1711,"title":{},"body":{"index.html":{}}}],["scan+email",{"_index":1372,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1300,"title":{},"body":{"contributing.html":{}}}],["scopes",{"_index":1333,"title":{},"body":{"contributing.html":{}}}],["screen",{"_index":1231,"title":{},"body":{"contributing.html":{}}}],["screenshots",{"_index":1134,"title":{},"body":{"contributing.html":{}}}],["script",{"_index":1982,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["scripts",{"_index":2039,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["scss",{"_index":2136,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["search",{"_index":175,"title":{},"body":{"classes/DataGridModel.html":{},"contributing.html":{}}}],["searchvalue",{"_index":135,"title":{},"body":{"classes/DataGridModel.html":{}}}],["second",{"_index":1502,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["seconds",{"_index":1718,"title":{},"body":{"index.html":{}}}],["secret",{"_index":1943,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["see",{"_index":276,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["select",{"_index":77,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/EditorModel.html":{},"classes/TreeNodeOptions.html":{},"index.html":{}}}],["selectable",{"_index":851,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["selected",{"_index":868,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["selectedicon",{"_index":852,"title":{},"body":{"classes/TreeNodeOptions.html":{}}}],["selection",{"_index":1601,"title":{},"body":{"index.html":{}}}],["selections",{"_index":1706,"title":{},"body":{"index.html":{}}}],["semi",{"_index":1321,"title":{},"body":{"contributing.html":{}}}],["send",{"_index":1252,"title":{},"body":{"contributing.html":{}}}],["sending",{"_index":1220,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":526,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["server",{"_index":1684,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["service",{"_index":555,"title":{},"body":{"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["service's",{"_index":1630,"title":{},"body":{"index.html":{}}}],["services",{"_index":1564,"title":{},"body":{"index.html":{}}}],["services/formvalidator",{"_index":715,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["services/formvalidator.service",{"_index":713,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["set",{"_index":48,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{}}}],["setitems(value",{"_index":264,"title":{},"body":{"classes/DataGridModel.html":{}}}],["setstate(value",{"_index":801,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["setting",{"_index":1619,"title":{},"body":{"index.html":{}}}],["settings",{"_index":1625,"title":{},"body":{"index.html":{}}}],["setup",{"_index":1013,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["several",{"_index":883,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sha",{"_index":1314,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["shall",{"_index":424,"title":{},"body":{"classes/EditorModel.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["sheer",{"_index":2024,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["shell",{"_index":1269,"title":{},"body":{"contributing.html":{}}}],["short",{"_index":2007,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["shortly",{"_index":956,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["show",{"_index":50,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{}}}],["showing",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":40,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["shows",{"_index":590,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sidemenu",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["sign",{"_index":1217,"title":{},"body":{"contributing.html":{}}}],["signed",{"_index":1364,"title":{},"body":{"contributing.html":{}}}],["signing",{"_index":1094,"title":{},"body":{"contributing.html":{}}}],["similar",{"_index":1207,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":231,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["simpler",{"_index":1633,"title":{},"body":{"index.html":{}}}],["simplest",{"_index":561,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["simply",{"_index":1561,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["single",{"_index":449,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"additional-documentation/about.html":{}}}],["skills",{"_index":1799,"title":{},"body":{"index.html":{}}}],["slider",{"_index":1674,"title":{},"body":{"index.html":{}}}],["small",{"_index":1011,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["smaller",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["smil",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1807,"title":{},"body":{"license.html":{},"additional-documentation/about.html":{}}}],["somehow",{"_index":1578,"title":{},"body":{"index.html":{}}}],["something",{"_index":1929,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["sometimes",{"_index":1700,"title":{},"body":{"index.html":{}}}],["somewhat",{"_index":2166,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["somewhere",{"_index":1464,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/package-construction.html":{}}}],["sophisticated",{"_index":1782,"title":{},"body":{"index.html":{},"additional-documentation/about.html":{}}}],["sort",{"_index":57,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["sortable",{"_index":1043,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sortable(cansort",{"_index":1496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sortable(true",{"_index":1501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sortable.decorator.ts",{"_index":1423,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sortcallback",{"_index":24,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sortcolumn",{"_index":143,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sortcolumn(colname",{"_index":227,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sortdirection",{"_index":136,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sorted",{"_index":236,"title":{},"body":{"classes/DataGridModel.html":{}}}],["sorting",{"_index":122,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"modules/SvogvCoreModule.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["sources",{"_index":1568,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["sourcing",{"_index":1743,"title":{},"body":{"index.html":{}}}],["space",{"_index":421,"title":{},"body":{"classes/EditorModel.html":{},"changelog.html":{},"contributing.html":{}}}],["spec.ts",{"_index":2126,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["spec\\.ts",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1299,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["specially",{"_index":1685,"title":{},"body":{"index.html":{}}}],["specific",{"_index":487,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["specified",{"_index":235,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["specifying",{"_index":1341,"title":{},"body":{"contributing.html":{}}}],["specs",{"_index":1278,"title":{},"body":{"contributing.html":{}}}],["speed",{"_index":1911,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["spend",{"_index":1172,"title":{},"body":{"contributing.html":{}}}],["split",{"_index":2054,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["splittet",{"_index":2051,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src",{"_index":1339,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src/demo",{"_index":2145,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src\\demothe",{"_index":2067,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src\\lib",{"_index":2068,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["src\\libbecause",{"_index":2063,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["srcs.json",{"_index":2128,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["stable",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["stack",{"_index":1185,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["stackoverflow",{"_index":1105,"title":{},"body":{"contributing.html":{}}}],["stages",{"_index":1143,"title":{},"body":{"contributing.html":{}}}],["stand",{"_index":1555,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1541,"title":{},"body":{"index.html":{}}}],["start",{"_index":407,"title":{},"body":{"classes/EditorModel.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["starta",{"_index":1724,"title":{},"body":{"index.html":{}}}],["started",{"_index":872,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["startrow",{"_index":149,"title":{},"body":{"classes/DataGridModel.html":{}}}],["state",{"_index":779,"title":{},"body":{"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["state(value",{"_index":832,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["statechange",{"_index":729,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["stateischecked",{"_index":783,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["stateisdisabled",{"_index":781,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["stateisexpandend",{"_index":780,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["stateisselected",{"_index":782,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["static",{"_index":702,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["stay",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["steep",{"_index":1903,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["step",{"_index":1892,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["steps",{"_index":1200,"title":{},"body":{"contributing.html":{}}}],["still",{"_index":222,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["strict",{"_index":2167,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["strictly",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":31,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stringlength",{"_index":545,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stringlength(min",{"_index":1504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringlength.decorator.ts",{"_index":1424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stringlengthtype",{"_index":468,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":1642,"title":{},"body":{"index.html":{}}}],["strong",{"_index":2189,"title":{},"body":{"additional-documentation/about.html":{}}}],["strongly",{"_index":1937,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["structure",{"_index":333,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["studio",{"_index":1952,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["stuff",{"_index":1536,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["style",{"_index":1285,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["styleable",{"_index":378,"title":{},"body":{"interfaces/DatagridStyles.html":{}}}],["stylelint",{"_index":2150,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["stylerules",{"_index":85,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/DatagridStyles.html":{},"miscellaneous/typealiases.html":{}}}],["styles",{"_index":88,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"changelog.html":{},"index.html":{}}}],["subject",{"_index":1301,"title":{},"body":{"contributing.html":{}}}],["sublime",{"_index":1957,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["submission",{"_index":1091,"title":{},"body":{"contributing.html":{}}}],["submit",{"_index":1136,"title":{},"body":{"contributing.html":{}}}],["submitted",{"_index":1164,"title":{},"body":{"contributing.html":{}}}],["submitting",{"_index":1119,"title":{},"body":{"contributing.html":{}}}],["subsequent",{"_index":739,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["successfully",{"_index":1160,"title":{},"body":{"contributing.html":{}}}],["succinct",{"_index":1345,"title":{},"body":{"contributing.html":{}}}],["such",{"_index":489,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["sued",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["sufficient",{"_index":1950,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["suggest",{"_index":1208,"title":{},"body":{"contributing.html":{}}}],["suite",{"_index":1233,"title":{},"body":{"contributing.html":{}}}],["suites",{"_index":1256,"title":{},"body":{"contributing.html":{}}}],["summary",{"_index":1643,"title":{},"body":{"index.html":{}}}],["super(options",{"_index":758,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["support",{"_index":989,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["supported",{"_index":884,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["supporting",{"_index":2043,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["supports",{"_index":2037,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["suppress",{"_index":587,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["sure",{"_index":1142,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":935,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svgov/bootstrap",{"_index":1537,"title":{},"body":{"index.html":{}}}],["svogv",{"_index":700,"title":{},"body":{"modules/SvogvCoreModule.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["svogv';or",{"_index":1602,"title":{},"body":{"index.html":{}}}],["svogv/bootstrap",{"_index":1710,"title":{},"body":{"index.html":{}}}],["svogv/core",{"_index":1610,"title":{},"body":{"index.html":{}}}],["svogv/material",{"_index":1539,"title":{},"body":{"index.html":{}}}],["svogv:master",{"_index":1253,"title":{},"body":{"contributing.html":{}}}],["svogvcoremodule",{"_index":684,"title":{"modules/SvogvCoreModule.html":{}},"body":{"modules/SvogvCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["svogvonce",{"_index":2010,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["syntax",{"_index":1638,"title":{},"body":{"index.html":{}}}],["system",{"_index":1196,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["system.componentmodel.dataannotations",{"_index":1582,"title":{},"body":{"index.html":{}}}],["systemjs",{"_index":943,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["systems",{"_index":2005,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["t",{"_index":156,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1467,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["tables",{"_index":1553,"title":{},"body":{"index.html":{}}}],["tabs",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":1634,"title":{},"body":{"index.html":{}}}],["tagged",{"_index":1471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["take",{"_index":1974,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["takes",{"_index":112,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["talking",{"_index":2034,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["target",{"_index":575,"title":{},"body":{"injectables/FormValidatorService.html":{},"index.html":{}}}],["target.prototype",{"_index":599,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errcompareproperty__${propname",{"_index":637,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errmaxlength__${propname",{"_index":606,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errminlength__${propname",{"_index":612,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errpattern__${propname",{"_index":618,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errrange__${propname",{"_index":626,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__errrequired__${propname",{"_index":601,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target.prototype[`__withcompare__${propname",{"_index":638,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["target[propname",{"_index":644,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["targetinstance",{"_index":585,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["task",{"_index":2185,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tasks",{"_index":1955,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tbd",{"_index":1282,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":1131,"title":{},"body":{"contributing.html":{}}}],["team's",{"_index":1108,"title":{},"body":{"contributing.html":{}}}],["techniques",{"_index":1493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["technologies",{"_index":1785,"title":{},"body":{"index.html":{}}}],["template",{"_index":79,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["templatehint",{"_index":25,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["templatehint(template",{"_index":1506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["templatehint.decorator.ts",{"_index":1425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["templatehintparams",{"_index":26,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["templatehinttype",{"_index":514,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["templates",{"_index":83,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{}}}],["tense",{"_index":1348,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":1229,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tested",{"_index":1277,"title":{},"body":{"contributing.html":{}}}],["testing",{"_index":2064,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tests",{"_index":1237,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["text",{"_index":27,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["textarea",{"_index":508,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["texts",{"_index":2056,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["texttreenodemodel",{"_index":719,"title":{"classes/TextTreeNodeModel.html":{}},"body":{"classes/TextTreeNodeModel.html":{}}}],["thank",{"_index":1260,"title":{},"body":{"contributing.html":{}}}],["that's",{"_index":503,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["thatappears",{"_index":1840,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["that}appears",{"_index":485,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["that’s",{"_index":2192,"title":{},"body":{"additional-documentation/about.html":{}}}],["themes",{"_index":1550,"title":{},"body":{"index.html":{}}}],["things",{"_index":1921,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["think",{"_index":2077,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["thinks",{"_index":1769,"title":{},"body":{"index.html":{}}}],["this._headers",{"_index":340,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._headers.filter((h",{"_index":302,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._headers.find((h",{"_index":326,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._headers.push(header",{"_index":373,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._items",{"_index":307,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._items.length",{"_index":288,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this._state",{"_index":831,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children",{"_index":814,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.indexof(node",{"_index":829,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.length",{"_index":825,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.push(...(nodes",{"_index":826,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.push(nodes",{"_index":827,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.children.splice(idx",{"_index":830,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.component",{"_index":774,"title":{},"body":{"classes/TreeNodeComponentModel.html":{}}}],["this.createheadersfortype(typeinstance",{"_index":311,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.fb",{"_index":582,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["this.fb.group(valgroup",{"_index":648,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["this.fv.build(userviewmodel",{"_index":1617,"title":{},"body":{"index.html":{}}}],["this.haschildren",{"_index":833,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.injector.get(pipetoken",{"_index":682,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["this.issortable",{"_index":100,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["this.items.sort((a",{"_index":321,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.items.sort(sortcallback",{"_index":320,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.itemsfiltered",{"_index":289,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.itemsfiltered.length",{"_index":290,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.itemsfiltered.slice(this.startrow",{"_index":301,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.myform",{"_index":1616,"title":{},"body":{"index.html":{}}}],["this.name",{"_index":760,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["this.ondelete.emit(item",{"_index":330,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.onedit.emit(item",{"_index":329,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.options",{"_index":812,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.pagesize",{"_index":292,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.parent",{"_index":822,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.searchvalue",{"_index":297,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.sortdirection[colname",{"_index":313,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.startrow",{"_index":293,"title":{},"body":{"classes/DataGridModel.html":{}}}],["this.state",{"_index":816,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.statechange",{"_index":815,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.statechange.emit(this._state",{"_index":839,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["this.templatehint",{"_index":101,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["this.text",{"_index":759,"title":{},"body":{"classes/TextTreeNodeModel.html":{}}}],["this.totalrows",{"_index":291,"title":{},"body":{"classes/DataGridModel.html":{}}}],["those",{"_index":2047,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["though",{"_index":1586,"title":{},"body":{"index.html":{}}}],["through",{"_index":1266,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["throughout",{"_index":1275,"title":{},"body":{"contributing.html":{}}}],["thrown",{"_index":1182,"title":{},"body":{"contributing.html":{}}}],["time",{"_index":1765,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["title",{"_index":43,"title":{},"body":{"classes/DataGridHeaderModel.html":{}}}],["titles",{"_index":121,"title":{},"body":{"classes/DataGridModel.html":{}}}],["together",{"_index":1549,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":312,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["toggles",{"_index":245,"title":{},"body":{"classes/DataGridModel.html":{}}}],["toggling",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["tolerant",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["ton",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["tons",{"_index":1941,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["tool",{"_index":1873,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tools",{"_index":1306,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tools/gulp",{"_index":2176,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tools/gulp/tasks",{"_index":2170,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["toolsthe",{"_index":2040,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tooltip",{"_index":13,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["top",{"_index":1622,"title":{},"body":{"index.html":{}}}],["tortious",{"_index":1829,"title":{},"body":{"license.html":{}}}],["total",{"_index":125,"title":{},"body":{"classes/DataGridModel.html":{},"additional-documentation/package-construction.html":{}}}],["totalfilteredrows",{"_index":146,"title":{},"body":{"classes/DataGridModel.html":{}}}],["totalrows",{"_index":145,"title":{},"body":{"classes/DataGridModel.html":{}}}],["touch",{"_index":2159,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tovalue",{"_index":397,"title":{},"body":{"classes/EditorModel.html":{}}}],["trace",{"_index":1186,"title":{},"body":{"contributing.html":{}}}],["trade",{"_index":1907,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["traditional",{"_index":1889,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["transfer",{"_index":1948,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["transform",{"_index":671,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["transform(value",{"_index":672,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["translate",{"_index":523,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["translation",{"_index":524,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["transpiler",{"_index":2120,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["transpilers",{"_index":1894,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["travis",{"_index":1916,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tree",{"_index":776,"title":{},"body":{"classes/TreeNodeModel.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["tree.treenodeoptions",{"_index":743,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["tree.treenodestate",{"_index":735,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.checked",{"_index":842,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.disabled",{"_index":840,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.expanded",{"_index":834,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.selected",{"_index":841,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["tree.treenodestate.undefined",{"_index":817,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["treeish",{"_index":1886,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["treenode.model",{"_index":757,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodebase.model",{"_index":811,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["treenodebasemodel",{"_index":752,"title":{"interfaces/TreeNodeBaseModel.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["treenodecomponentmodel",{"_index":767,"title":{"classes/TreeNodeComponentModel.html":{}},"body":{"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel",{"_index":723,"title":{"classes/TreeNodeModel.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["treenodemodel:12",{"_index":744,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:16",{"_index":746,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:20",{"_index":738,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:24",{"_index":741,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:28",{"_index":740,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:32",{"_index":747,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:34",{"_index":737,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:61",{"_index":753,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:69",{"_index":750,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodemodel:77",{"_index":755,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{}}}],["treenodeoptions",{"_index":732,"title":{"classes/TreeNodeOptions.html":{}},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeOptions.html":{}}}],["treenodeoptions.model",{"_index":756,"title":{},"body":{"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["treenodestate",{"_index":870,"title":{},"body":{"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["treeview",{"_index":929,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["triage",{"_index":1203,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":61,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TreeNodeModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":592,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["trying",{"_index":1193,"title":{},"body":{"contributing.html":{}}}],["ts",{"_index":588,"title":{},"body":{"injectables/FormValidatorService.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ts/js",{"_index":1915,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["tsc",{"_index":1721,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":2127,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tsconfig.json",{"_index":2119,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tslib",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":2148,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["tslint:disable",{"_index":237,"title":{},"body":{"classes/DataGridModel.html":{},"injectables/FormValidatorService.html":{}}}],["tuned",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":914,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"interfaces/DatagridStyles.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"pipes/FormatDataPipe.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["type's",{"_index":454,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type.hasownproperty(p",{"_index":342,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type=\"checkbox",{"_index":1668,"title":{},"body":{"index.html":{}}}],["type=\"checkbox\"&gt",{"_index":501,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type=\"date",{"_index":1676,"title":{},"body":{"index.html":{}}}],["type=\"date\"&gt",{"_index":500,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type=\"number",{"_index":1672,"title":{},"body":{"index.html":{}}}],["type=\"number\"&gt",{"_index":502,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type=\"text",{"_index":1665,"title":{},"body":{"index.html":{}}}],["type=\"text\"&gt",{"_index":497,"title":{},"body":{"interfaces/FormValidatorModel.html":{}}}],["type[`__issortable__${p",{"_index":353,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__pipeparams__${p",{"_index":370,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__sortcallback__${p",{"_index":355,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__templatehint__${p",{"_index":362,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__templatehintparams__${p",{"_index":366,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[`__uipipe__${p",{"_index":368,"title":{},"body":{"classes/DataGridModel.html":{}}}],["type[p",{"_index":364,"title":{},"body":{"classes/DataGridModel.html":{}}}],["typealiases",{"_index":1832,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc.json",{"_index":2123,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["typeinstance",{"_index":308,"title":{},"body":{"classes/DataGridModel.html":{}}}],["typeof",{"_index":363,"title":{},"body":{"classes/DataGridModel.html":{}}}],["types",{"_index":360,"title":{},"body":{"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"index.html":{}}}],["typescript",{"_index":495,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["typically",{"_index":1698,"title":{},"body":{"index.html":{}}}],["typing",{"_index":2160,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["typings",{"_index":2090,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ui",{"_index":319,"title":{},"body":{"classes/DataGridModel.html":{},"interfaces/FormValidatorModel.html":{},"classes/TreeNodeComponentModel.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["uihint",{"_index":28,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uihint(uihintrule",{"_index":1514,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uihint.decorator.ts",{"_index":1426,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["uihint.hintrule(type",{"_index":372,"title":{},"body":{"classes/DataGridModel.html":{}}}],["uihintrule",{"_index":1520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ultimate",{"_index":1695,"title":{},"body":{"index.html":{}}}],["umd",{"_index":1565,"title":{},"body":{"index.html":{}}}],["unambiguous",{"_index":1199,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":66,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["undefined,undefined",{"_index":229,"title":{},"body":{"classes/DataGridModel.html":{}}}],["under",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["unfortunately",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":1279,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["universal",{"_index":1713,"title":{},"body":{"index.html":{}}}],["unless",{"_index":1942,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["up",{"_index":819,"title":{},"body":{"classes/TreeNodeModel.html":{},"changelog.html":{},"additional-documentation/package-construction.html":{}}}],["update",{"_index":318,"title":{},"body":{"classes/DataGridModel.html":{},"changelog.html":{},"contributing.html":{}}}],["updates",{"_index":1254,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["updateyou",{"_index":2158,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["upon",{"_index":1639,"title":{},"body":{"index.html":{}}}],["upper",{"_index":2079,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["upstream",{"_index":1264,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":2092,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["usable",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":660,"title":{},"body":{"injectables/FormValidatorService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["use",{"_index":84,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["used",{"_index":445,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":166,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["user\\'s",{"_index":1593,"title":{},"body":{"index.html":{}}}],["userform",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["username",{"_index":1598,"title":{},"body":{"index.html":{}}}],["users",{"_index":1745,"title":{},"body":{"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["userviewmodel",{"_index":1589,"title":{},"body":{"index.html":{}}}],["uses",{"_index":1442,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["using",{"_index":42,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"interfaces/FormValidatorModel.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["usually",{"_index":1534,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["utils/object",{"_index":279,"title":{},"body":{"classes/DataGridModel.html":{}}}],["val",{"_index":1681,"title":{},"body":{"index.html":{}}}],["val,cal",{"_index":1675,"title":{},"body":{"index.html":{}}}],["valdiate",{"_index":1527,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valgroup",{"_index":583,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["valgroup)[propname",{"_index":643,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["valid",{"_index":443,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["validatecompare",{"_index":579,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["validatecompare(p",{"_index":1522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validaterange",{"_index":577,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["validaterange(f",{"_index":1526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validates",{"_index":1453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":558,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["validator",{"_index":554,"title":{},"body":{"injectables/FormValidatorService.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":515,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"injectables/FormValidatorService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["validators.compose(validators",{"_index":646,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.length",{"_index":640,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validatecompare(compare",{"_index":639,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validaterange(f",{"_index":633,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.maxlength(maxlength",{"_index":608,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.minlength(minlength",{"_index":614,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.pattern(pattern",{"_index":620,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators.push(validators.required",{"_index":602,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators/compare.validator",{"_index":580,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators/range.validator",{"_index":578,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validators[0",{"_index":645,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["validatortype",{"_index":527,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"miscellaneous/typealiases.html":{}}}],["value",{"_index":54,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/DataGridModel.html":{},"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"pipes/FormatDataPipe.html":{},"classes/TreeNodeModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["values",{"_index":400,"title":{},"body":{"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["variables",{"_index":1841,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1305,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["version",{"_index":1272,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["versionif",{"_index":2014,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["versions",{"_index":994,"title":{},"body":{"changelog.html":{},"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["very",{"_index":903,"title":{},"body":{"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["via",{"_index":1124,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["view",{"_index":75,"title":{},"body":{"classes/DataGridHeaderModel.html":{},"classes/TreeNodeOptions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["viewmodel",{"_index":557,"title":{},"body":{"injectables/FormValidatorService.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["viewmodels",{"_index":335,"title":{},"body":{"classes/DataGridModel.html":{},"index.html":{}}}],["vim",{"_index":1958,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["visible",{"_index":116,"title":{},"body":{"classes/DataGridModel.html":{}}}],["visual",{"_index":1201,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["vit",{"_index":2161,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["void",{"_index":204,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TextTreeNodeModel.html":{},"interfaces/TreeNodeBaseModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{}}}],["walk",{"_index":818,"title":{},"body":{"classes/TreeNodeModel.html":{}}}],["want",{"_index":899,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["warranties",{"_index":1814,"title":{},"body":{"license.html":{}}}],["watermark",{"_index":398,"title":{},"body":{"classes/EditorModel.html":{},"interfaces/FormValidatorModel.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["watermarks",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":562,"title":{},"body":{"injectables/FormValidatorService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["ways",{"_index":2021,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["wd",{"_index":711,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["wd.formatdatapipe",{"_index":695,"title":{},"body":{"modules/SvogvCoreModule.html":{},"overview.html":{}}}],["we'll",{"_index":1370,"title":{},"body":{"contributing.html":{}}}],["we're",{"_index":1977,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["web",{"_index":1267,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["webpack",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["websites",{"_index":2026,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["welcome",{"_index":1927,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["well",{"_index":1304,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["what's",{"_index":1914,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["whatsoever",{"_index":1823,"title":{},"body":{"license.html":{}}}],["whether",{"_index":889,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["white",{"_index":1319,"title":{},"body":{"contributing.html":{}}}],["whole",{"_index":1045,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{},"additional-documentation/about.html":{}}}],["widget",{"_index":1748,"title":{},"body":{"index.html":{}}}],["widgets",{"_index":917,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["widgets/index",{"_index":712,"title":{},"body":{"modules/SvogvCoreModule.html":{}}}],["window",{"_index":1725,"title":{},"body":{"index.html":{}}}],["windows",{"_index":1925,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["wish",{"_index":211,"title":{},"body":{"classes/DataGridModel.html":{}}}],["with@sortable(false",{"_index":1498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["within",{"_index":668,"title":{},"body":{"pipes/FormatDataPipe.html":{}}}],["without",{"_index":1222,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["withproperty",{"_index":1434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["word",{"_index":1358,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":486,"title":{},"body":{"interfaces/FormValidatorModel.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["working",{"_index":945,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["world",{"_index":910,"title":{},"body":{"changelog.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["worries",{"_index":1936,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["wrap",{"_index":1286,"title":{},"body":{"contributing.html":{}}}],["write",{"_index":1463,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["writing",{"_index":1964,"title":{},"body":{"additional-documentation/package-construction.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["written",{"_index":1749,"title":{},"body":{"index.html":{}}}],["written}on",{"_index":566,"title":{},"body":{"injectables/FormValidatorService.html":{}}}],["wrote",{"_index":1861,"title":{},"body":{"additional-documentation/package-construction.html":{}}}],["www.joergkrause.de",{"_index":1752,"title":{},"body":{"index.html":{}}}],["years",{"_index":1755,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{},"additional-documentation/about.html":{}}}],["yes",{"_index":247,"title":{},"body":{"classes/DataGridModel.html":{},"classes/TextTreeNodeModel.html":{},"classes/TreeNodeComponentModel.html":{},"classes/TreeNodeModel.html":{},"classes/TreeNodeOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/package-construction.html":{}}}],["you're",{"_index":1692,"title":{},"body":{"index.html":{},"additional-documentation/package-construction.html":{}}}],["yours",{"_index":2107,"title":{},"body":{"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["yourself",{"_index":1210,"title":{},"body":{"contributing.html":{},"additional-documentation/package-construction.html":{}}}],["zipped",{"_index":1575,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":1400,"title":{},"body":{"dependencies.html":{},"additional-documentation/package-construction/create-an-npm-package.html":{}}}],["zoom",{"_index":696,"title":{},"body":{"modules/SvogvCoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DataGridHeaderModel.html":{"url":"classes/DataGridHeaderModel.html","title":"class - DataGridHeaderModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataGridHeaderModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts\n        \n\n            \n                Description\n            \n            \n                Describe a header field with name, tooltip and other properties.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                desc\n                            \n                            \n                                    Public\n                                hidden\n                            \n                            \n                                isSortable\n                            \n                            \n                                pipe\n                            \n                            \n                                    Optional\n                                pipeParams\n                            \n                            \n                                    Public\n                                prop\n                            \n                            \n                                    Optional\n                                sortCallback\n                            \n                            \n                                templateHint\n                            \n                            \n                                    Optional\n                                templateHintParams\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                uiHint\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string, desc: string, prop: string, hidden: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:7\n                            \n                        \n\n                \n                    \n                            The ctor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The text to display.\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A tooltip that is shown on mouseover (using the title attribute).\n\n                                                        \n                                                \n                                                \n                                                        prop\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The propertie's internal name.\n\n                                                        \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                optionally set a field as hidden and hence do not show in the grid.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            desc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        A tooltip that is shown on mouseover (using the `title` attribute).\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        optionally set a field as hidden and hence do not show in the grid.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:38\n                            \n                        \n\n                \n                    \n                        Display the sort buttons and connect to sort functions. Default is true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Pipe\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:48\n                            \n                        \n\n                \n                    \n                        Provides a pipe for all data of this column. Default is no pipe (undefined).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pipeParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:53\n                            \n                        \n\n                \n                    \n                        Optional parameters for a pipe.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            prop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        The propertie's internal name.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:43\n                            \n                        \n\n                \n                    \n                        An optional sort callback function that replaces the default Array.prototype.sort.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateHint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:23\n                            \n                        \n\n                \n                    \n                        Hint from view model to select a certain template. Default is text (format as string).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            templateHintParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:33\n                            \n                        \n\n                \n                    \n                        Additional parameters some templates may use. Optional.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:15\n                            \n                        \n\n                \n                    \n                        The text to display.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uiHint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StyleRules\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:28\n                            \n                        \n\n                \n                    \n                        Custom styles directly applied to the grid's header on a per model base.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Pipe } from '@angular/core';\nimport { StyleRules } from './datagridstyle.model';\n\n/**\n * Describe a header field with name, tooltip and other properties.\n */\nexport class DataGridHeaderModel {\n  /**\n   * The ctor\n   * @param text The text to display.\n   * @param desc A tooltip that is shown on mouseover (using the `title` attribute).\n   * @param prop The propertie's internal name.\n   * @param hidden optionally set a field as hidden and hence do not show in the grid.\n   */\n  constructor(public text: string, public desc: string, public prop: string, public hidden: boolean = false) {\n    this.isSortable = true;\n    this.templateHint = 'text';\n  }\n\n  /**\n   * Hint from view model to select a certain template. Default is *text* (format as string).\n   */\n  templateHint: string;\n\n  /**\n   * Custom styles directly applied to the grid's header on a per model base.\n   */\n  uiHint: StyleRules;\n\n  /**\n   * Additional parameters some templates may use. Optional.\n   */\n  templateHintParams?: any[];\n\n  /**\n   * Display the sort buttons and connect to sort functions. Default is `true`.\n   */\n  isSortable: boolean;\n\n  /**\n   * An optional sort callback function that replaces the default `Array.prototype.sort`.\n   */\n  sortCallback?: (a, b) => 1 | -1 | 0;\n\n  /**\n   * Provides a pipe for all data of this column. Default is no pipe (`undefined`).\n   */\n  pipe: Pipe;\n\n  /**\n   * Optional parameters for a pipe.\n   */\n  pipeParams?: any[];\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataGridModel.html":{"url":"classes/DataGridModel.html","title":"class - DataGridModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataGridModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts\n        \n\n            \n                Description\n            \n            \n                The controlling class for Grid applications.\nThis class takes an array of elements and handles:\n\nvisible headers, managed by @Hidden() decorator\ncreate header titles, managed by @Display() decorator\nsorting\nfiltering\ncount total rows\npaging\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _headers\n                            \n                            \n                                    Private\n                                _items\n                            \n                            \n                                    Public\n                                currentPageIndex\n                            \n                            \n                                    Public\n                                onDelete\n                            \n                            \n                                    Public\n                                onEdit\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                searchValue\n                            \n                            \n                                    Public\n                                sortDirection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addColumn\n                            \n                            \n                                    Private\n                                createHeadersForType\n                            \n                            \n                                    Public\n                                deleteItem\n                            \n                            \n                                    Public\n                                editItem\n                            \n                            \n                                    Public\n                                removeColumn\n                            \n                            \n                                    Public\n                                sortColumn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalRows\n                                \n                                \n                                    totalFilteredRows\n                                \n                                \n                                    currentRowStart\n                                \n                                \n                                    currentRowEnd\n                                \n                                \n                                    startRow\n                                \n                                \n                                    maxPageIndex\n                                \n                                \n                                    items\n                                \n                                \n                                    itemsFiltered\n                                \n                                \n                                    itemsOnCurrentPage\n                                \n                                \n                                    headers\n                                \n                                \n                                    headersNotVisible\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[], type: Type, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:123\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataGridHeaderModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPageIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:115\n                            \n                        \n\n                \n                    \n                        Event fired if user clicks Delete button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:110\n                            \n                        \n\n                \n                    \n                        Event fired if user clicks Edit button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:102\n                            \n                        \n\n                \n                    \n                        The search value filters the rows. Provide the property name and the filter instruction. Search is pure client.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sortDirection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:120\n                            \n                        \n\n                \n                    \n                        Current sort direction per column.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addColumn(colname: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:177\n                \n            \n\n\n            \n                \n                    Add a column to the current grid, that has been removed recently.\nIt's just adding columns that already exists in the headers collection.\nIf the column name provided does not exists, the method does nothing.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createHeadersForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createHeadersForType(type: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteItem(item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:197\n                \n            \n\n\n            \n                \n                    Called by infrastructure to inform caller of delete wish\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editItem(item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:189\n                \n            \n\n\n            \n                \n                    Called by infrastructure to inform caller of edit wish\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeColumn(colname: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:165\n                \n            \n\n\n            \n                \n                    Make a column invisible. This is just changing the render process, the column is still\nin the headers collection and can be made visible again by calling addColumnlater.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sortColumn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortColumn(colName: string, dir: Direction, sortCallback?: (undefined,undefined) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:141\n                \n            \n\n\n            \n                \n                    Simple sort fucntion that makes a array sort call for the specified column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    colName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The column which has to be sorted after.\n// tslint:disable-next-line:max-line-length\n\n                                    \n                                \n                                \n                                    dir\n                                    \n                                                Direction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The order, descended is desc, any other string is ascending.\nIf nothing is provided, the direction toggles. Initital value is ascending.\n\n                                    \n                                \n                                \n                                    sortCallback\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalRows\n                    \n                \n\n                \n                    \n                        gettotalRows()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:31\n                                \n                            \n                    \n                        \n                                Returns the number of rows regardless the actual filter (the total).\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        totalFilteredRows\n                    \n                \n\n                \n                    \n                        gettotalFilteredRows()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentRowStart\n                    \n                \n\n                \n                    \n                        getcurrentRowStart()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentRowEnd\n                    \n                \n\n                \n                    \n                        getcurrentRowEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        startRow\n                    \n                \n\n                \n                    \n                        getstartRow()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        maxPageIndex\n                    \n                \n\n                \n                    \n                        getmaxPageIndex()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n\n                \n                    \n                        getitems()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:61\n                                \n                            \n\n                \n                    \n                        setitems(value: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:58\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsFiltered\n                    \n                \n\n                \n                    \n                        getitemsFiltered()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        itemsOnCurrentPage\n                    \n                \n\n                \n                    \n                        getitemsOnCurrentPage()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        headers\n                    \n                \n\n                \n                    \n                        getheaders()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:89\n                                \n                            \n                    \n                        \n                                Get all headers (column names) and their properties.\n\n\n                                \n                                    Returns :         DataGridHeaderModel[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        headersNotVisible\n                    \n                \n\n                \n                    \n                        getheadersNotVisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:96\n                                \n                            \n                    \n                        \n                                Returns the columns currently not shown. and @see removeColumn for moreinformation.\n\n\n                                \n                                    Returns :         DataGridHeaderModel[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Type, EventEmitter, Directive } from '@angular/core';\n\nimport '../../../utils/object-extensions';\nimport { DataGridHeaderModel } from './datagridheader.model';\nimport { Display, Hidden, UiHint } from '../../../decorators';\n\n/**\n * Sort direction, controlled by simple string comparision or a callback.\n */\nexport enum Direction {\n  Ascending,\n  Descending\n}\n\n/**\n * The controlling class for Grid applications.\n *\n * This class takes an array of elements and handles:\n * - visible headers, managed by @Hidden() decorator\n * - create header titles, managed by @Display() decorator\n * - sorting\n * - filtering\n * - count total rows\n * - paging\n */\nexport class DataGridModel {\n\n  /**\n   * Returns the number of rows regardless the actual filter (the total).\n   */\n  get totalRows(): number {\n    return this._items.length;\n  }\n\n  get totalFilteredRows(): number {\n    return this.itemsFiltered ? this.itemsFiltered.length : 0;\n  }\n\n  private get currentRowStart(): number {\n    return this.totalRows > this.pageSize ? this.startRow + 1 : this.totalRows === 0 ? 0 : 1;\n  }\n  private get currentRowEnd(): number {\n    return this.startRow + this.pageSize  {\n      // tslint:disable-next-line:forin\n      for (const s in this.searchValue) {\n        const pattern = new RegExp(this.searchValue[s]);\n        if (pattern.test(item[s])) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  get itemsOnCurrentPage(): T[] {\n    return this.itemsFiltered.slice(this.startRow, this.startRow + this.pageSize);\n  }\n\n  /**\n   * Get all headers (column names) and their properties.\n   */\n  public get headers(): DataGridHeaderModel[] {\n    return this._headers.filter((h) => !h.hidden);\n  }\n\n  /**\n   * Returns the columns currently not shown. {@link addColumn and @see removeColumn for more}information.\n   */\n  public get headersNotVisible(): DataGridHeaderModel[] {\n    return this._headers.filter((h) => h.hidden);\n  }\n  /**\n   * The search value filters the rows. Provide the property name and the filter instruction. Search is pure client.\n   */\n  public searchValue: { [prop: string]: any } = {};\n\n  public currentPageIndex = 1;\n  public pageSize: number;\n\n  /**\n   * Event fired if user clicks Edit button.\n   */\n  public onEdit: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired if user clicks Delete button.\n   */\n  public onDelete: EventEmitter = new EventEmitter();\n\n  /**\n   * Current sort direction per column.\n   */\n  public sortDirection: { [column: string]: Direction } = {};\n  private _items: T[];\n\n  private _headers: DataGridHeaderModel[];\n  constructor(items: T[], type: Type, pageSize = 10) {\n    this._items = items;\n    this.pageSize = pageSize;\n    const typeInstance = new type();\n    if (typeInstance) {\n      // make header from decorators, omit if null\n      this.createHeadersForType(typeInstance);\n    }\n  }\n\n  /**\n   * Simple sort fucntion that makes a array sort call for the specified column.\n   * @param colName The column which has to be sorted after.\n   * // tslint:disable-next-line:max-line-length\n   * @param dir The order, descended is *desc*, any other string is ascending.\n   *            If nothing is provided, the direction toggles. Initital value is *ascending*.\n   */\n  public sortColumn(colName: string, dir: Direction, sortCallback?: (a, b) => 1 | -1 | 0) {\n    if (!dir) {\n      // if nothing is provided, toggle current\n      dir = this.sortDirection[colName] === Direction.Ascending ? Direction.Descending : Direction.Ascending;\n    }\n    // remember last and update UI\n    this.sortDirection[colName] = dir;\n    if (sortCallback) {\n      this.items.sort(sortCallback);\n    } else {\n      this.items.sort((a: any, b: any) => {\n        if (dir === Direction.Descending) {\n          return a[colName] > b[colName] ? 1 : -1;\n        } else {\n          return a[colName] > b[colName] ? -1 : 1;\n        }\n      });\n    }\n  }\n\n  /**\n   * Make a column invisible. This is just changing the render process, the column is still\n   * in the headers collection and can be made visible again by calling {@link addColumn}later.\n   */\n  public removeColumn(colname: string) {\n    const col = this._headers.find((h) => h.prop === colname);\n    if (col) {\n      col.hidden = true;\n    }\n  }\n\n  /**\n   * Add a column to the current grid, that has been removed recently.\n   * It's just adding columns that already exists in the headers collection.\n   * If the column name provided does not exists, the method does nothing.\n   */\n  public addColumn(colname: string) {\n    const col = this._headers.find((h) => h.prop === colname);\n    if (col) {\n      col.hidden = false;\n    }\n    return false;\n  }\n\n  /**\n   * Called by infrastructure to inform caller of edit wish\n   * @param item The item to edit\n   */\n  public editItem(item: T) {\n    this.onEdit.emit(item);\n  }\n\n  /**\n   * Called by infrastructure to inform caller of delete wish\n   * @param item The item to delete\n   */\n  public deleteItem(item: T) {\n    this.onDelete.emit(item);\n  }\n\n  private createHeadersForType(type: any): void {\n    // assume simple object structure, iterating an array of viewmodels\n    // has at least one row, so we can read the headers\n    // first we read the properties\n    this._headers = new Array();\n    for (const p in type) {\n      if (!type.hasOwnProperty(p)) {\n        continue;\n      }\n      const propName = Display.Name(type, p, p);\n      const propDesc = Display.Desc(type, p, p);\n      // check if hidden, show if no hidden decorator\n      const isHidden = Hidden.IsHidden(type, p, false);\n      const header = new DataGridHeaderModel(propName, propDesc, p, isHidden);\n      // sorting\n      header.isSortable = type[`__isSortable__${p}`] === undefined ? true : !!type[`__isSortable__${p}`];\n      header.sortCallback = type[`__sortCallback__${p}`] || undefined;\n      // look for templates and pipes provided by user, if none, we have templates for all ES types\n      header.templateHint = type[`__templatehint__${p}`] || typeof type[p];\n      header.templateHintParams = type[`__templatehintParams__${p}`];\n      header.pipe = type[`__uipipe__${p}`];\n      header.pipeParams = type[`__pipeparams__${p}`];\n      header.uiHint = UiHint.HintRule(type, p, {});\n      this._headers.push(header);\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridStyles.html":{"url":"interfaces/DatagridStyles.html","title":"interface - DatagridStyles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridStyles\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts\n        \n\n            \n                Description\n            \n            \n                All styleable parts of the grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        actionCell\n                                \n                                \n                                            Optional\n                                        first\n                                \n                                \n                                            Optional\n                                        footer\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        header\n                                \n                                \n                                            Optional\n                                        headerButton\n                                \n                                \n                                            Optional\n                                        headerRemoveButton\n                                \n                                \n                                            Optional\n                                        headerSortButton\n                                \n                                \n                                            Optional\n                                        last\n                                \n                                \n                                            Optional\n                                        middle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionCell\n                                    \n                                \n                                \n                                    \n                                        actionCell:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                    \n                                \n                                \n                                    \n                                        footer:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerButton\n                                    \n                                \n                                \n                                    \n                                        headerButton:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerRemoveButton\n                                    \n                                \n                                \n                                    \n                                        headerRemoveButton:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerSortButton\n                                    \n                                \n                                \n                                    \n                                        headerSortButton:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middle\n                                    \n                                \n                                \n                                    \n                                        middle:         StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StyleRules\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type StyleRules = { [name: string]: string };\n\n/**\n * All styleable parts of the grid.\n */\nexport interface DatagridStyles {\n  first?: StyleRules;\n  middle?: StyleRules;\n  last?: StyleRules;\n  group?: StyleRules;\n  header?: StyleRules;\n  headerButton?: StyleRules;\n  headerSortButton?: StyleRules;\n  headerRemoveButton?: StyleRules;\n  footer?: StyleRules;\n  actionCell?: StyleRules;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditorModel.html":{"url":"classes/EditorModel.html","title":"class - EditorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditorModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                enumValues\n                            \n                            \n                                    Public\n                                formGroup\n                            \n                            \n                                    Public\n                                fromValue\n                            \n                            \n                                    Public\n                                inline\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                labelDivider\n                            \n                            \n                                    Public\n                                listValues\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                readonly\n                            \n                            \n                                    Public\n                                tooltip\n                            \n                            \n                                    Public\n                                toValue\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                waterMark\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enumValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:36\n                            \n                        \n\n                \n                    \n                        The values of the select field provided by an enum. For other fieldtypes it's being ignored.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:27\n                            \n                        \n\n                \n                    \n                        The form's group object.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fromValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:45\n                            \n                        \n\n                \n                    \n                        The start value for a range field. Other field types ignore this value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:32\n                            \n                        \n\n                \n                    \n                        If set to true the label and the field appears in one row.\nOtherwise the label is above the field. Default is true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:19\n                            \n                        \n\n                \n                    \n                        The label's name.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            labelDivider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ': '\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:15\n                            \n                        \n\n                \n                    \n                        A character after the fields label. Default is ': ' (colon plus space);\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:41\n                            \n                        \n\n                \n                    \n                        The values of the select field provided by a list. For other fieldtypes it's being ignored.\nThe value shall be an Array that a *ngFor directive can execute.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:7\n                            \n                        \n\n                \n                    \n                        Field name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            readonly\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:57\n                            \n                        \n\n                \n                    \n                        Renders the field as read only.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tooltip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:23\n                            \n                        \n\n                \n                    \n                        A tooltip\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:49\n                            \n                        \n\n                \n                    \n                        The end value for a range field. Other field types ignore this value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'text'\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:11\n                            \n                        \n\n                \n                    \n                        Editor type. Default is 'text';\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waterMark\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor/models/editor.model.ts:53\n                            \n                        \n\n                \n                    \n                        An optional placeholder for empty field. The default is empty (no watermark).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup } from \"@angular/forms\";\n\nexport class EditorModel {\n    /**\n   * Field name\n   */\n  public name: string;\n  /**\n   * Editor type. Default is 'text';\n   */\n  public type = 'text';\n  /**\n   * A character after the fields label. Default is ': ' (colon plus space);\n   */\n  public labelDivider = ': ';\n  /**\n   * The label's name.\n   */\n  public label: string;\n  /**\n   * A tooltip\n   */\n  public tooltip: string;\n  /**\n   * The form's group object.\n   */\n  public formGroup: FormGroup;\n  /**\n   * If set to true the label and the field appears in one row.\n   * Otherwise the label is above the field. Default is `true`.\n   */\n  public inline = true;\n  /**\n   * The values of the select field provided by an enum. For other fieldtypes it's being ignored.\n   */\n  public enumValues: any;\n  /**\n   * The values of the select field provided by a list. For other fieldtypes it's being ignored.\n   * The value shall be an Array that a `*ngFor` directive can execute.\n   */\n  public listValues: any[];\n  /**\n   * The start value for a range field. Other field types ignore this value.\n   */\n  public fromValue = 0;\n  /**\n   * The end value for a range field. Other field types ignore this value.\n   */\n  public toValue = 100;\n  /**\n   * An optional placeholder for empty field. The default is empty (no watermark).\n   */\n  public waterMark = '';\n  /**\n   * Renders the field as read only.\n   */\n  public readonly = false;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormValidatorModel.html":{"url":"interfaces/FormValidatorModel.html","title":"interface - FormValidatorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormValidatorModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/formvalidator.model.ts\n        \n\n            \n                Description\n            \n            \n                The form description model. Use this to have a valid JSON object that can be used\ninstead of the decorators. Each type represents a single decorator. The basic\nstructure looks like this shown in the example.\nSee the different type's descriptions for detailled information.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [field: string]:        displayType | displayGroupType | formatType | hiddenType | placeHolderType | compareType | maxlengthType | minlengthType | patternType | stringLengthType | emailType | requiredType\n\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/services/formvalidator.model.ts:185\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export type displayGroupType = {\n  displaygroup: {\n    name: string;\n    order?: number;\n    description?: string;\n  };\n};\n\n/**\n * This element describes the UI elements label, tooltip, and order.\n */\nexport type displayType = {\n  display: {\n    name: string;\n    order?: number;\n    description?: string;\n  };\n};\n\n/**\n * A pipe driven formatting instruction.\n */\nexport type formatType = {\n  format: {\n    pipeName: any;\n    pipeParams?: any[];\n  };\n};\n/**\n * The field will not appear in autoforms if decorated as hidden. If the parameter\n * is omitted the type returns true due to its pure existence.\n */\nexport type hiddenType = {\n  hidden?: boolean;\n};\n/**\n * A watermark can be applied. The {@link name property is the value that}appears\n * in the field. This may not work for specific controls, such as list boxes.\n */\nexport type placeHolderType = {\n  placeholder: {\n    name: string;\n  };\n};\n/**\n * The field in rendered as readonly, if possible.\n */\nexport type readonlyType = {\n  readonly: boolean;\n};\n/**\n * This controls the actual control type. The default values are (TypeScript type: decorator type: rendered element):\n *\n * * string: text: &lt;input type=\"text\"&gt;\n * * date: calendar: &lt;input type=\"date\"&gt;\n * * boolean: boolean: &lt;input type=\"checkbox\"&gt;\n * * number: number: &lt;input type=\"number\"&gt;\n *\n * This is the formatting that's automatically applied. The template hint goes after and can change any of these values.\n * The allows values are:\n *\n * * any: textarea: &lt;textarea&gt;\n * * array: enum:  &lt;select&gt;\n * * array: list: &lt;select&gt;\n * * any: template: The content of the editor element (does not work with &lt;ac-autoform&gt;)\n *\n */\nexport type templateHintType = {\n  templatehint: {\n    hint: string;\n  };\n};\n\n/**\n * Base type for validators.\n *\n * Give a private error message in @param msg. If omitted a error message will be generated.\n * Set to active by using @param active. Default is true.\n * Active i18n by using the @param translate. The translation module must be used separately.\n */\nexport type validatorType = {\n  msg?: string;\n  active?: boolean;\n  translate?: boolean;\n};\n/**\n * Compare to fields.\n */\nexport type compareType = {\n  compare:\n  | {\n    fieldToCompare: string;\n  }\n  | validatorType;\n};\n/**\n * Email\n */\nexport type emailType = {\n  email: validatorType;\n};\n/**\n * Maximum allowed length (string only)\n */\nexport type maxlengthType = {\n  maxlength:\n  | {\n    max: number;\n  }\n  | validatorType;\n};\n/**\n * Minimum allowed length (string only)\n */\nexport type minlengthType = {\n  minlength:\n  | {\n    min: number;\n  }\n  | validatorType;\n};\n/**\n * Any regex pattern\n */\nexport type patternType = {\n  pattern:\n  | {\n    pattern: string | RegExp;\n  }\n  | validatorType;\n};\n/**\n * A range for number or Date only.\n */\nexport type rangeType = {\n  range:\n  | {\n    from: number | Date;\n    to: number | Date;\n  }\n  | validatorType;\n};\n/**\n * This field is mandatory.\n */\nexport type requiredType = {\n  required: validatorType;\n};\n/**\n * Maximal and minimal allowed length (string only).\n */\nexport type stringLengthType = {\n  stringlength:\n  | {\n    min: number;\n    max: number;\n  }\n  | validatorType;\n};\n\n/**\n * The form description model. Use this to have a valid JSON object that can be used\n * instead of the decorators. Each type represents a single decorator. The basic\n * structure looks like this shown in the example.\n *\n * See the different type's descriptions for detailled information.\n *\n * @example\n  {\n     \"fieldName\": {\n        \"display\": {\n           \"name\": \"The field's human readible name\"\n        }\n     }\n   }\n *\n */\nexport interface FormValidatorModel {\n  [field: string]:\n  | displayType\n  | displayGroupType\n  | formatType\n  | hiddenType\n  | placeHolderType\n  | compareType\n  | maxlengthType\n  | minlengthType\n  | patternType\n  | stringLengthType\n  | emailType\n  | requiredType;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormValidatorService.html":{"url":"injectables/FormValidatorService.html","title":"injectable - FormValidatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormValidatorService\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/formvalidator.service.ts\n        \n\n            \n                Description\n            \n            \n                The form validator service creates a FormGroup object from a viewmodel. If the viewmodel\nhas been decorated with validation decorators the validators are created accordingly.\nThe simplest way is creating a class with properties and add decorators, such as\nStringLength. The service will than create a FormGroup that contains a}validator\nof type StringLength for the property the decorator is written}on.\nThe decorators provide properties for additional information, such as a custom error message.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/services/formvalidator.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build(target: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/services/formvalidator.service.ts:32\n                \n            \n\n\n            \n                \n                    Call this method to actually create the FormGroup object. Provide a valid model type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A valid model type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        A FormGroup with validators\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/services/formvalidator.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\n\nimport { validateRange } from './validators/range.validator';\nimport { validateCompare } from './validators/compare.validator';\n\n/**\n * The form validator service creates a {@link FormGroup} object from a viewmodel. If the viewmodel\n * has been decorated with validation decorators the validators are created accordingly.\n *\n * The simplest way is creating a class with properties and add decorators, such as\n * {@link StringLength}. The service will than create a {@link FormGroup} that contains a}validator\n * of type {@link StringLength} for the property the decorator is written}on.\n *\n * The decorators provide properties for additional information, such as a custom error message.\n *\n */\n@Injectable()\nexport class FormValidatorService {\n  private fb: FormBuilder;\n\n  constructor(@Inject(FormBuilder) fb: FormBuilder) {\n    this.fb = fb;\n  }\n\n  /**\n   * Call this method to actually create the FormGroup object. Provide a valid model type.\n   *\n   * @param target A valid model type.\n   * @returns A FormGroup with validators\n   */\n  public build(target: any): FormGroup {\n    const valGroup: any = {};\n    const errGroup: any = {};\n    let form: FormGroup;\n    let targetInstance: any;\n    if (target) {\n      // the cast is just to suppress TS errors and shows it's intentionally\n      try {\n        targetInstance = new target();\n      } catch (ex) {\n        console.error('Invalid viewmodel for FormValidatorService');\n      }\n    }\n    if (targetInstance) {\n      // tslint:disable-next-line:forin\n      for (const propName in targetInstance) {\n        const validators = new Array();\n        const errmsgs = new Object();\n        const isRequired = `__isRequired__${propName}` in target.prototype;\n        if (isRequired) {\n          (errmsgs)['required'] = target.prototype[`__errRequired__${propName}`];\n          validators.push(Validators.required);\n        }\n        const hasMaxLength = `__hasMaxLength__${propName}` in target.prototype;\n        if (hasMaxLength) {\n          (errmsgs)['maxlength'] = target.prototype[`__errMaxLength__${propName}`];\n          const maxLength = parseInt(target.prototype[`__hasMaxLength__${propName}`], 10);\n          validators.push(Validators.maxLength(maxLength));\n        }\n        const hasMinLength = `__hasMinLength__${propName}` in target.prototype;\n        if (hasMinLength) {\n          (errmsgs)['minlength'] = target.prototype[`__errMinLength__${propName}`];\n          const minLength = parseInt(target.prototype[`__hasMinLength__${propName}`], 10);\n          validators.push(Validators.minLength(minLength));\n        }\n        const hasPattern = `__hasPattern__${propName}` in target.prototype;\n        if (hasPattern) {\n          (errmsgs)['pattern'] = target.prototype[`__errPattern__${propName}`];\n          const pattern = new RegExp(target.prototype[`__hasPattern__${propName}`]);\n          validators.push(Validators.pattern(pattern));\n        }\n        const hasRangeFrom = `__hasRangeFrom__${propName}` in target.prototype;\n        const hasRangeTo = `__hasRangeTo__${propName}` in target.prototype;\n        if (hasRangeFrom || hasRangeTo) {\n          (errmsgs)['range'] = target.prototype[`__errRange__${propName}`];\n          let f: number | Date = Number(target.prototype[`__hasRangeFrom__${propName}`]);\n          let t: number | Date = Number(target.prototype[`__hasRangeTo__${propName}`]);\n          if (!f && !t) {\n            // If NaN assume Date\n            f = Date.parse(f.toString());\n            t = Date.parse(t.toString());\n          }\n          validators.push(validateRange(f, t));\n        }\n        const hasCompare = `__hasCompareProperty__${propName}` in target.prototype;\n        if (hasCompare) {\n          (errmsgs)['compare'] = target.prototype[`__errCompareProperty__${propName}`];\n          const compare = target.prototype[`__withCompare__${propName}`];\n          validators.push(validateCompare(compare));\n        }\n        if (validators.length === 0) {\n          // even if there is no validator we need to add the property to the group\n          (valGroup)[propName] = [target[propName]];\n        }\n        if (validators.length === 1) {\n          (valGroup)[propName] = [target[propName] || '', validators[0]];\n        }\n        if (validators.length >= 1) {\n          (valGroup)[propName] = [target[propName] || '', Validators.compose(validators)];\n        }\n        (errGroup)[propName] = errmsgs;\n      }\n      // create form group\n      form = this.fb.group(valGroup);\n      // forward the model to the editors for easy access to other decorators\n      // the cast is just to suppress TS errors and shows it's intentionally\n      (form)['__editorModel__'] = targetInstance;\n      // register controls and add messages\n      // tslint:disable-next-line:forin\n      for (const propName in errGroup) {\n        const ctrl = form.controls[propName];\n        if (!ctrl) {\n          continue; // control might not be in the form\n        }\n        (form.controls[propName])['messages'] = (errGroup)[propName];\n      }\n    }\n    // return FormGroup for immediate usage\n    return form;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FormatDataPipe.html":{"url":"pipes/FormatDataPipe.html","title":"pipe - FormatDataPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FormatDataPipe\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe allows the dynamic formatting of data. It is just for internal use.\nThe purpose is the forwarding of an externally defined pipe to the pipe formatter within the grid.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        formatData\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, pipeToken: Type, pipeArgs: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pipeToken\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pipeArgs\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injector, Pipe, PipeTransform, Type } from '@angular/core';\n\n/**\n * This pipe allows the dynamic formatting of data. It is just for internal use.\n * The purpose is the forwarding of an externally defined pipe to the pipe formatter within the grid.\n */\n@Pipe({\n  name: 'formatData'\n})\nexport class FormatDataPipe implements PipeTransform {\n  public constructor(private injector: Injector) {}\n\n  transform(value: any, pipeToken: Type, pipeArgs: any[]): any {\n    if (!pipeToken) {\n      console.log('FormatDataPipe:NoPipeToken');\n      return value;\n    } else {\n      console.log('FormatDataPipe:PipeToken:', pipeToken);\n      const pipe = this.injector.get(pipeToken);\n      return pipe.transform(value, ...pipeArgs || []);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SvogvCoreModule.html":{"url":"modules/SvogvCoreModule.html","title":"module - SvogvCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SvogvCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SvogvCoreModule\n\n\n\ncluster_SvogvCoreModule_declarations\n\n\n\ncluster_SvogvCoreModule_providers\n\n\n\n\nwd.FormatDataPipe\n\nwd.FormatDataPipe\n\n\n\nSvogvCoreModule\n\nSvogvCoreModule\n\nSvogvCoreModule -->\n\nwd.FormatDataPipe->SvogvCoreModule\n\n\n\n\n\nFormValidatorService\n\nFormValidatorService\n\nSvogvCoreModule -->\n\nFormValidatorService->SvogvCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API\n    \n    \n        Source: Code\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/svogv/src/lib/svogv.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The actual SVOGV Module definition.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            wd.FormatDataPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormValidatorService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/svogv.module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport * as wd from './widgets/index';\n\nimport { FormValidatorService } from './services/formvalidator.service';\n// import { FormValidatorFromJsonService } from './services/formvalidator-fromjson.service';\n\nconst provider = [FormValidatorService]; // , FormValidatorFromJsonService];\n\n/**\n * The actual SVOGV Module definition.\n */\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\n  declarations: [wd.FormatDataPipe],\n  providers: provider\n})\nexport class SvogvCoreModule {\n\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SvogvCoreModule,\n      providers: provider\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextTreeNodeModel.html":{"url":"classes/TextTreeNodeModel.html","title":"class - TextTreeNodeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextTreeNodeModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts\n        \n\n            \n                Description\n            \n            \n                A text node\n\n            \n\n            \n                Extends\n            \n            \n                        TreeNodeModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                            \n                                    Private\n                                _state\n                            \n                            \n                                children\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parent\n                            \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                hasDirectAncestor\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[])\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        TreeNodeModel | TreeNodeModel[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeState\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:20\n\n                            \n                        \n\n                \n                    \n                        Subsequent nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:28\n\n                            \n                        \n\n                \n                    \n                        Field id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:24\n\n                            \n                        \n\n                \n                    \n                        An identifier.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:12\n\n                            \n                        \n\n                \n                    \n                        Control appearance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:16\n\n                            \n                        \n\n                \n                    \n                        structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:32\n\n                            \n                        \n\n                \n                    \n                        behavior\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(nodes: TreeNodeModel | TreeNodeModel[])\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                TreeNodeModel | TreeNodeModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TreeNodeOptions } from './treenodeoptions.model';\nimport { TreeNodeModel } from './treenode.model';\n\n/**\n * A text node\n */\nexport class TextTreeNodeModel extends TreeNodeModel {\n  text: string;\n\n  constructor(text: string, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n    super(options, nodes);\n    this.text = text;\n    this.name = text; // default, must be set explicitly\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeNodeBaseModel.html":{"url":"interfaces/TreeNodeBaseModel.html","title":"interface - TreeNodeBaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeNodeBaseModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts\n        \n\n            \n                Description\n            \n            \n                The base class.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        options\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                                \n                                    hasDirectAncestor\n                                \n                                \n                                    remove\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(node: TreeNodeBaseModel | TreeNodeBaseModel[])\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel | TreeNodeBaseModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         TreeNodeBaseModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNodeBaseModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         TreeNodeOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNodeOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         TreeNodeBaseModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNodeBaseModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TreeNodeOptions } from './treenodeoptions.model';\n\n/**\n * The base class.\n */\nexport interface TreeNodeBaseModel {\n  parent: TreeNodeBaseModel;\n  children: TreeNodeBaseModel[];\n  options: TreeNodeOptions;\n  add(node: TreeNodeBaseModel | TreeNodeBaseModel[]): void;\n  remove(node: TreeNodeBaseModel): boolean;\n  hasDirectAncestor(node: TreeNodeBaseModel): boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeComponentModel.html":{"url":"classes/TreeNodeComponentModel.html","title":"class - TreeNodeComponentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeComponentModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts\n        \n\n            \n                Description\n            \n            \n                This type can load a component's UI into the node.\n\n            \n\n            \n                Extends\n            \n            \n                        TreeNodeModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                    Private\n                                _state\n                            \n                            \n                                children\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parent\n                            \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                hasDirectAncestor\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(component: Type, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[])\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        TreeNodeModel | TreeNodeModel[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeState\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:20\n\n                            \n                        \n\n                \n                    \n                        Subsequent nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:28\n\n                            \n                        \n\n                \n                    \n                        Field id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:24\n\n                            \n                        \n\n                \n                    \n                        An identifier.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:12\n\n                            \n                        \n\n                \n                    \n                        Control appearance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:16\n\n                            \n                        \n\n                \n                    \n                        structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Inherited from         TreeNodeModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         TreeNodeModel:32\n\n                            \n                        \n\n                \n                    \n                        behavior\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(nodes: TreeNodeModel | TreeNodeModel[])\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                TreeNodeModel | TreeNodeModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Inherited from         TreeNodeModel\n\n                \n            \n            \n                \n                        Defined in         TreeNodeModel:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type, Component } from '@angular/core';\nimport { TreeNodeOptions } from './treenodeoptions.model';\nimport { TreeNodeModel } from './treenode.model';\n\n/**\n * This type can load a component's UI into the node.\n */\nexport class TreeNodeComponentModel extends TreeNodeModel {\n  component: Type;\n  constructor(component: Type, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n    super(options, nodes);\n    this.component = component;\n  }\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeModel.html":{"url":"classes/TreeNodeModel.html","title":"class - TreeNodeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeModel\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts\n        \n\n            \n                Description\n            \n            \n                The base class for tree nodes.\n\n            \n\n\n            \n                Implements\n            \n            \n                            TreeNodeBaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _state\n                            \n                            \n                                children\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parent\n                            \n                            \n                                stateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                hasDirectAncestor\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    path\n                                \n                                \n                                    hasChildren\n                                \n                                \n                                    state\n                                \n                                \n                                    stateIsExpandend\n                                \n                                \n                                    stateIsDisabled\n                                \n                                \n                                    stateIsSelected\n                                \n                                \n                                    stateIsChecked\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: tree.TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[])\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        tree.TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        TreeNodeModel | TreeNodeModel[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeState\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:20\n                            \n                        \n\n                \n                    \n                        Subsequent nodes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:28\n                            \n                        \n\n                \n                    \n                        Field id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:24\n                            \n                        \n\n                \n                    \n                        An identifier.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         tree.TreeNodeOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:12\n                            \n                        \n\n                \n                    \n                        Control appearance\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreeNodeModel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:16\n                            \n                        \n\n                \n                    \n                        structure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:32\n                            \n                        \n\n                \n                    \n                        behavior\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(nodes: TreeNodeModel | TreeNodeModel[])\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                TreeNodeModel | TreeNodeModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasDirectAncestor\n                        \n                        \n                    \n                \n            \n            \n                \nhasDirectAncestor(node: TreeNodeBaseModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeBaseModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(node: TreeNodeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                TreeNodeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n\n                \n                    \n                        getpath()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasChildren\n                    \n                \n\n                \n                    \n                        gethasChildren()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:87\n                                \n                            \n\n                \n                    \n                        setstate(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:90\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsExpandend\n                    \n                \n\n                \n                    \n                        getstateIsExpandend()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsDisabled\n                    \n                \n\n                \n                    \n                        getstateIsDisabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsSelected\n                    \n                \n\n                \n                    \n                        getstateIsSelected()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:107\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stateIsChecked\n                    \n                \n\n                \n                    \n                        getstateIsChecked()\n                    \n                \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:111\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport * as tree from './treenodeoptions.model';\nimport { TreeNodeBaseModel } from './treenodebase.model';\n\n/**\n * The base class for tree nodes.\n */\nexport class TreeNodeModel implements TreeNodeBaseModel {\n  /**\n   * Control appearance\n   */\n  options: tree.TreeNodeOptions;\n  /**\n   * structure\n   */\n  parent: TreeNodeModel;\n  /**\n   * Subsequent nodes.\n   */\n  children: TreeNodeModel[];\n  /**\n   * An identifier.\n   */\n  name: string;\n  /**\n   * Field id\n   */\n  id: number;\n  /**\n   * behavior\n   */\n  stateChange: EventEmitter;\n\n  private _state: tree.TreeNodeState;\n\n  constructor(options?: tree.TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n    this.options = options || new tree.TreeNodeOptions();\n    if (nodes && nodes instanceof Array) {\n      this.children = nodes as TreeNodeModel[];\n    } else {\n      if (nodes) {\n        this.children = [nodes as TreeNodeModel];\n      }\n    }\n    this.stateChange = new EventEmitter();\n    this.state = tree.TreeNodeState.undefined;\n  }\n\n  get path(): TreeNodeModel[] {\n    // walk up tree and return path with names\n    const p: TreeNodeModel[] = new Array();\n    p.push(this);\n    let n: TreeNodeModel = this;\n    while (this.parent) {\n      n = n.parent;\n      p.push(n);\n    }\n    return p;\n  }\n\n  hasDirectAncestor(node: TreeNodeBaseModel): boolean {\n    return this.parent !== undefined;\n  }\n\n  get hasChildren(): boolean {\n    return this.children !== undefined && this.children.length > 0;\n  }\n\n  add(nodes: TreeNodeModel | TreeNodeModel[]): void {\n    if (nodes && nodes instanceof Array) {\n      this.children.push(...(nodes as TreeNodeModel[]));\n    } else {\n      this.children.push(nodes as TreeNodeModel);\n    }\n  }\n\n  remove(node: TreeNodeModel): boolean {\n    const idx: number = this.children.indexOf(node);\n    if (idx > -1) {\n      this.children.splice(idx, 1);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get state(): tree.TreeNodeState {\n    return this._state;\n  }\n  set state(value: tree.TreeNodeState) {\n    this._state = value;\n    if (!this.hasChildren && (this.state & tree.TreeNodeState.expanded) === tree.TreeNodeState.expanded) {\n      // if an expandable event occurs and there a no children, don't fire\n      return;\n    }\n    this.stateChange.emit(this._state);\n  }\n\n  get stateIsExpandend(): boolean {\n    return (this.state & tree.TreeNodeState.expanded) === tree.TreeNodeState.expanded;\n  }\n\n  get stateIsDisabled(): boolean {\n    return (this.state & tree.TreeNodeState.disabled) === tree.TreeNodeState.disabled;\n  }\n\n  get stateIsSelected(): boolean {\n    return (this.state & tree.TreeNodeState.selected) === tree.TreeNodeState.selected;\n  }\n\n  get stateIsChecked(): boolean {\n    return (this.state & tree.TreeNodeState.checked) === tree.TreeNodeState.checked;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeOptions.html":{"url":"classes/TreeNodeOptions.html","title":"class - TreeNodeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeOptions\n\n\n\n        \n            API\n        \n        \n            Source: Code\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts\n        \n\n            \n                Description\n            \n            \n                The view options of node\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backColor\n                            \n                            \n                                checkable\n                            \n                            \n                                collapsable\n                            \n                            \n                                color\n                            \n                            \n                                href\n                            \n                            \n                                icon\n                            \n                            \n                                iconColor\n                            \n                            \n                                selectable\n                            \n                            \n                                selectedIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: TreeNodeOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TreeNodeOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:27\n                            \n                        \n\n                \n                    \n                        backColor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33\n                            \n                        \n\n                \n                    \n                        Node can be checked \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapsable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:17\n                            \n                        \n\n                \n                    \n                        Show the expand icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:25\n                            \n                        \n\n                \n                    \n                        Text color \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            href\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:29\n                            \n                        \n\n                \n                    \n                        A hyperlink \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:19\n                            \n                        \n\n                \n                    \n                        An additional icon, must be a fontawesome class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:21\n                            \n                        \n\n                \n                    \n                        An additional icon's primary color \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:31\n                            \n                        \n\n                \n                    \n                        Node can be selected \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:23\n                            \n                        \n\n                \n                    \n                        An additional icon on select \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum TreeNodeState {\n  undefined = 0,\n  checked = 1 \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n0.0.8 (2017-01-01)\nFirst release of SVOGV!\nThis inaugural release includes these components:\n\nHidden: Element will not be rendered as column in ac-datagrid\nDisplay: Change columns header or label name and add a tooltip optionally\n\nAlso several validation decorators are supported:\n\nRequired: Property must have a value\nMaxLength: Max number of chars (string only)\nMinLength: Min number of chars (string only)\nPattern: A regular expression\nRange: A range of type number or of type Date for the property's value\nEmail: Check whether the property contains a valid email\n\nAs the alpha process continues, these components will continue to evolve. There will be\nbreaking changes between alpha releases; the alpha releases are here for people that want an\nearly look or who like to live on the edge and are very tolerant of breaking API and behavior\nchanges.\n\n0.0.23 (2017-01-20)\nA pre-production release of SVOGV!\nThis is the first we use in production to see how to use basic functions in real world environment.\n\nPlaceholder: A new decorator to put watermarks into editor elements\n\nNew validation decorators:\n\nCompare: Compare two fields, such as in password field combinations\n\nSeveral widgets are now usable:\n\nDataGrid\nEditors\nInfoBox\nMenu, which comes in two flavors:\nDropMenu -- a complex multi level menu\nSideMenu -- a simple one level menu\n\n\nTreeView\nBreadCrumb\nTabs\n\nStill under construction, because of SMIL we use for SVG and that we still need to get rid of:\n\nAnalogClock\nLoaderIcon\n\nThe demo does now use WebPack 2 to create the bundles. SystemJS loader is still working for debugging.\n\n0.2.1 (2017-09-14)\nSVOGV in usable state\nThe base library with the decorators and controls is usable. The HUD part is still very experimental. I'm going to remove this part shortly and create another project out of it. It will make the lib smaller and more reliable.\nThese to elements are now working and good for production:\n\nAnalogClock\nLoaderIcon\n\nThere are many fixes in both, demo and lib.\n\n0.2.3 (2017-09-15)\nA release mostly dedicated to fixes and reorg. Some components sued just to run the demo were actually in the main lib and hence I have removed them and put in the demo. So the code is still there, but nit as part of the main lib. This makes the lib a lot smaller and it clarifies the intention not competing with the other UI libs but put the focus on forms and validation.\n\n0.3.5 (2018-01-15)\nA redesign, mainly removing all experimental parts.\n\n0.6.0 (2018-09-15)\nAn update to support Angular 5 and 6. This is also a change in naming the versions. 0.6.* is for Angular 6, 0.7.* will be the one for Angular 7 and so on.\nAlso, this is a big change from Gulp/Rollup based build process to using the Angular CLI. After a ton of experiments with WebPack 4 and almost very loader the outcome was more or less fruststrating. With Angular CLI, I must admit, the results are perfect, stable and small packages, and an easy setup procedure.\n\n0.7.0 (2019-01-31)\nAgain a big redesign. Mostly renaming and reorg. It's a need for the way to 1.0. It follows more strictly the Angular guide line for code.\nAlso, it's now made for Angular 7 and TypeScript 3.\n\n0.7.1 (2019-04-24)\nSome fixes and some function are now working properly that didn't made it into 7.0.0.\n\nTreeView event behavior\nDatagrid Pagination styles\nDatagrid Templates\nDatagrid Pipe support\n\n\n0.7.2 (2019-04-30)\nRenamed property userForm to formGroup for editor component. Equals the autoform now and is less irritating. Unfortunately, this is a breaking change.\n\n0.7.3 (2019-05-02)\nAdded the decorator Sortable to suppress sorting (default is on for all columns) or provide a custom sort function. Made the sorting available for the whole header element (additionally to the sort buttons) and hence it's now toggling. This is a more intuitive behavior. The button currently showing the sort direction by being in disabled state.\nAdded the decorator UiHint to add custom styles to grid's header or, in case of an editor element, to the input element.\nRemoved some not used classes to save code space.\n\n0.8.0 (2019-08-13)\nUpdate references and dependencies to reflect Angular 8.\n\n0.9.0 (2020-03-31)\nUpdate references and dependencies to reflect Angular 9. Several bug fixes and refinements for the grid.\nClean up code, improve documentation and follow current linter rules.\nThis is the last release before we convert to new project structure in the @svogv realm. Stay tuned!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to SVOGV\nWe would love for you to contribute to SVOGV and help make it ever better!\nAs a contributor, here are the guidelines we would like you to follow:\n\nCode of Conduct\nQuestion or Problem?\nIssues and Bugs\nFeature Requests\nSubmission Guidelines\nCoding Rules\nCommit Message Guidelines\nSigning the CLA\n\nIn case of any questions please contact me at !\n Code of Conduct\nHelp us keep Angular open and inclusive. Please read and follow our Code of Conduct.\n Got a Question or Problem?\nIf you have questions about how to use SVOGV, please direct them to the \nGoogle Group discussion list or StackOverflow. \nPlease note that SVOGV is still in very early development, and the team's capacity \nto answer usage questions is limited. Community chat is also available on Gitter.\n Found an Issue?\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our GitHub Repository. Including an issue \nreproduction (via CodePen, JsBin, Plunkr, etc.) is the absolute best way to help the team quickly\ndiagnose the problem. Screenshots are also helpful.\nYou can help the team even more and submit a Pull Request with a fix.\n Want a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nRepository. If you would like to implement a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it. SVOGV is in very early \nstages and we are not ready to accept major contributions ahead of the full release.\nPlease consider what kind of change it is:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project.\nSmall Features can be crafted and directly submitted as a Pull Request.\n\n Submitting an Issue\nBefore you submit an issue, search the archive, maybe your question was already answered.\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\nOverview of the Issue - if an error is being thrown a non-minified stack trace helps\nAngular and Bootstrap Versions - which versions of Angular and Bootstrap are affected\n  (e.g. 2.2.0)\nMotivation for or Use Case - explain what are you trying to do and why the current behavior\n  is a bug for you\nBrowsers and Operating System - is this a problem with all browsers?\nReproduce the Error - provide a live example (using CodePen, JsBin,\n  Plunker, etc.) or a unambiguous set of steps\nScreenshots - Due to the visual nature of the SVOGV widgets, screenshots can help the team\n  triage issues far more quickly than a text descrption.\nRelated Issues - has a similar issue been reported before?\nSuggest a Fix - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\nYou can file new issues by providing the above information here.\n Submitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR\nthat relates to your submission. You don't want to duplicate effort.\n\nPlease sign our Contributor License Agreement (CLA) before sending PRs.\nWe cannot accept code without this.\n\nMake your changes in a new git branch:\n   git checkout -b my-fix-branch master\nCreate your patch, including appropriate test cases.\n\nFollow our Coding Rules.\n\nTest your changes with our supported browsers and screen readers.\n\nRun the full SVOGV test suite, as described in the developer documentation,\nand ensure that all tests pass.\n\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions\nis necessary because release notes are automatically generated from these messages.\n   git commit -aNote: the optional commit -a command line option will automatically \"add\" and \"rm\" edited files.\n\nPush your branch to GitHub:\n  git push my-fork my-fix-branch\nIn GitHub, send a pull request to svogv:master.\n\nIf we suggest changes then:\n\nMake the required updates.\n\nRe-run the SVOGV test suites to ensure tests are still passing.\n\nRebase your branch and force push to your GitHub repository (this will update your Pull\nRequest):\ngit rebase master -i\ngit push -f\n\n\n\nThat's it! Thank you for your contribution!\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell as\n  follows:\n  git push my-fork --delete my-fix-branch\nCheck out the master branch:\n  git checkout master -f\nDelete the local branch:\n  git branch -D my-fix-branch\nUpdate your master with the latest upstream version:\n  git pull --ff upstream master\n\n Coding Rules\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\nAll public API methods must be documented. (Details TBD).\nWe follow Google's JavaScript Style Guide, but wrap all code at\n100 characters.\n\n Commit Message Guidelines\nWe have very precise rules over how our git commit messages can be formatted.  This leads to more\nreadable messages that are easy to follow when looking through the project history.  But also,\nwe use the git commit messages to generate the SVOGV change log.\nCommit Message Format\nEach commit message consists of a header, a body and a footer.  The header has a special\nformat that includes a type, a scope and a subject:\n(): \n\n\n\nThe header is mandatory and the scope of the header is optional.\nAny line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools.\nRevert\nIf the commit reverts a previous commit, it should begin with revert:, followed by the header of\nthe reverted commit. In the body it should say: This reverts commit ., where the hash is\nthe SHA of the commit being reverted.\nType\nMust be one of the following:\n\nfeat: A new feature\nfix: A bug fix\ndocs: Documentation only changes\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing\nsemi-colons, etc)\nrefactor: A code change that neither fixes a bug nor adds a feature\nperf: A code change that improves performance\ntest: Adding missing tests or correcting existing tests\nbuild: Changes that affect the build system, CI configuration or external dependencies      (example scopes: gulp, broccoli, npm)\nchore: Other changes that don't modify src or test files\n\nScope\nThe scope could be anything specifying place of the commit change. For example\ndatepicker, dialog, etc.\nSubject\nThe subject contains succinct description of the change:\n\nuse the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\ndon't capitalize first letter\nno dot (.) at the end\n\nBody\nJust as in the subject, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior.\nFooter\nThe footer should contain any information about Breaking Changes and is also the place to\nreference GitHub issues that this commit Closes.\nBreaking Changes should start with the word BREAKING CHANGE: with a space or two newlines.\nThe rest of the commit message is then used for this.\nA detailed explanation can be found in this document.\n Signing the CLA\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\nFor individuals we have a simple click-through form.\nFor corporations we'll need you to\nprint, sign and one of scan+email, fax or mail the form.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.0.2\n        \n            @angular/cdk : ~11.0.1-sha-5e645f926\n        \n            @angular/common : ^11.0.2\n        \n            @angular/compiler : ^11.0.2\n        \n            @angular/core : ^11.0.2\n        \n            @angular/forms : ^11.0.2\n        \n            @angular/material : ~11.0.1-sha-5e645f926\n        \n            @angular/platform-browser : ^11.0.2\n        \n            @angular/platform-browser-dynamic : ^11.0.2\n        \n            @angular/router : ^11.0.2\n        \n            bootstrap : ^4.5.3\n        \n            core-js : ^3.8.0\n        \n            font-awesome : ^4.7.0\n        \n            ngx-highlightjs : ^4.1.3\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.3\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Direction   (projects/.../datagrid.model.ts)\n                        \n                        \n                            TreeNodeState   (projects/.../treenodeoptions.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Direction\n                    \n                \n                    \n                        \n                            Sort direction, controlled by simple string comparision or a callback.\n\n                        \n                    \n                        \n                            \n                                 Ascending\n                            \n                        \n                        \n                            \n                                 Descending\n                            \n                        \n            \n        \n\n    projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TreeNodeState\n                    \n                \n                    \n                        \n                            The state of node\n\n                        \n                    \n                        \n                            \n                                 undefined\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 checked\n                            \n                        \n                        \n                            \n                                 disabled\n                            \n                        \n                        \n                            \n                                 expanded\n                            \n                        \n                        \n                            \n                                 selected\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Compare   (projects/.../val-compare.decorator.ts)\n                        \n                        \n                            Display   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            DisplayGroup   (projects/.../hint-displaygroup.decorator.ts)\n                        \n                        \n                            Email   (projects/.../val-email.decorator.ts)\n                        \n                        \n                            FormatPipe   (projects/.../hint-formatpipe.decorator.ts)\n                        \n                        \n                            Hidden   (projects/.../hint-hidden.decorator.ts)\n                        \n                        \n                            MaxLength   (projects/.../val-maxlength.decorator.ts)\n                        \n                        \n                            MinLength   (projects/.../val-minlength.decorator.ts)\n                        \n                        \n                            Pattern   (projects/.../val-pattern.decorator.ts)\n                        \n                        \n                            Placeholder   (projects/.../hint-placeholder.decorator.ts)\n                        \n                        \n                            Range   (projects/.../val-range.decorator.ts)\n                        \n                        \n                            Readonly   (projects/.../hint-readonly.decorator.ts)\n                        \n                        \n                            Required   (projects/.../val-required.decorator.ts)\n                        \n                        \n                            Sortable   (projects/.../hint-sortable.decorator.ts)\n                        \n                        \n                            StringLength   (projects/.../val-stringlength.decorator.ts)\n                        \n                        \n                            TemplateHint   (projects/.../hint-templatehint.decorator.ts)\n                        \n                        \n                            UiHint   (projects/.../hint-uihint.decorator.ts)\n                        \n                        \n                            validateCompare   (projects/.../compare.validator.ts)\n                        \n                        \n                            validateRange   (projects/.../range.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/decorators/val-compare.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Compare\n                        \n                        \n                    \n                \n            \n            \n                \nCompare(withProperty, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The compare decorator compares two field's values and\nshows an error message on the decorated field. The other field (compared to) does\nnot has a decorator nor receives a message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    withProperty\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string that represents the compared field's name.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-display.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Display\n                        \n                        \n                    \n                \n            \n            \n                \nDisplay(name, order, description?)\n                \n            \n\n\n\n\n            \n                \n                    The Display decorator.\nThis decorator can be used on fields. It's being used to create label in EditorComponent and\nheaders in the DataGridComponent. Additional parameters are provided to refine forms further.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name or Label that appears in forms or as header in grids.\n\n                                    \n                                \n                                \n                                    order\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        If one uses AutoFormComponent to create a whole form from a model, this controls the element's order.\n\n                                    \n                                \n                                \n                                    description\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A tooltip, which can be used optionally.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-displaygroup.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            DisplayGroup\n                        \n                        \n                    \n                \n            \n            \n                \nDisplayGroup(name, order, description?)\n                \n            \n\n\n\n\n            \n                \n                    The DisplayGroup decorator. Groups fields in auto forms; see AutoFormComponent.\nJust define a name (that appears as the group's name) and\nput the very same name on all members of the group.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name or Label that appears in forms as the groups legend.\n\n                                    \n                                \n                                \n                                    order\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        If one uses {\n\n                                    \n                                \n                                \n                                    description\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A tooltip, which can be used optionally.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-email.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Email\n                        \n                        \n                    \n                \n            \n            \n                \nEmail(msg?)\n                \n            \n\n\n\n\n            \n                \n                    Validates a field against an email pattern.\nBased on \"pattern\", so in form one must use hasError('pattern') to get validation results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A custom message. If not provided \"The field ffff must contain a valid e-mail address.\"\n  will be generated, while ffff is the property name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-formatpipe.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            FormatPipe\n                        \n                        \n                    \n                \n            \n            \n                \nFormatPipe(pipe, pipeParams)\n                \n            \n\n\n\n\n            \n                \n                    The FormatPipe decorator. Provide the name of a Pipe that's being used by the\ndynamic pipe formatter. Hence, the form does not need to apply forms manually.\nThe reason is that you may create forms automatically and hence can't write\nactual Pipes somewhere. This applies especially if you create a table and loop\nthrough properties.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pipe\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the pipe's type.\n\n                                    \n                                \n                                \n                                    pipeParams\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The custom pipe's parameters. This is optional and can be omitted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-hidden.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Hidden\n                        \n                        \n                    \n                \n            \n            \n                \nHidden(hide)\n                \n            \n\n\n\n\n            \n                \n                    The Hidden decorator.\nThe DataGrid does not show columns for properties tagged with Hidden\">Hidden decorator.\nFields in forms that render automatically\nusing the EditorComponent\">EditorComponent will render as .\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hide\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional, default is true.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-maxlength.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MaxLength\n                        \n                        \n                    \n                \n            \n            \n                \nMaxLength(len, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The maxlength decorator assures that a string field contains not more than a number of characters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    len\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the maximum length.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-minlength.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MinLength\n                        \n                        \n                    \n                \n            \n            \n                \nMinLength(len, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The minlength decorator assures that a string field contains at least a number of characters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    len\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the required length.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-pattern.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Pattern\n                        \n                        \n                    \n                \n            \n            \n                \nPattern(pattern, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The decorator assures that a string field fullfilles a regular expression pattern.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pattern\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The expression as RegExp.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : A custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-placeholder.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Placeholder\n                        \n                        \n                    \n                \n            \n            \n                \nPlaceholder(name)\n                \n            \n\n\n\n\n            \n                \n                    The Placeholder decorator.\nThe placeholder adds the given text as a watermark to any input fields.\nThere is no function in the DataGridComponent.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name that appears in form fields as a watermark.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-range.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Range\n                        \n                        \n                    \n                \n            \n            \n                \nRange(from, to, msg?)\n                \n            \n\n\n\n\n            \n                \n                    Validates a field against an range. Applies to numerical values or dates.\nThe range's values are included in the valid range.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The minimum value (included) as number or Date\n\n                                    \n                                \n                                \n                                    to\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The maximum value (included) as number or Date\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        A custom message. If not provided \"The field [field] does not fall into the range from [from] to [to]\"\nwill be generated, while [field] is the propertie's name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-readonly.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Readonly\n                        \n                        \n                    \n                \n            \n            \n                \nReadonly(readonly)\n                \n            \n\n\n\n\n            \n                \n                    The Readonly decorator. The field is readonly in the form. It just renders grayed out\nand handles the internals using default HTML5 techniques.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    readonly\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional, default is true.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-required.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Required\n                        \n                        \n                    \n                \n            \n            \n                \nRequired(msg?)\n                \n            \n\n\n\n\n            \n                \n                    This decorator is for validation of mandatory fields.\nThe default message is 'The field {keyName} is required'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The error message shown in case of error. A default value is being provided if omitted.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-sortable.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Sortable\n                        \n                        \n                    \n                \n            \n            \n                \nSortable(canSort: boolean, sortCallback?)\n                \n            \n\n\n\n\n            \n                \n                    The Sortable decorator.\nThe DataGrid\">does not sort columns for properties tagged with@Sortable(false).\nThe default is that all columsn are sortable. Either avoid this decorator or use @Sortable(true).\nAdditionally, if the decorator is provided, you can add a sort function callback as second parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    canSort\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Suppress or allow sorting.\n\n                                    \n                                \n                                \n                                    sortCallback\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional callback that provides a sort instruction. If omitted, Array.prototype.sort is being used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/val-stringlength.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StringLength\n                        \n                        \n                    \n                \n            \n            \n                \nStringLength(min, max, msg?)\n                \n            \n\n\n\n\n            \n                \n                    The decorator that assures that a string field contains at least a number of characters and a minimum number, too.\nThe default message is 'The field {fieldname} needs at least {minlength} characters'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The required length.\n\n                                    \n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The maximum length.\n\n                                    \n                                \n                                \n                                    msg\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        : Optionally a custom message.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-templatehint.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            TemplateHint\n                        \n                        \n                    \n                \n            \n            \n                \nTemplateHint(template, params?)\n                \n            \n\n\n\n\n            \n                \n                    The TemplateHint decorator.\nOne can define the way a property gets rendered.\nCurrently supported:\n\nTextArea\nCalendar\nRange\nNumber\nText\n\nThe Calendar creates Date-field. However, in casde of a datatype Date the date field will be created anyway.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    template\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Name that appears in form fields as a watermark.\n\n                                    \n                                \n                                \n                                    params\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Depending of template some additional values as a dictionary.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/decorators/hint-uihint.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            UiHint\n                        \n                        \n                    \n                \n            \n            \n                \nUiHint(uiHintRule)\n                \n            \n\n\n\n\n            \n                \n                    The UiHint decorator.\nCurrently it can contain any set of style rules that apply to the  element that forms the grid's table header cells.\nThe application makes use of the [ngStyle] directive. The object's structure must be made in a way [ngStyle] can handle it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uiHintRule\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/services/validators/compare.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validateCompare\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateCompare(p)\n                \n            \n\n\n\n\n            \n                \n                    A custom validator to compare two fields. This is internally to support the infrastructure\nand not intended to being used by custom code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    p\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The field's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/svogv/src/lib/services/validators/range.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            validateRange\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateRange(f, t)\n                \n            \n\n\n\n\n            \n                \n                    A custom validator to valdiate a range of numbers or dates.\nThis is internally to support the infarstructure and not intended to being used by custom code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n SVOGV Grid and Forms Library\n\n\n\n\n\n\n\n\nTarget Audience\nThis library is for Angular Version 2 or newer. The current release is for Angular 11 and matches the current Angular version usually.\nThe design / UI stuff is made using Bootstrap 4 (@svgov/bootstrap) or Material (@svogv/material).\nIt's for developers who create standard forms and want to automate the development process.\n\nDemo and project are made using Angular CLI. Current version is made using @angular/cli.\n\nIntroduction\nThis library is for making forms and grids. Easy and fast. It has these advantages:\n\nAll form parts are being created dynamically by using viewmodels with decorators. These control the UI and validation.\nAll styles are based on the specified environment, can be used together with themes and custom parts can be changed.\nThe main part i a very advanced data table component (aka Grid)\nThe grid component makes data tables and is very easy to use.\nA tree view is another component that fits in. It can be used stand alone or to organize the grid.\nDynamic editors and an autoform components create a whole form without code. This provides the editing capability of the data table.\n\n\n\nWhat is it?\nThe approach was simply to improve the creation of forms as simple as ever in Angular. It's an extension to Angular that comes as a set of classes (injectable services) and components.\nIt's available as source code or as ready to use umd-bundle. The bundle is plane JavaScript. The sources are available via npm and from github.\n\nIt's pretty small, too. It's 300 KB as a bundle and roughly 39 KB minified, close to 10 KB zipped.\n\nAngular Data Annotations\nThe idea of data annotations is somehow heavily inspired by the namespace System.ComponentModel.DataAnnotations of .NET Core. There is absolutely no dependency at all, though. You can find more here.\nThe basic idea is that we usually use view models anyway. So, why not using them to provide all information necessary to create a form that way?\nHow does it work?\nLet's assume you have a viewmodel like this:\nexport class UserViewModel {\n\n  @Hidden()\n  id: Number = 0;\n\n  @Display('E-Mail', 'E-Mail address')\n  @Required()\n  @MaxLength(100)\n  @Email()\n  email: string = '';\n\n  @Display('Phone Number', 'The user\\'s phone')\n  @Required()\n  @MaxLength(20)\n  phoneNumber: string = '';\n\n  @Display('User Name', 'The full name')\n  @Required()\n  @MaxLength(100)\n  userName: string = '';\n\n}As you see there are several decorators. SVOGV has decorators for display hints, such as @Display. And it has decorators to manage the validation, such as @MaxLength().\nThe usage is simple; just import like this (selection, there are more options):\nimport {\n  Required,\n  MaxLength,\n  Range,\n  Email,\n  Display,\n  Hidden,\n  UiHint,\n  Format\n} from 'svogv';Or alternatively prefix your import:\nimport * as FormHints from 'svogv';\n\nexport class UserViewModel {\n\n  @FormHints.Display('E-Mail')\n  eMail: string = '';\n\n}Using in Forms\nThe form needs to be aware of the decorators. Hence, there is a service that creates an advanced FormGroup instance. It's called FormValidatorService. Internally it's using Angular's ReactiveFormsModule, so this is a dependency.\nIn a component's code it looks like this:\nimport { FormValidatorService } from '@svogv/core';\n\nexport class EditUserComponent implements OnInit {\n\n  myForm: FormGroup;\n\n  constructor(private fv: FormValidatorService) {\n  }\n\n  ngOnInit() {\n    // get validators and error messages from viewmodel type\n    this.myForm = this.fv.build(UserViewModel);\n  }\n}In this example UserViewModel is the decorated view model. It's just the type that the service requires, not an actual instance. However, the service will create an instance, and hence the model must be a class, not an interface. Also, all properties must be set, usually by setting defaults, because internally the properties are read by a for of loop.\nNow the form knows all about the view model. Let's build a form on top on this:\n\n  \n    Edit current user\n      \n      \n      \n      Save\n  \nThe important part is the component . This component checks the property type, the decorators, and the form's settings and creates a complete form element in Bootstrap 4 style (the template is, of course, customizable). The connection between the service's outcome -- the FormGroup -- and the components is being made through setting the form group's instance (here myForm) using the input property formGroup.\nAnd that's it. The form is pretty, has fully working validation, and is easy to access from your component. And yes, there is no additional code necessary to get it running.\nAuto Forms\nEven simpler, you can create a complete form with just one tag. Just go like this:\n\n  \n    Edit current user\n    \n    \n      \n         Save\n      \n    \n  \nThe only component here is  that connects to the form using the attribute formGroup. Use binding syntax here as this is an object. The form is build upon Bootstrap 4 again and can be modified by several helper decorators.\nValidation Decorators\n\n\n\nDecorator\nUsage\n\n\n\n\n@StringLength\nSet the strings minimum (optional) and maximum length. It's a summary of @MinLength and @MaxLength.\n\n\n@MaxLength\nThe maximum length of a text input.\n\n\n@MinLength\nThe minimum length of a text input.\n\n\n@Pattern\nA regular expression that is used to test the text or number input.\n\n\n@Range\nA range (from-to) for either numerical values or dates.\n\n\n@Required\nMakes the field mandatory.\n\n\n@EMail\nChecks input against a (very good) regular expression to test for valid e-mail pattern.\n\n\n@Compare\nCompares with another field, usually for password comparisons.\n\n\n\nUI Decorators\n\n\n\nDecorator\nUsage\n...Grid\n...Editor\n...Auto Form\n...Tree**\n\n\n\n\n@Display\nDetermine the label's name and a tooltip ( optionally), You can also provide the fields' order.\nYes, Header row\nYes, label text\nYes, label text\nNo\n\n\n@DisplayGroup\nGroups components in  elements. Can be ordered inside the form.\nNo\nNo\nYes, fieldset\nNo\n\n\n@Hidden\nExclude as field from an autoform.\nYes, excludes column\nYes, makes hidden field\nYes\nYes\n\n\n@Sortable\nMakes a column sortable. Default is true.\nYes\nNo\nNo\nNo\n\n\n@Placeholder\nA watermark that appears in empty form fields\nNo\nYes\nYes\nNo\n\n\n@TemplateHint\nForces a particular render type. Usually you get fields a shown in the table below. With a hint you can force other types.\nYes, replaces cell content with template\nNo\nNo\nPlanned\n\n\n@ReadOnly\nRenders the field readonly, if the shown element can support this. For all other fields this is being ignored.\nNo\nYes\nYes\nYes\n\n\n@FormatPipe\nExecutes the pipe before rendering the data. Usually used in the grid component.\nYes, applies pipe to cell's content\nNo\nNo\nNo\n\n\n@UiHint\nAdditional custom styles*.\nYes\nYes\nYes\nYes\n\n\n\n* This is available from 0.7.4 onwards. Style apply to columns' header and cells as well as to form elements in editor. The object required is a style object in the form { 'style': 'rule' }.\n** This is available from 0.7.5 onwards.\nThe editor component is able to determine the appearance dependent on the type:\n\n\n\nData Type\nTemplate Hint\nField Type\nOptions for @TemplateHint\nRemark\n\n\n\n\nstring\ntext (no params)\ntype=\"text\"\nText, TextArea\nTextArea accepts additional parameters for row and col\n\n\nboolean\nbool (no params)\ntype=\"checkbox\"\nCheckbox, Toggle, Radio\nDefault is checkbox\n\n\nnumber\nnum (no params)\ntype=\"number\"\nRange\nDefault is numeric field, Range is a slider\n\n\nDate\ndate (val,cal)*\ntype=\"date\"\nCalendar\nCalender is provided by browser feature\n\n\nenum\nenum (no params)\n-Box\n-\nRenders an Enum as Dropdown list\n\n\n\n* With cal it shows a calendar, with val just the value. Use a pipe and @FormatPipe(DatePipe) for formatting. Calendar appears in edit mode only.\nServer Support through JSON\nAs of version 0.3.5 it's possible to use a specially designed JSON object to configure the forms. It's an exact pendant to the decorators. The difference is that you don't need to write any viewmodels in TypeScript. Just deliver an appropriate formatted document from your API and you're set. Here is the definition for the JSON structure:\nexport interface FormValidatorModel {\n  [field: string]:\n      displayType |\n      displayGroupType |\n      formatType |\n      hiddenType |\n      placeHolderType |\n      compareType |\n      maxlengthType |\n      minlengthType |\n      patternType |\n      stringLengthType |\n      emailType |\n      requiredType;\n}The types have the same description as the decorators.\nThe Components\nThe goal is, finally, making the ultimate grid. All form parts are part of the grid experience.\nThe components complement the editor by adding more parts typically used in forms apps. There are many such components available, but sometimes there are pieces that we need quite often but nothing is really handy. So I created a small set of such components:\n\nDataGrid: A classic data grid. It provides a model to handle:\npaging\nfiltering\nsorting\ndynamic columns\n\n\nTreeView: An advanced tree view with icon support and many options such as selections and checkboxes. Uses EventEmitter to fire several tree node events.\nEditor: For inline editing\nAutoForm: For editing complex forms\n\nThe grid is controlled by decorators (see table above), so the view model actually creates the grid's appearance.\nWhere to get?\nIt's available from npm by using this command:\nnpm install @svogv/bootstrap @svogv/core --saveYou get these parts:\n\nFormValidatorService -- am injectable class to build reactive forms\nFormValidatorFromJsonService -- am injectable class to build reactive forms from server data\nEditor -- the universal editor component for one field\nAutoForm -- the universal editor component for complete multi field forms\nDataGrid -- an advanced grid component, model driven\nTreeView -- a tree with some nice features\nDecorators -- a set of decorators to manage the behavior and appearance of grid, tree and forms\n\nMore to read\nFor more information read the Getting started guide.\nSee demo and API docs running on SVOGV.\nDemo App\nThere is a demo app where you can see the components in action.\nSee demo and API docs running on SVOGV.\nQuick Start\nTo have a running sample in seconds do the following:\n\nClone the repository from Github\nAssure you have node running and npm and Typescript (tsc) is in the path\nExecute this command: npm install\nExecute this command: npm run build\n\nIf everything goes fine start the demo:\nnpm startA browser window shall open automatically (if not, open http://locahost:4200) and shows a dashboard from where you can navigate the various components.\nSelect these options in the left hand menu:\n\nForms Demo: All about the decorators\nWidgets > Overview: The UI widgets demo\n\n\nThe demo app is independent and has it's own package.json and node_modules folder and hence needs it's own setup. The first command (setup) takes care of this all.\n\nLicensing?\nIt's ISC licensed and it's free. I deeply believe in Open Source and will support the ecosystem by open sourcing all parts of the project. For commercial users such as enterprises I have support options.\nAbout the Author\nThe SVOGV Widget Library was written by Joerg  Krause, www.joergkrause.de, Berlin / Germany. He has many years of experience with Web-Frameworks. He were in the business in the early JavaScript days, know every single bit in jQuery and learnt a lot about Knockout, Angular, and React. But time goes on. So he moved almost all projects to either AngularJS or Angular 2+. He thinks that knowing one Framework really well is more for our customers than knowing a lot just good. So he decided to do more and start contributing to the Angular ecosystem by creating awesome libraries and components.\nCan one contribute?\nYes, drop me an email with some \"about me\" stuff. Even simple feedback is appreciated.\n\nLooking for an Angular Dev?\nYes, I'm available for all kind of remote jobs. If you need a really good full-stack dev, than drop me an email (joerg@krause.de) or write through my homepage's contact form.\nI write sophisticated stuff quickly and in very high quality in these technologies:\n\nFrontend: Angular, React\nBackend: Node, ASP.NET Core, Entity Framework Core\nCloud: Azure CosmosDb, Azure Functions, Azure Event Hub, Azure IoT, AWS S3, AWS Lambda\nOther: Alexa Skills\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nISC License\nCopyright (c) [2016-2020], [Joerg  Krause]\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SvogvCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SvogvCoreModule\n\n\n\ncluster_SvogvCoreModule_declarations\n\n\n\ncluster_SvogvCoreModule_providers\n\n\n\n\nwd.FormatDataPipe\n\nwd.FormatDataPipe\n\n\n\nSvogvCoreModule\n\nSvogvCoreModule\n\nSvogvCoreModule -->\n\nwd.FormatDataPipe->SvogvCoreModule\n\n\n\n\n\nFormValidatorService\n\nFormValidatorService\n\nSvogvCoreModule -->\n\nFormValidatorService->SvogvCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            displayGroupType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            displayType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            emailType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            formatType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            hiddenType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            maxlengthType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            minlengthType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            patternType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            placeHolderType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            rangeType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            readonlyType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            requiredType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            stringLengthType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            StyleRules   (projects/.../datagridstyle.model.ts)\n                        \n                        \n                            templateHintType   (projects/.../formvalidator.model.ts)\n                        \n                        \n                            validatorType   (projects/.../formvalidator.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/services/formvalidator.model.ts\n    \n    \n        \n            \n                \n                    \n                    compareType\n                \n            \n            \n                \n                    Compare to fields.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    displayGroupType\n                \n            \n            \n                \n                    This element describes the grouping of elements in fieldset-controls. Each\nfield that is decorated in an DisplayGroup with the very same name is grouped\ninto that part. The name appears in the fieldsets legend-control. The\ndescription makes a tooltip. If there are more groups the order is controlled\nby the orderelement.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    displayType\n                \n            \n            \n                \n                    This element describes the UI elements label, tooltip, and order.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    emailType\n                \n            \n            \n                \n                    Email\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    formatType\n                \n            \n            \n                \n                    A pipe driven formatting instruction.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    hiddenType\n                \n            \n            \n                \n                    The field will not appear in autoforms if decorated as hidden. If the parameter\nis omitted the type returns true due to its pure existence.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    maxlengthType\n                \n            \n            \n                \n                    Maximum allowed length (string only)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    minlengthType\n                \n            \n            \n                \n                    Minimum allowed length (string only)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    patternType\n                \n            \n            \n                \n                    Any regex pattern\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    placeHolderType\n                \n            \n            \n                \n                    A watermark can be applied. The property is the value thatappears\nin the field. This may not work for specific controls, such as list boxes.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    rangeType\n                \n            \n            \n                \n                    A range for number or Date only.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    readonlyType\n                \n            \n            \n                \n                    The field in rendered as readonly, if possible.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    requiredType\n                \n            \n            \n                \n                    This field is mandatory.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    stringLengthType\n                \n            \n            \n                \n                    Maximal and minimal allowed length (string only).\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    templateHintType\n                \n            \n            \n                \n                    This controls the actual control type. The default values are (TypeScript type: decorator type: rendered element):\n\nstring: text: \ndate: calendar: \nboolean: boolean: \nnumber: number: \n\nThis is the formatting that's automatically applied. The template hint goes after and can change any of these values.\nThe allows values are:\n\nany: textarea: \narray: enum:  \narray: list: \nany: template: The content of the editor element (does not work with )\n\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    validatorType\n                \n            \n            \n                \n                    Base type for validators.\nGive a private error message in @param msg. If omitted a error message will be generated.\nSet to active by using @param active. Default is true.\nActive i18n by using the @param translate. The translation module must be used separately.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts\n    \n    \n        \n            \n                \n                    \n                    StyleRules\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            displayDesc   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            displayName   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            displayOrder   (projects/.../hint-display.decorator.ts)\n                        \n                        \n                            hasSortCallback   (projects/.../hint-sortable.decorator.ts)\n                        \n                        \n                            isHidden   (projects/.../hint-hidden.decorator.ts)\n                        \n                        \n                            isSortable   (projects/.../hint-sortable.decorator.ts)\n                        \n                        \n                            provider   (projects/.../svogv.module.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            uiHint   (projects/.../hint-uihint.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-display.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            displayDesc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'displayDesc'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'displayName'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'displayOrder'\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-sortable.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasSortCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sortCallback'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'isSortable'\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-hidden.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'isHidden'\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/svogv.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FormValidatorService]\n                        \n                    \n\n\n            \n        \n\n    projects/svogv/src/lib/decorators/hint-uihint.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiHint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'uiHint'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/package-construction.html":{"url":"additional-documentation/package-construction.html","title":"additional-page - Package Construction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nThis documentation describes the background and internal functionality of the SVOGV project. It's primarily for learning purposes.\nIt's not a replacement of the common documentation for developers using the library.\nMaking Of -- How I wrote a NPM package\n\nThis is work in progress. Come back often to get recent updates. Currently it's version 0.7.3, published May 1st, 2019. The current version embraces Angular 7.x. It's working with Angular 2.x onwards.\n\nThe primary part is a almost complete introduction into the world of modern web frontend development. It encapsulates the\ntool chain, languages, repositories, cloud service and everything else you need to create awesome apps.\nThe second part is the actual development work -- the app's code and frameworks. I decided to use Angular 2 and Bootstrap 4\nas a foundation. Angular 2 introduced as familiar concept in a new way for the web: components. By building a component tree a web app gets better maintainability and clear design, that's closer to the \"treeish\" nature of HTML. It fits better in the Browser's ecosystem\nthan the traditional MVC (model view controller) model.\nA big step for web developers was the usage of TypeScript. While other pre-compilers or transpilers are around for years (CoffeeScript for instance),\nTypeScript had the most mature and professional approach. It brings web development to an enter a new level.\nHowever, this comes with a penalty. The learning curve is steep. The setup is huge and confusing. And the effort to get a simple app running\nis enormous. If you create a huge app, however, it's a trade off. Your code becomes cleaner, easier to maintain, better to read. Your development\nspeed will grow and you can be fast, really fast creating stuff. The setup effort is a one time process and hence it's usually a no-brainer.\nWhat's this about\nThis document describes the following:\n\nThe foundation of the TS/JS-ecosystem\nUsing Gulp as a build tool\nUsing Travis for CI (continues integration)\nSetup of a professional NPM package\nRules to develop a concise library\n\nThe foundation\nFirst, you need to now how to create stuff and how to deploy stuff. You need these things first:\n\nAn editor\nA command line and some tools to build and deploy your stuff\nA server to host your stuff\nA browser to view your stuff\n\nSo, that's it.\nMissing the Operating System? No problem. Choose what you like. Everything shown here will run on Linux, Windows, and even a Mac.\nSimply don't care. Welcome to the brave new world.\nNeed something to buy? No, not at all. Everything is open source and free. At least as long as you build OS stuff by yourself. For enterprises\nare some more options, such as private repositories. That's the way some companies make some money. But even so, it's really cheap. So no\nworries again.\nSome of the tools run in the cloud. I strongly recommend considering to use these tools. It saves you tons of time and money. Unless you work\nfor a secret service you don't get any benefits from doing everything locally. The amount of data you need to transfer is small. Even a bad\nconnection is usually sufficient.\nTo setup a project like this you start right now that way:\n1. Load an Editor\nI use Visual Studio Code, but you may try some others to achieve your code tasks. Some alternatives are:\n\nSublime Text\nVIM\nAtom\n\n\nA good description of all of these can be found here.\n\n2. Setup your project\nModern web development is file based. No hidden stuff, no secret folders, nothing but plain text files. Any drawback? Yes, there are many\ndifferent files needed. A lot of them, really. While writing this I made a quick count of SVOGV project, locally:\n46.822 files, 6.323 folders\nYou say: you're kidding, dude? I say: No, bro, that's the way it is. But I have good news to you. The majority is from references, dependencies\nI have to get my stuff running. Most of the libraries we use are from NPM (node package manager). That's the repository for node moduls. We take a look\ninto this shortly. The folder where all the stuff is has the name node_modules. What's in it:\n30.107 files, 4.233 folders\nSo we're pretty much down by 60%, but it's still way to many. So let's exclude more:\n\na folder /dist where my project gets published to. That generated from a script and hence I don't care (1.987 files, 170 folders).\nagain a folder named node_modules and another one called bower_components in the Demo app, counting for 13.596 files and 1.607 folders.\n\nSo what we get:\n\n\n\nPart\nFiles\nFolder\n\n\n\n\nNode Rep\n30107\n4233\n\n\nDist\n1987\n170\n\n\nDemo Reps.\n13569\n1607\n\n\n-----------\n-------\n--------\n\n\nTotal\n45690\n6010\n\n\n\nSo, finally, my own stuff is 1.132 files in 313 folders. That's still a lot, but not a much as I don't can't handle it.\nSo, start creating a folder where all the files go. Let's call it like the project: 'svogv' (you choose another name for your project, of course).\nSomewhere on my disc I type:\n$ mkdir svogv\nThe prompt I use here is $ like most *nix systems have. I remove the concrete path and you can do same on Windows as well. I recommend to choose a short start point, such as C:\\App>, too.\n\nThen go into this:\n$ cd svogvOnce you're here it's boring empty. So we need some tools to get stuff in here. The first set of tools is part of the JavaScript ecosystem:\n\nGit - host your repository and manage versions\nNode - The engine that does the hard work\n\nAnd here is how to setup node.\nNext, Git is required. Check first if it is already present on your system:\n$ git --versionIf not, install according your operating system. \nThen, an account on Github is required. Finally, the package will be hostet on Github and partially distributed to NPM. While there are alternative ways, such as Bitbucket, I recommend Github for beginners because the sheer amount of literature, support, websites, and answers on Stack Overflow\nis overwhelming. And it is, last but not least, easy enough to get the point in short time.\nSo, go to GitHub, and set up an account.\nNow, we're set and the journey into the package creation can begin. The package is about Angular 2 components and I assume that you have at least a basic\ninterest in Angular 2 stuff. So apart from talking about the package structure I'm going to explain all the component stuff as well.\nYou can continue reading here:\n\nCreate an NPM package\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/package-construction/create-an-npm-package.html":{"url":"additional-documentation/package-construction/create-an-npm-package.html","title":"additional-page - Create an NPM package","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCreate an NPM package\nWhile we host the whole development project on Github the NPM package shall contain just that part a potential user will use.\nHence, we have to create a folder structure that supports this. A good structure would look like this:\n\\src  \n\\test\n\\dist\n\\docs\n\\guides\n\n\\node_modules\\\n\\scripts\n\\toolsThe first block is the working part, here is where you write your project's code. The second block is the supporting infrastructure and\ndepends on what you really need and want. Usually the code in here is either from an external repository (node_modules) or is being\ncreated one time and than just invokes tasks once needed.\nThe working part consists has two special folders: \\docs and \\guides. As you may know is a good documentation the foundation of your\nwhole project. Without the docs everything has less value. The documentation shall support two parts. Those who want to learn about the \nproject before making a decision to give it a try. And those who actively work with the code. In my project I have splittet the two parts\naccordingly. The reason is not necessarily the ability to split the documentation. It's because Github has a distinct support for such\ntexts and I want to make use of it. The first folder we're looking into is \\docs. This is where this very text resides.\nRead about Github Pages and Markdown to get a head start.\nSetup the Sources\nYou probably want to start with a \"real\" project and take care about the supporting stuff later. That's fine. So let's first setup what we need\nat least to get things into NPM. For my project it's sort of a library. So I create a folder \\lib:\n\\src\\libBecause a library needs a lot of testing I am lazy writing plain text a demo app is a good choice. That resides in another folder:\n\\src\\demoThe pure package is in \\src\\lib. This is what you get when pulling the package from NPM. Everything else is on Github and the user who wants\nmore must go there. That's why we need the README files. It's all about pointing quickly to the right folders.\nInitialize the Package\nNow once you in the \\lib folder you can start creating your project. Open a command prompt and enter this:\nnpm initIt's an interactive quest:\n\nThere are few things you need to think about before you start:\n\nName of the project (in lower case only -- NPM does not allow upper case characters)\nLicense (such as ISC, MIT, or Apache)\nDescription (this will appear very prominently on NPM)\nKeywords (in case you care about new users)\n\nThis will create a new file package.json. It's more or less the center of your app. It's where all commands you can start come from. \nThe final file in my project looks like this:\n{\n  \"name\": \"svogv\",\n  \"version\": \"0.6.0\",\n  \"description\": \"An advanced library for Angular 6 (Angular in general) for model driven forms and validation support.\",\n  \"main\": \"./bundles/svogv.umd.js\",\n  \"module\": \"./index.js\",\n  \"typings\": \"./index.d.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/joergkrause/svogv.git\"\n  },\n  \"keywords\": [\n    \"angular\",\n    \"angular2\",\n    \"angular4\",\n    \"Reactive\",\n    \"Forms\",\n    \"Validation\",\n    \"Viewmodel\",\n    \"decorators\",\n    \"components\"\n  ],\n  \"license\": \"ICS\",\n  \"bugs\": {\n    \"url\": \"https://github.com/joergkrause/svogv/issues\"\n  },\n  \"homepage\": \"https://github.com/joergkrause/svogv#readme\",\n  \"peerDependencies\": {\n    \"@angular/common\": \"^2.2.0\",\n    \"@angular/compiler\": \"^2.2.0\",\n    \"@angular/core\": \"^2.2.0\",\n    \"@angular/forms\": \"^2.2.0\",\n    \"@angular/http\": \"^2.2.0\",\n    \"@angular/platform-browser\": \"^2.2.0\",\n    \"@angular/platform-browser-dynamic\": \"^2.2.0\",\n    \"@angular/router\": \"^3.1.0\",\n    \"core-js\": \"^2.4.1\",\n    \"rxjs\": \"^5.4.2\",\n    \"systemjs\": \"^0.19.38\",\n    \"zone.js\": \"^0.8.16\"\n  }\n}If you now compare this with yours you find that some parts are missing. Let's dive into package.json first to get what's important. There are few \noptions that simply help others to navigate in your project. These parts are:\n  \"bugs\": {\n    \"url\": \"https://github.com/joergkrause/svogv/issues\"\n  },\n  \"homepage\": \"https://github.com/joergkrause/svogv#readme\",\nThey are just pointers to the repository. NPM will extract the values and use this to create links:\n\nFortunatly, if your repository already exists, the paths are right where they shall be. \nAnother part is not yet missing: the dependencies. This part we develop while creating the project. So leave it empty right now. \nThe Project's Core files\nThe project we create is an Angular 2 library, created with TypeScript. So we need to setup this properly. The files we need are:\n\nREADME.md: \n  The documentation's entry point. This file is shown on NPM (not on GitHub). It's sort of your homepage. Remember that we're currently in the \\src\\lib\\ folder and create just the library. The Github's readme will come later.  \n\ntsconfig.json:\n  The configuration for the TypeScript transpiler. That's covered in the chapter about TypeScript.\n\ntypedoc.json:\n  The configuration for the API documentation generator. That's covered in the chapter about API Documentation.\n\nTwo files are just for testing. That's covered in the chapter about unit testing:\n\nsystem-config-spec.ts\ntsconfig-srcs.json\n\n\n\nBefore you can proceed we need to setup a basic build tool chain. The build process is not part of the library nor the demo we write. It's our personal\neffort to assure things go well for our users. That happens in the main (root) folder of the project.\nYou remember the folder structure we started with? \n  \\root\n    \\src\n      \\lib\n      \\demo\n    \\node_modules\n    \\scripts\n    \\test\n    \\tools\nThe part in \\src\\lib is almost done. Now we go to the root folder and setup the build tool chain. We use these tools here:\n\nGulp: An script runner to automate tasks\nTypeScript: The transpiler from TS in JS\nSass: Transpiler for SCSS files into CSS\nTravis: A continuees integration tool to monitor the builds\nKarma: Unit Tests for JavaScript\n\nSetup the Core\nThere are two ways to setup a project. You can use npm and the command line to execute all parts one by one. Or you can create a file named package.json and\nlet the npm tool request all dependencies. Because of the sheer amount of tools we usually need the second way is now way better. So, start by putting this file\nin your root folder:\n{\n  \"name\": \"your-project\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Some good description.\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"build\": \"gulp build\",\n    \"demoall\": \"gulp build && cd src/demo && npm run exec\",\n    \"execdemo\": \"cd src/demo && npm run exec\",\n    \"test\": \"gulp test\",\n    \"tslint\": \"gulp lint\",\n    \"stylelint\": \"gulp lint\",\n    \"deploy\": \"firebase deploy\",\n    \"docs\": \"gulp docs\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/your-git-name/your-project.git\"\n  },\n  \"keywords\": [\n    \"Angular\",\n    \"Reactive\",\n    \"Forms\",\n    \"Forms\",\n    \"Validation\",\n    \"Viewmodel\",\n    \"decorators\"\n  ],\n  \"author\": \"Your Public Name\",\n  \"license\": \"ISC\",\n  \"engines\": {\n    \"node\": \">= 5.4.1 Remember changing the descriptive parts:\n\nSave this as package.json into the root. Open a command prompt and excute this command:\nnpm updateYou will have a new folder right now: node_modules. There is no need to touch this folder, ever. npm will do this for you. First check if Gulp is now\npresent by typing \ngulp -vIt should respond like this:\n\n\nIf you see nothing or just an error that gulp is not yet present setup Gulp first.\n\nThe first part of the setup refers to Gulp. Gulp requires a file called gulpfile.js \nto run so called tasks. Because I want use TypeScript my gulpfile is somewhat special:\n'use strict';\n/**\n * Load the TypeScript compiler, then load the TypeScript gulpfile which simply loads all\n * the tasks. The tasks are really inside tools/gulp/tasks.\n */\n\nconst path = require('path');\n\n// Register TS compilation.\nrequire('ts-node').register({\n  project: path.join(__dirname, 'tools/gulp')\n});\n\nrequire('./tools/gulp/gulpfile');The ts-node is a TypeScript execution environment and REPL (Read Execute Print Loop) for node. It's hence sort of an on-the-fly transpiler for TypeScript.\nUsing this we can write the Gulp stuff in TypeScript and Gulp will still execute plain JavaScript.\nBuild tasks\nYou can build and start everything like this:\n\nGo to root of the project\nrun npm run build: build the library \nrun npm run demoall: build libary, demo, and run the demo using local HTTP server on port 3000\nrun npm run execdemo: build and run demo using local HTTP server, but keep library as is\nrun npm run tslint: run the linter for the library\n\n\nYou can run more tasks specific to the demo from there\ncd src/demo and then the particular task \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/about.html":{"url":"additional-documentation/about.html","title":"additional-page - About","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\nSVOGV is an ongoing project that helps Angular developers to create awesome apps quite fast.\n\nAbout me\nI have many years of experience with Web-Frameworks. I’m in the business since the early JavaScript days, know every single bit\nin jQuery and learnt a lot about Knockout, Angular, and Durandal. But time goes on.\nNow Angular is here for a while – the very first time in years – such a strong feeling in our guts that’s now the first step from ancient\ncrap into something really professional. It brings the level we all know from Java and C# and the mature backend frameworks to the front\nend.\nAnd it goes on. TypeScript is here and know we have something that’s an improvement for front end developers that matters:\nTypeScript brings a whole new level to pros like us. And it makes out world easier – at least a bit. And it improves the quality of our\nproduct – not just a bit, a whole new step.\nThe last years brought a lot experience and some nice projects and the outcome is an advanced peace of software that’s going to make our life\nwith Angular a lot easier.\nPurpose\nThis is a project that helps creating sophisticated Angular components. It's not really just for adding to packages and using, but more for\nlearning. There will be a book available that explains the making of completely (planned by June 2019).\nImpress\n  Jörg Krause\n  Hafersteig 113\n  12683 Berlin\n  Germany\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
