var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["0","0.3","0.3.5","0.6","0.7","1.0","10","2","300","39","4","6","7","8","absolut","accept","access","action","ad","addit","addition","address","advanc","again","altern","ancient","angular","angularj","annot","api","app","appear","appreci","approach","appropri","assum","assur","attribut","autoform","automat","avail","awar","awesom","backend","base","be","becom","befor","behavior","believ","below","berlin","bind","bit","bool","boolean","bootstrap","box","break","bring","browser","build","bundl","busi","c","cal","calend","calendar","call","can't","care","chang","check","checkbox","class","cli","clone","close","code","col","come","command","commerci","comparetyp","complement","complet","compon","concept","configur","connect","constructor(priv","contribut","copi","core","cost","cours","crap","creat","current","custom","customiz","daili","dashboard","data","dataannot","datagrid","date","day","decid","decor","deepli","default","definit","deliv","demo","depend","descript","design","determin","develop","differ","display","display('","display('phon","display('us","displaygrouptyp","displaytyp","document","domain","don't","drop","dropdown","durand","e","earli","easi","easier","ecosystem","edit","editor","editusercompon","element","email","emailtyp","empti","end","enterpris","enum","error","especi","even","eventemitt","exact","exclud","execut","experi","export","extend","extens","featur","feedback","feel","field","filter","final","first","folder","follow","forc","form","form'","format","format(datepip","formattyp","formgroup","formvalidatormodel","formvalidatorservic","framework","free","front","frontend","full","fulli","function","fv","gener","germani","get","github","go","goe","good","grid","grow","guid","gut","hand","handi","handl","hard","heavili","help","helper","henc","here","hidden","hiddentyp","hint","html","i'm","icon","id","idea","implement","import","improv","independ","index","infobox","inform","inspir","instal","instanc","interfac","introduct","isc","issu","it'","java","javascript","joerg","jqueri","json","jump","kb","knockout","know","known","kraus","label'","learnt","left","let'","level","librari","licens","list","look","lot","made","mail","major","make","manag","mani","match","matter","matur","maxlength","maxlength(100","maxlength(20","maxlengthtyp","menu","messag","minifi","minlengthtyp","mode","model","modifi","more","move","name","namespac","navig","necessari","need","net","new","ngoninit","nice","node","node_modul","none","noth","now","npm","num","number","numer","object","on","oninit","open","option","order","out","overview","package.json","page","param","paramet","part","particular","path","patterntyp","pendant","phone","phonenumb","piec","pipe","placehold","placeholdertyp","plan","plane","pleas","possibl","prefix","pretti","pro","process","product","profession","project","properti","provid","purpos","qualiti","quick","quickli","quit","radio","rang","reactiv","read","readi","realli","releas","remark","remov","render","report","repositori","requir","requiredtyp","result","roughli","row","run","same","sampl","save","savey","second","see","select","server","servic","set","setup","sever","shall","show","shown","signific","simpl","simpler","simpli","singl","slider","small","somehow","someth","sometim","sort","sourc","special","start","static","step","straight","string","stringlengthtyp","strong","structur","stuff","style","such","support","svgov","svogv","svogv';or","sync","syntax","system.componentmodel.dataannot","tabl","tag","take","templat","templatehint","text","textarea","that'","thatâ€™","think","this.fv.build(userviewmodel","this.userform","those","though","three","through","time","toggl","tooltip","toward","treeview","tri","tricki","tsc","type","type=\"checkbox","type=\"d","type=\"numb","type=\"text","typescript","typic","ui","uihint","umd","univers","up","upon","us","usag","user","user\\'","userform","usernam","userviewmodel","usual","val","val,cal","valid","validator.display('","valu","variou","version","via","viewmodel","watermark","web","well","whole","wide","widget","window","work","world","write","written","www.joergkrause.d","ye","year","you'r","zip"],"overview.html":["1","4","6","7","9","bootstrap","class","cluster_svogvmodul","cluster_svogvmodule_provid","compon","declar","depend","export","formvalidatorfromjsonservic","formvalidatorservic","inject","interfac","legend","match","modul","out","overview","pipe","provid","reset","result","svogvmodul","zoom"],"changelog.html":["0.0.23","0.0.8","0.2.1","0.2.3","0.3.5","0.6","0.6.0","0.7","0.7.0","01","09","1.0","11","14","15","2","20","2017","2018","22","3","4","5","6","7","ac","actual","add","admit","again","alpha","analogclock","angular","anoth","api","base","basic","behavior","between","big","both","breadcrumb","break","build","bundl","chang","changelog","char","check","clarifi","cli","code","column","combin","come","compar","compet","complex","compon","construct","contain","continu","control","creat","datagrid","date","debug","decor","dedic","demo","display","dropmenu","earli","easi","edg","editor","element","email","environ","evolv","experi","experiment","express","field","first","fix","flavor","focu","follow","form","fruststrat","function","get","go","good","guid","gulp/rollup","header","henc","here","hidden","hud","i'm","inaugur","includ","infobox","intent","it'","label","less","level","lib","librari","line","live","loader","loadericon","look","lot","made","main","mainli","make","mani","match","max","maxlength","menu","min","minlength","more","mostli","multi","name","need","new","nit","now","number","on","option","out","outcom","packag","part","password","pattern","peopl","perfect","placehold","pre","procedur","process","product","project","properti","property'","put","rang","real","redesign","regular","releas","reliabl","remov","renam","render","reorg","requir","result","rid","run","see","setup","sever","shortli","sidemenu","simpl","small","smaller","smil","stabl","start","state","still","strictli","string","su","such","support","svg","svogv","systemj","tab","toler","ton","tooltip","treeview","two","type","typescript","ui","under","updat","us","usabl","valid","valu","veri","version","want","watermark","way","webpack","whether","widget","work","world"],"contributing.html":["100","2.2.0","abov","absolut","accept","ad","add","adher","affect","agreement","ahead","allow","alreadi","angular","anot","answer","anyth","api","appear","appropri","archiv","automat","avail","b","be","befor","begin","behavior","best","better","bodi","bootstrap","branch","break","broccoli","browser","bug","build","can't","capac","capit","case","caus","chanc","chang","charact","chat","check","checkout","chore","ci","cla","click","close","code","codepen","colon","command","commit","commun","conduct","configur","consid","consist","contact","contain","contrast","contribut","contributor","convent","coordin","corpor","correct","craft","creat","current","d","datepick","dealt","delet","depend","describ","descript","descrption","detail","develop","diagnos","dialog","direct","directli","discuss","doc","document","don't","dot","due","duplic","e.g","each","earli","easi","easier","edit","effort","end","ensur","error","etc","even","exampl","exist","explain","explan","extern","f","far","fax","feat","featur","ff","file","find","first","fix","follow","footer","forc","fork","form","format","found","full","gener","get","git","github","gitter","googl","google'","group","guid","guidelin","gulp","hash","hasn't","header","help","here","histori","imper","implement","improv","includ","inclus","increas","individu","inform","issu","it'","javascript","jsbin","keep","kind","latest","lead","letter","licens","limit","line","list","live","local","log","longer","look","love","mail","main","major","make","mandatori","master","match","maxim","mayb","mean","merg","messag","method","mind","minifi","miss","mistak","modifi","more","motiv","natur","necessari","need","new","newlin","non","note","npm","on","open","oper","option","out","outlin","over","overview","pass","patch","perf","perform","perhap","place","pleas","plunker","plunkr","point","pr","precis","present","prevent","previou","print","problem","process","project","promis","propos","provid","public","pull","push","question","quick","quickli","re","read","readabl","reader","readi","rebas","refactor","refer","relat","releas","remot","report","repositori","reproduc","reproduct","request","requir","rest","result","revert","rm","rule","run","safe","scan+email","scope","screen","screenshot","search","semi","send","set","sha","shell","sign","similar","simpl","small","sourc","space","spec","special","specifi","spend","src","stack","stackoverflow","stage","start","step","still","style","subject","submiss","submit","successfulli","succinct","suggest","suit","support","sure","svogv","svogv:mast","system","tbd","team","team'","tens","test","text","thank","that'","through","throughout","thrown","tool","trace","tri","triag","two","type","ui","unambigu","unit","updat","upstream","us","usag","variou","veri","version","via","visual","want","way","we'll","web","well","white","widget","without","word","work","wrap","yourself"],"license.html":["2016","2018","abov","action","and/or","appear","aris","author","c","connect","consequenti","contract","copi","copyright","damag","data","direct","disclaim","distribut","event","fee","fit","get","grant","herebi","impli","includ","indirect","isc","joerg","kraus","liabl","licens","loss","match","merchant","modifi","neglig","notic","out","perform","permiss","profit","provid","purpos","regard","result","shall","softwar","special","start","tortiou","us","warranti","whatsoev","whether","without"],"modules.html":["brows","browser","match","modul","result","support","svg","svogvmodul"],"modules/SvogvModule.html":["actual","angular/common","angular/cor","angular/form","angular/rout","bootstrap","class","cluster_svogvmodul","cluster_svogvmodule_provid","commonmodul","const","declar","decor","definit","depend","descript","export","file","formsmodul","formvalidatorfromjsonservic","formvalidatorservic","forroot","fromjson.servic","import","info","legend","match","modul","modulewithprovid","ngmodul","out","projects/svogv/src/lib/svogv.module.t","provid","public","reactiveformsmodul","reset","result","return","root","routermodul","services/formvalid","services/formvalidator.servic","sourc","static","svogv","svogv_compon","svogvmodul","us","wd","wd.autoformcompon","wd.datagridcompon","wd.datagridpaginationcompon","wd.editorcompon","wd.formatdatapip","wd.treeviewcompon","wd.treeviewnodecompon","widget","zoom"],"components/AutoFormComponent.html":["0","1","10px","1em","1px","__displayorder__${controlnam","__groupdesc__${controlnam","__groupname__${controlnam","__grouporder__${controlnam","__isgrouped__${controlnam","ac","actual_compon","add","alreadi","alway","angular/cor","angular/form","appear","array","assum","auto","autoform","autoform'},{'nam","autoform.component.html","autoformcompon","boolean","border","check","class","complet","compon","component_templ","const","constructor","continu","control","controlnam","creat","datagrid","datagrid'},{'nam","datagridcompon","datagridpaginationcompon","decor","default","defin","desc","descript","direct","display","displayord","dom","e.key","each","editor","editor'},{'nam","editorcompon","element","end","exist","existinggroup","existinggroup.editors.push","existinggrouparray","existinggrouparray.length","export","fals","field","fieldset","file","font","form","formgroup","g.name","group","group.nam","groupdesc","groupexist","groupnam","groupname)[0","groupord","hasdecor","here","hidden","html","ignor","implement","import","index","info","input","isingroup","key","left","legend","loop","main","match","metadata","method","n","n.key","name","new","ngoninit","on","oninit","option","out","pad","pagination'},{'nam","part","projects/svogv/src/lib/widgets/editors/autoform.component.t","projects/svogv/src/lib/widgets/editors/autoform.component.ts:113","projects/svogv/src/lib/widgets/editors/autoform.component.ts:22","projects/svogv/src/lib/widgets/editors/autoform.component.ts:28","projects/svogv/src/lib/widgets/editors/autoform.component.ts:30","projects/svogv/src/lib/widgets/editors/autoform.component.ts:31","projects/svogv/src/lib/widgets/editors/autoform.component.ts:36","projects/svogv/src/lib/widgets/editors/autoform.component.ts:48","properti","public","push","refer","requir","result","return","right","selector","silver","size","solid","sort","sourc","store","string","style","take","templat","templateurl","this.editor","this.editors.push","this.editors.sort((","this.formgroup)['__editormodel__","this.formgroup.control","this.formgroup.controls.hasownproperty(controlnam","this.group","this.groups.filter(g","this.groups.length","this.groups.push","this.groups.sort((","through","top","tree","tree'},{'nam","treenod","treeviewcompon","treeviewnodecompon","true","type","ungroup","ungroupedaft","valu","var","viewmodel","void","width"],"components/DataGridComponent.html":["ac","action","actual_compon","ad","angular/cor","angular/core/src/render3/st","appear","appli","around","attribut","autoform'},{'nam","autoformcompon","base","basic","be","boolean","booleanfallback","border","button","certain","chang","class","click","code","col","column","columnstyl","complex","compon","component_templ","console.log('extern","console.log('intern","console.log(`getactivetempl","content","contentchild","contentchild('boolean","contentchild('d","contentchild('enum","contentchild('numb","contentchild('str","control","copi","css","data","datagrid","datagrid'},{'nam","datagrid.component.html","datagrid.component.scss","datagridcompon","datagridmodel","datagridmodel.ondelet","datagridmodel.onedit","datagridpaginationcompon","datagridstyl","date","datefallback","decor","default","defin","delet","descript","direct","directli","display","dom","drag","driven","drop","edit","editor'},{'nam","editorcompon","element","empti","enhanc","enum","enumfallback","event","exampl","export","fallback","file","filter","fire","first","formatdata","function","getactivetempl","getactivetemplate(uihint","give","grid","header","header.text","host","html","implement","import","increaseelementdepthcount","index","individu","info","input","intern","it'","item","last","legend","make","mani","match","meta","metadata","method","model","modelpip","models/datagrid.model","models/datagridstyle.model","more","move","n","name","ng","ngoninit","number","nummberfallback","oninit","option","otherwis","our","overrid","overwritten","pagin","pagination'},{'nam","param","paramet","piec","projects/svogv/src/lib/widgets/datagrid/datagrid.component.t","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:104","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:110","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:112","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:119","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:28","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:29","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:31","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:32","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:34","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:35","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:37","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:38","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:40","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:41","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:43","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:49","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:55","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:61","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:66","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:73","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:79","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:84","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:89","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:99","prop","properti","provid","public","rearrang","rearrangecolumn","result","return","rule","see","selector","shall","show","showact","showdeletebutton","showeditbutton","sort","sourc","string","stringfallback","style","styleurl","switch","tabl","tag","take","templat","templateref","templateurl","text","textbuttonshead","textdeletebutton","texteditbutton","textnoitem","this[`${uihint}fallback","this[uihint","tree","tree'},{'nam","treenod","treeviewcompon","treeviewnodecompon","true","type","uihint","underli","up","us","user","valu","var","via","viewchild","viewchild('boolean","viewchild('d","viewchild('enum","viewchild('numb","viewchild('str","viewchild(templateref","visibl","void","way","wheather"],"components/DataGridPaginationComponent.html":["0","1","3","6","ac","actual_compon","add","angular/cor","array","autoform'},{'nam","autoformcompon","backend","button","calcul","chang","change.currentvalu","changes['maxpageindex","class","click","client","compon","component_templ","const","creat","currentpagenumb","data","datagrid","datagrid'},{'nam","datagridcompon","datagridpagination.component.html","datagridpagination.component.scss","datagridpaginationcompon","date","default","defin","descript","direct","dom","editor'},{'nam","editorcompon","element","event","event.preventdefault","eventemitt","export","expressionchangedafterithasbeencheckedexcept","few","file","fire","first","go","grid","handl","html","implement","import","index","info","input","legend","liter","load","made","match","max","maxpageindex","metadata","method","min","model","mouseev","name","navig","need","new","ngonchang","ngonchanges(chang","ngoninit","number","onc","onchang","oninit","option","output","page","pageend","pageendnumb","pagenumb","pagenumberchang","pagestartnumb","pagin","pagination'},{'nam","paramet","parent","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.t","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:19","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:24","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:26","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:28","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:32","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:45","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:58","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:66","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:75","properti","propertynam","rang","range(min","relev","result","return","root","selector","server","setcurrentpag","setcurrentpage(pagenumb","settimeout","simplechang","sourc","startnumb","string","styleurl","support","templat","templateurl","there'","this.currentpagenumb","this.maxpageindex","this.pagenumberchanged.emit(pagenumb","this.setcurrentpage(1","throw","tree","tree'},{'nam","treenod","treeviewcompon","treeviewnodecompon","true","type","underlay","user","valu","var","void"],"components/EditorComponent.html":["0","100","1px","20px","4px","abov","ac","accord","actual_compon","addit","align:middl","angular/cor","angular/form","appear","array","array[0","autoform'},{'nam","autoformcompon","be","block","boolean","calendar","chang","charact","check","class","colon","compon","component_templ","const","constructor","content","creat","cursor","data","datagrid","datagrid'},{'nam","datagridcompon","datagridpaginationcompon","date","decor","default","defin","definit","descript","direct","display","display:inlin","dom","e.key","editor","editor'},{'nam","editor.component.html","editorcompon","editormodel","editormodel[`__displaydesc__${this.nam","editormodel[`__displayname__${this.nam","editormodel[`__hasrangefrom__${this.nam","editormodel[`__hasrangeto__${this.nam","editormodel[`__hastemplatehint__${this.nam","editormodel[`__haswatermark__${this.nam","editormodel[`__ishidden__${this.nam","editormodel[`__isreadonly__${this.nam","editormodel[`__templatehint__${this.name}`]).tolowercas","editormodel[`__templatehintparams__${this.nam","editormodel[`__watermark__${this.nam","editormodel[this.nam","element","elementari","empti","end","enum","enumvalu","error","even","execut","export","f046","f096","fals","famili","field","fieldtyp","file","first","first(array","font","fontawesom","form","form'","formgroup","formvalidatorservic","found","fromvalu","getparam","getparams(key","group","height","hidden","html","id","ignor","implement","import","index","info","inlin","input","input[type=\"checkbox","input[type=\"checkbox\"]:check","instanc","instanceof","it'","key","label","label'","label:befor","labeldivid","later","legend","line:forin","list","listvalu","liter","make","margin","match","metadata","method","n","name","new","next","ngfor","ngoninit","none","null","number","number(editormodel[`__hasrangefrom__${this.nam","number(editormodel[`__hasrangeto__${this.nam","object","on","oninit","onvaluechang","onvaluechanged(data","option","option.v","otherwis","output","overwritten","pagination'},{'nam","param","paramet","placehold","plu","pointer","privat","projects/svogv/src/lib/widgets/editors/editor.component.t","projects/svogv/src/lib/widgets/editors/editor.component.ts:109","projects/svogv/src/lib/widgets/editors/editor.component.ts:163","projects/svogv/src/lib/widgets/editors/editor.component.ts:25","projects/svogv/src/lib/widgets/editors/editor.component.ts:29","projects/svogv/src/lib/widgets/editors/editor.component.ts:33","projects/svogv/src/lib/widgets/editors/editor.component.ts:37","projects/svogv/src/lib/widgets/editors/editor.component.ts:41","projects/svogv/src/lib/widgets/editors/editor.component.ts:45","projects/svogv/src/lib/widgets/editors/editor.component.ts:50","projects/svogv/src/lib/widgets/editors/editor.component.ts:54","projects/svogv/src/lib/widgets/editors/editor.component.ts:59","projects/svogv/src/lib/widgets/editors/editor.component.ts:63","projects/svogv/src/lib/widgets/editors/editor.component.ts:67","projects/svogv/src/lib/widgets/editors/editor.component.ts:71","projects/svogv/src/lib/widgets/editors/editor.component.ts:75","projects/svogv/src/lib/widgets/editors/editor.component.ts:81","projects/svogv/src/lib/widgets/editors/editor.component.ts:84","projects/svogv/src/lib/widgets/editors/editor.component.ts:86","projects/svogv/src/lib/widgets/editors/editor.component.ts:92","projects/svogv/src/lib/widgets/editors/editor.component.ts:96","properti","provid","rang","read","readonli","render","requir","result","return","row","select","selector","servic","set","shall","sourc","space","start","string","style","templat","templatehint","templateurl","text","this.error","this.errors.push(error","this.first(this.params.filter((","this.fromvalu","this.label","this.nam","this.onvaluechanged(data","this.param","this.readonli","this.tooltip","this.tovalu","this.typ","this.userform)['__editormodel__","this.userform.controls[this.name].error","this.watermark","tooltip","tovalu","tree","tree'},{'nam","treenod","treeviewcompon","treeviewnodecompon","true","tslint:dis","type","typeof","us","userform","userform.controls[name]['messages'][error","userform.controls[name][\\'messages\\'][error","valid","valu","var","vertic","void","watermark","widget","width:15px"],"components/TreeViewComponent.html":["25px","ac","actual_compon","angular/cor","autoform'},{'nam","autoformcompon","base","checkbox","checkchang","class","collapsechang","compon","component_templ","constructor","creat","css","datagrid","datagrid'},{'nam","datagridcompon","datagridpaginationcompon","defin","descript","direct","dom","editor'},{'nam","editorcompon","element","event","eventemitt","export","file","fontawesome'","handl","highlight","html","icon","import","index","info","input","left","legend","list","margin","match","metadata","method","model","name","new","node","nodeclick","none","object","oncheckchang","oncheckchanged(nod","oncollapsechang","oncollapsechanged(nod","onnodeclick","onnodeclick(nod","onselectedchang","onselectedchanged(nod","option","output","pagination'},{'nam","paramet","projects/svogv/src/lib/widgets/treeview/treeview.component.t","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:14","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:15","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:16","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:17","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:18","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:24","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:28","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:32","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:36","result","return","see","selectedchang","selector","sourc","style","templat","templateurl","text","this.checkchanged.emit(nod","this.collapsechanged.emit(nod","this.nodeclick.emit(nod","this.selectedchanged.emit(nod","tree","tree'},{'nam","treenod","treenodemodel","treeview","treeview.component.html","treeviewcompon","treeviewnodecompon","type","var","void"],"components/TreeViewNodeComponent.html":["0","000","ac","accord","actexttreenod","actreenodeopt","actual","actual_compon","alway","angular/cor","appear","area","array","autoform'},{'nam","autoformcompon","awesom","backcolor","base","be","boolean","checkabl","checkchang","children","class","click","clsicon","collaps","collapsechang","collapseclass","color","compon","component_templ","constructor","constructor(el","constructor(priv","control","datagrid","datagrid'},{'nam","datagridcompon","datagridpaginationcompon","default","defin","descript","direct","dom","editor'},{'nam","editorcompon","el","element","elementref","emit","even","event","event.preventdefault","event.stoppropag","eventemitt","expand","expect","export","fa","fals","fff","field","file","fire","font","forecolor","forward","handl","handlecheckchang","handleclick","handleclick($ev","handlecollaps","handlepreselect","handlepreselection(st","handleselect","handleselection($ev","held","henc","href","html","icon","iconclass","implement","import","includ","index","info","input","isexpand","legend","match","metadata","method","minu","model","name","need","new","ngoninit","node","node'","node.text","nodeclick","object","oncheckchang","oncheckchanged(nod","oncollapsechang","oncollapsechanged(nod","oninit","onnodeclick","onnodeclick(nod","onselectedchang","onselectedchanged(nod","open/clos","opnicon","option","output","pagination'},{'nam","paramet","part","pfxicon","plu","preselectst","privat","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.t","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:136","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:140","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:144","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:148","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:154","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:165","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:171","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:183","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:213","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:35","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:43","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:44","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:45","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:51","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:56","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:61","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:66","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:71","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:73","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:74","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:75","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:76","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:77","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:78","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:80","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:82","properti","public","real","render","repres","result","return","s","select","selectedchang","selector","set","sever","singl","sourc","state","static","string","style","styleurl","templat","templateurl","texttreenodemodel","this.backcolor","this.checkchang","this.checkchanged.emit(nod","this.checkchanged.emit(this.nod","this.collapsechang","this.collapsechanged.emit(nod","this.collapsechanged.emit(this.nod","this.collapseclass","this.collapseclasses.filt","this.collapseclasses.push('ac","this.collapseclasses.push(treeviewnodecomponent.clsicon","this.collapseclasses.push(treeviewnodecomponent.opnicon","this.collapseclasses.push(treeviewnodecomponent.pfxicon","this.forecolor","this.href","this.iconclass","this.iconclasses.push('fa","this.iconclasses.push(this.node.options.icon","this.isexpand","this.nod","this.node.haschildren","this.node.opt","this.node.options.backcolor","this.node.options.check","this.node.options.collaps","this.node.options.color","this.node.options.href","this.node.options.icon","this.node.options.icon.indexof(`${treeviewnodecomponent.pfxicon","this.node.options.select","this.node.st","this.node.statechange.subscribe((s","this.node.stateisdis","this.node.stateisexpandend","this.node.stateisselect","this.nodeclick","this.nodeclick.emit(nod","this.nodeclick.emit(this.nod","this.preselectst","this.selectedchang","this.selectedchanged.emit(nod","this.selectedchanged.emit(this.nod","through","toggl","tree","tree'},{'nam","treenod","treenodemodel","treenodest","treenodestate.check","treenodestate.expand","treenodestate.select","treeview","treeviewcompon","treeviewnode.component.css","treeviewnode.component.html","treeviewnodecompon","treeviewnodecomponent.clsicon","treeviewnodecomponent.opnicon","true","type","ui","valu","var","view","void","without"],"injectables/DynamicHtmlRendererService.html":["abstract","angular/cor","array","array.prototype.foreach.call(el","array.prototype.foreach.call(el.attribut","attr","attr.valu","attrsmap","attrsmap.set(attr.nam","cf","cfr","check","class","cmpref","cmpref.inst","cmpref.instance.dynamiconmount","compon","componentfactori","componentfactoryresolv","componentref","componentrefs.foreach(ref","componentrefs.push(cmpref","componentwithselector","const","constructor","constructor(opt","constructor(priv","content","defin","descript","destroy","dynamichtmlopt","dynamichtmlref","dynamichtmlrendererservic","dynamiconmount(attr","el","el.hasattribut","el.innerhtml","el.removeattribute('ng","element","element).queryselectorall(selector","elementref","elementref.nativeel","elementref.nativeelement.innerhtml","export","file","function","html","import","index","info","inject","injector","interfac","isbrowserplatform","map","match","method","name","new","null","onmount","onmount).dynamiconmount(attrsmap","option","paramet","privat","projects/svogv/src/lib/services/dynamichtmlrenderer.service.t","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:26","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:28","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:38","properti","ref.changedetectorref.detectchang","ref.destroy","renderinnerhtml","renderinnerhtml(elementref","result","return","selector","sourc","string","this.cfr.resolvecomponentfactory(compon","this.componentfactories.get(selector).create(this.injector","this.componentfactories.set(selector","this.componentrefs.delete(elementref","this.componentrefs.set(elementref","this.options.components.foreach","type","version","void","window","window.docu"],"injectables/FormValidatorFromJsonService.html":["0","angular/cor","angular/form","array","behavior","break","build","build(json","case","class","compar","compareinternalsetup","compareinternalsetup(target","const","constructor","constructor(formvalidatorservic","constructor(priv","convert","creat","decor","defin","describ","descript","display","displaygroup","displaygroupinternalsetup","displaygroupinternalsetup(target","displayinternalsetup","displayinternalsetup(target","each","element","email","emailinternalsetup","emailinternalsetup(target","export","field","field)[type]['hidden","field)[type]['ord","field)[type]['readonli","fieldnam","fields.foreach(field","file","form","form'","format","formatinternalsetup","formatinternalsetup(target","formgroup","formvalidator.model","formvalidator.servic","formvalidatorfromjsonservic","formvalidatormodel","formvalidatorservic","fromjson.service.t","fromjson.service.ts:58","fromjson.service.ts:62","hidden","hiddeninternalsetup","hiddeninternalsetup(target","import","index","info","inject","json","json)[field][type]['descript","json)[field][type]['fieldtocompar","json)[field][type]['from","json)[field][type]['hidden","json)[field][type]['max","json)[field][type]['min","json)[field][type]['msg","json)[field][type]['nam","json)[field][type]['ord","json)[field][type]['pattern","json)[field][type]['pipenam","json)[field][type]['pipeparam","json)[field][type]['readonli","json)[field][type]['to","match","maxlength","maxlengthinternalsetup","maxlengthinternalsetup(target","method","minlength","minlengthinternalsetup","minlengthinternalsetup(target","name","number","object","object.keys(json","object.keys(json[field","on","option","order","paramet","pattern","patterninternalsetup","patterninternalsetup(target","pipenam","pipeparam","placehold","placeholderinternalsetup","placeholderinternalsetup(target","projects/svogv/src/lib/services/formvalid","properti","public","rang","rangeinternalsetup","rangeinternalsetup(target","readonli","readonlyinternalsetup","readonlyinternalsetup(target","requir","requiredinternalsetup","requiredinternalsetup(target","result","return","same","see","server","sourc","string","stringlength","stringlengthinternalsetup","stringlengthinternalsetup(target","switch","target","this.formvalidatorservice.build(target","type","types.foreach(typ","validatecompar","validaterang","validators/compare.valid","validators/range.valid","way"],"injectables/FormValidatorService.html":["0","1","10","__hascompareproperty__${propnam","__hasmaxlength__${propnam","__hasminlength__${propnam","__haspattern__${propnam","__hasrangefrom__${propnam","__hasrangeto__${propnam","__isrequired__${propnam","access","accordingli","add","angular/cor","angular/form","array","assum","build","build(target","cast","catch","class","compar","console.error('invalid","const","constructor","constructor(fb","continu","control","creat","ctrl","date","date.parse(f.tostr","date.parse(t.tostr","decor","defin","descript","easi","editor","errgroup","errgroup)[propnam","errmsg","errmsgs)['compar","errmsgs)['maxlength","errmsgs)['minlength","errmsgs)['pattern","errmsgs)['rang","errmsgs)['requir","error","even","ex","export","f","fb","file","form","form)['__editormodel__","form.controls[propnam","form.controls[propname])['messag","formbuild","formcontrol","formgroup","formvalidatorservic","forward","group","hascompar","hasmaxlength","hasminlength","haspattern","hasrangefrom","hasrangeto","immedi","import","index","info","inject","inject(formbuild","intention","isrequir","it'","line:forin","match","maxlength","messag","method","minlength","model","name","nan","need","new","next","number","number(target.prototype[`__hasrangefrom__${propnam","number(target.prototype[`__hasrangeto__${propnam","object","option","paramet","parseint(target.prototype[`__hasmaxlength__${propnam","parseint(target.prototype[`__hasminlength__${propnam","pattern","privat","projects/svogv/src/lib/services/formvalidator.service.t","projects/svogv/src/lib/services/formvalidator.service.ts:14","projects/svogv/src/lib/services/formvalidator.service.ts:20","properti","propnam","public","regexp(target.prototype[`__haspattern__${propnam","regist","result","return","servic","show","sourc","suppress","t","target","target.prototyp","target.prototype[`__errcompareproperty__${propnam","target.prototype[`__errmaxlength__${propnam","target.prototype[`__errminlength__${propnam","target.prototype[`__errpattern__${propnam","target.prototype[`__errrange__${propnam","target.prototype[`__errrequired__${propnam","target.prototype[`__withcompare__${propnam","target[propnam","targetinst","this.fb","this.fb.group(valgroup","tri","ts","tslint:dis","type","usag","valgroup","valgroup)[propnam","valid","validatecompar","validaterang","validators.compose(valid","validators.length","validators.push(validatecompare(compar","validators.push(validaterange(f","validators.push(validators.maxlength(maxlength","validators.push(validators.minlength(minlength","validators.push(validators.pattern(pattern","validators.push(validators.requir","validators/compare.valid","validators/range.valid","validators[0","viewmodel"],"injectables/WindowRef.html":["_window","angular/cor","browser","class","defin","export","file","function","global","import","index","info","inject","match","nativ","nativewindow","object","projects/svogv/src/lib/utils/windowref.t","projects/svogv/src/lib/utils/windowref.ts:10","properti","result","return","sourc","type","window","windowref"],"pipes/FormatDataPipe.html":["allow","angular/cor","class","const","constructor(priv","data","defin","descript","dynam","export","extern","file","format","formatdata","formatdatapip","formatt","forward","grid","implement","import","info","injector","intern","match","name","pipe","pipe.transform(valu","pipearg","pipetoken","pipetransform","projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.t","prupos","public","result","return","sourc","this.injector.get(pipetoken","transform(valu","type","us","valu","within"],"classes/DataGridHeaderModel.html":["addit","angular/cor","attribut","boolean","button","certain","class","column","connect","constructor","constructor(publ","constructor(text","ctor","data","datagridheadermodel","default","defin","desc","describ","descript","display","export","fals","field","file","format","function","grid","header","henc","hidden","hint","import","index","info","intern","issort","match","model","mouseov","name","option","param","paramet","pipe","pipeparam","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:14","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:22","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:27","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:32","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:37","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:42","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:6","prop","properti","propertie'","provid","public","result","select","set","show","shown","sort","sourc","string","templat","templatehint","templatehintparam","text","this.issort","this.templatehint","titl","tooltip","true","type","undefin","us","valu","view"],"classes/DataGridItemModel.html":["attach","class","const","constructor","ctor","data","datagriditemmodel","defin","descript","dynam","export","file","format","getformat","getformatted(pipearg","import","index","info","item","match","meta","method","name","option","param","paramet","pipe","pipe.transform(this.valu","pipearg","pipetoken","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:16","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:17","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:19","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:21","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:6","prop","properti","public","result","return","show","sourc","string","svogv.modul","svogvmodul","svogvmodule['injector","svogvmodule['injector'].get(this.pipetoken","type","us","valu"],"classes/DataGridModel.html":["0","1","10","_header","_item","a[colnam","a[sortcolumn","ad","add","addcolumn","addcolumn(colnam","again","alreadi","angular/cor","applic","array","ascend","assum","b","b[colnam","b[sortcolumn","button","call","caller","chang","check","class","click","col","col.hidden","collect","colnam","column","const","constructor","constructor(item","continu","control","count","creat","createheadersfortyp","createheadersfortype(typ","current","currentpageindex","currentrowend","currentrowstart","datagridheader.model","datagridheadermodel","datagridheadermodel(propnam","datagriditem.model","datagriditemmodel","datagridmodel","decor","default","defin","delet","deleteitem","deleteitem(item","desc","descend","descript","dir","direct","direction.ascend","display","edit","edititem","edititem(item","element","enum","es","event","eventemitt","exist","export","extens","fals","file","filter","fire","first","fucntion","getitemsort","getitemsorted(sortcolumn","grid","h.hidden","h.prop","handl","header","header.issort","header.pip","header.pipeparam","header.templatehint","header.templatehintparam","headersnotvis","hidden","import","index","info","inform","infrastructur","invis","ishidden","it'","item","itemsfilt","itemsoncurrentpag","iter","later","look","made","make","manag","match","maxpageindex","method","more","name","new","none","noth","null","number","object","object.same(this.searchvalu","omit","on","ondelet","onedit","option","order","p","page","pages","param","paramet","privat","process","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:104","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:106","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:119","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:127","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:139","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:150","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:158","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:162","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:23","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:34","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:38","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:42","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:45","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:49","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:56","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:64","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:68","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:72","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:79","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:86","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:89","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:90","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:91","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:92","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:94","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:99","propdesc","properti","propnam","provid","public","read","recent","remov","removecolumn","removecolumn(colnam","render","result","return","row","searchvalu","see","show","shown","simpl","sort","sortcolumn","sortcolumn(colnam","sortdirect","sourc","specifi","startrow","still","string","structur","t","take","templat","this._head","this._headers.filter(h","this._headers.find(h","this._headers.push(head","this._item","this._items.length","this.createheadersfortype(typeinst","this.items.sort((a","this.itemsfilt","this.itemsfiltered.length","this.itemsfiltered.slice(this.startrow","this.ondelete.emit(item","this.onedit.emit(item","this.pages","this.startrow","this.totalrow","titl","total","totalfilteredrow","totalrow","true","type","type.hasownproperty(p","type[`__displaydesc__${p","type[`__displayname__${p","type[`__ishidden__${p","type[`__issortable__${p","type[`__pipeparams__${p","type[`__templatehint__${p","type[`__templatehintparams__${p","type[`__uipipe__${p","type[p","typeinst","typeof","user","utils/object","valu","viewmodel","visibl","void","wish"],"classes/DynamicHTMLOptions.html":["abstract","angular/cor","array","array.prototype.foreach.call(el","array.prototype.foreach.call(el.attribut","attr","attr.valu","attrsmap","attrsmap.set(attr.nam","cf","cfr","check","class","cmpref","cmpref.inst","cmpref.instance.dynamiconmount","compon","componentfactori","componentfactoryresolv","componentref","componentrefs.foreach(ref","componentrefs.push(cmpref","componentwithselector","const","constructor(priv","content","defin","destroy","dynamichtmlopt","dynamichtmlref","dynamichtmlrendererservic","dynamiconmount(attr","el","el.hasattribut","el.innerhtml","el.removeattribute('ng","element","element).queryselectorall(selector","elementref","elementref.nativeel","elementref.nativeelement.innerhtml","export","file","function","html","import","index","info","inject","injector","interfac","isbrowserplatform","map","match","new","null","onmount","onmount).dynamiconmount(attrsmap","option","privat","projects/svogv/src/lib/services/dynamichtmlrenderer.service.t","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:8","properti","ref.changedetectorref.detectchang","ref.destroy","renderinnerhtml(elementref","result","return","selector","sourc","string","this.cfr.resolvecomponentfactory(compon","this.componentfactories.get(selector).create(this.injector","this.componentfactories.set(selector","this.componentrefs.delete(elementref","this.componentrefs.set(elementref","this.options.components.foreach","type","version","void","window","window.docu"],"classes/OnMount.html":["abstract","angular/cor","array","array.prototype.foreach.call(el","array.prototype.foreach.call(el.attribut","attr","attr.valu","attrsmap","attrsmap.set(attr.nam","cf","cfr","check","class","cmpref","cmpref.inst","cmpref.instance.dynamiconmount","compon","componentfactori","componentfactoryresolv","componentref","componentrefs.foreach(ref","componentrefs.push(cmpref","componentwithselector","const","constructor(priv","content","defin","descript","destroy","dynamichtmlopt","dynamichtmlref","dynamichtmlrendererservic","dynamiconmount","dynamiconmount(attr","el","el.hasattribut","el.innerhtml","el.removeattribute('ng","element","element).queryselectorall(selector","elementref","elementref.nativeel","elementref.nativeelement.innerhtml","export","file","function","html","import","index","info","inject","injector","interfac","isbrowserplatform","map","match","method","name","new","null","onmount","onmount).dynamiconmount(attrsmap","option","paramet","privat","projects/svogv/src/lib/services/dynamichtmlrenderer.service.t","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:11","ref.changedetectorref.detectchang","ref.destroy","renderinnerhtml(elementref","result","return","selector","sourc","string","this.cfr.resolvecomponentfactory(compon","this.componentfactories.get(selector).create(this.injector","this.componentfactories.set(selector","this.componentrefs.delete(elementref","this.componentrefs.set(elementref","this.options.components.foreach","true","type","version","void","window","window.docu"],"classes/TextTreeNodeModel.html":["class","constructor","constructor(text","default","defin","descript","explicitli","export","extend","file","import","index","info","match","name","node","option","paramet","projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.t","projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8","properti","result","set","sourc","string","super(opt","text","texttreenodemodel","this.nam","this.text","treenode.model","treenodemodel","treenodeopt","treenodeoptions.model","true","type"],"classes/TreeNodeComponentModel.html":["angular/cor","class","compon","component'","constructor","constructor(compon","defin","descript","export","extend","file","import","index","info","load","match","name","node","option","paramet","projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9","properti","result","sourc","super(opt","this.compon","treenode.model","treenodecomponentmodel","treenodemodel","treenodeopt","treenodeoptions.model","true","type","ui"],"classes/TreeNodeModel.html":["0","1","_state","add","add(nod","angular/cor","appear","array","base","behavior","boolean","children","class","const","constructor","constructor(opt","control","defin","descript","eventemitt","export","fals","field","file","haschildren","hasdirectancestor","hasdirectancestor(nod","id","identifi","idx","implement","import","index","info","instanceof","match","method","n","n.parent","name","new","node","number","option","p","p.push(n","p.push(thi","paramet","parent","path","privat","projects/svogv/src/lib/widgets/treeview/models/treenode.model.t","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:103","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:107","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:12","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:16","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:20","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:24","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:28","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:32","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:49","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:61","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:65","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:69","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:77","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:87","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:95","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:99","properti","remov","remove(nod","result","return","set","sourc","state","state(valu","statechang","stateischeck","stateisdis","stateisexpandend","stateisselect","string","structur","subsequ","this._stat","this.children","this.children.indexof(nod","this.children.length","this.children.push(...nod","this.children.push(nod","this.children.splice(idx","this.opt","this.par","this.stat","this.statechang","this.statechange.emit(this._st","tree","tree.treenodeopt","tree.treenodest","tree.treenodestate.check","tree.treenodestate.dis","tree.treenodestate.expand","tree.treenodestate.select","tree.treenodestate.undefin","treenodebase.model","treenodebasemodel","treenodemodel","treenodeoptions.model","true","type","undefin","up","valu","void","walk"],"classes/TreeNodeOptions.html":["0","1","addit","backcolor","boolean","check","checkabl","class","collaps","color","constructor","constructor(opt","defin","descript","enum","expand","export","file","fontawesom","href","hyperlink","icon","icon'","iconcolor","index","info","match","name","node","option","paramet","primari","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:17","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:19","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:21","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:23","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:25","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:27","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:29","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:31","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33","properti","result","select","selectedicon","show","sourc","string","text","treenodeopt","treenodest","true","type","undefin","view"],"interfaces/Array.html":["0","array","array.prototype.remov","console.log(valueorpred","declar","defin","descript","extensions.t","extensions.ts:2","file","function","function(valueorpred","index","info","interfac","match","method","name","new","o","option","paramet","predic","projects/svogv/src/lib/utils/array","remov","remove(o","removedvalu","result","return","sourc","type","typeof","valu","valueorpred"],"interfaces/ComponentWithSelector.html":["abstract","angular/cor","array","array.prototype.foreach.call(el","array.prototype.foreach.call(el.attribut","attr","attr.valu","attrsmap","attrsmap.set(attr.nam","cf","cfr","check","class","cmpref","cmpref.inst","cmpref.instance.dynamiconmount","compon","componentfactori","componentfactoryresolv","componentref","componentrefs.foreach(ref","componentrefs.push(cmpref","componentwithselector","const","constructor(priv","content","defin","destroy","dynamichtmlopt","dynamichtmlref","dynamichtmlrendererservic","dynamiconmount(attr","el","el.hasattribut","el.innerhtml","el.removeattribute('ng","element","element).queryselectorall(selector","elementref","elementref.nativeel","elementref.nativeelement.innerhtml","export","file","function","html","import","index","info","inject","injector","interfac","isbrowserplatform","map","match","new","null","onmount","onmount).dynamiconmount(attrsmap","option","privat","projects/svogv/src/lib/services/dynamichtmlrenderer.service.t","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:4","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:5","properti","ref.changedetectorref.detectchang","ref.destroy","renderinnerhtml(elementref","result","return","selector","sourc","string","this.cfr.resolvecomponentfactory(compon","this.componentfactories.get(selector).create(this.injector","this.componentfactories.set(selector","this.componentrefs.delete(elementref","this.componentrefs.set(elementref","this.options.components.foreach","type","version","void","window","window.docu"],"interfaces/DatagridStyles.html":["actioncel","datagridstyl","defin","export","file","first","footer","group","header","headersortbutton","index","info","interfac","last","match","middl","name","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:10","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:11","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:12","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:5","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:6","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:7","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:8","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:9","properti","result","sourc","string","stylerul","type"],"interfaces/DynamicHTMLRef.html":["abstract","angular/cor","array","array.prototype.foreach.call(el","array.prototype.foreach.call(el.attribut","attr","attr.valu","attrsmap","attrsmap.set(attr.nam","cf","cfr","check","class","cmpref","cmpref.inst","cmpref.instance.dynamiconmount","compon","componentfactori","componentfactoryresolv","componentref","componentrefs.foreach(ref","componentrefs.push(cmpref","componentwithselector","const","constructor(priv","content","defin","destroy","dynamichtmlopt","dynamichtmlref","dynamichtmlrendererservic","dynamiconmount(attr","el","el.hasattribut","el.innerhtml","el.removeattribute('ng","element","element).queryselectorall(selector","elementref","elementref.nativeel","elementref.nativeelement.innerhtml","export","file","function","html","import","index","info","inject","injector","interfac","isbrowserplatform","map","match","new","null","onmount","onmount).dynamiconmount(attrsmap","option","privat","projects/svogv/src/lib/services/dynamichtmlrenderer.service.t","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:15","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:16","properti","ref.changedetectorref.detectchang","ref.destroy","renderinnerhtml(elementref","result","return","selector","sourc","string","this.cfr.resolvecomponentfactory(compon","this.componentfactories.get(selector).create(this.injector","this.componentfactories.set(selector","this.componentrefs.delete(elementref","this.componentrefs.set(elementref","this.options.components.foreach","type","version","void","window","window.docu"],"interfaces/FormValidatorModel.html":["activ","actual","allow","appear","appli","array","autoamt","autoform","autoform&gt","base","basic","boolean","box","calendar","chang","compar","comparetyp","content","control","date","decor","default","defin","describ","descript","detail","differ","display","displaygroup","displaygrouptyp","displaytyp","driven","due","each","editor","element","email","emailtyp","enum","error","exampl","exist","export","field","field'","fieldnam","fieldtocompar","file","form","format","formattyp","formvalidatormodel","gener","give","goe","hidden","hiddentyp","hint","human","i18n","index","info","inform","instead","instruct","interfac","json","label","length","list","look","lt;ac","lt;input","lt;select&gt","lt;textarea&gt","mandatori","match","max","maxim","maximum","maxlength","maxlengthtyp","messag","min","minim","minimum","minlength","minlengthtyp","model","modul","msg","name","number","object","omit","order","param","paramet","pattern","patterntyp","pipe","pipenam","pipeparam","placehold","placeholdertyp","possibl","privat","projects/svogv/src/lib/services/formvalidator.model.t","projects/svogv/src/lib/services/formvalidator.model.ts:173","properti","pure","rang","rangetyp","readibl","readonli","readonlytyp","regex","regexp","render","repres","requir","requiredtyp","result","return","see","separ","set","singl","sourc","specif","string","stringlength","stringlengthtyp","structur","such","templat","templatehint","templatehinttyp","text","textarea","that'","tooltip","translat","true","type","type'","type=\"checkbox\"&gt","type=\"date\"&gt","type=\"number\"&gt","type=\"text\"&gt","typescript","ui","us","valid","validatortyp","valu","watermark","work"],"interfaces/ObjectConstructor.html":["allow","array","boolean","both","chain","closest","compar","constructor","continu","declar","defin","descript","equal","equals(x","exact","exactli","extensions.t","extensions.ts:2","extensions.ts:3","fals","file","function","ident","index","info","instanceof","interfac","match","method","name","need","null","number","object","object.equ","object.equals(x[p","object.sam","object.same(source[prop","objectconstructor","option","p","paramet","projects/svogv/src/lib/utils/object","prop","properti","prototyp","recurs","result","return","same","same(x","set","sourc","source.hasownproperty(prop","source[prop","strict","strictli","string","target","target[prop","target[prop].startswith(source[prop","test","true","type","typeof","undefin","us","valu","var","x","x.constructor","x.hasownproperty(p","x[p","y","y.constructor","y.hasownproperty(p","y[p"],"interfaces/TreeNodeBaseModel.html":["add","add(nod","base","boolean","children","class","defin","descript","export","file","hasdirectancestor","hasdirectancestor(nod","import","index","info","interfac","match","method","name","node","option","paramet","parent","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:10","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:11","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:12","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:7","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:8","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:9","properti","remov","remove(nod","result","return","sourc","treenodebasemodel","treenodeopt","treenodeoptions.model","type","void"],"miscellaneous/functions.html":["_window","acautoform","aceditor","actual","add","addit","address","against","anyway","appear","appli","assur","auto","automat","base","be","calendar","can't","casd","case","charact","code","column","compar","compare(withproperti","compare.decorator.t","compareinternalsetup","compareinternalsetup(target","compon","contain","control","creat","current","custom","datagrid","datatyp","date","decor","default","defin","depend","descript","dictionari","display","display(nam","display.decorator.t","displaygroup","displaygroup(nam","displaygroup.decorator.t","displaygroupinternalsetup","displaygroupinternalsetup(target","displayinternalsetup","displayinternalsetup(target","dynam","e","element'","email","email(msg","email.decorator.t","emailinternalsetup","emailinternalsetup(target","error","especi","express","fall","ffff","field","field'","fieldnam","fielsd","form","format","formatinternalsetup","formatinternalsetup(target","formatpip","formatpipe(pip","formatpipe.decorator.t","formatt","fullfil","function","further","gener","get","given","gray","grid","group","group'","handl","haserror('pattern","header","henc","hidden","hidden(hid","hidden.decorator.t","hiddeninternalsetup","hiddeninternalsetup(target","hide","html5","includ","index","infarstructur","input","intendet","intern","isbrowserplatform","it'","key","keynam","label","legend","len","length","loop","mail","mandatori","manual","match","max","maximum","maxlength","maxlength(len","maxlength.decorator.t","maxlengthinternalsetup","maxlengthinternalsetup(target","member","messag","min","minimum","minlength","minlength(len","minlength.decorator.t","minlengthinternalsetup","minlengthinternalsetup(target","miscellan","model","more","msg","name","need","number","numer","omit","on","option","order","out","p","param","paramet","pattern","pattern(pattern","pattern.decorator.t","patterninternalsetup","patterninternalsetup(target","pipe","pipeparam","placehold","placeholder(nam","placeholder.decorator.t","placeholderinternalsetup","placeholderinternalsetup(target","projects/svogv/src/lib/decorators/hint","projects/svogv/src/lib/decorators/v","projects/svogv/src/lib/services/dynamichtmlrenderer.service.t","projects/svogv/src/lib/services/validators/compare.validator.t","projects/svogv/src/lib/services/validators/range.validator.t","projects/svogv/src/lib/utils/windowref.t","properti","propertie'","provid","put","rang","range'","range(from","range.decorator.t","rangeinternalsetup","rangeinternalsetup(target","readonli","readonly(readonli","readonly.decorator.t","readonlyinternalsetup","readonlyinternalsetup(target","reason","receiv","refin","reg","regexp","regular","render","repres","requir","required(msg","required.decorator.t","requiredinternalsetup","requiredinternalsetup(target","result","same","see","show","shown","somewher","string","stringlength","stringlength(min","stringlength.decorator.t","stringlengthinternalsetup","stringlengthinternalsetup(target","support","t","tabl","tag","techniqu","templat","templatehint","templatehint(templ","templatehint.decorator.t","templatehintinternalsetup","templatehintinternalsetup(target","text","textarea","that'","through","tooltip","true","two","type","undefin","us","valdiat","valid","validatecompar","validatecompare(p","validaterang","validaterange(f","valu","veri","watermark","way","whole","withproperti","write"],"miscellaneous/variables.html":["index","match","miscellan","projects/svogv/src/lib/svogv.module.t","provid","result","svogv_compon","type","variabl"],"miscellaneous/typealiases.html":["activ","actual","alias","allow","appear","appli","array","autoamt","autoform","base","boolean","box","calendar","chang","compar","comparetyp","content","control","date","decor","default","describ","descript","displaygroup","displaygrouptyp","displaytyp","driven","due","each","editor","element","email","emailtyp","enum","error","exist","field","fieldset","format","formattyp","gener","give","goe","group","hidden","hiddentyp","hint","i18n","index","instruct","label","legend","length","list","liter","make","mandatori","match","maxim","maximum","maxlengthtyp","messag","minim","minimum","minlengthtyp","miscellan","modul","more","msg","name","number","omit","order","param","paramet","part","pattern","patterntyp","pipe","placeholdertyp","possibl","privat","projects/svogv/src/lib/services/formvalidator.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.t","properti","pure","rang","rangetyp","readonli","readonlytyp","regex","render","requiredtyp","result","return","same","see","separ","set","specif","string","stringlengthtyp","stylerul","such","templat","templatehinttyp","text","textarea","that'","tooltip","translat","true","type","typealias","typescript","ui","us","valid","validatortyp","valu","veri","watermark","work"],"miscellaneous/enumerations.html":["0","ascend","check","descend","direct","disabl","enumer","expand","index","match","miscellan","node","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.t","result","select","state","treenodest","undefin","valu"],"coverage.html":["0","0/2","0/3","0/5","0/9","1/1","1/11","1/3","1/4","1/7","10/11","10/27","100","11/11","13/25","14","15/22","2/6","22","25","3/10","3/8","30","33","36","37","52","6/27","68","7/19","9","90","array","autoformcompon","class","compon","componentwithselector","coverag","datagridcompon","datagridheadermodel","datagriditemmodel","datagridmodel","datagridpaginationcompon","datagridstyl","document","dynamichtmlopt","dynamichtmlref","dynamichtmlrendererservic","editorcompon","extensions.t","file","formatdatapip","formvalidatorfromjsonservic","formvalidatormodel","formvalidatorservic","fromjson.service.t","identifi","inject","interfac","match","new","objectconstructor","onmount","pipe","projects/svogv/src/lib/services/dynamichtmlrenderer.service.t","projects/svogv/src/lib/services/formvalid","projects/svogv/src/lib/services/formvalidator.model.t","projects/svogv/src/lib/services/formvalidator.service.t","projects/svogv/src/lib/utils/array","projects/svogv/src/lib/utils/object","projects/svogv/src/lib/utils/windowref.t","projects/svogv/src/lib/widgets/datagrid/datagrid.component.t","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.t","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.t","projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.t","projects/svogv/src/lib/widgets/editors/autoform.component.t","projects/svogv/src/lib/widgets/editors/editor.component.t","projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.t","projects/svogv/src/lib/widgets/treeview/models/treenode.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.t","projects/svogv/src/lib/widgets/treeview/treeview.component.t","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.t","result","statement","tabl","tablesort(document.getelementbyid('coverag","texttreenodemodel","treenodebasemodel","treenodecomponentmodel","treenodemodel","treenodeopt","treeviewcompon","treeviewnodecompon","type","windowref"]},"length":39},"tokenStore":{"root":{"0":{"0":{"0":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}},"docs":{}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.011695906432748537}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403}}},"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.011412268188302425},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0038022813688212928},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.059602649006622516}},".":{"0":{"docs":{},".":{"2":{"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"docs":{}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"docs":{}}},"2":{"docs":{},".":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"docs":{}}},"3":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},".":{"5":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"docs":{}}},"6":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"docs":{}}},"7":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"docs":{}}},"docs":{}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.026490066225165563}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.019867549668874173}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}}},"1":{"0":{"0":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"coverage.html":{"ref":"coverage.html","tf":0.019867549668874173}}},"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}},"p":{"docs":{},"x":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.01634877384196185}}}},"/":{"1":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"2":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"docs":{}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"/":{"1":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"docs":{}}},"3":{"docs":{},"/":{"2":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"docs":{}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403}},"/":{"2":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"docs":{}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.047619047619047616},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.012674271229404309},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"docs":{}},"e":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}},"p":{"docs":{},"x":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}},"/":{"1":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.019867549668874173}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}}},"2":{"0":{"1":{"6":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.011695906432748537}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"license.html":{"ref":"license.html","tf":0.013888888888888888}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"p":{"docs":{},"x":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"p":{"docs":{},"x":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408}}}}},"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},".":{"2":{"docs":{},".":{"0":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"docs":{}}},"docs":{}},"/":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}}},"3":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.026490066225165563}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}},"9":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}}},"4":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"p":{"docs":{},"x":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}},"5":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"6":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}},"/":{"2":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"docs":{}}},"7":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}},"/":{"1":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{}},"docs":{}}},"8":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}},"9":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513}}}}}}}},"o":{"docs":{},"v":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"license.html":{"ref":"license.html","tf":0.013888888888888888},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.021798365122615803},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.010512483574244415},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.022922636103151862},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.011412268188302425},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.02962962962962963},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.010025062656641603}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477}}}},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"license.html":{"ref":"license.html","tf":0.027777777777777776},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.010512483574244415}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0392156862745098}}}}}}},"v":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.011594202898550725},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.022900763358778626},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0076045627376425855}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"s":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}}}}}}},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.011594202898550725},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.015384615384615385}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},":":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.016548463356973995},"changelog.html":{"ref":"changelog.html","tf":0.02046783625730994},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}},"r":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"3":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}},"docs":{}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418}}}}},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"license.html":{"ref":"license.html","tf":0.013888888888888888},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.01576872536136662},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006172839506172839},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"l":{"docs":{},"i":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}},"c":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513}},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588}}}}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":5.010899182561308},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}}},"a":{"docs":{},"m":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.027777777777777776}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"v":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.02452316076294278},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.019971469329529243},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.010025062656641603},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.017743979721166033},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.02564102564102564},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0196078431372549},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":5.1},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"[":{"0":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}},"e":{"docs":{},"a":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}}}}}}},"b":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.030534351145038167}}}}}}}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362}}}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.010025062656641603},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006172839506172839}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.006195786864931847}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"s":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.013140604467805518},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.007518796992481203},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.029411764705882353},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.05322128851540616},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.04580152671755725},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.017391304347826087},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.03398058252427184},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.036036036036036036},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208}}}}}}}}}}}}}},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}}},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.014563106796116505}}}},"d":{"docs":{},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.04666666666666667}}},"d":{"docs":{},"c":{"docs":{},"r":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"modules.html":{"ref":"modules.html","tf":0.1},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564}}}}}},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.01486988847583643}}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00591016548463357},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"s":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"g":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.009913258983890954}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.01576872536136662},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"license.html":{"ref":"license.html","tf":0.013888888888888888}},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.008871989860583017}},"e":{"docs":{},"r":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"i":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"s":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.04666666666666667},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},"t":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}},"u":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.014619883040935672},"contributing.html":{"ref":"contributing.html","tf":0.03345724907063197},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.014326647564469915},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":3.333333333333333}}}}},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}}}}}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}}}}}}}}}}}}}}}},"c":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715}}}}}},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"i":{"docs":{},"n":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.015267175572519083},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.036585365853658534},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.011111111111111112},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.006265664160401002}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.022900763358778626}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.036036036036036036}}}}}}}}},"l":{"docs":{},"a":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.006195786864931847}},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.00591016548463357},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.011111111111111112},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.010025062656641603},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":5.007352941176471},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":5.02},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":5.007604562737643},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":5.0256410256410255},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":5.022988505747127},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":5.025316455696203},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":5.023809523809524},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":5.011204481792717},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":5.015267175572519},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018},"coverage.html":{"ref":"coverage.html","tf":0.059602649006622516}}}},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}},"c":{"docs":{},"k":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.008771929824561403},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}},"s":{"docs":{},"t":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"v":{"docs":{},"o":{"docs":{},"g":{"docs":{},"v":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.01858736059479554},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.00788436268068331},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.013140604467805518},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.020278833967046894},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655}}}}}}}}},"o":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}},"r":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.03816793893129771}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.022900763358778626}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.011111111111111112},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.006265664160401002}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0063371356147021544}}}}}},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"i":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.026022304832713755}}}},"u":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008641975308641974},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.014184397163120567},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":5.0190735694822886},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":5.009198423127464},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":5.034383954154728},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":5.007132667617689},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":5.018518518518518},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":5.011278195488722},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.038461538461538464},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.08333333333333333},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.036585365853658534},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"coverage.html":{"ref":"coverage.html","tf":0.039735099337748346}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.029556650246305417},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267}}},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.019704433497536946},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.034482758620689655},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.02564102564102564},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.022988505747126436},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.024390243902439025},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.024390243902439025}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":5.012195121951219},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}},"'":{"docs":{"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808}}}}}}}},"e":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"license.html":{"ref":"license.html","tf":0.013888888888888888},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588}}}}}},"s":{"docs":{},"t":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.013623978201634877},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.024630541871921183},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.05901639344262295},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.010139416983523447},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.03205128205128205},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.028735632183908046},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.03048780487804878},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.03048780487804878}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"o":{"docs":{},"r":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.011111111111111112},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.03},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294}}}}}},"e":{"docs":{},"l":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}},"s":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}}},"`":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":3.3382899628252787}},"o":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}}}}},"o":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.00788436268068331},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.008695652173913044},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.023076923076923078}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715}}}},"c":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.03398058252427184}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.028735632183908046},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.009198423127463863}},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}}},"d":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}},"r":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"license.html":{"ref":"license.html","tf":0.027777777777777776},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.027777777777777776}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"n":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.006622516556291}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"f":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00591016548463357},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.010899182561307902},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.01639344262295082},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008641975308641974}},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.013580246913580247}},"i":{"docs":{},"z":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588}}}}}}}},"s":{"docs":{},"s":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408}}}},"f":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267}},"r":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}},"o":{"docs":{},"r":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02}}}}}},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"s":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"license.html":{"ref":"license.html","tf":0.013888888888888888},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.018396846254927726},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.04}},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.006570302233902759},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":5.005256241787122},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":5.011461318051576},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":5.002534854245881},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":5.019607843137255},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":5.007352941176471},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":5.02},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.011594202898550725},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008641975308641974},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.027777777777777776}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.015366430260047281},"changelog.html":{"ref":"changelog.html","tf":0.011695906432748537},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.02102496714848883},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.01639344262295082},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.008871989860583017},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.017391304347826087},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.019753086419753086},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}}},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.017082785808147174},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.019971469329529243},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.006265664160401002},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.025735294117647058},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008641975308641974},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}}}}},"i":{"docs":{},"n":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.01907356948228883},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.03153745072273324},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.025787965616045846},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.029957203994293864},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.037037037037037035},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.03258145363408521},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.019704433497536946},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.03676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.05},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.032953105196451206},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.05042016806722689},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.07633587786259542},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0784313725490196},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.05405405405405406},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"e":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.010512483574244415},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0076045627376425855}},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0070921985815602835},"changelog.html":{"ref":"changelog.html","tf":0.011695906432748537}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"s":{"docs":{},"c":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.025735294117647058},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.018518518518518517},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.011278195488721804},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.03},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.011406844106463879},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.014005602240896359},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.015267175572519083},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.017391304347826087},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.036036036036036036},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.03209876543209877},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}},"b":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.02},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.036585365853658534}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704}},"(":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.010899182561307902}}}}},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}}}}}},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"r":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0038022813688212928}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"license.html":{"ref":"license.html","tf":0.013888888888888888},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.08333333333333333}},"l":{"docs":{},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.006195786864931847},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}}},"a":{"docs":{},"g":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.019704433497536946},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":5.019230769230769},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":5.0182926829268295},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":5.009852216748769},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218}},"(":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"s":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"c":{"docs":{},"h":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.013140604467805518},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0076045627376425855}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.02452316076294278},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.008559201141226819},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":5.005706134094151},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}},"[":{"docs":{},"`":{"docs":{},"_":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"y":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},"`":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}}}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}},"l":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.010899182561307902},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.019704433497536946},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.02564102564102564},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.04597701149425287},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.024390243902439025},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.024390243902439025},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.011594202898550725},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.026923076923076925}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.024630541871921183},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00591016548463357},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213}}}}},"i":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095}}}}}},"e":{"docs":{},"r":{"docs":{"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":6.708333333333333}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}},")":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}},"s":{"docs":{},")":{"docs":{},"[":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}},"s":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.02005730659025788},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.011278195488721804},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.04814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.02631578947368421},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.011406844106463879},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.014005602240896359}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}},"x":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}},"l":{"docs":{},"i":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}}}}}},"c":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.034482758620689655},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.024630541871921183},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.03205128205128205},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.028735632183908046},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.03048780487804878},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0196078431372549},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.03048780487804878},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.04927536231884058},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}},"s":{"docs":{},":":{"2":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}},"3":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}},"docs":{}}}}}}}}}}},"r":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}},"f":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}}}},"t":{"docs":{},"c":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.02912621359223301}},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}}}}}}}}}},"f":{"0":{"4":{"6":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}},"docs":{}},"9":{"6":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}},"docs":{}},"docs":{}},"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.012391573729863693}}}}}},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}},"d":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"w":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.008274231678486997},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.010899182561307902},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.04136947218259629},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.056666666666666664},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.020289855072463767},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.02962962962962963},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.023076923076923078}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213}}}},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}}}}}},")":{"docs":{},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"]":{"docs":{},"[":{"docs":{},"'":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}},"'":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715}}}},"s":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.011826544021024968},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0392156862745098}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}},"e":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.017543859649122806},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.01486988847583643}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.013630731102850062}}}}}},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.02127659574468085},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.013333333333333334},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.022950819672131147},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.018518518518518517}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667}}},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.008695652173913044},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}}},"t":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":5.027027027027027},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.01634877384196185},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.022950819672131147}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.02},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":5.005797101449275},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"overview.html":{"ref":"overview.html","tf":0.07142857142857142},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.05172413793103448},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.02},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":5.00983606557377},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07142857142857142},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.05172413793103448},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":5.006666666666667},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827}}}}}}}},")":{"docs":{},"[":{"docs":{},"'":{"docs":{},"_":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"_":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}},"e":{"docs":{},"]":{"docs":{},")":{"docs":{},"[":{"docs":{},"'":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.022950819672131147}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}},"k":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703}}}}}}},"c":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0392156862745098}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}},"n":{"docs":{},"t":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}},"a":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}},"e":{"docs":{},"'":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856}}}}}}}}},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"m":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"5":{"8":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}},"docs":{}},"6":{"2":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.04},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.03048780487804878},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.014563106796116505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.669135802469135}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"l":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}},"a":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.008771929824561403}},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"x":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"l":{"docs":{},"s":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.038834951456310676}}},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}},"f":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"f":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}},"f":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}}},"b":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.022950819672131147}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.3345153664302596},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"contributing.html":{"ref":"contributing.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"i":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}},"s":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02}},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0161090458488228}},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"contributing.html":{"ref":"contributing.html","tf":0.012391573729863693}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"v":{"docs":{},"e":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"g":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"e":{"docs":{},"'":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"u":{"docs":{},"p":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.04904632152588556},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0392156862745098},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.010899182561307902}},"e":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}},"docs":{}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926}}}}},"'":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}},"y":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.006195786864931847}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"l":{"docs":{},"p":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"s":{"docs":{},"h":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.006195786864931847},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.021546261089987327},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0392156862745098},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0392156862745098}}}}}}}}}}}}}}}},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.012391573729863693}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.03308823529411765},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"g":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"l":{"5":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.019704433497536946},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513}}}}},"u":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.022900763358778626}}}}},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}}}}}}}}}},"i":{"1":{"8":{"docs":{},"n":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}},"docs":{}},"docs":{},"'":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.006265664160401002},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.04580152671755725}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.022900763358778626}}}}}}},"'":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}}}}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.01680672268907563}},"e":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"n":{"docs":{},"t":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},"x":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}}}}}},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00591016548463357},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.06896551724137931},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.023333333333333334},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.013114754098360656},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.03571428571428571},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.008403361344537815},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0625},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}}}},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0076045627376425855},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.019417475728155338}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":5.04},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":5.0182926829268295},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":5.019607843137255},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":5.0182926829268295},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":5.005797101449275},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":5.009708737864078},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":5.018018018018018},"coverage.html":{"ref":"coverage.html","tf":0.046357615894039736}}}}},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704}}}},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":5.014778325123153},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":5.013333333333334},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":5.0131147540983605},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":5.076923076923077},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513},"coverage.html":{"ref":"coverage.html","tf":0.026490066225165563}},"o":{"docs":{},"r":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.034482758620689655},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.04054054054054054},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267}}}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477},"license.html":{"ref":"license.html","tf":0.013888888888888888},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704}}},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.013623978201634877},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.018396846254927726},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.024251069900142655},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.010025062656641603},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.011412268188302425}},"\"":{"docs":{},"]":{"docs":{},":":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}},"s":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"license.html":{"ref":"license.html","tf":0.013888888888888888}}},"s":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"contributing.html":{"ref":"contributing.html","tf":0.024783147459727387}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.010899182561307902}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}},"t":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.013002364066193853},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},"e":{"docs":{},"m":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.017743979721166033}},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0038022813688212928}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}}}}}}}}}},"r":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.011412268188302425}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}}}}},"o":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.013333333333333334},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362}},")":{"docs":{},"[":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"]":{"docs":{},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"]":{"docs":{},"[":{"docs":{},"'":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667}}}},"i":{"docs":{},"n":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667}}}},"s":{"docs":{},"g":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.02666666666666667}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"k":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418}}},"n":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0070921985815602835}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"r":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}},"y":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.018518518518518517}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.018544935805991442},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}},":":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.008559201141226819}}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}},"s":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0392156862745098}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"f":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408}}}},"t":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.008695652173913044},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}}}},"i":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.017543859649122806}},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"license.html":{"ref":"license.html","tf":3.347222222222222}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095}}}}}}}},"n":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.06538461538461539}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362}}},"p":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"a":{"docs":{},"d":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"g":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"v":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}},"t":{"docs":{},";":{"docs":{},"a":{"docs":{},"c":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.011594202898550725}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"overview.html":{"ref":"overview.html","tf":0.047619047619047616},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"license.html":{"ref":"license.html","tf":0.027777777777777776},"modules.html":{"ref":"modules.html","tf":0.2},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.05128205128205128},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.015267175572519083},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.04},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0196078431372549},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.125},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.08333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704}},"(":{"1":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}},"docs":{}},"docs":{}},"2":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"docs":{}},"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"u":{"docs":{},"m":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0038022813688212928}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.007434944237918215}}}}}},"y":{"docs":{},"b":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408}}}}}},"p":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.019704433497536946},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.02564102564102564},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.034482758620689655},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.024390243902439025},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.024390243902439025}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0161090458488228},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.014814814814814815},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}}}}},"a":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"r":{"docs":{},"g":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.04},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018}}}}},"a":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"m":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"u":{"docs":{},"m":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}},"u":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}},"s":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.3345679012345677},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.395833333333333},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.337179487179487},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":3.3749999999999996}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0392156862745098}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.011826544021024968},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208}}}}},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.047619047619047616},"modules.html":{"ref":"modules.html","tf":10.1},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":5.051724137931035},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0070921985815602835},"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949}}}},"o":{"docs":{},"v":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}},"s":{"docs":{},"g":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.027160493827160494},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}},"n":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.014326647564469915},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.017118402282453638},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.022222222222222223},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.02},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.01838235294117647},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.016476552598225603},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.025210084033613446},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.017391304347826087},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.02702702702702703},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.044444444444444446},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"i":{"docs":{},"v":{"docs":{"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.10256410256410256}}}}}}}}}}}},"n":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}}},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.008674101610904586},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.007518796992481203},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.013114754098360656},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0063371356147021544},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.008403361344537815},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}},"x":{"docs":{},"t":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}},"g":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.010899182561307902},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.02586206896551724}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.03333333333333333},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.015037593984962405},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.0759493670886076},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.07142857142857142},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.047619047619047616},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.022900763358778626},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.02702702702702703},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.011111111111111112},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.006265664160401002}}}}}}},"'":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.027777777777777776}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.011695906432748537}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0070921985815602835},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.04871060171919771},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.013333333333333334},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.024081115335868188},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.03188405797101449},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009876543209876543},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"[":{"docs":{},"`":{"docs":{},"_":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"docs":{},"`":{"docs":{},"_":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}}}}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}}}},"o":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.013333333333333334},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.043689320388349516}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}},"[":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{},"[":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":5.009708737864078},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013}}}}}},"c":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":5.011494252873563},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},")":{"docs":{},".":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477}},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00591016548463357},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.016290726817042606},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.019704433497536946},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.025735294117647058},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.010139416983523447},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.05063291139240506},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.047619047619047616},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.028011204481792718},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.022900763358778626},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.06306306306306306},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.03209876543209877}},".":{"docs":{},"v":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213}}}}}}}},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.013333333333333334},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.008695652173913044},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009876543209876543},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"license.html":{"ref":"license.html","tf":0.013888888888888888},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.025925925925925925},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.018796992481203006}}}}}},"r":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"overview.html":{"ref":"overview.html","tf":10.023809523809524},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}}}}},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.024271844660194174},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.014326647564469915}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949}}}}}}}}}}}}},"s":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.010139416983523447}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.017191977077363897}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.006570302233902759},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.03},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.008695652173913044},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.010025062656641603},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.01838235294117647},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.010139416983523447},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.02702702702702703},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022222222222222223},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008274231678486997},"changelog.html":{"ref":"changelog.html","tf":0.011695906432748537},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.036036036036036036}}}}},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"docs":{},"`":{"docs":{},"_":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.014005602240896359}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.008695652173913044},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007407407407407408},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"s":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}}},"d":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.01634877384196185}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"r":{"docs":{},"f":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.027777777777777776}}}}}}}},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":5.135135135135135},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.051470588235294115},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.04},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}}}}},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.04}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.009913258983890954}}}}},"u":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"e":{"docs":{},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}}},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}}},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403}}}}}},"f":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"v":{"docs":{},"o":{"docs":{},"g":{"docs":{},"v":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"s":{"docs":{},"v":{"docs":{},"o":{"docs":{},"g":{"docs":{},"v":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0625}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"coverage.html":{"ref":"coverage.html","tf":0.033112582781456956}},"s":{"docs":{},":":{"1":{"1":{"docs":{"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609}}},"5":{"docs":{"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}},"6":{"docs":{"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}},"docs":{}},"2":{"6":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365}}},"8":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473}}},"docs":{}},"3":{"8":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365}}},"docs":{}},"4":{"docs":{"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756}}},"5":{"docs":{"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756}}},"8":{"docs":{"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"4":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}},"docs":{}},"2":{"0":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}},"docs":{}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"7":{"3":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"1":{"3":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}},"docs":{}},"docs":{}},"2":{"2":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}},"8":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}},"docs":{}},"3":{"0":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}},"1":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}},"6":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}},"docs":{}},"4":{"8":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"9":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},"6":{"3":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},"docs":{}},"2":{"5":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"9":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},"3":{"3":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"7":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},"4":{"1":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"5":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},"5":{"0":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"4":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"9":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},"6":{"3":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"7":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},"7":{"1":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"5":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},"8":{"1":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"4":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"6":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}},"docs":{}},"9":{"2":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"6":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"4":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"1":{"0":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"2":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"9":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"docs":{}},"2":{"8":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"9":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"3":{"1":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"2":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"4":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"5":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"7":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"8":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"4":{"0":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"1":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"3":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"9":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"5":{"5":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"6":{"1":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"6":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"7":{"3":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"9":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"8":{"4":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"9":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"9":{"9":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"9":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}},"docs":{}},"2":{"4":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}},"6":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}},"8":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}},"docs":{}},"3":{"2":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}},"docs":{}},"4":{"5":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}},"docs":{}},"5":{"8":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}},"docs":{}},"6":{"6":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}},"docs":{}},"7":{"5":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"4":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176}}},"docs":{}},"2":{"2":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294}}},"7":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294}}},"docs":{}},"3":{"2":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294}}},"7":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294}}},"docs":{}},"4":{"2":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294}}},"docs":{}},"6":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294}}},"docs":{}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"6":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}}},"7":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}}},"9":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}}},"docs":{}},"2":{"1":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}}},"docs":{}},"6":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}}},"docs":{}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"4":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"6":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"1":{"9":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"2":{"7":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"3":{"9":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"5":{"0":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"8":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"6":{"2":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"docs":{}},"2":{"3":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"3":{"4":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"8":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"4":{"2":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"5":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"9":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"5":{"6":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"6":{"4":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"8":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"7":{"2":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"9":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"8":{"6":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"9":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"9":{"0":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"1":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"2":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"4":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"9":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}},"docs":{}},"docs":{}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745}}},"1":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745}}},"2":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745}}},"docs":{}},"5":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745}}},"6":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745}}},"7":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745}}},"8":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745}}},"9":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"4":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704}}},"5":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704}}},"6":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704}}},"7":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704}}},"8":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408}}},"docs":{}},"2":{"4":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704}}},"8":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704}}},"docs":{}},"3":{"2":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704}}},"6":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"3":{"6":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"4":{"0":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"4":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"8":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"5":{"4":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"6":{"5":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"7":{"1":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"8":{"3":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"docs":{}},"2":{"1":{"3":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"docs":{}},"3":{"5":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"4":{"3":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"4":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"5":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"5":{"1":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"6":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"6":{"1":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"6":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"7":{"1":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"3":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"4":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"5":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"6":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"7":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"8":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"8":{"0":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"2":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"8":{"docs":{"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"9":{"docs":{"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808}}},"docs":{}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"3":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"7":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"docs":{}},"2":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"6":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"docs":{}},"2":{"0":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"4":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"8":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"docs":{}},"3":{"2":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"4":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}},"docs":{}},"4":{"9":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"docs":{}},"6":{"1":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"5":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"9":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"docs":{}},"7":{"7":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"docs":{}},"8":{"7":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"docs":{}},"9":{"5":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"9":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"7":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}},"9":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}},"docs":{}},"2":{"1":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}},"3":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}},"5":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}},"7":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}},"9":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}},"docs":{}},"3":{"1":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}},"3":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.015267175572519083}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}}},"1":{"docs":{"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}}},"2":{"docs":{"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}}},"docs":{}},"7":{"docs":{"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}}},"8":{"docs":{"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}}},"9":{"docs":{"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.04},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.014563106796116505},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008641975308641974}}}}}},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009876543209876543}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.025735294117647058},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.05},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.010899182561307902},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.00788436268068331},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.05128205128205128},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.03},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0063371356147021544},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.015267175572519083},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0196078431372549},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"e":{"docs":{},"'":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}},"y":{"docs":{},"'":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}}}}}}}},"o":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"license.html":{"ref":"license.html","tf":0.027777777777777776},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.0603448275862069},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.01445466491458607},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0038022813688212928},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006172839506172839},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.1875}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.006195786864931847}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.016290726817042606},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.03940886699507389},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.019011406844106463},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.02564102564102564},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.022988505747126436},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.008403361344537815},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.024390243902439025},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.024390243902439025},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}}}}}}},"u":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703}}}}}}},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}},"e":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.017082785808147174},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.022556390977443608},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.01},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.04044117647058824},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.03},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.032953105196451206}}}}}},"l":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.013630731102850062}}}},"s":{"docs":{},"h":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.006195786864931847},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}},"f":{"docs":{},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.007434944237918215}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.011412268188302425},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008641975308641974},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"'":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"b":{"docs":{},"l":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008641975308641974},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.017543859649122806},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}},"v":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}},"a":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"o":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.04},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018}}}}},"o":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.04}}}},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02}}}}}}}}},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.011278195488721804},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"e":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006172839506172839}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.013630731102850062}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"overview.html":{"ref":"overview.html","tf":0.047619047619047616},"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"license.html":{"ref":"license.html","tf":0.041666666666666664},"modules.html":{"ref":"modules.html","tf":0.2},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.05128205128205128},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.015267175572519083},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.04},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0196078431372549},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.125},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.08333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.013245033112582781}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.023809523809523808},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}}}}}},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}},"e":{"docs":{},"x":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"p":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"docs":{},"`":{"docs":{},"_":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"e":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.007434944237918215}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.017191977077363897},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.009985734664764621},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.019704433497536946},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.07692307692307693},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.02},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.022813688212927757},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.022988505747126436},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0392156862745098},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.04},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.06796116504854369},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.02702702702702703},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}},"i":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827}}}}}}}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0038022813688212928}}},"o":{"docs":{},"t":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}},"l":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.006195786864931847},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}}},"m":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.024271844660194174},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"(":{"docs":{},"x":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}}}}},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"f":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.010512483574244415},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0076045627376425855},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.03816793893129771},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}},"o":{"docs":{},"r":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.021798365122615803},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.010512483574244415},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.022922636103151862},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.011412268188302425},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.02962962962962963},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.010025062656641603},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.036585365853658534},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267}}}},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.011111111111111112},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.006265664160401002}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.022900763358778626}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667}}}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00591016548463357},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.008595988538681949}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}}}},"m":{"docs":{},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"n":{"docs":{},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}},"h":{"docs":{},"a":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"license.html":{"ref":"license.html","tf":0.013888888888888888},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.01576872536136662},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.003942181340341655}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.006570302233902759}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.006570302233902759}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.007434944237918215}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}}},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}}},"z":{"docs":{},"e":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}}}}},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418}}},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0063371356147021544}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0038022813688212928}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.00980392156862745},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.024271844660194174},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.02912621359223301}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.05555555555555555}}}}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"license.html":{"ref":"license.html","tf":0.013888888888888888}}}},"f":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}},"n":{"docs":{},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.336879432624113},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"contributing.html":{"ref":"contributing.html","tf":3.3345724907063192},"license.html":{"ref":"license.html","tf":3.333333333333333},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0038022813688212928}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013}}}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.008771929824561403},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}},"c":{"docs":{},"k":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"e":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0070921985815602835},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.013140604467805518},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.015691868758915834},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.011278195488721804},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.024630541871921183},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.02666666666666667},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.07352941176470588},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.03},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.017743979721166033},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.028735632183908046},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.0759493670886076},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.008403361344537815},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.0916030534351145},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.03048780487804878},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.0196078431372549},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.043478260869565216},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006172839506172839},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.015384615384615385}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.014563106796116505}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362}}}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}},"r":{"docs":{},"u":{"docs":{},"l":{"docs":{"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.24509803921568626},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.014619883040935672},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0070921985815602835},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"modules.html":{"ref":"modules.html","tf":0.1},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.004956629491945477}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.011152416356877323}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}}}}},"i":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}},"r":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"v":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"modules.html":{"ref":"modules.html","tf":0.1}},"o":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}}},"o":{"docs":{},"g":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.008274231678486997},"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"contributing.html":{"ref":"contributing.html","tf":0.011152416356877323},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827}},"'":{"docs":{},";":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.14285714285714285},"modules.html":{"ref":"modules.html","tf":0.1},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":5.077586206896552},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}},"e":{"docs":{},"[":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}},"'":{"docs":{},"]":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.02586206896551724},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.1875}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"+":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.006195786864931847}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}},"t":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.013114754098360656},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.029150823827629912},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"a":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.014563106796116505}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.022950819672131147}},"e":{"docs":{},"[":{"docs":{},"`":{"docs":{},"_":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493}}}}},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.01639344262295082}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.01576872536136662},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0049382716049382715},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.04730617608409987}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.00788436268068331},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.04044117647058824},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.11392405063291139},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.006570302233902759}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.006570302233902759}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.006570302233902759}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.006570302233902759}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":5.025316455696203},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}},"'":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"n":{"docs":{},"s":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}},"s":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.01486988847583643},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.014563106796116505}}}},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}},"â€™":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}},"n":{"docs":{},"k":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"v":{"docs":{},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},")":{"docs":{},"[":{"docs":{},"'":{"docs":{},"_":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"_":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.01634877384196185}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.011278195488721804}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}},"b":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},")":{"docs":{},"[":{"docs":{},"'":{"docs":{},"_":{"docs":{},"_":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"_":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"g":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.008403361344537815}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}},"p":{"docs":{},"f":{"docs":{},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.014326647564469915}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}},"r":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}},"docs":{}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0038022813688212928}}}}}}},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.014005602240896359}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266}}}},"o":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.015037593984962405}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.012531328320802004}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}},"o":{"docs":{},"r":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.012531328320802004}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"f":{"docs":{},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.013784461152882205}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.009852216748768473},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.01282051282051282},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.011494252873563218},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.012195121951219513},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}},"y":{"docs":{},"p":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.011412268188302425}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.011278195488721804}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"a":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294}}}}}}},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"h":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}}}}}}},"[":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"i":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"}":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}},"w":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}},"n":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"'":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}},"t":{"docs":{},"l":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"o":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006172839506172839},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}}},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}}},"p":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.011111111111111112},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":5.014814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":5.005012531328321},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.003703703703703704},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.06296296296296296},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.021303258145363407},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.08860759493670886},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.08333333333333333},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":5.056022408963585},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}},"s":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.08333333333333333}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0037593984962406013}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.05063291139240506},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.047619047619047616},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":5.022900763358779},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.036036036036036036},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.012658227848101266},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.011904761904761904},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.009009009009009009}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":5.023809523809524},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.01680672268907563},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":5.162162162162162},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.008403361344537815}}}}},"s":{"docs":{},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.008403361344537815}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"a":{"docs":{},"g":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.008695652173913044},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}}}}}}},"u":{"docs":{},"e":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.009198423127463863},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.008559201141226819},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.011029411764705883},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.008403361344537815},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.019417475728155338},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}}}},"s":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.006557377049180328}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.008274231678486997},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.026281208935611037},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.025787965616045846},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.03566333808844508},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.03333333333333333},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.023809523809523808},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.019704433497536946},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.02},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.02564102564102564},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.03676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.04},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.045627376425855515},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.017241379310344827},"classes/TextTreeNodeModel.html":{"ref":"classes/TextTreeNodeModel.html","tf":0.02531645569620253},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.13095238095238096},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.04201680672268908},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.07633587786259542},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.036585365853658534},"interfaces/DatagridStyles.html":{"ref":"interfaces/DatagridStyles.html","tf":0.08823529411764706},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.024390243902439025},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.06666666666666667},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.05405405405405406},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.020987654320987655},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.125},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08846153846153847},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}},"=":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"\"":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}}}}}}}}}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},"\"":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.02},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.014563106796116505}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"`":{"docs":{},"_":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}}}},"p":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0025348542458808617}}}}}},"'":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"w":{"docs":{},"o":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}},"b":{"docs":{},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"u":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.002506265664160401},"classes/TreeNodeComponentModel.html":{"ref":"classes/TreeNodeComponentModel.html","tf":0.023809523809523808},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208}}}}}}},"m":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"n":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}},"l":{"docs":{},"i":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}},"a":{"docs":{},"y":{"docs":{"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.008403361344537815},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.019417475728155338},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.11234567901234568},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}}}}}}},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.008174386920980926}}}}}}}}}}}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.015366430260047281},"changelog.html":{"ref":"changelog.html","tf":0.014619883040935672},"contributing.html":{"ref":"contributing.html","tf":0.011152416356877323},"license.html":{"ref":"license.html","tf":0.041666666666666664},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.00788436268068331},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.014705882352941176},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.01},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.020289855072463767},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.018518518518518517},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403}}}}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0057306590257879654},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0063371356147021544}},"\\":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"]":{"docs":{},"[":{"docs":{},"'":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"'":{"docs":{},"]":{"docs":{},"[":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}},"\\":{"docs":{},"'":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\\":{"docs":{},"'":{"docs":{},"]":{"docs":{},"[":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0014265335235378032}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}},",":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.011695906432748537},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.029508196721311476},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.008695652173913044},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009876543209876543},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}},"docs":{}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.02608695652173913},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.011538461538461539}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.0033333333333333335},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}}}}}}}}},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.009198423127463863},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.0028653295128939827},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.03851640513552068},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.007518796992481203},"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.013513513513513514},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.003676470588235294},"classes/DataGridItemModel.html":{"ref":"classes/DataGridItemModel.html","tf":0.06},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717},"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.04},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.011594202898550725},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.008641975308641974},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.015384615384615385},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.041666666666666664}},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"interfaces/Array.html":{"ref":"interfaces/Array.html","tf":0.06}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}},")":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.009836065573770493}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}}}}}},"r":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.010899182561307902},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.005706134094151213},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.005012531328320802},"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.0048543689320388345}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.729166666666666}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.008274231678486997},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008771929824561403},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104}}},"e":{"docs":{},"w":{"docs":{"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004},"classes/DataGridHeaderModel.html":{"ref":"classes/DataGridHeaderModel.html","tf":0.007352941176470588},"classes/TreeNodeOptions.html":{"ref":"classes/TreeNodeOptions.html","tf":0.007633587786259542}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0035460992907801418},"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951},"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.01639344262295082},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.0012674271229404308}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.010512483574244415}},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}}},"d":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.001314060446780552}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"components/DataGridPaginationComponent.html":{"ref":"components/DataGridPaginationComponent.html","tf":0.011461318051575931},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0042796005706134095},"components/TreeViewComponent.html":{"ref":"components/TreeViewComponent.html","tf":0.014814814814814815},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.018796992481203006},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.014778325123152709},"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.008871989860583017},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.019230769230769232},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.022988505747126436},"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0056022408963585435},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.018292682926829267},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.018292682926829267},"interfaces/TreeNodeBaseModel.html":{"ref":"interfaces/TreeNodeBaseModel.html","tf":0.018018018018018018}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.007132667617689016},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.002898550724637681},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.0038461538461538464}}}}}}}}},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0024783147459727386}}}},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.002628120893561104},"injectables/FormValidatorFromJsonService.html":{"ref":"injectables/FormValidatorFromJsonService.html","tf":0.006666666666666667},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.027777777777777776}}}}}}}},"l":{"docs":{},"k":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.0028011204481792717}}}}},"e":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269}}}}}}},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}},"'":{"docs":{},"l":{"docs":{},"l":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/DataGridComponent.html":{"ref":"components/DataGridComponent.html","tf":0.005256241787122208}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"a":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"e":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.013888888888888888}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008274231678486997},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343},"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414},"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}},"t":{"docs":{},"h":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.005449591280653951}},":":{"1":{"5":{"docs":{},"p":{"docs":{},"x":{"docs":{"components/EditorComponent.html":{"ref":"components/EditorComponent.html","tf":0.0028530670470756064}}}}},"docs":{}},"docs":{}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.05128205128205128},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"injectables/DynamicHtmlRendererService.html":{"ref":"injectables/DynamicHtmlRendererService.html","tf":0.0049261083743842365},"classes/DynamicHTMLOptions.html":{"ref":"classes/DynamicHTMLOptions.html","tf":0.00641025641025641},"classes/OnMount.html":{"ref":"classes/OnMount.html","tf":0.005747126436781609},"interfaces/ComponentWithSelector.html":{"ref":"interfaces/ComponentWithSelector.html","tf":0.006097560975609756},"interfaces/DynamicHTMLRef.html":{"ref":"interfaces/DynamicHTMLRef.html","tf":0.006097560975609756}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":5.051282051282051},"coverage.html":{"ref":"coverage.html","tf":0.006622516556291391}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693},"license.html":{"ref":"license.html","tf":0.013888888888888888},"components/TreeViewNodeComponent.html":{"ref":"components/TreeViewNodeComponent.html","tf":0.0012531328320802004}}}}},"i":{"docs":{},"n":{"docs":{"pipes/FormatDataPipe.html":{"ref":"pipes/FormatDataPipe.html","tf":0.02702702702702703}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0024691358024691358}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.004728132387706856},"changelog.html":{"ref":"changelog.html","tf":0.005847953216374269},"contributing.html":{"ref":"contributing.html","tf":0.0037174721189591076},"interfaces/FormValidatorModel.html":{"ref":"interfaces/FormValidatorModel.html","tf":0.005797101449275362},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.007692307692307693}}},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"changelog.html":{"ref":"changelog.html","tf":0.0029239766081871343}}}},"d":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0012345679012345679}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}},"a":{"docs":{},"p":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"k":{"docs":{},"r":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}}}}}}}}}}}}}}},"d":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.05825242718446602}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002364066193853428}},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}}},"o":{"docs":{},"u":{"docs":{},"'":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"contributing.html":{"ref":"contributing.html","tf":0.0012391573729863693}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.001182033096926714}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.047619047619047616},"modules/SvogvModule.html":{"ref":"modules/SvogvModule.html","tf":0.017241379310344827}}}}}},"_":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AutoFormComponent.html":{"ref":"components/AutoFormComponent.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FormValidatorService.html":{"ref":"injectables/FormValidatorService.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/WindowRef.html":{"ref":"injectables/WindowRef.html","tf":0.05128205128205128},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003703703703703704}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/DataGridModel.html":{"ref":"classes/DataGridModel.html","tf":0.005069708491761723}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"classes/TreeNodeModel.html":{"ref":"classes/TreeNodeModel.html","tf":0.011204481792717087}}}}}}}},"x":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.043689320388349516}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"p":{"docs":{"interfaces/ObjectConstructor.html":{"ref":"interfaces/ObjectConstructor.html","tf":0.009708737864077669}}}}}},"length":4522},"corpusTokens":["0","0.0.23","0.0.8","0.2.1","0.2.3","0.3","0.3.5","0.6","0.6.0","0.7","0.7.0","0/2","0/3","0/5","0/9","000","01","09","1","1.0","1/1","1/11","1/3","1/4","1/7","10","10/11","10/27","100","10px","11","11/11","13/25","14","15","15/22","1em","1px","2","2.2.0","2/6","20","2016","2017","2018","20px","22","25","25px","3","3/10","3/8","30","300","33","36","37","39","4","4px","5","52","6","6/27","68","7","7/19","8","9","90","__displayorder__${controlnam","__groupdesc__${controlnam","__groupname__${controlnam","__grouporder__${controlnam","__hascompareproperty__${propnam","__hasmaxlength__${propnam","__hasminlength__${propnam","__haspattern__${propnam","__hasrangefrom__${propnam","__hasrangeto__${propnam","__isgrouped__${controlnam","__isrequired__${propnam","_header","_item","_state","_window","a[colnam","a[sortcolumn","abov","absolut","abstract","ac","acautoform","accept","access","accord","accordingli","aceditor","actexttreenod","action","actioncel","activ","actreenodeopt","actual","actual_compon","ad","add","add(nod","addcolumn","addcolumn(colnam","addit","addition","address","adher","admit","advanc","affect","again","against","agreement","ahead","alias","align:middl","allow","alpha","alreadi","altern","alway","analogclock","ancient","and/or","angular","angular/common","angular/cor","angular/core/src/render3/st","angular/form","angular/rout","angularj","annot","anot","anoth","answer","anyth","anyway","api","app","appear","appli","applic","appreci","approach","appropri","archiv","area","aris","around","array","array.prototype.foreach.call(el","array.prototype.foreach.call(el.attribut","array.prototype.remov","array[0","ascend","assum","assur","attach","attr","attr.valu","attribut","attrsmap","attrsmap.set(attr.nam","author","auto","autoamt","autoform","autoform&gt","autoform'},{'nam","autoform.component.html","autoformcompon","automat","avail","awar","awesom","b","b[colnam","b[sortcolumn","backcolor","backend","base","basic","be","becom","befor","begin","behavior","believ","below","berlin","best","better","between","big","bind","bit","block","bodi","bool","boolean","booleanfallback","bootstrap","border","both","box","branch","breadcrumb","break","bring","broccoli","brows","browser","bug","build","build(json","build(target","bundl","busi","button","c","cal","calcul","calend","calendar","call","caller","can't","capac","capit","care","casd","case","cast","catch","caus","certain","cf","cfr","chain","chanc","chang","change.currentvalu","changelog","changes['maxpageindex","char","charact","chat","check","checkabl","checkbox","checkchang","checkout","children","chore","ci","cla","clarifi","class","cli","click","client","clone","close","closest","clsicon","cluster_svogvmodul","cluster_svogvmodule_provid","cmpref","cmpref.inst","cmpref.instance.dynamiconmount","code","codepen","col","col.hidden","collaps","collapsechang","collapseclass","collect","colnam","colon","color","column","columnstyl","combin","come","command","commerci","commit","commonmodul","commun","compar","compare(withproperti","compare.decorator.t","compareinternalsetup","compareinternalsetup(target","comparetyp","compet","complement","complet","complex","compon","component'","component_templ","componentfactori","componentfactoryresolv","componentref","componentrefs.foreach(ref","componentrefs.push(cmpref","componentwithselector","concept","conduct","configur","connect","consequenti","consid","consist","console.error('invalid","console.log('extern","console.log('intern","console.log(`getactivetempl","console.log(valueorpred","const","construct","constructor","constructor(compon","constructor(el","constructor(fb","constructor(formvalidatorservic","constructor(item","constructor(opt","constructor(priv","constructor(publ","constructor(text","contact","contain","content","contentchild","contentchild('boolean","contentchild('d","contentchild('enum","contentchild('numb","contentchild('str","continu","contract","contrast","contribut","contributor","control","controlnam","convent","convert","coordin","copi","copyright","core","corpor","correct","cost","count","cours","coverag","craft","crap","creat","createheadersfortyp","createheadersfortype(typ","css","ctor","ctrl","current","currentpageindex","currentpagenumb","currentrowend","currentrowstart","cursor","custom","customiz","d","daili","damag","dashboard","data","dataannot","datagrid","datagrid'},{'nam","datagrid.component.html","datagrid.component.scss","datagridcompon","datagridheader.model","datagridheadermodel","datagridheadermodel(propnam","datagriditem.model","datagriditemmodel","datagridmodel","datagridmodel.ondelet","datagridmodel.onedit","datagridpagination.component.html","datagridpagination.component.scss","datagridpaginationcompon","datagridstyl","datatyp","date","date.parse(f.tostr","date.parse(t.tostr","datefallback","datepick","day","dealt","debug","decid","declar","decor","dedic","deepli","default","defin","definit","delet","deleteitem","deleteitem(item","deliv","demo","depend","desc","descend","describ","descript","descrption","design","destroy","detail","determin","develop","diagnos","dialog","dictionari","differ","dir","direct","direction.ascend","directli","disabl","disclaim","discuss","display","display('","display('phon","display('us","display(nam","display.decorator.t","display:inlin","displaygroup","displaygroup(nam","displaygroup.decorator.t","displaygroupinternalsetup","displaygroupinternalsetup(target","displaygrouptyp","displayinternalsetup","displayinternalsetup(target","displayord","displaytyp","distribut","doc","document","dom","domain","don't","dot","drag","driven","drop","dropdown","dropmenu","due","duplic","durand","dynam","dynamichtmlopt","dynamichtmlref","dynamichtmlrendererservic","dynamiconmount","dynamiconmount(attr","e","e.g","e.key","each","earli","easi","easier","ecosystem","edg","edit","edititem","edititem(item","editor","editor'},{'nam","editor.component.html","editorcompon","editormodel","editormodel[`__displaydesc__${this.nam","editormodel[`__displayname__${this.nam","editormodel[`__hasrangefrom__${this.nam","editormodel[`__hasrangeto__${this.nam","editormodel[`__hastemplatehint__${this.nam","editormodel[`__haswatermark__${this.nam","editormodel[`__ishidden__${this.nam","editormodel[`__isreadonly__${this.nam","editormodel[`__templatehint__${this.name}`]).tolowercas","editormodel[`__templatehintparams__${this.nam","editormodel[`__watermark__${this.nam","editormodel[this.nam","editusercompon","effort","el","el.hasattribut","el.innerhtml","el.removeattribute('ng","element","element'","element).queryselectorall(selector","elementari","elementref","elementref.nativeel","elementref.nativeelement.innerhtml","email","email(msg","email.decorator.t","emailinternalsetup","emailinternalsetup(target","emailtyp","emit","empti","end","enhanc","ensur","enterpris","enum","enumer","enumfallback","enumvalu","environ","equal","equals(x","errgroup","errgroup)[propnam","errmsg","errmsgs)['compar","errmsgs)['maxlength","errmsgs)['minlength","errmsgs)['pattern","errmsgs)['rang","errmsgs)['requir","error","es","especi","etc","even","event","event.preventdefault","event.stoppropag","eventemitt","evolv","ex","exact","exactli","exampl","exclud","execut","exist","existinggroup","existinggroup.editors.push","existinggrouparray","existinggrouparray.length","expand","expect","experi","experiment","explain","explan","explicitli","export","express","expressionchangedafterithasbeencheckedexcept","extend","extens","extensions.t","extensions.ts:2","extensions.ts:3","extern","f","f046","f096","fa","fall","fallback","fals","famili","far","fax","fb","feat","featur","fee","feedback","feel","few","ff","fff","ffff","field","field'","field)[type]['hidden","field)[type]['ord","field)[type]['readonli","fieldnam","fields.foreach(field","fieldset","fieldtocompar","fieldtyp","fielsd","file","filter","final","find","fire","first","first(array","fit","fix","flavor","focu","folder","follow","font","fontawesom","fontawesome'","footer","forc","forecolor","fork","form","form'","form)['__editormodel__","form.controls[propnam","form.controls[propname])['messag","format","format(datepip","formatdata","formatdatapip","formatinternalsetup","formatinternalsetup(target","formatpip","formatpipe(pip","formatpipe.decorator.t","formatt","formattyp","formbuild","formcontrol","formgroup","formsmodul","formvalidator.model","formvalidator.servic","formvalidatorfromjsonservic","formvalidatormodel","formvalidatorservic","forroot","forward","found","framework","free","fromjson.servic","fromjson.service.t","fromjson.service.ts:58","fromjson.service.ts:62","fromvalu","front","frontend","fruststrat","fucntion","full","fullfil","fulli","function","function(valueorpred","further","fv","g.name","gener","germani","get","getactivetempl","getactivetemplate(uihint","getformat","getformatted(pipearg","getitemsort","getitemsorted(sortcolumn","getparam","getparams(key","git","github","gitter","give","given","global","go","goe","good","googl","google'","grant","gray","grid","group","group'","group.nam","groupdesc","groupexist","groupnam","groupname)[0","groupord","grow","guid","guidelin","gulp","gulp/rollup","gut","h.hidden","h.prop","hand","handi","handl","handlecheckchang","handleclick","handleclick($ev","handlecollaps","handlepreselect","handlepreselection(st","handleselect","handleselection($ev","hard","haschildren","hascompar","hasdecor","hasdirectancestor","hasdirectancestor(nod","haserror('pattern","hash","hasmaxlength","hasminlength","hasn't","haspattern","hasrangefrom","hasrangeto","header","header.issort","header.pip","header.pipeparam","header.templatehint","header.templatehintparam","header.text","headersnotvis","headersortbutton","heavili","height","held","help","helper","henc","here","herebi","hidden","hidden(hid","hidden.decorator.t","hiddeninternalsetup","hiddeninternalsetup(target","hiddentyp","hide","highlight","hint","histori","host","href","html","html5","hud","human","hyperlink","i'm","i18n","icon","icon'","iconclass","iconcolor","id","idea","ident","identifi","idx","ignor","immedi","imper","implement","impli","import","improv","inaugur","includ","inclus","increas","increaseelementdepthcount","independ","index","indirect","individu","infarstructur","info","infobox","inform","infrastructur","inject","inject(formbuild","injector","inlin","input","input[type=\"checkbox","input[type=\"checkbox\"]:check","inspir","instal","instanc","instanceof","instead","instruct","intendet","intent","intention","interfac","intern","introduct","invis","isbrowserplatform","isc","isexpand","ishidden","isingroup","isrequir","issort","issu","it'","item","itemsfilt","itemsoncurrentpag","iter","java","javascript","joerg","jqueri","jsbin","json","json)[field][type]['descript","json)[field][type]['fieldtocompar","json)[field][type]['from","json)[field][type]['hidden","json)[field][type]['max","json)[field][type]['min","json)[field][type]['msg","json)[field][type]['nam","json)[field][type]['ord","json)[field][type]['pattern","json)[field][type]['pipenam","json)[field][type]['pipeparam","json)[field][type]['readonli","json)[field][type]['to","jump","kb","keep","key","keynam","kind","knockout","know","known","kraus","label","label'","label:befor","labeldivid","last","later","latest","lead","learnt","left","legend","len","length","less","let'","letter","level","liabl","lib","librari","licens","limit","line","line:forin","list","listvalu","liter","live","load","loader","loadericon","local","log","longer","look","loop","loss","lot","love","lt;ac","lt;input","lt;select&gt","lt;textarea&gt","made","mail","main","mainli","major","make","manag","mandatori","mani","manual","map","margin","master","match","matter","matur","max","maxim","maximum","maxlength","maxlength(100","maxlength(20","maxlength(len","maxlength.decorator.t","maxlengthinternalsetup","maxlengthinternalsetup(target","maxlengthtyp","maxpageindex","mayb","mean","member","menu","merchant","merg","messag","meta","metadata","method","middl","min","mind","minifi","minim","minimum","minlength","minlength(len","minlength.decorator.t","minlengthinternalsetup","minlengthinternalsetup(target","minlengthtyp","minu","miscellan","miss","mistak","mode","model","modelpip","models/datagrid.model","models/datagridstyle.model","modifi","modul","modulewithprovid","more","mostli","motiv","mouseev","mouseov","move","msg","multi","n","n.key","n.parent","name","namespac","nan","nativ","nativewindow","natur","navig","necessari","need","neglig","net","new","newlin","next","ng","ngfor","ngmodul","ngonchang","ngonchanges(chang","ngoninit","nice","nit","node","node'","node.text","node_modul","nodeclick","non","none","note","noth","notic","now","npm","null","num","number","number(editormodel[`__hasrangefrom__${this.nam","number(editormodel[`__hasrangeto__${this.nam","number(target.prototype[`__hasrangefrom__${propnam","number(target.prototype[`__hasrangeto__${propnam","numer","nummberfallback","o","object","object.equ","object.equals(x[p","object.keys(json","object.keys(json[field","object.sam","object.same(source[prop","object.same(this.searchvalu","objectconstructor","omit","on","onc","onchang","oncheckchang","oncheckchanged(nod","oncollapsechang","oncollapsechanged(nod","ondelet","onedit","oninit","onmount","onmount).dynamiconmount(attrsmap","onnodeclick","onnodeclick(nod","onselectedchang","onselectedchanged(nod","onvaluechang","onvaluechanged(data","open","open/clos","oper","opnicon","option","option.v","order","otherwis","our","out","outcom","outlin","output","over","overrid","overview","overwritten","p","p.push(n","p.push(thi","packag","package.json","pad","page","pageend","pageendnumb","pagenumb","pagenumberchang","pages","pagestartnumb","pagin","pagination'},{'nam","param","paramet","parent","parseint(target.prototype[`__hasmaxlength__${propnam","parseint(target.prototype[`__hasminlength__${propnam","part","particular","pass","password","patch","path","pattern","pattern(pattern","pattern.decorator.t","patterninternalsetup","patterninternalsetup(target","patterntyp","pendant","peopl","perf","perfect","perform","perhap","permiss","pfxicon","phone","phonenumb","piec","pipe","pipe.transform(this.valu","pipe.transform(valu","pipearg","pipenam","pipeparam","pipetoken","pipetransform","place","placehold","placeholder(nam","placeholder.decorator.t","placeholderinternalsetup","placeholderinternalsetup(target","placeholdertyp","plan","plane","pleas","plu","plunker","plunkr","point","pointer","possibl","pr","pre","precis","predic","prefix","preselectst","present","pretti","prevent","previou","primari","print","privat","pro","problem","procedur","process","product","profession","profit","project","projects/svogv/src/lib/decorators/hint","projects/svogv/src/lib/decorators/v","projects/svogv/src/lib/services/dynamichtmlrenderer.service.t","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:11","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:15","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:16","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:26","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:28","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:38","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:4","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:5","projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:8","projects/svogv/src/lib/services/formvalid","projects/svogv/src/lib/services/formvalidator.model.t","projects/svogv/src/lib/services/formvalidator.model.ts:173","projects/svogv/src/lib/services/formvalidator.service.t","projects/svogv/src/lib/services/formvalidator.service.ts:14","projects/svogv/src/lib/services/formvalidator.service.ts:20","projects/svogv/src/lib/services/validators/compare.validator.t","projects/svogv/src/lib/services/validators/range.validator.t","projects/svogv/src/lib/svogv.module.t","projects/svogv/src/lib/utils/array","projects/svogv/src/lib/utils/object","projects/svogv/src/lib/utils/windowref.t","projects/svogv/src/lib/utils/windowref.ts:10","projects/svogv/src/lib/widgets/datagrid/datagrid.component.t","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:104","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:110","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:112","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:119","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:28","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:29","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:31","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:32","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:34","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:35","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:37","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:38","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:40","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:41","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:43","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:49","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:55","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:61","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:66","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:73","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:79","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:84","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:89","projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:99","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:104","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:106","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:119","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:127","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:139","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:150","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:158","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:162","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:23","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:34","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:38","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:42","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:45","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:49","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:56","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:64","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:68","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:72","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:79","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:86","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:89","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:90","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:91","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:92","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:94","projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:99","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:14","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:22","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:27","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:32","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:37","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:42","projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:6","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:16","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:17","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:19","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:21","projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:6","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.t","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:10","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:11","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:12","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:5","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:6","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:7","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:8","projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:9","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.t","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:19","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:24","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:26","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:28","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:32","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:45","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:58","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:66","projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:75","projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.t","projects/svogv/src/lib/widgets/editors/autoform.component.t","projects/svogv/src/lib/widgets/editors/autoform.component.ts:113","projects/svogv/src/lib/widgets/editors/autoform.component.ts:22","projects/svogv/src/lib/widgets/editors/autoform.component.ts:28","projects/svogv/src/lib/widgets/editors/autoform.component.ts:30","projects/svogv/src/lib/widgets/editors/autoform.component.ts:31","projects/svogv/src/lib/widgets/editors/autoform.component.ts:36","projects/svogv/src/lib/widgets/editors/autoform.component.ts:48","projects/svogv/src/lib/widgets/editors/editor.component.t","projects/svogv/src/lib/widgets/editors/editor.component.ts:109","projects/svogv/src/lib/widgets/editors/editor.component.ts:163","projects/svogv/src/lib/widgets/editors/editor.component.ts:25","projects/svogv/src/lib/widgets/editors/editor.component.ts:29","projects/svogv/src/lib/widgets/editors/editor.component.ts:33","projects/svogv/src/lib/widgets/editors/editor.component.ts:37","projects/svogv/src/lib/widgets/editors/editor.component.ts:41","projects/svogv/src/lib/widgets/editors/editor.component.ts:45","projects/svogv/src/lib/widgets/editors/editor.component.ts:50","projects/svogv/src/lib/widgets/editors/editor.component.ts:54","projects/svogv/src/lib/widgets/editors/editor.component.ts:59","projects/svogv/src/lib/widgets/editors/editor.component.ts:63","projects/svogv/src/lib/widgets/editors/editor.component.ts:67","projects/svogv/src/lib/widgets/editors/editor.component.ts:71","projects/svogv/src/lib/widgets/editors/editor.component.ts:75","projects/svogv/src/lib/widgets/editors/editor.component.ts:81","projects/svogv/src/lib/widgets/editors/editor.component.ts:84","projects/svogv/src/lib/widgets/editors/editor.component.ts:86","projects/svogv/src/lib/widgets/editors/editor.component.ts:92","projects/svogv/src/lib/widgets/editors/editor.component.ts:96","projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.t","projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8","projects/svogv/src/lib/widgets/treeview/models/treenode.model.t","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:103","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:107","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:12","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:16","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:20","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:24","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:28","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:32","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:49","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:61","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:65","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:69","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:77","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:87","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:95","projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:99","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:10","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:11","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:12","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:7","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:8","projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:9","projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.t","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:17","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:19","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:21","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:23","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:25","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:27","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:29","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:31","projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33","projects/svogv/src/lib/widgets/treeview/treeview.component.t","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:14","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:15","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:16","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:17","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:18","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:24","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:28","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:32","projects/svogv/src/lib/widgets/treeview/treeview.component.ts:36","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.t","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:136","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:140","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:144","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:148","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:154","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:165","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:171","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:183","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:213","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:35","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:43","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:44","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:45","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:51","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:56","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:61","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:66","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:71","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:73","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:74","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:75","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:76","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:77","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:78","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:80","projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:82","promis","prop","propdesc","properti","propertie'","property'","propertynam","propnam","propos","prototyp","provid","prupos","public","pull","pure","purpos","push","put","qualiti","question","quick","quickli","quit","radio","rang","range'","range(from","range(min","range.decorator.t","rangeinternalsetup","rangeinternalsetup(target","rangetyp","re","reactiv","reactiveformsmodul","read","readabl","reader","readi","readibl","readonli","readonly(readonli","readonly.decorator.t","readonlyinternalsetup","readonlyinternalsetup(target","readonlytyp","real","realli","rearrang","rearrangecolumn","reason","rebas","receiv","recent","recurs","redesign","ref.changedetectorref.detectchang","ref.destroy","refactor","refer","refin","reg","regard","regex","regexp","regexp(target.prototype[`__haspattern__${propnam","regist","regular","relat","releas","relev","reliabl","remark","remot","remov","remove(nod","remove(o","removecolumn","removecolumn(colnam","removedvalu","renam","render","renderinnerhtml","renderinnerhtml(elementref","reorg","report","repositori","repres","reproduc","reproduct","request","requir","required(msg","required.decorator.t","requiredinternalsetup","requiredinternalsetup(target","requiredtyp","reset","rest","result","return","revert","rid","right","rm","root","roughli","routermodul","row","rule","run","s","safe","same","same(x","sampl","save","savey","scan+email","scope","screen","screenshot","search","searchvalu","second","see","select","selectedchang","selectedicon","selector","semi","send","separ","server","servic","services/formvalid","services/formvalidator.servic","set","setcurrentpag","setcurrentpage(pagenumb","settimeout","setup","sever","sha","shall","shell","shortli","show","showact","showdeletebutton","showeditbutton","shown","sidemenu","sign","signific","silver","similar","simpl","simplechang","simpler","simpli","singl","size","slider","small","smaller","smil","softwar","solid","somehow","someth","sometim","somewher","sort","sortcolumn","sortcolumn(colnam","sortdirect","sourc","source.hasownproperty(prop","source[prop","space","spec","special","specif","specifi","spend","src","stabl","stack","stackoverflow","stage","start","startnumb","startrow","state","state(valu","statechang","stateischeck","stateisdis","stateisexpandend","stateisselect","statement","static","step","still","store","straight","strict","strictli","string","stringfallback","stringlength","stringlength(min","stringlength.decorator.t","stringlengthinternalsetup","stringlengthinternalsetup(target","stringlengthtyp","strong","structur","stuff","style","stylerul","styleurl","su","subject","submiss","submit","subsequ","successfulli","succinct","such","suggest","suit","super(opt","support","suppress","sure","svg","svgov","svogv","svogv';or","svogv.modul","svogv:mast","svogv_compon","svogvmodul","svogvmodule['injector","svogvmodule['injector'].get(this.pipetoken","switch","sync","syntax","system","system.componentmodel.dataannot","systemj","t","tab","tabl","tablesort(document.getelementbyid('coverag","tag","take","target","target.prototyp","target.prototype[`__errcompareproperty__${propnam","target.prototype[`__errmaxlength__${propnam","target.prototype[`__errminlength__${propnam","target.prototype[`__errpattern__${propnam","target.prototype[`__errrange__${propnam","target.prototype[`__errrequired__${propnam","target.prototype[`__withcompare__${propnam","target[prop","target[prop].startswith(source[prop","target[propnam","targetinst","tbd","team","team'","techniqu","templat","templatehint","templatehint(templ","templatehint.decorator.t","templatehintinternalsetup","templatehintinternalsetup(target","templatehintparam","templatehinttyp","templateref","templateurl","tens","test","text","textarea","textbuttonshead","textdeletebutton","texteditbutton","textnoitem","texttreenodemodel","thank","that'","thatâ€™","there'","think","this._head","this._headers.filter(h","this._headers.find(h","this._headers.push(head","this._item","this._items.length","this._stat","this.backcolor","this.cfr.resolvecomponentfactory(compon","this.checkchang","this.checkchanged.emit(nod","this.checkchanged.emit(this.nod","this.children","this.children.indexof(nod","this.children.length","this.children.push(...nod","this.children.push(nod","this.children.splice(idx","this.collapsechang","this.collapsechanged.emit(nod","this.collapsechanged.emit(this.nod","this.collapseclass","this.collapseclasses.filt","this.collapseclasses.push('ac","this.collapseclasses.push(treeviewnodecomponent.clsicon","this.collapseclasses.push(treeviewnodecomponent.opnicon","this.collapseclasses.push(treeviewnodecomponent.pfxicon","this.compon","this.componentfactories.get(selector).create(this.injector","this.componentfactories.set(selector","this.componentrefs.delete(elementref","this.componentrefs.set(elementref","this.createheadersfortype(typeinst","this.currentpagenumb","this.editor","this.editors.push","this.editors.sort((","this.error","this.errors.push(error","this.fb","this.fb.group(valgroup","this.first(this.params.filter((","this.forecolor","this.formgroup)['__editormodel__","this.formgroup.control","this.formgroup.controls.hasownproperty(controlnam","this.formvalidatorservice.build(target","this.fromvalu","this.fv.build(userviewmodel","this.group","this.groups.filter(g","this.groups.length","this.groups.push","this.groups.sort((","this.href","this.iconclass","this.iconclasses.push('fa","this.iconclasses.push(this.node.options.icon","this.injector.get(pipetoken","this.isexpand","this.issort","this.items.sort((a","this.itemsfilt","this.itemsfiltered.length","this.itemsfiltered.slice(this.startrow","this.label","this.maxpageindex","this.nam","this.nod","this.node.haschildren","this.node.opt","this.node.options.backcolor","this.node.options.check","this.node.options.collaps","this.node.options.color","this.node.options.href","this.node.options.icon","this.node.options.icon.indexof(`${treeviewnodecomponent.pfxicon","this.node.options.select","this.node.st","this.node.statechange.subscribe((s","this.node.stateisdis","this.node.stateisexpandend","this.node.stateisselect","this.nodeclick","this.nodeclick.emit(nod","this.nodeclick.emit(this.nod","this.ondelete.emit(item","this.onedit.emit(item","this.onvaluechanged(data","this.opt","this.options.components.foreach","this.pagenumberchanged.emit(pagenumb","this.pages","this.par","this.param","this.preselectst","this.readonli","this.selectedchang","this.selectedchanged.emit(nod","this.selectedchanged.emit(this.nod","this.setcurrentpage(1","this.startrow","this.stat","this.statechang","this.statechange.emit(this._st","this.templatehint","this.text","this.tooltip","this.totalrow","this.tovalu","this.typ","this.userform","this.userform)['__editormodel__","this.userform.controls[this.name].error","this.watermark","this[`${uihint}fallback","this[uihint","those","though","three","through","throughout","throw","thrown","time","titl","toggl","toler","ton","tool","tooltip","top","tortiou","total","totalfilteredrow","totalrow","tovalu","toward","trace","transform(valu","translat","tree","tree'},{'nam","tree.treenodeopt","tree.treenodest","tree.treenodestate.check","tree.treenodestate.dis","tree.treenodestate.expand","tree.treenodestate.select","tree.treenodestate.undefin","treenod","treenode.model","treenodebase.model","treenodebasemodel","treenodecomponentmodel","treenodemodel","treenodeopt","treenodeoptions.model","treenodest","treenodestate.check","treenodestate.expand","treenodestate.select","treeview","treeview.component.html","treeviewcompon","treeviewnode.component.css","treeviewnode.component.html","treeviewnodecompon","treeviewnodecomponent.clsicon","treeviewnodecomponent.opnicon","tri","triag","tricki","true","ts","tsc","tslint:dis","two","type","type'","type.hasownproperty(p","type=\"checkbox","type=\"checkbox\"&gt","type=\"d","type=\"date\"&gt","type=\"numb","type=\"number\"&gt","type=\"text","type=\"text\"&gt","type[`__displaydesc__${p","type[`__displayname__${p","type[`__ishidden__${p","type[`__issortable__${p","type[`__pipeparams__${p","type[`__templatehint__${p","type[`__templatehintparams__${p","type[`__uipipe__${p","type[p","typealias","typeinst","typeof","types.foreach(typ","typescript","typic","ui","uihint","umd","unambigu","undefin","under","underlay","underli","ungroup","ungroupedaft","unit","univers","up","updat","upon","upstream","us","usabl","usag","user","user\\'","userform","userform.controls[name]['messages'][error","userform.controls[name][\\'messages\\'][error","usernam","userviewmodel","usual","utils/object","val","val,cal","valdiat","valgroup","valgroup)[propnam","valid","validatecompar","validatecompare(p","validaterang","validaterange(f","validator.display('","validators.compose(valid","validators.length","validators.push(validatecompare(compar","validators.push(validaterange(f","validators.push(validators.maxlength(maxlength","validators.push(validators.minlength(minlength","validators.push(validators.pattern(pattern","validators.push(validators.requir","validators/compare.valid","validators/range.valid","validators[0","validatortyp","valu","valueorpred","var","variabl","variou","veri","version","vertic","via","view","viewchild","viewchild('boolean","viewchild('d","viewchild('enum","viewchild('numb","viewchild('str","viewchild(templateref","viewmodel","visibl","visual","void","walk","want","warranti","watermark","way","wd","wd.autoformcompon","wd.datagridcompon","wd.datagridpaginationcompon","wd.editorcompon","wd.formatdatapip","wd.treeviewcompon","wd.treeviewnodecompon","we'll","web","webpack","well","whatsoev","wheather","whether","white","whole","wide","widget","width","width:15px","window","window.docu","windowref","wish","within","without","withproperti","word","work","world","wrap","write","written","www.joergkrause.d","x","x.constructor","x.hasownproperty(p","x[p","y","y.constructor","y.hasownproperty(p","y[p","ye","year","you'r","yourself","zip","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n SVOGV Widgets and Forms Library\n\n\n\n\n\n\n\n\nIntroduction\nAngular is widely used and we have a strong feeling in our guts thatâ€™s now the first step from ancient crap into something really professional for daily project works. It brings the level we all know from Java and C# and their mature backend frameworks to the frontend. And, additionally, TypeScript is here and know we have something thatâ€™s an improvement for front end developers that matters. TypeScript brings a whole new level to pros like us. And it makes our world easier â€“ at least a bit. And it improves the quality of our product â€“ not just a bit, a whole new step.\nHowever, there is no framework that can't be improved. So I tried to copy a concept from .NET -- the DataAnnotations -- straight to Angular. In this version I'm using Bootstrap 4 for a decorator based forms generator and some nice, small form widgets. \nWhat is it?\nThe approach was simply the usage of forms as simple as ever in Angular. It's an extension to Angular that comes as a set of classes and components. \nIt's available as source code or as ready to use umd-bundle. The bundle is plane JavaScript. The sources are available via npm and from github. \n\nIt's pretty small, too. It's 300 KB as a bundle and roughly 39 KB minified, close to 10 KB zipped. \n\nIssues?\nAs of version 0.6 none known issues. Please report issues through Github.\nHave you worked with the version 0.3 before. 0.6 has breaking changes because of a new build process. \nIn 0.7 I have again made significant changes towards the 1.0 release.\nI'm using Angular CLI for all steps and sync the version with Angular (Angular 6 is SVGOV 0.6, Angular 7 is SVGOV 0.7, and so on). After the first final is being release I plan to jump the version to match the Angular major release. Hence, 0.6 is 6, 0.7 is 7 and if I could move to 1.0 and at that time Angular 8 is out, it will become SVOGV 8.\nAngular Data Annotations\nThe idea of data annotations is somehow heavily inspired by the namespace System.ComponentModel.DataAnnotations of .NET Core. There is\nabsolutely no dependency at all, though.\nHow does it work?\nWe did this by using a straight domain model. Let's assume you have a viewmodel like this:\nexport class UserViewModel {\n\n  @Hidden()\n  id: Number = 0;\n\n  @Display('E-Mail', 'E-Mail address')\n  @Required()\n  @MaxLength(100)\n  @Email()\n  email: string = '';\n\n  @Display('Phone Number', 'The user\\'s phone')\n  @Required()\n  @MaxLength(20)\n  phoneNumber: string = '';\n\n  @Display('User Name', 'The full name')\n  @Required()\n  @MaxLength(100)\n  userName: string = '';\n\n}As you see we use several decorators. We have decorators for display hints, such as Display. And we have decorators to manage the validation, such as MaxLength(). \nThe usage is simple; just import like this:\nimport { \n  Required, \n  MaxLength, \n  Range, \n  Email, \n  Display, \n  Hidden,\n  UiHint,\n  Format\n} from 'svogv';Or alternatively prefix your import:\nimport * as Validator from 'svogv';\n\nexport class UserViewModel {\n\n  @Validator.Display('E-Mail')\n  eMail: string = '';\n\n}Now the forms part. The form needs to be aware of the decorators. So we have a service that creates an advanced FormGroup instance. We call it the FormValidatorService. \nIn a component this looks like this:\nimport { FormValidatorService } from 'svogv';\n\nexport class EditUserComponent implements OnInit {\n\n  userForm: FormGroup;\n\n  constructor(private fv: FormValidatorService) {\n  }\n\n  ngOnInit() {\n    // get validators and error messages from viewmodel type     \n    this.userForm = this.fv.build(UserViewModel);\n  }\n}Now the form knows all about the model. Now let's build a form.\n\n  \n    Edit current user\n      \n      \n      \n      Save\n  \nThe tricky part is the component . This component checks the property type, the decorators, and the form's settings and creates a complete form element in Bootstrap 4 style (the template is, of course, customizable).\nAnd that's it. The form is pretty, has a fully working validation, and is easy to access from your component. And yes, there is no additional code necessary to get it running.\nEven simpler, you can create a complete form with just one tag. Just go like this:\n\n  \n    Edit current user\n     \n    \n      \n         Save\n      \n    \n  \nThe only component here is  that connects to the form using the attribute formGroup. Use binding syntax here as this is an object. The form is builds upon Bootstrap 4 and can be modified by several helper annotations (decorators). \nEspecially those decorators are helpful (just a selection, there are many more):\n\n@Display Determine the label's name and a tooltip (optionally), You can also provide the fields' order.\n@Hidden Exclude as field from a autoform\n@Placeholder A watermark that appears in empty form fields\n@TemplateHint Forces a particular render type. Usually you get fields a shown in the table below. With a hint you can force other types.\n\n\n\n\nData Type\nTemplate Hint\nField Type\nOptions for @TemplateHint\nRemark\n\n\n\n\nstring\ntext (no params)\ntype=\"text\"\nText, TextArea\nTextArea accepts additional parameters for row and col\n\n\nboolean\nbool (no params)\ntype=\"checkbox\"\nCheckbox, Toggle, Radio\nDefault is checkbox\n\n\nnumber\nnum (no params)\ntype=\"number\"\nRange\nDefault is numeric field, Range is a slider\n\n\nDate\ndate (val,cal)*\ntype=\"date\"\nCalendar\nCalender is provided by browser feature\n\n\nenum\nenum (no params)\n-Box\n-\nRenders an Enum as Dropdown list\n\n\n\n* With cal it shows a calendar, with val just the value. Use a pipe and @Format(DatePipe) for formatting. Calendar appears in edit mode only.\nServer Support through JSON\nAs of version 0.3.5 it's possible to use a specially design JSON object to configure the forms. It's an exact pendant to the decorators. The difference is that you don't need to write any viewmodels in TypeScript. Just deliver an appropriate formatted document from your API and you're set. Here is the definition for the JSON structure:\nexport interface FormValidatorModel {\n  [field: string]: displayType | displayGroupType | formatType | hiddenType | placeHolderType | compareType | maxlengthType | minlengthType | patternType | stringLengthType | emailType | requiredType;\n}The types have the same description as the decorators.\nThe Widgets\nThe widget complement the editor by adding more parts typically used in form apps. There are many such components available, but sometimes there are pieces that we need quite often but nothing is really handy. So I created a small set of such components:\n\nTreeView: An advanced treeview with icon support and many options such as selections and checkboxes. Uses EventEmitter for actions.\nDataGrid: A different approach for a grid, it provides a model to handle paging, filtering, and sorting, but no HTML. So the hard part is in the grid and the easy part is up to you. \n\n\nAs of version 0.7 the InfoBox has been removed and moved to the demo code. The purpose of SVOGV is just extended grid functionality.\n\nWhere to get?\nIt's available from npm by using this command:\nnpm install svogv --saveYou get three parts (at least, this list will grow quickly):\n\nFormValidatorService -- a static class to build reactive forms\nEditor -- the universal editor component\nDecorators -- a set of decorators to manage the behavior of properties\n\nMore to read\nFor more information read the Getting started guide.\nDemo App\nThere is a demo app where you can see the components in action.\nQuick Start\nTo have a running sample in seconds do the following:\n\nClone the repository from Github\nAssure you have node running and npm and Typescript (tsc) is in the path\nExecute this command: npm install\nExecute this command: npm run build \n\nA browser window shall open automatically and shows a dashboard from where you can navigate the various components. \nSelect these options in the left hand menu:\n\nForms Demo: All about the decorators\nWidgets > Overview: The UI widgets demo\n\n\nThe demo app is independent and has it's own package.json and node_modules folder and hence needs it's own setup. The first command (setup) takes care of this all.\n\nDoes it cost something?\nIt's ISC licensed and it's free. I deeply believe in Open Source and will support the ecosystem by open sourcing all parts of the project. For commercial users such as enterprises we have support options.\nThe SVOGV Widget Library was written by Joerg  Krause, www.joergkrause.de, Berlin / Germany. He has many years of experience with Web-Frameworks. He were in the business in the early JavaScript days, know every single bit in jQuery and learnt a lot about Knockout, Angular, and Durandal. But time goes on. So he moved almost all projects to either AngularJS or Angular 2+. He thinks that knowing one Framework really well is more for our customers than knowing a lot just good. So he decided to do more and start contributing to the Angular ecosystem by creating awesome libraries and components. \nCan I contribute?\nYes, drop me an email with some \"about me\" stuff. Even simple feedback is appreciated.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n Â Declarations\n\n Â Module\n\n Â Bootstrap\n\n Â Providers\n\n Â Exports\n\ncluster_SvogvModule\n\n\n\ncluster_SvogvModule_providers\n\n\n\n\nFormValidatorService\n\nFormValidatorService\n\n\n\nSvogvModule\n\nSvogvModule\n\nSvogvModule -->\n\nFormValidatorService->SvogvModule\n\n\n\n\n\nFormValidatorFromJsonService\n\nFormValidatorFromJsonService\n\nSvogvModule -->\n\nFormValidatorFromJsonService->SvogvModule\n\n\n\n\n\n\n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        6 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n0.0.8 (2017-01-01)\nFirst release of SVOGV!\nThis inaugural release includes these components:\n\nHidden: Element will not be rendered as column in ac-datagrid\nDisplay: Change columns header or label name and add a tooltip optionally\n\nAlso several validation decorators are supported:\n\nRequired: Property must have a value\nMaxLength: Max number of chars (string only)\nMinLength: Min number of chars (string only)\nPattern: A regular expression\nRange: A range of type number or of type Date for the property's value\nEmail: Check whether the property contains a valid email\n\nAs the alpha process continues, these components will continue to evolve. There will be\nbreaking changes between alpha releases; the alpha releases are here for people that want an\nearly look or who like to live on the edge and are very tolerant of breaking API and behavior \nchanges.\n\n0.0.23 (2017-01-20)\nA pre-production release of SVOGV!\nThis is the first we use in production to see how to use basic functions in real world environment.\n\nPlaceholder: A new decorator to put watermarks into editor elements\n\nNew validation decorators:\n\nCompare: Compare two fields, such as in password field combinations\n\nSeveral widgets are now usable:\n\nDataGrid\nEditors\nInfoBox\nMenu, which comes in two flavors:\nDropMenu -- a complex multi level menu\nSideMenu -- a simple one level menu\n\n\nTreeView\nBreadCrumb\nTabs\n\nStill under construction, because of SMIL we use for SVG and that we still need to get rid of:\n\nAnalogClock\nLoaderIcon\n\nThe demo does now use WebPack 2 to create the bundles. SystemJS loader is still working for debugging. \n\n0.2.1 (2017-09-14)\nSVOGV in usable state\nThe base library with the decorators and controls is usable. The HUD part is still very experimental. I'm going to remove this part shortly and create another project out of it. It will make the lib smaller and more reliable.\nThese to elements are now working and good for production:\n\nAnalogClock\nLoaderIcon\n\nThere are many fixes in both, demo and lib.\n\n0.2.3 (2017-09-15)\nA release mostly dedicated to fixes and reorg. Some components sued just to run the demo were actually in the main lib and hence I have removed them and put in the demo. So the code is still there, but nit as part of the main lib. This makes the lib a lot smaller and it clarifies the intention not competing with the other UI libs but put the focus on forms and validation.\n\n0.3.5 (2018-01-15)\nA redesign, mainly removing all experimental parts.\n\n0.6.0 (2018-09-15)\nAn update to support Angular 5 and 6. This is also a change in naming the versions. 0.6. is for Angular 6, 0.7. will be the one for Angular 7 and so on.\nAlso, this is a big change from Gulp/Rollup based build process to using the Angular CLI. After a ton of experiments with WebPack 4 and almost very loader the outcome was more or less fruststrating. With Angular CLI, I must admit, the results are perfect, stable and small packages, and an easy setup procedure.\n\n0.7.0 (2018-11-22)\nAgain a big redesign. Mostly renaming and reorg. It's a need for the way to 1.0. It follows more strictly the Angular guide line for code.\nAlso, it's now made for Angular 7 and TypeScript 3.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to SVOGV\nWe would love for you to contribute to SVOGV and help make it ever better!\nAs a contributor, here are the guidelines we would like you to follow:\n\nCode of Conduct\nQuestion or Problem?\nIssues and Bugs\nFeature Requests\nSubmission Guidelines\nCoding Rules\nCommit Message Guidelines\nSigning the CLA\n\nIn case of any questions please contact me at !\n Code of Conduct\nHelp us keep Angular open and inclusive. Please read and follow our Code of Conduct.\n Got a Question or Problem?\nIf you have questions about how to use SVOGV, please direct them to the \nGoogle Group discussion list or StackOverflow. \nPlease note that SVOGV is still in very early development, and the team's capacity \nto answer usage questions is limited. Community chat is also available on Gitter.\n Found an Issue?\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our GitHub Repository. Including an issue \nreproduction (via CodePen, JsBin, Plunkr, etc.) is the absolute best way to help the team quickly\ndiagnose the problem. Screenshots are also helpful.\nYou can help the team even more and submit a Pull Request with a fix.\n Want a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nRepository. If you would like to implement a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it. SVOGV is in very early \nstages and we are not ready to accept major contributions ahead of the full release.\nPlease consider what kind of change it is:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project.\nSmall Features can be crafted and directly submitted as a Pull Request.\n\n Submitting an Issue\nBefore you submit an issue, search the archive, maybe your question was already answered.\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\nOverview of the Issue - if an error is being thrown a non-minified stack trace helps\nAngular and Bootstrap Versions - which versions of Angular and Bootstrap are affected\n  (e.g. 2.2.0)\nMotivation for or Use Case - explain what are you trying to do and why the current behavior\n  is a bug for you\nBrowsers and Operating System - is this a problem with all browsers?\nReproduce the Error - provide a live example (using CodePen, JsBin,\n  Plunker, etc.) or a unambiguous set of steps\nScreenshots - Due to the visual nature of the SVOGV widgets, screenshots can help the team\n  triage issues far more quickly than a text descrption.\nRelated Issues - has a similar issue been reported before?\nSuggest a Fix - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\nYou can file new issues by providing the above information here.\n Submitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR\nthat relates to your submission. You don't want to duplicate effort.\nPlease sign our Contributor License Agreement (CLA) before sending PRs.\nWe cannot accept code without this.\nMake your changes in a new git branch:\n   git checkout -b my-fix-branch master\nCreate your patch, including appropriate test cases.\n\nFollow our Coding Rules.\nTest your changes with our supported browsers and screen readers.\nRun the full SVOGV test suite, as described in the developer documentation,\nand ensure that all tests pass.\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions\nis necessary because release notes are automatically generated from these messages.\n   git commit -aNote: the optional commit -a command line option will automatically \"add\" and \"rm\" edited files.\n\nPush your branch to GitHub:\n  git push my-fork my-fix-branch\nIn GitHub, send a pull request to svogv:master.\n\nIf we suggest changes then:\n\nMake the required updates.\nRe-run the SVOGV test suites to ensure tests are still passing.\nRebase your branch and force push to your GitHub repository (this will update your Pull\nRequest):\ngit rebase master -i\ngit push -f\n\n\n\nThat's it! Thank you for your contribution!\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell as\n  follows:\n  git push my-fork --delete my-fix-branch\nCheck out the master branch:\n  git checkout master -f\nDelete the local branch:\n  git branch -D my-fix-branch\nUpdate your master with the latest upstream version:\n  git pull --ff upstream master\n\n Coding Rules\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\nAll public API methods must be documented. (Details TBD).\nWe follow Google's JavaScript Style Guide, but wrap all code at\n100 characters.\n\n Commit Message Guidelines\nWe have very precise rules over how our git commit messages can be formatted.  This leads to more\nreadable messages that are easy to follow when looking through the project history.  But also,\nwe use the git commit messages to generate the SVOGV change log.\nCommit Message Format\nEach commit message consists of a header, a body and a footer.  The header has a special\nformat that includes a type, a scope and a subject:\n(): \n\n\n\nThe header is mandatory and the scope of the header is optional.\nAny line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools.\nRevert\nIf the commit reverts a previous commit, it should begin with revert:, followed by the header of\nthe reverted commit. In the body it should say: This reverts commit ., where the hash is\nthe SHA of the commit being reverted.\nType\nMust be one of the following:\n\nfeat: A new feature\nfix: A bug fix\ndocs: Documentation only changes\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing\nsemi-colons, etc)\nrefactor: A code change that neither fixes a bug nor adds a feature\nperf: A code change that improves performance\ntest: Adding missing tests or correcting existing tests\nbuild: Changes that affect the build system, CI configuration or external dependencies      (example scopes: gulp, broccoli, npm)\nchore: Other changes that don't modify src or test files\n\nScope\nThe scope could be anything specifying place of the commit change. For example\ndatepicker, dialog, etc.\nSubject\nThe subject contains succinct description of the change:\n\nuse the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\ndon't capitalize first letter\nno dot (.) at the end\n\nBody\nJust as in the subject, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior.\nFooter\nThe footer should contain any information about Breaking Changes and is also the place to\nreference GitHub issues that this commit Closes.\nBreaking Changes should start with the word BREAKING CHANGE: with a space or two newlines.\nThe rest of the commit message is then used for this.\nA detailed explanation can be found in this document.\n Signing the CLA\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\nFor individuals we have a simple click-through form.\nFor corporations we'll need you to\nprint, sign and one of scan+email, fax or mail the form.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nISC License\nCopyright (c) [2016-2018], [Joerg  Krause]\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        SvogvModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SvogvModule.html":{"url":"modules/SvogvModule.html","title":"module - SvogvModule","body":"\n                   \n\n\n\n\n  Modules\n  SvogvModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n Â Declarations\n\n Â Module\n\n Â Bootstrap\n\n Â Providers\n\n Â Exports\n\ncluster_SvogvModule\n\n\n\ncluster_SvogvModule_providers\n\n\n\n\nFormValidatorService\n\nFormValidatorService\n\n\n\nSvogvModule\n\nSvogvModule\n\nSvogvModule -->\n\nFormValidatorService->SvogvModule\n\n\n\n\n\nFormValidatorFromJsonService\n\nFormValidatorFromJsonService\n\nSvogvModule -->\n\nFormValidatorFromJsonService->SvogvModule\n\n\n\n\n\n\n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/svogv/src/lib/svogv.module.ts\n        \n\n            \n                Description\n            \n            \n                The actual SVOGV Module definition using the root module.\n\n            \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                FormValidatorService\n                            \n                            \n                                FormValidatorFromJsonService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport * as wd from './widgets';\n\nimport { FormValidatorService } from './services/formvalidator.service';\nimport { FormValidatorFromJsonService } from './services/formvalidator-fromjson.service';\n\nexport * from './decorators';\n\nconst SVOGV_COMPONENTS = [\n  wd.DataGridComponent,\n  wd.DataGridPaginationComponent,\n  wd.TreeViewComponent,\n  wd.TreeViewNodeComponent,\n  wd.EditorComponent,\n  wd.AutoFormComponent\n];\n\nconst provider = [FormValidatorService, FormValidatorFromJsonService];\n\n/**\n * The actual SVOGV Module definition using the root module.\n */\n@NgModule({\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, FormsModule],\n  declarations: [...SVOGV_COMPONENTS, wd.FormatDataPipe],\n  providers: provider,\n  exports: [...SVOGV_COMPONENTS]\n})\nexport class SvogvModule {\n\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SvogvModule,\n      providers: provider\n    };\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AutoFormComponent.html":{"url":"components/AutoFormComponent.html","title":"component - AutoFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AutoFormComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/editors/autoform.component.ts\n\n\n    \n        Description\n    \n    \n        This component creates a complete editor out of a viewmodel.\nIt creates one field for each property not decorated with @Hidden.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-autoform\n            \n\n\n            \n                styles\n                fieldset { border-top: 1px silver solid; padding: 10px; },legend { width: auto; padding-left: 10px; padding-right: 10px; font-size: 1em;}\n            \n\n\n            \n                templateUrl\n                ./autoform.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 editors\n                            \n                            \n                                 groups\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Public grouped\n                            \n                            \n                                 ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                ungroupedAfter\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform.component.ts:36\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            formGroup\n                        \n                        \n                            A reference to the form. Required.\n\n                              \n                                Type:    FormGroup\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform.component.ts:22\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            ungroupedAfter\n                        \n                        \n                            Ungrouped element will appear at the end, after all groupes.\nIf there are no groups this will be ignored. Optional.\n\n                            \n                              Default value: true\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform.component.ts:28\n                                \n                            \n                \n            \n    \n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            Public grouped\n                        \n                    \n                    \n                        \n                                \n                            grouped()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform.component.ts:113\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     boolean\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform.component.ts:48\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             editors\n                        \n                    \n                    \n                        \n                            editors:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform.component.ts:30\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             groups\n                        \n                    \n                    \n                        \n                            groups:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/autoform.component.ts:31\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n/**\n * This component creates a complete editor out of a viewmodel.\n * It creates one field for each property not decorated with @Hidden.\n *\n */\n@Component({\n  selector: 'ac-autoform',\n  styles: [\n    'fieldset { border-top: 1px silver solid; padding: 10px; }',\n    'legend { width: auto; padding-left: 10px; padding-right: 10px; font-size: 1em;}'\n  ],\n  templateUrl: './autoform.component.html'\n})\nexport class AutoFormComponent implements OnInit {\n  /**\n   * A reference to the form. Required.\n   */\n  @Input()\n  formGroup: FormGroup;\n  /**\n   * Ungrouped element will appear at the end, after all groupes.\n   * If there are no groups this will be ignored. Optional.\n   */\n  @Input()\n  ungroupedAfter = true;\n\n  editors: Array;\n  groups: Array;\n  }>;\n\n  constructor() {\n    this.editors = new Array();\n    this.groups = new Array;\n    }>();\n  }\n\n  ngOnInit() {\n    // take all controls as is\n    const hasDecorators: boolean = (this.formGroup)['__editorModel__'];\n    // loop through all fields\n    for (const controlName in this.formGroup.controls) {\n      if (!this.formGroup.controls.hasOwnProperty(controlName)) {\n        continue;\n      }\n      let displayOrder = 0;\n      let groupOrder = 0;\n      let groupName: string;\n      let groupDesc: string;\n      let isInGroup = false;\n      if (hasDecorators) {\n        displayOrder = (this.formGroup)['__editorModel__'][\n          `__displayOrder__${controlName}`\n        ];\n        isInGroup = !!(this.formGroup)['__editorModel__'][\n          `__isGrouped__${controlName}`\n        ];\n        if (isInGroup) {\n          groupName = (this.formGroup)['__editorModel__'][\n            `__groupName__${controlName}`\n          ];\n          groupOrder = (this.formGroup)['__editorModel__'][\n            `__groupOrder__${controlName}`\n          ];\n          groupDesc = (this.formGroup)['__editorModel__'][\n            `__groupDesc__${controlName}`\n          ];\n        }\n      }\n      if (!isInGroup) {\n        // if not part of any group just push to main group\n        this.editors.push({\n          key: displayOrder,\n          editor: controlName\n        });\n      } else {\n        // check if group already exists\n        const existingGroupArray = this.groups.filter(g => g.name === groupName);\n        const groupExists = existingGroupArray.length === 1;\n        if (!groupExists) {\n          this.groups.push({\n            key: groupOrder,\n            name: groupName,\n            desc: groupDesc,\n            editors: new Array()\n          });\n        }\n        // add field to existing group (assume that here the group always exists)\n        const existingGroup = this.groups.filter(g => g.name === groupName)[0];\n        // and store\n        existingGroup.editors.push({\n          key: displayOrder,\n          editor: controlName\n        });\n      }\n    }\n    // check the display decorator and sort\n    this.editors.sort((e, n) => e.key - n.key);\n    // sort groups\n    this.groups.sort((e, n) => e.key - n.key);\n  }\n\n  public grouped(): boolean {\n    return this.groups && this.groups.length > 0;\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n  \n    {{ group.name }}\n    \n  \n\n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ group.name }}        '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AutoFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataGridComponent.html":{"url":"components/DataGridComponent.html","title":"component - DataGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataGridComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts\n\n\n    \n        Description\n    \n    \n        The datagrid provides basic functions for data tables:\n\nsorting\nfiltering\npagination\nediting\n\nProvide an decorator enhanced model and the grid appears driven by model meta data.\nThere are many attributes and ways to change the appearance. Also some classes can be controlled by\nthe host component:\n\n.col-borders\n.col-last\n.col-first\nAll these styles are applied to the  elements of the underlying table.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-datagrid\n            \n\n            \n                styleUrls\n                datagrid.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datagrid.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 boolean\n                            \n                            \n                                 booleanFallback\n                            \n                            \n                                 date\n                            \n                            \n                                 dateFallback\n                            \n                            \n                                 enum\n                            \n                            \n                                 enumFallback\n                            \n                            \n                                 number\n                            \n                            \n                                 nummberFallback\n                            \n                            \n                                 string\n                            \n                            \n                                 stringFallback\n                            \n                            \n                                 template\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Public getActiveTemplate\n                            \n                            \n                                 ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnStyle\n                            \n                            \n                                filter\n                            \n                            \n                                model\n                            \n                            \n                                reArrangeColumns\n                            \n                            \n                                showActions\n                            \n                            \n                                showDeleteButton\n                            \n                            \n                                showEditButton\n                            \n                            \n                                textButtonsHeader\n                            \n                            \n                                textDeleteButton\n                            \n                            \n                                textEditButton\n                            \n                            \n                                textNoItems\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            columnStyle\n                        \n                        \n                            Override the internal styles by giving directly CSS rules based on the column tags.\n\n                              \n                                Type:    DatagridStyles\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:49\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            filter\n                        \n                        \n                            The filter value to filter the content.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:104\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            model\n                        \n                        \n                            The model that makes up the content. Shall provide properties with decorators to control appearance.\n\n                              \n                                Type:    DataGridModel\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:55\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            reArrangeColumns\n                        \n                        \n                            If true the columns can be rearranged by moving around with drag 'n drop.\n\n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:110\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            showActions\n                        \n                        \n                            Show the action column at all. Use @see showDeleteButton and  @see showEditButton to switch the buttons\non or off individually. Default is true (actions visible).\n\n                            \n                              Default value: true\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:73\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            showDeleteButton\n                        \n                        \n                            Wheather to show a delete button. Clicking it fires the @see DataGridModel.OnDelete event.\n\n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:61\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            showEditButton\n                        \n                        \n                            Wheather to show an edit button. Clicking it fires the @see DataGridModel.OnEdit event.\n\n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:66\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            textButtonsHeader\n                        \n                        \n                            The column header of the column that shows the buttons. Default is 'Actions'.\n\n                            \n                              Default value: Actions\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:89\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            textDeleteButton\n                        \n                        \n                            The text that appears on the Delete button. Default is 'Delete'.\n\n                            \n                              Default value: Delete\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:79\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            textEditButton\n                        \n                        \n                            The text that appears on the Edit button. Default is 'Edit'.\n\n                            \n                              Default value: Edit\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:84\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            textNoItems\n                        \n                        \n                            The text that appears if there are no items to show. Can also be overwritten by a more complex piece\nof code by adding a template like this:\n\n                            \n                              Default value: There are no items to show\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:99\n                                \n                            \n                \n            \n    \n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            Public getActiveTemplate\n                        \n                    \n                    \n                        \n                                \n                            getActiveTemplate(uiHint: string, prop?: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:119\n                                \n                            \n    \n                    \n                        \n                                Controls the template used to display certain data types.\n    If the host provides a template it's being used, otherwise a fallback is provided\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      uiHint\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Property of \n    \n                                                    \n                                                    \n                                                      prop\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                          true\n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     TemplateRef\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:112\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             boolean\n                        \n                    \n                    \n                        \n                            boolean:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:32\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             booleanFallback\n                        \n                    \n                    \n                        \n                            booleanFallback:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:31\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             date\n                        \n                    \n                    \n                        \n                            date:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:35\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             dateFallback\n                        \n                    \n                    \n                        \n                            dateFallback:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:34\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             enum\n                        \n                    \n                    \n                        \n                            enum:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:38\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             enumFallback\n                        \n                    \n                    \n                        \n                            enumFallback:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:37\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             number\n                        \n                    \n                    \n                        \n                            number:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:41\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             nummberFallback\n                        \n                    \n                    \n                        \n                            nummberFallback:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:40\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             string\n                        \n                    \n                    \n                        \n                            string:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:29\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             stringFallback\n                        \n                    \n                    \n                        \n                            stringFallback:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:28\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             template\n                        \n                    \n                    \n                        \n                            template:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts:43\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ContentChild, TemplateRef } from '@angular/core';\nimport { DataGridModel } from './models/datagrid.model';\nimport { increaseElementDepthCount } from '@angular/core/src/render3/state';\nimport { DatagridStyles } from './models/datagridstyle.model';\n\n/**\n * The datagrid provides basic functions for data tables:\n * * sorting\n * * filtering\n * * pagination\n * * editing\n *\n * Provide an decorator enhanced model and the grid appears driven by model meta data.\n *\n * There are many attributes and ways to change the appearance. Also some classes can be controlled by\n * the host component:\n * * `.col-borders`\n * * `.col-last`\n * * `.col-first`\n * All these styles are applied to the  elements of the underlying table.\n */\n@Component({\n  selector: 'ac-datagrid',\n  templateUrl: './datagrid.component.html',\n  styleUrls: ['./datagrid.component.scss']\n})\nexport class DataGridComponent implements OnInit {\n  @ViewChild('string') stringFallback: TemplateRef;\n  @ContentChild('string') string: TemplateRef;\n\n  @ViewChild('boolean') booleanFallback: TemplateRef;\n  @ContentChild('boolean') boolean: TemplateRef;\n\n  @ViewChild('date') dateFallback: TemplateRef;\n  @ContentChild('date') date: TemplateRef;\n\n  @ViewChild('enum') enumFallback: TemplateRef;\n  @ContentChild('enum') enum: TemplateRef;\n\n  @ViewChild('number') nummberFallback: TemplateRef;\n  @ContentChild('number') number: TemplateRef;\n\n  @ViewChild(TemplateRef) template: TemplateRef;\n\n  /**\n   * Override the internal styles by giving directly CSS rules based on the column tags.\n   */\n  @Input()\n  columnStyle: DatagridStyles;\n\n  /**\n   * The model that makes up the content. Shall provide properties with decorators to control appearance.\n   */\n  @Input()\n  public model: DataGridModel;\n\n  /**\n   * Wheather to show a delete button. Clicking it fires the @see DataGridModel.OnDelete event.\n   */\n  @Input()\n  public showDeleteButton: boolean;\n  /**\n   * Wheather to show an edit button. Clicking it fires the @see DataGridModel.OnEdit event.\n   */\n  @Input()\n  public showEditButton: boolean;\n\n  /**\n   * Show the action column at all. Use @see showDeleteButton and  @see showEditButton to switch the buttons\n   * on or off individually. Default is `true` (actions visible).\n   */\n  @Input()\n  public showActions = true;\n\n  /**\n   * The text that appears on the Delete button. Default is 'Delete'.\n   */\n  @Input()\n  public textDeleteButton = 'Delete';\n  /**\n   * The text that appears on the Edit button. Default is 'Edit'.\n   */\n  @Input()\n  public textEditButton = 'Edit';\n  /**\n   * The column header of the column that shows the buttons. Default is 'Actions'.\n   */\n  @Input()\n  public textButtonsHeader = 'Actions';\n  /**\n   * The text that appears if there are no items to show. Can also be overwritten by a more complex piece\n   * of code by adding a template like this:\n   * @example\n   * \n   *   The grid is empty\n   * \n   */\n  @Input()\n  public textNoItems = 'There are no items to show';\n  /**\n   * The filter value to filter the content.\n   */\n  @Input()\n  public filter: any;\n\n  /**\n   * If `true` the columns can be rearranged by moving around with drag 'n drop.\n   */\n  @Input()\n  public reArrangeColumns: boolean;\n\n  ngOnInit(): void {}\n\n  /**\n   * Controls the template used to display certain data types.\n   * If the host provides a template it's being used, otherwise a fallback is provided\n   * @param uiHint Property of @UiHint decorator\n   */\n  public getActiveTemplate(uiHint: string, prop?: string): TemplateRef {\n    console.log(`getActiveTemplate: ${uiHint} / ${prop}`);\n    if (this[uiHint]) {\n      console.log('internal');\n      // if provided by user via ContentChild\n      return this[uiHint];\n    } else {\n      console.log('external');\n      // otherwise we take ours from ng-template via ViewChild\n      return this[`${uiHint}Fallback`];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n        \n        \n      \n      \n        \n          \n            {{ header.text }}\n            \n              \n                \n              \n              \n                \n              \n            \n            \n              \n            \n          \n          \n            {{ textButtonsHeader }}\n          \n        \n      \n      \n        \n          \n            \n              \n                \n              \n              {{  textNoItems }}\n            \n          \n        \n        \n          \n            \n          \n          \n            \n              {{ textEditButton }}\n            \n            \n              {{ textDeleteButton }}\n            \n          \n        \n      \n      \n        \n          \n            \n              \n            \n            &copy;\n          \n        \n      \n    \n  \n\n\n  {{ data | formatData: modelpipe: params }}\n\n\n  \n\n\n  {{ data }}\n\n\n  {{ data }}\n\n\n  {{ data | formatData: modelpipe: params }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                              {{ header.text }}                                                                                                                                                                                      {{ textButtonsHeader }}                                                                                                                      {{  textNoItems }}                                                                                                          {{ textEditButton }}                                      {{ textDeleteButton }}                                                                                                              Â©                                {{ data | formatData: modelpipe: params }}    {{ data }}  {{ data }}  {{ data | formatData: modelpipe: params }}'\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataGridPaginationComponent.html":{"url":"components/DataGridPaginationComponent.html","title":"component - DataGridPaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataGridPaginationComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts\n\n\n    \n        Description\n    \n    \n        The pagination component creates a few buttons to navigate a grid. The underlaying model\nis going to handle the date on the client. The pagination does not support a server backend,\nall relevant data must be loaded first.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-datagrid-pagination\n            \n\n            \n                styleUrls\n                datagridpagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datagridpagination.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 currentPageNumber\n                            \n                            \n                                 pageEndNumber\n                            \n                            \n                                 pageStartNumber\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 ngOnChanges\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                 range\n                            \n                            \n                                 setCurrentPage\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                maxPageIndex\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumberChanged\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            maxPageIndex\n                        \n                        \n                            The parent component calculated the pages the component can handle.\n\n                              \n                                Type:    number\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:19\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            pageNumberChanged\n                        \n                        \n                            An event fired once the user has changed the page by clicking a button.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:24\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             ngOnChanges\n                        \n                    \n                    \n                        \n    ngOnChanges(changes: literal type)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:32\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      changes\n                                                      \n                                                              literal type\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:28\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             range\n                        \n                    \n                    \n                        \n    range(min: number, max: number)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:58\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      min\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      max\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     number[]\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             setCurrentPage\n                        \n                    \n                    \n                        \n    setCurrentPage(pageNumber: number, event?: MouseEvent)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:45\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      pageNumber\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      event\n                                                      \n                                                              MouseEvent\n                                                      \n                                                      \n                                                          true\n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             currentPageNumber\n                        \n                    \n                    \n                        \n                            currentPageNumber:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 1\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:26\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             pageEndNumber\n                        \n                    \n                    \n                        \n                            pageEndNumber:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:75\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             pageStartNumber\n                        \n                    \n                    \n                        \n                            pageStartNumber:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts:66\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import {\n  Component, OnInit, OnChanges, SimpleChange, Input, Output, EventEmitter\n} from '@angular/core';\n\n/**\n * The pagination component creates a few buttons to navigate a grid. The underlaying model\n * is going to handle the date on the client. The pagination does not support a server backend,\n * all relevant data must be loaded first.\n */\n@Component({\n  selector: 'ac-datagrid-pagination',\n  styleUrls: ['./datagridpagination.component.scss' ],\n  templateUrl: './datagridpagination.component.html'\n})\nexport class DataGridPaginationComponent implements OnInit, OnChanges {\n  /**\n   * The parent component calculated the pages the component can handle.\n   */\n  @Input() maxPageIndex: number;\n\n  /**\n   * An event fired once the user has changed the page by clicking a button.\n   */\n  @Output() pageNumberChanged = new EventEmitter();\n\n  currentPageNumber = 1;\n\n  ngOnInit() {\n    this.setCurrentPage(1);\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (changes['maxPageIndex']) {\n      const change = changes['maxPageIndex'];\n      if (this.currentPageNumber > change.currentValue) {\n        // throws ExpressionChangedAfterItHasBeenCheckedException\n        // if there's no setTimeout.\n        // no need to add setTimeout if ngOnChanges\n        // is fired after changes made on root component.\n        setTimeout(() => this.setCurrentPage(1), 1);\n      }\n    }\n  }\n\n  setCurrentPage(pageNumber: number, event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (pageNumber === 0 || pageNumber > this.maxPageIndex\n      || pageNumber === this.currentPageNumber) {\n      return;\n    }\n\n    this.pageNumberChanged.emit(pageNumber);\n    this.currentPageNumber = pageNumber;\n  }\n\n  range(min: number, max: number): number[] {\n    const result = new Array();\n    for (let i = min; i = this.maxPageIndex - 3\n        ? this.maxPageIndex - 6\n        : this.currentPageNumber - 3;\n    return startNumber  this.maxPageIndex ? this.maxPageIndex : pageEnd;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Â«\n      \n    \n    \n      \n        â€¹\n      \n    \n    \n      \n        {{ index }}\n      \n    \n    \n      \n        â€º\n      \n    \n    \n      \n        Â»\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Â«                            â€¹                            {{ index }}                            â€º                            Â»            '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataGridPaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorComponent.html":{"url":"components/EditorComponent.html","title":"component - EditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/editors/editor.component.ts\n\n\n    \n        Description\n    \n    \n        The Editor Widget. Creates a field with all required validators using decorators and forms service.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-editor\n            \n\n\n            \n                styles\n                input[type=\"checkbox\"] { display: none; },input[type=\"checkbox\"] + label:before { font-family: FontAwesome; },input[type=\"checkbox\"] + label:before { content: \"\\f096\"; },input[type=\"checkbox\"]:checked + label:before { content: \"\\f046\"; },input[type=\"checkbox\"] + label {\n      display:inline-block; width:15px; height: 20px; margin: -1px 4px 0 0; vertical-align:middle; cursor: pointer;\n    }\n            \n\n\n            \n                templateUrl\n                ./editor.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 errors\n                            \n                            \n                                 params\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 first\n                            \n                            \n                                 getParams\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                Private onValueChanged\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enumValues\n                            \n                            \n                                fromValue\n                            \n                            \n                                inline\n                            \n                            \n                                label\n                            \n                            \n                                labelDivider\n                            \n                            \n                                listValues\n                            \n                            \n                                name\n                            \n                            \n                                readonly\n                            \n                            \n                                tooltip\n                            \n                            \n                                toValue\n                            \n                            \n                                type\n                            \n                            \n                                userForm\n                            \n                            \n                                value\n                            \n                            \n                                waterMark\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:86\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            enumValues\n                        \n                        \n                            The values of the select field provided by an enum. For other fieldtypes it's being ignored.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:54\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            fromValue\n                        \n                        \n                            The start value for a range field. Other field types ignore this value.\n\n                            \n                              Default value: 0\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:63\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            inline\n                        \n                        \n                            If set to true the label and the field appears in one row.\nOtherwise the label is above the field. Default is true.\n\n                            \n                              Default value: true\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:50\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            label\n                        \n                        \n                            The label's name.\n\n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:37\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            labelDivider\n                        \n                        \n                            A character after the fields label. Default is ': ' (colon plus space);\n\n                            \n                              Default value: : \n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:33\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            listValues\n                        \n                        \n                            The values of the select field provided by a list. For other fieldtypes it's being ignored.\nThe value shall be an Array that a *ngFor directive can execute.\n\n                              \n                                Type:    Array\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:59\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            name\n                        \n                        \n                            Field name\n\n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:25\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            readonly\n                        \n                        \n                            Renders the field as read only.\n\n                            \n                              Default value: false\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:75\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            tooltip\n                        \n                        \n                            A tooltip\n\n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:41\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            toValue\n                        \n                        \n                            The end value for a range field. Other field types ignore this value.\n\n                            \n                              Default value: 100\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:67\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            type\n                        \n                        \n                            Editor type. Default is 'text';\n\n                            \n                              Default value: text\n                            \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:29\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            userForm\n                        \n                        \n                            The form's group object.\n\n                              \n                                Type:    FormGroup\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:45\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            value\n                        \n                        \n                            The value set to and read from the field.\n\n                              \n                                Type:    any\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:81\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            waterMark\n                        \n                        \n                            An optional placeholder for empty field. The default is empty (no watermark).\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:71\n                                \n                            \n                \n            \n    \n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             first\n                        \n                    \n                    \n                        \n    first(array: Array, n: number)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:96\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      array\n                                                      \n                                                              Array\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      n\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     any\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getParams\n                        \n                    \n                    \n                        \n    getParams(key: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:92\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      key\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     any\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:109\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Private onValueChanged\n                        \n                    \n                    \n                        \n                                \n                            onValueChanged(data: any)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:163\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      data\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             errors\n                        \n                    \n                    \n                        \n                            errors:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:86\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             params\n                        \n                    \n                    \n                        \n                            params:     literal type[]\n    \n                        \n                    \n                        \n                            \n                                Type :     literal type[]\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/editors/editor.component.ts:84\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n/**\n * The Editor Widget. Creates a field with all required validators using decorators and forms service.\n */\n@Component({\n  selector: 'ac-editor',\n  styles: [\n    'input[type=\"checkbox\"] { display: none; }',\n    'input[type=\"checkbox\"] + label:before { font-family: FontAwesome; }',\n    'input[type=\"checkbox\"] + label:before { content: \"\\\\f096\"; }',\n    'input[type=\"checkbox\"]:checked + label:before { content: \"\\\\f046\"; }',\n    `input[type=\"checkbox\"] + label {\n      display:inline-block; width:15px; height: 20px; margin: -1px 4px 0 0; vertical-align:middle; cursor: pointer;\n    }`,\n  ],\n  templateUrl: './editor.component.html'\n}) //\nexport class EditorComponent implements OnInit {\n\n  /**\n   * Field name\n   */\n  @Input() name: string;\n  /**\n   * Editor type. Default is 'text';\n   */\n  @Input() type = 'text';\n  /**\n   * A character after the fields label. Default is ': ' (colon plus space);\n   */\n  @Input() labelDivider = ': ';\n  /**\n   * The label's name.\n   */\n  @Input() label: string;\n  /**\n   * A tooltip\n   */\n  @Input() tooltip: string;\n  /**\n   * The form's group object.\n   */\n  @Input() userForm: FormGroup;\n  /**\n   * If set to true the label and the field appears in one row.\n   * Otherwise the label is above the field. Default is `true`.\n   */\n  @Input() inline = true;\n  /**\n   * The values of the select field provided by an enum. For other fieldtypes it's being ignored.\n   */\n  @Input() enumValues: any;\n  /**\n   * The values of the select field provided by a list. For other fieldtypes it's being ignored.\n   * The value shall be an Array that a `*ngFor` directive can execute.\n   */\n  @Input() listValues: Array;\n  /**\n   * The start value for a range field. Other field types ignore this value.\n   */\n  @Input() fromValue = 0;\n  /**\n   * The end value for a range field. Other field types ignore this value.\n   */\n  @Input() toValue = 100;\n  /**\n   * An optional placeholder for empty field. The default is empty (no watermark).\n   */\n  @Input() waterMark = '';\n  /**\n   * Renders the field as read only.\n   */\n  @Input() readonly = false;\n  /**\n   * The value set to and read from the field.\n   */\n  @Output()\n  @Input()\n  value: any;\n\n  // additional values provided by TemplateHint decorator\n  params: { key: string, value: any }[];\n\n  errors: Array;\n\n  constructor() {\n    this.params = new Array();\n  }\n\n  getParams(key: string): any {\n    return this.first(this.params.filter((e) => e.key === key), 0);\n  }\n\n  first(array: Array, n: number): any {\n    if (array == null) {\n      return void 0;\n    }\n    if (n == null) {\n      return array[0];\n    }\n    if (n  this.onValueChanged(data));\n    // this is set by FormValidatorService\n    const editorModel = (this.userForm)['__editorModel__'];\n    // get type from form\n    if (editorModel) {\n      // get elementary types, this might get overwritten later according to decorators found\n      if (typeof editorModel[this.name] === 'string') {\n        this.type = 'text';\n      }\n      if (typeof editorModel[this.name] === 'boolean') {\n        this.type = 'boolean';\n      }\n      if (typeof editorModel[this.name] === 'number') {\n        this.type = 'number';\n      }\n      if (editorModel[this.name] instanceof Date){\n        this.type = 'calendar';\n      }\n      // make an instance to read the properties\n      this.label = editorModel[`__displayName__${this.name}`] || this.label || this.name;\n      this.tooltip = editorModel[`__displayDesc__${this.name}`] || this.tooltip || this.name;\n      // render as range id there is a range definition\n      if (editorModel[`__hasRangeFrom__${this.name}`] && Number(editorModel[`__hasRangeFrom__${this.name}`])) {\n        this.fromValue = editorModel[`__hasRangeFrom__${this.name}`];\n        this.type = 'range';\n      }\n      if (editorModel[`__hasRangeTo__${this.name}`] && Number(editorModel[`__hasRangeTo__${this.name}`])) {\n        this.toValue = editorModel[`__hasRangeTo__${this.name}`];\n        this.type = 'range';\n      }\n      // placeholder\n      if (editorModel[`__hasWatermark__${this.name}`]) {\n        this.waterMark = editorModel[`__watermark__${this.name}`];\n      }\n      // templates\n      if (editorModel[`__hasTemplateHint__${this.name}`]) {\n        this.type = (editorModel[`__templateHint__${this.name}`]).toLowerCase();\n        if (editorModel[`__templateHintParams__${this.name}`]) {\n          this.params = (editorModel[`__templateHintParams__${this.name}`]);\n        }\n      }\n\n      // render hidden fields as hidden even in forms\n      if (editorModel[`__isHidden__${this.name}`]) {\n        this.type = 'hidden';\n      }\n      // check readonly\n      if (editorModel[`__isReadonly__${this.name}`]) {\n        this.readonly = !!editorModel[`__isReadonly__${this.name}`];\n      }\n    }\n  }\n\n  private onValueChanged(data: any) {\n    // check validation on change\n    this.errors = new Array();\n    // tslint:disable-next-line:forin\n    for (const error in this.userForm.controls[this.name].errors) {\n      this.errors.push(error);\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n  {{ label }}{{ labelDivider }} \n  \n    \n    \n    \n      {{option.val}}\n    \n    \n      {{option.val}}\n    \n    \n    \n    \n    \n    \n    \n    \n        \n    \n    \n    \n    {{ userForm.controls[name]['messages'][error] }}\n    \n  \n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}{{ labelDivider }}                     {{option.val}}              {{option.val}}                                                        {{ userForm.controls[name][\\'messages\\'][error] }}        '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeViewComponent.html":{"url":"components/TreeViewComponent.html","title":"component - TreeViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeViewComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/treeview/treeview.component.ts\n\n\n    \n        Description\n    \n    \n        A treeview that can handle @see TreeNodeModel objects that create text, checkboxes, or highlights.\nA node can have an icon. The icons are based on FontAwesome's css classes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-tree\n            \n\n\n            \n                styles\n                .treeview { list-style: none; margin-left: -25px; }\n            \n\n\n            \n                templateUrl\n                ./treeview.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 onCheckChanged\n                            \n                            \n                                 onCollapseChanged\n                            \n                            \n                                 onNodeClick\n                            \n                            \n                                 onSelectedChanged\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                nodes\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkChanged\n                            \n                            \n                                collapseChanged\n                            \n                            \n                                nodeClick\n                            \n                            \n                                selectedChanged\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:18\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            nodes\n                        \n                        \n                              \n                                Type:    TreeNodeModel\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:14\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            checkChanged\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:16\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            collapseChanged\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:18\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            nodeClick\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:15\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            selectedChanged\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:17\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             onCheckChanged\n                        \n                    \n                    \n                        \n    onCheckChanged(node: TreeNodeModel)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:28\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              TreeNodeModel\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onCollapseChanged\n                        \n                    \n                    \n                        \n    onCollapseChanged(node: TreeNodeModel)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:36\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              TreeNodeModel\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onNodeClick\n                        \n                    \n                    \n                        \n    onNodeClick(node: TreeNodeModel)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:24\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              TreeNodeModel\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onSelectedChanged\n                        \n                    \n                    \n                        \n    onSelectedChanged(node: TreeNodeModel)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeview.component.ts:32\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              TreeNodeModel\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { TreeNodeModel } from './models';\n\n/**\n * A treeview that can handle @see TreeNodeModel objects that create text, checkboxes, or highlights.\n * A node can have an icon. The icons are based on FontAwesome's css classes.\n */\n@Component({\n    selector: 'ac-tree',\n    templateUrl: './treeview.component.html',\n    styles: ['.treeview { list-style: none; margin-left: -25px; }']\n}) //\nexport class TreeViewComponent {\n    @Input() nodes: TreeNodeModel;\n    @Output() nodeClick: EventEmitter = new EventEmitter();\n    @Output() checkChanged: EventEmitter = new EventEmitter();\n    @Output() selectedChanged: EventEmitter = new EventEmitter();\n    @Output() collapseChanged: EventEmitter = new EventEmitter();\n\n    constructor() {\n\n    }\n\n    onNodeClick(node: TreeNodeModel) {\n        this.nodeClick.emit(node);\n    }\n\n    onCheckChanged(node: TreeNodeModel) {\n        this.checkChanged.emit(node);\n    }\n\n    onSelectedChanged(node: TreeNodeModel) {\n        this.selectedChanged.emit(node);\n    }\n\n    onCollapseChanged(node: TreeNodeModel) {\n        this.collapseChanged.emit(node);\n    }\n\n}\n\n    \n\n    \n        ï»¿\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'ï»¿  '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeViewNodeComponent.html":{"url":"components/TreeViewNodeComponent.html","title":"component - TreeViewNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeViewNodeComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts\n\n\n    \n        Description\n    \n    \n        The TreeNodeModel class represents a single TreeNodeModel for the treeview. Actually, this renders the real UI.\nThe component needs this input value:\n\n@Input() node: AcTextTreeNode;\n\nThe several options are set through the AcTreeNodeOptions object that is being held by the\nAcTextTreeNode class. This includes colors, icons, and other styles.\nThe component can fire these events:\n\n@Output() nodeClick: EventEmitter;\n@Output() checkChanged: EventEmitter;\n@Output() selectedChanged: EventEmitter;\n@Output() collapseChanged: EventEmitter;\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ac-treenode\n            \n\n            \n                styleUrls\n                treeviewnode.component.css\n            \n\n\n\n            \n                templateUrl\n                ./treeviewnode.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Public backColor\n                            \n                            \n                                Private clsIcon\n                            \n                            \n                                Public collapseClasses\n                            \n                            \n                                Public foreColor\n                            \n                            \n                                Public href\n                            \n                            \n                                Public iconClasses\n                            \n                            \n                                Public isExpanded\n                            \n                            \n                                Private opnIcon\n                            \n                            \n                                Private pfxIcon\n                            \n                            \n                                Private preSelectState\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 handleCheckChange\n                            \n                            \n                                 handleClick\n                            \n                            \n                                 handleCollapse\n                            \n                            \n                                 handlePreSelection\n                            \n                            \n                                 handleSelection\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                 onCheckChanged\n                            \n                            \n                                 onCollapseChanged\n                            \n                            \n                                 onNodeClick\n                            \n                            \n                                 onSelectedChanged\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                node\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkChanged\n                            \n                            \n                                collapseChanged\n                            \n                            \n                                nodeClick\n                            \n                            \n                                selectedChanged\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(el: ElementRef, renderer: Renderer)\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:35\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      el\n                                                      \n                                                                ElementRef\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      renderer\n                                                      \n                                                                Renderer\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            node\n                        \n                        \n                            The object that controls the node's appearance.\n\n                              \n                                Type:    TextTreeNodeModel\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:51\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            checkChanged\n                        \n                        \n                            Fired if a checkable field is being clicked.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:61\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            collapseChanged\n                        \n                        \n                            Fired if a node collapses or expands.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:71\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            nodeClick\n                        \n                        \n                            Fired on click and hence fired even if any of the other parts are being fired.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:56\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            selectedChanged\n                        \n                        \n                            Fired if a selectable field is being clicked.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:66\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             handleCheckChange\n                        \n                    \n                    \n                        \n    handleCheckChange()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:154\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             handleClick\n                        \n                    \n                    \n                        \n    handleClick($event: any)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:165\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      $event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             handleCollapse\n                        \n                    \n                    \n                        \n    handleCollapse()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:171\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             handlePreSelection\n                        \n                    \n                    \n                        \n    handlePreSelection(state: boolean)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:183\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      state\n                                                      \n                                                              boolean\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             handleSelection\n                        \n                    \n                    \n                        \n    handleSelection($event: any)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:213\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      $event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:82\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onCheckChanged\n                        \n                    \n                    \n                        \n    onCheckChanged(node: TreeNodeModel)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:140\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              TreeNodeModel\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onCollapseChanged\n                        \n                    \n                    \n                        \n    onCollapseChanged(node: TreeNodeModel)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:148\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              TreeNodeModel\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onNodeClick\n                        \n                    \n                    \n                        \n    onNodeClick(node: TreeNodeModel)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:136\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              TreeNodeModel\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onSelectedChanged\n                        \n                    \n                    \n                        \n    onSelectedChanged(node: TreeNodeModel)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:144\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              TreeNodeModel\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            Public backColor\n                        \n                    \n                    \n                        \n                            backColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:77\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Private clsIcon\n                        \n                    \n                    \n                        \n                            clsIcon:     \n    \n                        \n                    \n                        \n                            \n                                Default value : fa-minus\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:45\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public collapseClasses\n                        \n                    \n                    \n                        \n                            collapseClasses:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:74\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public foreColor\n                        \n                    \n                    \n                        \n                            foreColor:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:76\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public href\n                        \n                    \n                    \n                        \n                            href:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:73\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public iconClasses\n                        \n                    \n                    \n                        \n                            iconClasses:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:75\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public isExpanded\n                        \n                    \n                    \n                        \n                            isExpanded:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:78\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Private opnIcon\n                        \n                    \n                    \n                        \n                            opnIcon:     \n    \n                        \n                    \n                        \n                            \n                                Default value : fa-plus\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:44\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Private pfxIcon\n                        \n                    \n                    \n                        \n                            pfxIcon:     \n    \n                        \n                    \n                        \n                            \n                                Default value : fa\n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:43\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Private preSelectState\n                        \n                    \n                    \n                        \n                            preSelectState:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                    Defined in projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts:80\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ElementRef,\n  Renderer\n} from '@angular/core';\nimport { TextTreeNodeModel, TreeNodeModel, TreeNodeState } from '../models';\n\n/**\n * The TreeNodeModel class represents a single TreeNodeModel for the treeview. Actually, this renders the real UI.\n *\n * The component needs this input value:\n *\n * * @Input() node: AcTextTreeNode;\n *\n * The several options are set through the AcTreeNodeOptions object that is being held by the\n * AcTextTreeNode class. This includes colors, icons, and other styles.\n *\n * The component can fire these events:\n *\n * * @Output() nodeClick: EventEmitter;\n * * @Output() checkChanged: EventEmitter;\n * * @Output() selectedChanged: EventEmitter;\n * * @Output() collapseChanged: EventEmitter;\n *\n */\n@Component({\n  selector: 'ac-treenode',\n  templateUrl: './treeviewnode.component.html',\n  styleUrls: ['./treeviewnode.component.css']\n})\nexport class TreeViewNodeComponent implements OnInit {\n\n  constructor(private el: ElementRef, private renderer: Renderer) {\n    this.nodeClick = new EventEmitter();\n    this.checkChanged = new EventEmitter();\n    this.selectedChanged = new EventEmitter();\n    this.collapseChanged = new EventEmitter();\n  }\n  private static pfxIcon = 'fa';\n  private static opnIcon = 'fa-plus';\n  private static clsIcon = 'fa-minus';\n\n  /**\n   * The object that controls the node's appearance.\n   */\n  @Input()\n  node: TextTreeNodeModel;\n  /**\n   * Fired on click and hence fired even if any of the other parts are being fired.\n   */\n  @Output()\n  nodeClick: EventEmitter;\n  /**\n   * Fired if a checkable field is being clicked.\n   */\n  @Output()\n  checkChanged: EventEmitter;\n  /**\n   * Fired if a selectable field is being clicked.\n   */\n  @Output()\n  selectedChanged: EventEmitter;\n  /**\n   * Fired if a node collapses or expands.\n   */\n  @Output()\n  collapseChanged: EventEmitter;\n\n  public href: string;\n  public collapseClasses: Array;\n  public iconClasses: Array;\n  public foreColor: string;\n  public backColor: string;\n  public isExpanded = false;\n\n  private preSelectState: boolean;\n\n  ngOnInit() {\n    // set HTML according to options\n    this.collapseClasses = new Array();\n    this.iconClasses = new Array();\n    // expander area with icon\n    if (this.node) {\n      // expect a font-awesome class with or without fa class\n      if (this.node.options && this.node.options.icon) {\n        if (\n          this.node.options.icon.indexOf(`${TreeViewNodeComponent.pfxIcon} `) !== 0\n        ) {\n          this.iconClasses.push('fa');\n        }\n        this.iconClasses.push(this.node.options.icon);\n      }\n      if (this.node.options && this.node.options.href) {\n        this.href = this.node.options.href;\n      } else {\n        this.href = '';\n      }\n      // open/close area for elements with children\n      if (this.node.hasChildren) {\n        this.collapseClasses.push('ac-icon'); // base class\n        this.collapseClasses.push(TreeViewNodeComponent.pfxIcon);\n        this.collapseClasses.push(TreeViewNodeComponent.opnIcon);\n        // collapsed by default\n        this.node.state &= ~TreeNodeState.checked;\n      }\n      if (this.node.options && this.node.options.color) {\n        this.foreColor = this.node.options.color;\n      }\n      if (this.node.options && this.node.options.backColor) {\n        this.backColor = this.node.options.backColor;\n      }\n      this.node.stateChange.subscribe((se: any) => {\n        this.collapseChanged.emit(this.node);\n        if (!this.node.stateIsExpandend) {\n          this.collapseClasses = this.collapseClasses.filter(\n            s => s !== TreeViewNodeComponent.clsIcon\n          );\n          this.collapseClasses.push(TreeViewNodeComponent.opnIcon);\n        } else {\n          this.collapseClasses = this.collapseClasses.filter(\n            s => s !== TreeViewNodeComponent.opnIcon\n          );\n          this.collapseClasses.push(TreeViewNodeComponent.clsIcon);\n        }\n        this.isExpanded = this.node.stateIsExpandend;\n      });\n    }\n  }\n\n  // forward events in the node tree\n\n  onNodeClick(node: TreeNodeModel) {\n    this.nodeClick.emit(node);\n  }\n\n  onCheckChanged(node: TreeNodeModel) {\n    this.checkChanged.emit(node);\n  }\n\n  onSelectedChanged(node: TreeNodeModel) {\n    this.selectedChanged.emit(node);\n  }\n\n  onCollapseChanged(node: TreeNodeModel) {\n    if (this.node.options.collapsable && this.node.hasChildren) {\n      this.collapseChanged.emit(node);\n    }\n  }\n\n  handleCheckChange(): void {\n    if (this.node.options.checkable && !this.node.stateIsDisabled) {\n      if (this.node.state & TreeNodeState.checked) {\n        this.node.state &= ~TreeNodeState.checked;\n      } else {\n        this.node.state |= TreeNodeState.checked;\n      }\n      this.checkChanged.emit(this.node);\n    }\n  }\n\n  handleClick($event: any): void {\n    $event.stopPropagation();\n    // always emit click\n    this.nodeClick.emit(this.node);\n  }\n\n  handleCollapse(): void {\n    // if collapsable handle icons and view state\n    if (this.node.options.collapsable) {\n      // toggle state\n      if (this.node.state && this.node.state & TreeNodeState.expanded) {\n        this.node.state &= ~TreeNodeState.expanded;\n      } else {\n        this.node.state |= TreeNodeState.expanded;\n      }\n    }\n  }\n\n  handlePreSelection(state: boolean): void {\n    // handle the states according to options\n    if (this.node.options.selectable && !this.node.stateIsDisabled) {\n      if (state) {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.backColor;\n        } else {\n          this.foreColor = '#fff';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.color;\n        } else {\n          this.backColor = '#000';\n        }\n      } else {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.color;\n        } else {\n          this.foreColor = '#000';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.backColor;\n        } else {\n          this.backColor = '#fff';\n        }\n      }\n      this.preSelectState = state;\n    }\n  }\n\n  handleSelection($event: any): void {\n    // handle the states according to options\n    if (\n      this.node.options.selectable &&\n      !this.node.stateIsDisabled &&\n      this.preSelectState === true\n    ) {\n      if (this.node.state & TreeNodeState.selected) {\n        this.node.state &= ~TreeNodeState.selected;\n      } else {\n        this.node.state |= TreeNodeState.selected;\n      }\n      if (this.node.stateIsSelected) {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.backColor;\n        } else {\n          this.foreColor = '#fff';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.color;\n        } else {\n          this.backColor = '#000';\n        }\n      } else {\n        if (this.node.options && this.node.options.color) {\n          this.foreColor = this.node.options.color;\n        } else {\n          this.foreColor = '#000';\n        }\n        if (this.node.options && this.node.options.backColor) {\n          this.backColor = this.node.options.backColor;\n        } else {\n          this.backColor = '#fff';\n        }\n      }\n      this.selectedChanged.emit(this.node);\n    }\n    if (!this.href) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n  }\n}\n\n    \n\n    \n        ï»¿\n    \n    \n    \n    \n    \n    \n        {{ node.text }}\n    \n    \n        \n        \n                       \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'ï»¿                                {{ node.text }}                                               '\n    var COMPONENTS = [{'name': 'AutoFormComponent', 'selector': 'ac-autoform'},{'name': 'DataGridComponent', 'selector': 'ac-datagrid'},{'name': 'DataGridPaginationComponent', 'selector': 'ac-datagrid-pagination'},{'name': 'EditorComponent', 'selector': 'ac-editor'},{'name': 'TreeViewComponent', 'selector': 'ac-tree'},{'name': 'TreeViewNodeComponent', 'selector': 'ac-treenode'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeViewNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicHtmlRendererService.html":{"url":"injectables/DynamicHtmlRendererService.html","title":"injectable - DynamicHtmlRendererService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DynamicHtmlRendererService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private componentFactories\n                                    \n                                    \n                                        Private componentRefs\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         renderInnerHTML\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: DynamicHTMLOptions, cfr: ComponentFactoryResolver, injector: Injector)\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:28\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              options\n                                                              \n                                                                        DynamicHTMLOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              cfr\n                                                              \n                                                                        ComponentFactoryResolver\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              injector\n                                                              \n                                                                        Injector\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     renderInnerHTML\n                                \n                            \n                            \n                                \n            renderInnerHTML(elementRef: ElementRef, html: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              elementRef\n                                                              \n                                                                      ElementRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              html\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     DynamicHTMLRef\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private componentFactories\n                                \n                            \n                            \n                                \n                                    componentFactories:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:26\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private componentRefs\n                                \n                            \n                            \n                                \n                                    componentRefs:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:28\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector, ElementRef, ComponentFactoryResolver, ComponentFactory, ComponentRef, Type } from '@angular/core';\n\nexport interface ComponentWithSelector {\n  selector: string;\n  component: Type;\n}\nexport class DynamicHTMLOptions {\n  components: Array;\n}\nexport abstract class OnMount {\n  abstract dynamicOnMount(attrs?: Map, content?: string, element?: Element): void;\n}\n\nexport interface DynamicHTMLRef {\n  check: () => void;\n  destroy: () => void;\n}\n\nfunction isBrowserPlatform() {\n  return window != null && window.document != null;\n}\n\n@Injectable()\nexport class DynamicHtmlRendererService {\n\n  private componentFactories = new Map>();\n\n  private componentRefs = new Map>>();\n\n  constructor(private options: DynamicHTMLOptions, private cfr: ComponentFactoryResolver, private injector: Injector) {\n    this.options.components.forEach(({ selector, component }) => {\n      let cf: ComponentFactory;\n      cf = this.cfr.resolveComponentFactory(component);\n      this.componentFactories.set(selector, cf);\n    });\n  }\n\n  renderInnerHTML(elementRef: ElementRef, html: string): DynamicHTMLRef {\n    if (!isBrowserPlatform()) {\n      return {\n        check: () => {},\n        destroy: () => {},\n      };\n    }\n    elementRef.nativeElement.innerHTML = html;\n\n    const componentRefs: Array> = [];\n    this.options.components.forEach(({ selector }) => {\n      const elements = (elementRef.nativeElement as Element).querySelectorAll(selector);\n      Array.prototype.forEach.call(elements, (el: Element) => {\n        const content = el.innerHTML;\n        const cmpRef = this.componentFactories.get(selector).create(this.injector, [], el);\n\n        el.removeAttribute('ng-version');\n\n        if (cmpRef.instance.dynamicOnMount) {\n          const attrsMap = new Map();\n          if (el.hasAttributes()) {\n            Array.prototype.forEach.call(el.attributes, (attr: Attr) => {\n              attrsMap.set(attr.name, attr.value);\n            });\n          }\n          (cmpRef.instance as OnMount).dynamicOnMount(attrsMap, content, el);\n        }\n\n        componentRefs.push(cmpRef);\n      });\n    });\n    this.componentRefs.set(elementRef, componentRefs);\n    return {\n      check: () => componentRefs.forEach(ref => ref.changeDetectorRef.detectChanges()),\n      destroy: () => {\n        componentRefs.forEach(ref => ref.destroy());\n        this.componentRefs.delete(elementRef);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormValidatorFromJsonService.html":{"url":"injectables/FormValidatorFromJsonService.html","title":"injectable - FormValidatorFromJsonService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FormValidatorFromJsonService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/formvalidator-fromjson.service.ts\n        \n\n            \n                Description\n            \n            \n                A JSON object can describe the form. That way you can create the form and their behavior on the server.\nThe form's description is an array, where each element describes one field:\n[\n   \"fieldname\": {\n       \"display\": {\n          \"name\": string;\n          \"order\": number;\n          \"description\": string\n       },\n       \"displaygroup\": {\n          \"name\": string;\n          \"order\": number;\n          \"description\": string\n       },\n       \"format\": {\n          \"pipeName\": any;\n          \"pipeParams\": any[]\n       }\n       // ...\n    }\n]The properties are the same as the decorators. @see FormValidatorModel for the describing type.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public build\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(formValidatorService: FormValidatorService)\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/formvalidator-fromjson.service.ts:58\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              formValidatorService\n                                                              \n                                                                        FormValidatorService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public build\n                                \n                            \n                            \n                                \n                                        \n                                    build(json: FormValidatorModel)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/formvalidator-fromjson.service.ts:62\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              json\n                                                              \n                                                                      FormValidatorModel\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     FormGroup\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormValidatorService } from './formvalidator.service';\n\nimport { validateRange } from './validators/range.validator';\nimport { validateCompare } from './validators/compare.validator';\n\nimport { FormValidatorModel } from './formvalidator.model';\n\nimport {\n  displayInternalSetup,\n  displayGroupInternalSetup,\n  hiddenInternalSetup,\n  formatInternalSetup,\n  placeholderInternalSetup,\n  compareInternalSetup,\n  maxLengthInternalSetup,\n  minLengthInternalSetup,\n  patternInternalSetup,\n  stringLengthInternalSetup,\n  emailInternalSetup,\n  rangeInternalSetup,\n  readonlyInternalSetup,\n  requiredInternalSetup\n} from '../decorators';\n\n/**\n * A JSON object can describe the form. That way you can create the form and their behavior on the server.\n *\n * The form's description is an array, where each element describes one field:\n *\n * ```\n * [\n *   \"fieldname\": {\n *       \"display\": {\n *          \"name\": string;\n *          \"order\": number;\n *          \"description\": string\n *       },\n *       \"displaygroup\": {\n *          \"name\": string;\n *          \"order\": number;\n *          \"description\": string\n *       },\n *       \"format\": {\n *          \"pipeName\": any;\n *          \"pipeParams\": any[]\n *       }\n *       // ...\n *    }\n * ]\n * ```\n *\n * The properties are the same as the decorators. @see FormValidatorModel for the describing type.\n *\n */\n@Injectable()\nexport class FormValidatorFromJsonService {\n\n  constructor(private formValidatorService: FormValidatorService) { }\n\n  public build(json: FormValidatorModel): FormGroup {\n    const target: any = {};\n    // convert json (indexed object ==> array ==> object properties)\n    const fields = Object.keys(json);\n    fields.forEach(field => {\n      const types = Object.keys(json[field]);\n      types.forEach(type => {\n        switch (type) {\n          case 'display':\n            displayInternalSetup(target, field,\n              (json)[field][type]['name'],\n              (json)[field][type]['order'] ? +(field)[type]['order'] : 0,\n              (json)[field][type]['description']);\n            break;\n          case 'displayGroup':\n            displayGroupInternalSetup(target, field,\n              (json)[field][type]['name'],\n              (json)[field][type]['order'] ? +(field)[type]['order'] : 0,\n              (json)[field][type]['description']);\n            break;\n          case 'format':\n            formatInternalSetup(target, field,\n              (json)[field][type]['pipeName'],\n              (json)[field][type]['pipeParams']);\n            break;\n          case 'hidden':\n            hiddenInternalSetup(target, field,\n              (json)[field][type]['hidden'] || !!(field)[type]['hidden']);\n            break;\n          case 'readonly':\n            readonlyInternalSetup(target, field,\n              (json)[field][type]['readonly'] || !!(field)[type]['readonly']);\n            break;\n          case 'placeHolder':\n            placeholderInternalSetup(target, field,\n              (json)[field][type]['name']);\n            break;\n          case 'compare':\n            compareInternalSetup(target, field,\n              (json)[field][type]['fieldToCompare'],\n              (json)[field][type]['msg']);\n            break;\n          case 'maxlength':\n            maxLengthInternalSetup(target, field,\n              +(json)[field][type]['max'],\n              (json)[field][type]['msg']);\n            break;\n          case 'minlength':\n            minLengthInternalSetup(target, field,\n              +(json)[field][type]['min'],\n              (json)[field][type]['msg']);\n            break;\n          case 'pattern':\n            patternInternalSetup(target, field,\n              (json)[field][type]['pattern'],\n              (json)[field][type]['msg']);\n            break;\n          case 'stringLength':\n            stringLengthInternalSetup(target, field,\n              +(json)[field][type]['min'],\n              +(json)[field][type]['max'],\n              (json)[field][type]['msg']);\n            break;\n          case 'email':\n            emailInternalSetup(target, field,\n              (json)[field][type]['msg']);\n            break;\n          case 'range':\n            rangeInternalSetup(target, field,\n              (json)[field][type]['from'],\n              (json)[field][type]['to'],\n              (json)[field][type]['msg']);\n            break;\n          case 'required':\n            requiredInternalSetup(target, field,\n              (json)[field][type]['msg']);\n            break;\n        }\n      });\n    });\n    return this.formValidatorService.build(target);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormValidatorService.html":{"url":"injectables/FormValidatorService.html","title":"injectable - FormValidatorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FormValidatorService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/formvalidator.service.ts\n        \n\n            \n                Description\n            \n            \n                The form validation service creates a FormGroup object from a viewmodel. If the viewmodel\nhas been decorated with validation decorators the validators are created accordingly.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private fb\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public build\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(fb: FormBuilder)\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/formvalidator.service.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fb\n                                                              \n                                                                        FormBuilder\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public build\n                                \n                            \n                            \n                                \n                                        \n                                    build(target: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/formvalidator.service.ts:20\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              target\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     FormGroup\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private fb\n                                \n                            \n                            \n                                \n                                    fb:     FormBuilder\n            \n                                \n                            \n                                \n                                    \n                                        Type :     FormBuilder\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/formvalidator.service.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\n\nimport { validateRange } from './validators/range.validator';\nimport { validateCompare } from './validators/compare.validator';\n\n/**\n * The form validation service creates a FormGroup object from a viewmodel. If the viewmodel\n * has been decorated with validation decorators the validators are created accordingly.\n */\n@Injectable()\nexport class FormValidatorService {\n\n  private fb: FormBuilder;\n\n  constructor( @Inject(FormBuilder) fb: FormBuilder) {\n    this.fb = fb;\n  }\n\n  public build(target: any): FormGroup {\n    const valGroup: any = {};\n    const errGroup: any = {};\n    let form: FormGroup;\n    let targetInstance: any;\n    if (target) {\n      // the cast is just to suppress TS errors and shows it's intentionally\n      try {\n        targetInstance = new target();\n      } catch (ex) {\n        console.error('Invalid viewmodel for FormValidatorService');\n      }\n    }\n    if (targetInstance) {\n      // tslint:disable-next-line:forin\n      for (const propName in targetInstance) {\n        const validators = new Array();\n        const errmsgs = new Object();\n        const isRequired = `__isRequired__${propName}` in target.prototype;\n        if (isRequired) {\n          (errmsgs)['required'] = target.prototype[`__errRequired__${propName}`];\n          validators.push(Validators.required);\n        }\n        const hasMaxLength = `__hasMaxLength__${propName}` in target.prototype;\n        if (hasMaxLength) {\n          (errmsgs)['maxlength'] = target.prototype[`__errMaxLength__${propName}`];\n          const maxLength = parseInt(target.prototype[`__hasMaxLength__${propName}`], 10);\n          validators.push(Validators.maxLength(maxLength));\n        }\n        const hasMinLength = `__hasMinLength__${propName}` in target.prototype;\n        if (hasMinLength) {\n          (errmsgs)['minlength'] = target.prototype[`__errMinLength__${propName}`];\n          const minLength = parseInt(target.prototype[`__hasMinLength__${propName}`], 10);\n          validators.push(Validators.minLength(minLength));\n        }\n        const hasPattern = `__hasPattern__${propName}` in target.prototype;\n        if (hasPattern) {\n          (errmsgs)['pattern'] = target.prototype[`__errPattern__${propName}`];\n          const pattern = new RegExp(target.prototype[`__hasPattern__${propName}`]);\n          validators.push(Validators.pattern(pattern));\n        }\n        const hasRangeFrom = `__hasRangeFrom__${propName}` in target.prototype;\n        const hasRangeTo = `__hasRangeTo__${propName}` in target.prototype;\n        if (hasRangeFrom || hasRangeTo) {\n          (errmsgs)['range'] = target.prototype[`__errRange__${propName}`];\n          let f: number | Date = Number(target.prototype[`__hasRangeFrom__${propName}`]);\n          let t: number | Date = Number(target.prototype[`__hasRangeTo__${propName}`]);\n          if (!f && !t) {\n            // If NaN assume Date\n            f = Date.parse(f.toString());\n            t = Date.parse(t.toString());\n          }\n          validators.push(validateRange(f, t));\n        }\n        const hasCompare = `__hasCompareProperty__${propName}` in target.prototype;\n        if (hasCompare) {\n          (errmsgs)['compare'] = target.prototype[`__errCompareProperty__${propName}`];\n          const compare = target.prototype[`__withCompare__${propName}`];\n          validators.push(validateCompare(compare));\n        }\n        if (validators.length === 0) {\n          // even if there is no validator we need to add the property to the group\n          (valGroup)[propName] = [target[propName]];\n        }\n        if (validators.length === 1) {\n          (valGroup)[propName] = [target[propName] || '', validators[0]];\n        }\n        if (validators.length >= 1) {\n          (valGroup)[propName] = [target[propName] || '', Validators.compose(validators)];\n        }\n        (errGroup)[propName] = errmsgs;\n      }\n      // create form group\n      form = this.fb.group(valGroup);\n      // forward the model to the editors for easy access to other decorators\n      // the cast is just to suppress TS errors and shows it's intentionally\n      (form)['__editorModel__'] = targetInstance;\n      // register controls and add messages\n      // tslint:disable-next-line:forin\n      for (const propName in errGroup) {\n        const ctrl = form.controls[propName];\n        if (!ctrl) {\n          continue; // control might not be in the form\n        }\n        (form.controls[propName])['messages'] = (errGroup)[propName];\n      }\n    }\n    // return FormGroup for immediate usage\n    return form;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowRef.html":{"url":"injectables/WindowRef.html","title":"injectable - WindowRef","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WindowRef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/utils/windowref.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         nativeWindow\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     nativeWindow\n                                \n                            \n                            \n                                \n                                    nativeWindow:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/utils/windowref.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  // return the global native browser window object\n  return window;\n}\n\n@Injectable()\nexport class WindowRef {\n  get nativeWindow(): any {\n    return _window();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FormatDataPipe.html":{"url":"pipes/FormatDataPipe.html","title":"pipe - FormatDataPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Pipes\n  FormatDataPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe allows the dynamic formatting of data. It is just for internal use.\nThe prupose is the forwarding of an externally defined pipe to the pipe formatter within the grid.\n\n            \n\n\n    \n\n\n    \n        import { Injector, Pipe, PipeTransform, Type } from '@angular/core';\n\n/**\n * This pipe allows the dynamic formatting of data. It is just for internal use.\n * The prupose is the forwarding of an externally defined pipe to the pipe formatter within the grid.\n */\n@Pipe({\n  name: 'formatData'\n})\nexport class FormatDataPipe implements PipeTransform {\n  public constructor(private injector: Injector) {}\n\n  transform(value: any, pipeToken: Type, pipeArgs: any[]): any {\n    if (!pipeToken) {\n      return value;\n    } else {\n      const pipe = this.injector.get(pipeToken);\n      return pipe.transform(value, ...pipeArgs);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataGridHeaderModel.html":{"url":"classes/DataGridHeaderModel.html","title":"class - DataGridHeaderModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  DataGridHeaderModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts\n        \n\n            \n                Description\n            \n            \n                Describe a header field with name, tooltip and other properties.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public desc\n                                    \n                                    \n                                        Public hidden\n                                    \n                                    \n                                         isSortable\n                                    \n                                    \n                                         pipe\n                                    \n                                    \n                                         pipeParams\n                                    \n                                    \n                                        Public prop\n                                    \n                                    \n                                         templateHint\n                                    \n                                    \n                                         templateHintParams\n                                    \n                                    \n                                        Public text\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(text: string, desc: string, prop: string, hidden: boolean)\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        The ctor\n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              text\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              desc\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              prop\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              hidden\n                                                              \n                                                                        boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public desc\n                                \n                            \n                            \n                                \n                                    desc:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                    : A tooltip that is shown on mouseover (using the title attribute).\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public hidden\n                                \n                            \n                            \n                                \n                                    hidden:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                    : optionally set a field as hidden and hence do not show in the grid.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isSortable\n                                \n                            \n                            \n                                \n                                    isSortable:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:32\n                                        \n                                    \n            \n                            \n                                \n                                    Display the sort buttons and connect to sort functions. Default is true.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     pipe\n                                \n                            \n                            \n                                \n                                    pipe:     Pipe\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Pipe\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:37\n                                        \n                                    \n            \n                            \n                                \n                                    Provides a pipe for all data of this column. Default is no pipe (undefined).\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     pipeParams\n                                \n                            \n                            \n                                \n                                    pipeParams:     any[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                    Optional parameters for a pipe.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public prop\n                                \n                            \n                            \n                                \n                                    prop:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                    : The propertie's internal name.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     templateHint\n                                \n                            \n                            \n                                \n                                    templateHint:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                    Hint from view model to select a certain template. Default is text (format as string).\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     templateHintParams\n                                \n                            \n                            \n                                \n                                    templateHintParams:     any[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                    Additional parameters some templates may use. Optional.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public text\n                                \n                            \n                            \n                                \n                                    text:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                    : The text to display.\n            \n                                \n                            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Pipe } from '@angular/core';\n\n/**\n * Describe a header field with name, tooltip and other properties.\n */\nexport class DataGridHeaderModel {\n  /**\n   * The ctor\n   * @param text: The text to display.\n   * @param desc: A tooltip that is shown on mouseover (using the `title` attribute).\n   * @param prop: The propertie's internal name.\n   * @param hidden: optionally set a field as hidden and hence do not show in the grid.\n   */\n  constructor(public text: string, public desc: string, public prop: string, public hidden: boolean = false) {\n    this.isSortable = true;\n    this.templateHint = 'text';\n  }\n\n  /**\n   * Hint from view model to select a certain template. Default is *text* (format as string).\n   */\n  templateHint: string;\n\n  /**\n   * Additional parameters some templates may use. Optional.\n   */\n  templateHintParams?: any[];\n\n  /**\n   * Display the sort buttons and connect to sort functions. Default is `true`.\n   */\n  isSortable: boolean;\n\n  /**\n   * Provides a pipe for all data of this column. Default is no pipe (`undefined`).\n   */\n  pipe: Pipe;\n\n  /**\n   * Optional parameters for a pipe.\n   */\n  pipeParams?: any[];\n\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataGridItemModel.html":{"url":"classes/DataGridItemModel.html","title":"class - DataGridItemModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  DataGridItemModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts\n        \n\n            \n                Description\n            \n            \n                The item with data and meta data.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         pipeToken\n                                    \n                                    \n                                         prop\n                                    \n                                    \n                                         value\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public getFormatted\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        The ctor\n            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getFormatted\n                                \n                            \n                            \n                                \n                                        \n                                    getFormatted(pipeArgs: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:21\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              pipeArgs\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     pipeToken\n                                \n                            \n                            \n                                \n                                    pipeToken:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     prop\n                                \n                            \n                            \n                                \n                                    prop:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     value\n                                \n                            \n                            \n                                \n                                    value:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { SvogvModule } from '../../../svogv.module';\n\n/**\n * The item with data and meta data.\n */\nexport class DataGridItemModel {\n  /**\n   * The ctor\n   * @param value: The value to show.\n   * @param prop: The name of the property.\n   * @param pipe: An attached pipe, if any. Used for dynamic formatting\n   */\n  constructor() {\n  }\n\n  value: any;\n  prop: string;\n\n  pipeToken?: any;\n\n  public getFormatted(pipeArgs: any[]): any {\n    const pipe = SvogvModule['injector'] && SvogvModule['injector'].get(this.pipeToken);\n    return pipe && pipe.transform(this.value, ...pipeArgs);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataGridModel.html":{"url":"classes/DataGridModel.html","title":"class - DataGridModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  DataGridModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts\n        \n\n            \n                Description\n            \n            \n                The controlling class for Grid applications.\nThis class takes an array of elements and handles:\n\nvisible headers, managed by @Hidden() decorator\ncreate header titles, managed by @Display() decorator\nsorting\nfiltering\ncount total rows\npaging\n\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private _headers\n                                    \n                                    \n                                        Private _items\n                                    \n                                    \n                                         currentPageIndex\n                                    \n                                    \n                                        Private currentRowEnd\n                                    \n                                    \n                                        Private currentRowStart\n                                    \n                                    \n                                        Public headers\n                                    \n                                    \n                                        Public headersNotVisible\n                                    \n                                    \n                                         items\n                                    \n                                    \n                                         itemsFiltered\n                                    \n                                    \n                                         itemsOnCurrentPage\n                                    \n                                    \n                                         maxPageIndex\n                                    \n                                    \n                                        Public onDelete\n                                    \n                                    \n                                        Public onEdit\n                                    \n                                    \n                                         pageSize\n                                    \n                                    \n                                         searchValue\n                                    \n                                    \n                                         startRow\n                                    \n                                    \n                                         totalFilteredRows\n                                    \n                                    \n                                         totalRows\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public addColumn\n                                    \n                                    \n                                        Private createHeadersForType\n                                    \n                                    \n                                        Public deleteItem\n                                    \n                                    \n                                        Public editItem\n                                    \n                                    \n                                         getItemSorted\n                                    \n                                    \n                                        Public removeColumn\n                                    \n                                    \n                                        Public sortColumn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(items: T[], type: Type, pageSize: )\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:23\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              items\n                                                              \n                                                                        T[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              type\n                                                              \n                                                                        Type\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              pageSize\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public addColumn\n                                \n                            \n                            \n                                \n                                        \n                                    addColumn(colname: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:139\n                                        \n                                    \n            \n                            \n                                \n                                        Add a column to the current grid, that has been removed recently.\n            It's just adding columns that already exists in the headers collection.\n            If the column name provided does not exists, the method does nothing.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              colname\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private createHeadersForType\n                                \n                            \n                            \n                                \n                                        \n                                    createHeadersForType(type: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:162\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              type\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public deleteItem\n                                \n                            \n                            \n                                \n                                        \n                                    deleteItem(item: T)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:158\n                                        \n                                    \n            \n                            \n                                \n                                        Called by infrastructure to inform caller of delete wish\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              item\n                                                              \n                                                                      T\n                                                              \n                                                              \n                                                              \n                                                              The item to delete\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public editItem\n                                \n                            \n                            \n                                \n                                        \n                                    editItem(item: T)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:150\n                                        \n                                    \n            \n                            \n                                \n                                        Called by infrastructure to inform caller of edit wish\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              item\n                                                              \n                                                                      T\n                                                              \n                                                              \n                                                              \n                                                              The item to edit\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getItemSorted\n                                \n                            \n                            \n                                \n            getItemSorted(sortColumn: string, sortDirection: Direction)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:106\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              sortColumn\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              sortDirection\n                                                              \n                                                                      Direction\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     []\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public removeColumn\n                                \n                            \n                            \n                                \n                                        \n                                    removeColumn(colname: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:127\n                                        \n                                    \n            \n                            \n                                \n                                        Make a column invisible. This is just changing the render process, the column is still\n            in the headers collection and can be made visible again by calling @see addColumn later.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              colname\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public sortColumn\n                                \n                            \n                            \n                                \n                                        \n                                    sortColumn(colName: string, dir: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:119\n                                        \n                                    \n            \n                            \n                                \n                                        Simple sort fucntion that makes a array sort call for the specified column.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              colName\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              The column which has to be sorted after.\n            \n                                                            \n                                                            \n                                                              dir\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              The order, descended is desc, any other string is ascending (default).\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _headers\n                                \n                            \n                            \n                                \n                                    _headers:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:94\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _items\n                                \n                            \n                            \n                                \n                                    _items:     T[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     T[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:92\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     currentPageIndex\n                                \n                            \n                            \n                                \n                                    currentPageIndex:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 1\n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:90\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private currentRowEnd\n                                \n                            \n                            \n                                \n                                    currentRowEnd:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:45\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private currentRowStart\n                                \n                            \n                            \n                                \n                                    currentRowStart:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:42\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public headers\n                                \n                            \n                            \n                                \n                                    headers:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:79\n                                        \n                                    \n            \n                            \n                                \n                                    Get all headers (column names) and their properties.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public headersNotVisible\n                                \n                            \n                            \n                                \n                                    headersNotVisible:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:86\n                                        \n                                    \n            \n                            \n                                \n                                    Returns the columns currently not shown. @see addColumn and @see removeColumn for more information.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     items\n                                \n                            \n                            \n                                \n                                    items:     T[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     T[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:64\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     itemsFiltered\n                                \n                            \n                            \n                                \n                                    itemsFiltered:     T[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     T[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:68\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     itemsOnCurrentPage\n                                \n                            \n                            \n                                \n                                    itemsOnCurrentPage:     T[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     T[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:72\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     maxPageIndex\n                                \n                            \n                            \n                                \n                                    maxPageIndex:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:56\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public onDelete\n                                \n                            \n                            \n                                \n                                    onDelete:     EventEmitter\n            \n                                \n                            \n                                \n                                    \n                                        Type :     EventEmitter\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:104\n                                        \n                                    \n            \n                            \n                                \n                                    Event fired if user clicks Delete button.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public onEdit\n                                \n                            \n                            \n                                \n                                    onEdit:     EventEmitter\n            \n                                \n                            \n                                \n                                    \n                                        Type :     EventEmitter\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:99\n                                        \n                                    \n            \n                            \n                                \n                                    Event fired if user clicks Edit button.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     pageSize\n                                \n                            \n                            \n                                \n                                    pageSize:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:91\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     searchValue\n                                \n                            \n                            \n                                \n                                    searchValue:     T\n            \n                                \n                            \n                                \n                                    \n                                        Type :     T\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:89\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     startRow\n                                \n                            \n                            \n                                \n                                    startRow:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:49\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     totalFilteredRows\n                                \n                            \n                            \n                                \n                                    totalFilteredRows:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:38\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     totalRows\n                                \n                            \n                            \n                                \n                                    totalRows:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts:34\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Type, EventEmitter } from '@angular/core';\n\nimport '../../../utils/object-extensions';\nimport { DataGridHeaderModel } from './datagridheader.model';\nimport { DataGridItemModel } from './datagriditem.model';\n\nexport enum Direction {\n  Ascending,\n  Descending\n}\n\n/**\n * The controlling class for Grid applications.\n *\n * This class takes an array of elements and handles:\n * - visible headers, managed by @Hidden() decorator\n * - create header titles, managed by @Display() decorator\n * - sorting\n * - filtering\n * - count total rows\n * - paging\n */\nexport class DataGridModel {\n  constructor(items: T[], type: Type, pageSize = 10) {\n    this._items = items;\n    this.pageSize = pageSize;\n    const typeInstance = new type();\n    if (typeInstance) {\n      // make header from decorators, omit if null\n      this.createHeadersForType(typeInstance);\n    }\n  }\n\n  get totalRows(): number {\n    return this._items.length;\n  }\n\n  get totalFilteredRows(): number {\n    return this.itemsFiltered ? this.itemsFiltered.length : 0;\n  }\n\n  private get currentRowStart(): number {\n    return this.totalRows > this.pageSize ? this.startRow + 1 : this.totalRows === 0 ? 0 : 1;\n  }\n  private get currentRowEnd(): number {\n    return this.startRow + this.pageSize  Object.same(this.searchValue, item));\n  }\n\n  get itemsOnCurrentPage(): T[] {\n    return this.itemsFiltered.slice(this.startRow, this.startRow + this.pageSize);\n  }\n\n  /**\n   * Get all headers (column names) and their properties.\n   */\n  public get headers(): Array {\n    return this._headers.filter(h => !h.hidden);\n  }\n\n  /**\n   * Returns the columns currently not shown. @see addColumn and @see removeColumn for more information.\n   */\n  public get headersNotVisible(): Array {\n    return this._headers.filter(h => h.hidden);\n  }\n  searchValue: T = {};\n  currentPageIndex = 1;\n  pageSize: number;\n  private _items: T[];\n\n  private _headers: Array;\n\n  /**\n   * Event fired if user clicks Edit button.\n   */\n  public onEdit: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired if user clicks Delete button.\n   */\n  public onDelete: EventEmitter  = new EventEmitter();\n\n  getItemSorted(sortColumn: string, sortDirection: Direction): T[] {\n    if (sortDirection === Direction.Ascending) {\n      return this.items.sort((a: any, b: any) => (a[sortColumn] > b[sortColumn] ? 1 : -1));\n    } else {\n      return this.items.sort((a: any, b: any) => (a[sortColumn]  (dir === 'desc' ? (a[colName] > b[colName] ? 1 : -1) : a[colName] > b[colName] ? -1 : 1));\n  }\n\n  /**\n   * Make a column invisible. This is just changing the render process, the column is still\n   * in the headers collection and can be made visible again by calling @see addColumn later.\n   */\n  public removeColumn(colname: string) {\n    const col = this._headers.find(h => h.prop === colname);\n    if (col) {\n      col.hidden = true;\n    }\n  }\n\n  /**\n   * Add a column to the current grid, that has been removed recently.\n   * It's just adding columns that already exists in the headers collection.\n   * If the column name provided does not exists, the method does nothing.\n   */\n  public addColumn(colname: string) {\n    const col = this._headers.find(h => h.prop === colname);\n    if (col) {\n      col.hidden = false;\n    }\n  }\n\n  /**\n   * Called by infrastructure to inform caller of edit wish\n   * @param item The item to edit\n   */\n  public editItem(item: T) {\n    this.onEdit.emit(item);\n  }\n\n  /**\n   * Called by infrastructure to inform caller of delete wish\n   * @param item The item to delete\n   */\n  public deleteItem(item: T) {\n    this.onDelete.emit(item);\n  }\n\n  private createHeadersForType(type: any): void {\n    // assume simple object structure, iterating an array of viewmodels\n    // has at least one row, so we can read the headers\n    // first we read the properties\n    this._headers = new Array();\n    for (const p in type) {\n      if (!type.hasOwnProperty(p)) {\n        continue;\n      }\n      // either propname or decorator name\n      const propName = type[`__displayName__${p}`] || p;\n      const propDesc = type[`__displayDesc__${p}`] || p;\n      // check if hidden, show if no hidden decorator\n      const isHidden = type[`__isHidden__${p}`] || false;\n      const header = new DataGridHeaderModel(propName, propDesc, p, isHidden);\n      header.isSortable = type[`__issortable__${p}`] || true;\n      // look for template provided by user, if none, we have templates for all ES types\n      header.templateHint = type[`__templatehint__${p}`] || (typeof type[p]);\n      header.templateHintParams = type[`__templatehintParams__${p}`];\n      header.pipe = type[`__uipipe__${p}`];\n      header.pipeParams = type[`__pipeParams__${p}`];\n      this._headers.push(header);\n    }\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DynamicHTMLOptions.html":{"url":"classes/DynamicHTMLOptions.html","title":"class - DynamicHTMLOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  DynamicHTMLOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         components\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     components\n                                \n                            \n                            \n                                \n                                    components:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector, ElementRef, ComponentFactoryResolver, ComponentFactory, ComponentRef, Type } from '@angular/core';\n\nexport interface ComponentWithSelector {\n  selector: string;\n  component: Type;\n}\nexport class DynamicHTMLOptions {\n  components: Array;\n}\nexport abstract class OnMount {\n  abstract dynamicOnMount(attrs?: Map, content?: string, element?: Element): void;\n}\n\nexport interface DynamicHTMLRef {\n  check: () => void;\n  destroy: () => void;\n}\n\nfunction isBrowserPlatform() {\n  return window != null && window.document != null;\n}\n\n@Injectable()\nexport class DynamicHtmlRendererService {\n\n  private componentFactories = new Map>();\n\n  private componentRefs = new Map>>();\n\n  constructor(private options: DynamicHTMLOptions, private cfr: ComponentFactoryResolver, private injector: Injector) {\n    this.options.components.forEach(({ selector, component }) => {\n      let cf: ComponentFactory;\n      cf = this.cfr.resolveComponentFactory(component);\n      this.componentFactories.set(selector, cf);\n    });\n  }\n\n  renderInnerHTML(elementRef: ElementRef, html: string): DynamicHTMLRef {\n    if (!isBrowserPlatform()) {\n      return {\n        check: () => {},\n        destroy: () => {},\n      };\n    }\n    elementRef.nativeElement.innerHTML = html;\n\n    const componentRefs: Array> = [];\n    this.options.components.forEach(({ selector }) => {\n      const elements = (elementRef.nativeElement as Element).querySelectorAll(selector);\n      Array.prototype.forEach.call(elements, (el: Element) => {\n        const content = el.innerHTML;\n        const cmpRef = this.componentFactories.get(selector).create(this.injector, [], el);\n\n        el.removeAttribute('ng-version');\n\n        if (cmpRef.instance.dynamicOnMount) {\n          const attrsMap = new Map();\n          if (el.hasAttributes()) {\n            Array.prototype.forEach.call(el.attributes, (attr: Attr) => {\n              attrsMap.set(attr.name, attr.value);\n            });\n          }\n          (cmpRef.instance as OnMount).dynamicOnMount(attrsMap, content, el);\n        }\n\n        componentRefs.push(cmpRef);\n      });\n    });\n    this.componentRefs.set(elementRef, componentRefs);\n    return {\n      check: () => componentRefs.forEach(ref => ref.changeDetectorRef.detectChanges()),\n      destroy: () => {\n        componentRefs.forEach(ref => ref.destroy());\n        this.componentRefs.delete(elementRef);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OnMount.html":{"url":"classes/OnMount.html","title":"class - OnMount","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  OnMount\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         dynamicOnMount\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     dynamicOnMount\n                                \n                            \n                            \n                                \n                                        \n                                    dynamicOnMount(attrs?: Map, content?: string, element?: Element)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              attrs\n                                                              \n                                                                      Map\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              content\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              element\n                                                              \n                                                                      Element\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable, Injector, ElementRef, ComponentFactoryResolver, ComponentFactory, ComponentRef, Type } from '@angular/core';\n\nexport interface ComponentWithSelector {\n  selector: string;\n  component: Type;\n}\nexport class DynamicHTMLOptions {\n  components: Array;\n}\nexport abstract class OnMount {\n  abstract dynamicOnMount(attrs?: Map, content?: string, element?: Element): void;\n}\n\nexport interface DynamicHTMLRef {\n  check: () => void;\n  destroy: () => void;\n}\n\nfunction isBrowserPlatform() {\n  return window != null && window.document != null;\n}\n\n@Injectable()\nexport class DynamicHtmlRendererService {\n\n  private componentFactories = new Map>();\n\n  private componentRefs = new Map>>();\n\n  constructor(private options: DynamicHTMLOptions, private cfr: ComponentFactoryResolver, private injector: Injector) {\n    this.options.components.forEach(({ selector, component }) => {\n      let cf: ComponentFactory;\n      cf = this.cfr.resolveComponentFactory(component);\n      this.componentFactories.set(selector, cf);\n    });\n  }\n\n  renderInnerHTML(elementRef: ElementRef, html: string): DynamicHTMLRef {\n    if (!isBrowserPlatform()) {\n      return {\n        check: () => {},\n        destroy: () => {},\n      };\n    }\n    elementRef.nativeElement.innerHTML = html;\n\n    const componentRefs: Array> = [];\n    this.options.components.forEach(({ selector }) => {\n      const elements = (elementRef.nativeElement as Element).querySelectorAll(selector);\n      Array.prototype.forEach.call(elements, (el: Element) => {\n        const content = el.innerHTML;\n        const cmpRef = this.componentFactories.get(selector).create(this.injector, [], el);\n\n        el.removeAttribute('ng-version');\n\n        if (cmpRef.instance.dynamicOnMount) {\n          const attrsMap = new Map();\n          if (el.hasAttributes()) {\n            Array.prototype.forEach.call(el.attributes, (attr: Attr) => {\n              attrsMap.set(attr.name, attr.value);\n            });\n          }\n          (cmpRef.instance as OnMount).dynamicOnMount(attrsMap, content, el);\n        }\n\n        componentRefs.push(cmpRef);\n      });\n    });\n    this.componentRefs.set(elementRef, componentRefs);\n    return {\n      check: () => componentRefs.forEach(ref => ref.changeDetectorRef.detectChanges()),\n      destroy: () => {\n        componentRefs.forEach(ref => ref.destroy());\n        this.componentRefs.delete(elementRef);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextTreeNodeModel.html":{"url":"classes/TextTreeNodeModel.html","title":"class - TextTreeNodeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  TextTreeNodeModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts\n        \n\n            \n                Description\n            \n            \n                A text node\n\n            \n\n            \n                Extends\n            \n            \n                    TreeNodeModel\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         text\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(text: string, options?: TreeNodeOptions, nodes?: TreeNodeModel | [])\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              text\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                        TreeNodeOptions\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              nodes\n                                                              \n                                                                        TreeNodeModel | []\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     text\n                                \n                            \n                            \n                                \n                                    text:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { TreeNodeOptions } from './treenodeoptions.model';\nimport { TreeNodeModel } from './treenode.model';\n\n/**\n * A text node\n */\nexport class TextTreeNodeModel extends TreeNodeModel {\n    text: string;\n\n    constructor(text: string, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n        super(options, nodes);\n        this.text = text;\n        this.name = text; // default, must be set explicitly\n    }\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeComponentModel.html":{"url":"classes/TreeNodeComponentModel.html","title":"class - TreeNodeComponentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeComponentModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts\n        \n\n            \n                Description\n            \n            \n                This type can load a component's UI into the node.\n\n            \n\n            \n                Extends\n            \n            \n                    TreeNodeModel\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         component\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(component: Type, options?: TreeNodeOptions, nodes?: TreeNodeModel | [])\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              component\n                                                              \n                                                                        Type\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                        TreeNodeOptions\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              nodes\n                                                              \n                                                                        TreeNodeModel | []\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     component\n                                \n                            \n                            \n                                \n                                    component:     Type\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Type\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Type, Component } from '@angular/core';\nimport { TreeNodeOptions } from './treenodeoptions.model';\nimport { TreeNodeModel } from './treenode.model';\n\n/**\n * This type can load a component's UI into the node.\n */\nexport class TreeNodeComponentModel extends TreeNodeModel {\n    component: Type;\n    constructor(component: Type, options?: TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n        super(options, nodes);\n        this.component = component;\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeModel.html":{"url":"classes/TreeNodeModel.html","title":"class - TreeNodeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts\n        \n\n            \n                Description\n            \n            \n                The base class for tree nodes.\n\n            \n\n\n            \n                Implements\n            \n            \n                        TreeNodeBaseModel\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private _state\n                                    \n                                    \n                                         children\n                                    \n                                    \n                                         hasChildren\n                                    \n                                    \n                                         id\n                                    \n                                    \n                                         name\n                                    \n                                    \n                                         options\n                                    \n                                    \n                                         parent\n                                    \n                                    \n                                         path\n                                    \n                                    \n                                         state\n                                    \n                                    \n                                         stateChange\n                                    \n                                    \n                                         stateIsChecked\n                                    \n                                    \n                                         stateIsDisabled\n                                    \n                                    \n                                         stateIsExpandend\n                                    \n                                    \n                                         stateIsSelected\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         add\n                                    \n                                    \n                                         hasDirectAncestor\n                                    \n                                    \n                                         remove\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options?: undefined, nodes?: TreeNodeModel | [])\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              options\n                                                              \n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              nodes\n                                                              \n                                                                        TreeNodeModel | []\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     add\n                                \n                            \n                            \n                                \n            add(nodes: TreeNodeModel | [])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:69\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              nodes\n                                                              \n                                                                      TreeNodeModel | []\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     hasDirectAncestor\n                                \n                            \n                            \n                                \n            hasDirectAncestor(node: TreeNodeBaseModel)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:61\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNodeBaseModel\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     remove\n                                \n                            \n                            \n                                \n            remove(node: TreeNodeModel)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:77\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNodeModel\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _state\n                                \n                            \n                            \n                                \n                                    _state:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:34\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     children\n                                \n                            \n                            \n                                \n                                    children:     TreeNodeModel[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeNodeModel[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:20\n                                        \n                                    \n            \n                            \n                                \n                                    Subsequent nodes.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     hasChildren\n                                \n                            \n                            \n                                \n                                    hasChildren:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:65\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     id\n                                \n                            \n                            \n                                \n                                    id:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:28\n                                        \n                                    \n            \n                            \n                                \n                                    Field id\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                    An identifier.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     options\n                                \n                            \n                            \n                                \n                                    options:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                    Control appearance\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     parent\n                                \n                            \n                            \n                                \n                                    parent:     TreeNodeModel\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeNodeModel\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                    structure\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     path\n                                \n                            \n                            \n                                \n                                    path:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:49\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     state\n                                \n                            \n                            \n                                \n                                    state:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:87\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     stateChange\n                                \n                            \n                            \n                                \n                                    stateChange:     EventEmitter\n            \n                                \n                            \n                                \n                                    \n                                        Type :     EventEmitter\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:32\n                                        \n                                    \n            \n                            \n                                \n                                    behavior\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     stateIsChecked\n                                \n                            \n                            \n                                \n                                    stateIsChecked:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:107\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     stateIsDisabled\n                                \n                            \n                            \n                                \n                                    stateIsDisabled:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:99\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     stateIsExpandend\n                                \n                            \n                            \n                                \n                                    stateIsExpandend:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:95\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     stateIsSelected\n                                \n                            \n                            \n                                \n                                    stateIsSelected:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts:103\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport * as tree from './treenodeoptions.model';\nimport { TreeNodeBaseModel } from './treenodebase.model';\n\n/**\n * The base class for tree nodes.\n */\nexport class TreeNodeModel implements TreeNodeBaseModel {\n    /**\n     * Control appearance\n     */\n    options: tree.TreeNodeOptions;\n    /**\n     * structure\n     */\n    parent: TreeNodeModel;\n    /**\n     * Subsequent nodes.\n     */\n    children: TreeNodeModel[];\n    /**\n     * An identifier.\n     */\n    name: string;\n    /**\n     * Field id\n     */\n    id: number;\n    /**\n     * behavior\n     */\n    stateChange: EventEmitter;\n\n    private _state: tree.TreeNodeState;\n\n    constructor(options?: tree.TreeNodeOptions, nodes?: TreeNodeModel | TreeNodeModel[]) {\n        this.options = options || new tree.TreeNodeOptions();\n        if (nodes && nodes instanceof Array) {\n            this.children = nodes;\n        } else {\n            if (nodes) {\n                this.children = [nodes];\n            }\n        }\n        this.stateChange = new EventEmitter();\n        this.state = tree.TreeNodeState.undefined;\n    }\n\n    get path(): Array {\n        // walk up tree and return path with names\n        const p: Array = new Array();\n        p.push(this);\n        let n: TreeNodeModel = this;\n        while (this.parent) {\n            n = n.parent;\n            p.push(n);\n        }\n        return p;\n    }\n\n    hasDirectAncestor(node: TreeNodeBaseModel): boolean {\n        return this.parent !== undefined;\n    }\n\n    get hasChildren(): boolean {\n        return this.children !== undefined && this.children.length > 0;\n    }\n\n    add(nodes: TreeNodeModel | TreeNodeModel[]): void {\n        if (nodes && nodes instanceof Array) {\n            this.children.push(...nodes);\n        } else {\n            this.children.push(nodes);\n        }\n    }\n\n    remove(node: TreeNodeModel): boolean {\n        const idx: number = this.children.indexOf(node);\n        if (idx > -1) {\n            this.children.splice(idx, 1);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    get state(): tree.TreeNodeState {\n        return this._state;\n    }\n    set state(value: tree.TreeNodeState) {\n        this._state = value;\n        this.stateChange.emit(this._state);\n    }\n\n    get stateIsExpandend(): boolean {\n        return (this.state & tree.TreeNodeState.expanded) === tree.TreeNodeState.expanded;\n    }\n\n    get stateIsDisabled(): boolean {\n        return (this.state & tree.TreeNodeState.disabled) === tree.TreeNodeState.disabled;\n    }\n\n    get stateIsSelected(): boolean {\n        return (this.state & tree.TreeNodeState.selected) === tree.TreeNodeState.selected;\n    }\n\n    get stateIsChecked(): boolean {\n        return (this.state & tree.TreeNodeState.checked) === tree.TreeNodeState.checked;\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNodeOptions.html":{"url":"classes/TreeNodeOptions.html","title":"class - TreeNodeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNodeOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts\n        \n\n            \n                Description\n            \n            \n                The view options of node\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         backColor\n                                    \n                                    \n                                         checkable\n                                    \n                                    \n                                         collapsable\n                                    \n                                    \n                                         color\n                                    \n                                    \n                                         href\n                                    \n                                    \n                                         icon\n                                    \n                                    \n                                         iconColor\n                                    \n                                    \n                                         selectable\n                                    \n                                    \n                                         selectedIcon\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options?: TreeNodeOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              options\n                                                              \n                                                                        TreeNodeOptions\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     backColor\n                                \n                            \n                            \n                                \n                                    backColor:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                    backColor \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     checkable\n                                \n                            \n                            \n                                \n                                    checkable:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:33\n                                        \n                                    \n            \n                            \n                                \n                                    Node can be checked \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     collapsable\n                                \n                            \n                            \n                                \n                                    collapsable:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                    Show the expand icons \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     color\n                                \n                            \n                            \n                                \n                                    color:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:25\n                                        \n                                    \n            \n                            \n                                \n                                    Text color \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     href\n                                \n                            \n                            \n                                \n                                    href:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                    A hyperlink \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     icon\n                                \n                            \n                            \n                                \n                                    icon:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                    An additional icon, must be a fontawesome class \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     iconColor\n                                \n                            \n                            \n                                \n                                    iconColor:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:21\n                                        \n                                    \n            \n                            \n                                \n                                    An additional icon's primary color \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     selectable\n                                \n                            \n                            \n                                \n                                    selectable:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:31\n                                        \n                                    \n            \n                            \n                                \n                                    Node can be selected \n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     selectedIcon\n                                \n                            \n                            \n                                \n                                    selectedIcon:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts:23\n                                        \n                                    \n            \n                            \n                                \n                                    An additional icon on select \n            \n                                \n                            \n            \n                        \n                    \n            \n    \n\n\n    \n        export enum TreeNodeState {\n    undefined = 0,\n    checked = 1 \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Array.html":{"url":"interfaces/Array.html","title":"interface - Array","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Array\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/utils/array-extensions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     remove\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     remove\n                                \n                            \n                            \n                                \n            remove(o: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/utils/array-extensions.ts:2\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              o\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Array\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        declare interface Array {\n   remove(o: any): Array;\n}\n\nArray.prototype.remove = function(valueOrPredicate: any): any[] {\n    let predicate = typeof valueOrPredicate === 'function'\n                      ? valueOrPredicate\n                      : function (value: any) { return value === valueOrPredicate; };\n      let removedValues = new Array();\n      console.log(valueOrPredicate, this);\n      for (let i = 0; i \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentWithSelector.html":{"url":"interfaces/ComponentWithSelector.html","title":"interface - ComponentWithSelector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentWithSelector\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                        selector\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selector\n                                    \n                                \n                                \n                                    \n                                        selector:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector, ElementRef, ComponentFactoryResolver, ComponentFactory, ComponentRef, Type } from '@angular/core';\n\nexport interface ComponentWithSelector {\n  selector: string;\n  component: Type;\n}\nexport class DynamicHTMLOptions {\n  components: Array;\n}\nexport abstract class OnMount {\n  abstract dynamicOnMount(attrs?: Map, content?: string, element?: Element): void;\n}\n\nexport interface DynamicHTMLRef {\n  check: () => void;\n  destroy: () => void;\n}\n\nfunction isBrowserPlatform() {\n  return window != null && window.document != null;\n}\n\n@Injectable()\nexport class DynamicHtmlRendererService {\n\n  private componentFactories = new Map>();\n\n  private componentRefs = new Map>>();\n\n  constructor(private options: DynamicHTMLOptions, private cfr: ComponentFactoryResolver, private injector: Injector) {\n    this.options.components.forEach(({ selector, component }) => {\n      let cf: ComponentFactory;\n      cf = this.cfr.resolveComponentFactory(component);\n      this.componentFactories.set(selector, cf);\n    });\n  }\n\n  renderInnerHTML(elementRef: ElementRef, html: string): DynamicHTMLRef {\n    if (!isBrowserPlatform()) {\n      return {\n        check: () => {},\n        destroy: () => {},\n      };\n    }\n    elementRef.nativeElement.innerHTML = html;\n\n    const componentRefs: Array> = [];\n    this.options.components.forEach(({ selector }) => {\n      const elements = (elementRef.nativeElement as Element).querySelectorAll(selector);\n      Array.prototype.forEach.call(elements, (el: Element) => {\n        const content = el.innerHTML;\n        const cmpRef = this.componentFactories.get(selector).create(this.injector, [], el);\n\n        el.removeAttribute('ng-version');\n\n        if (cmpRef.instance.dynamicOnMount) {\n          const attrsMap = new Map();\n          if (el.hasAttributes()) {\n            Array.prototype.forEach.call(el.attributes, (attr: Attr) => {\n              attrsMap.set(attr.name, attr.value);\n            });\n          }\n          (cmpRef.instance as OnMount).dynamicOnMount(attrsMap, content, el);\n        }\n\n        componentRefs.push(cmpRef);\n      });\n    });\n    this.componentRefs.set(elementRef, componentRefs);\n    return {\n      check: () => componentRefs.forEach(ref => ref.changeDetectorRef.detectChanges()),\n      destroy: () => {\n        componentRefs.forEach(ref => ref.destroy());\n        this.componentRefs.delete(elementRef);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridStyles.html":{"url":"interfaces/DatagridStyles.html","title":"interface - DatagridStyles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridStyles\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionCell\n                                \n                                \n                                        first\n                                \n                                \n                                        footer\n                                \n                                \n                                        group\n                                \n                                \n                                        header\n                                \n                                \n                                        headerSortButton\n                                \n                                \n                                        last\n                                \n                                \n                                        middle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionCell\n                                    \n                                \n                                \n                                    \n                                        actionCell:     StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StyleRules\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StyleRules\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                    \n                                \n                                \n                                    \n                                        footer:     StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StyleRules\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StyleRules\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:     StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StyleRules\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerSortButton\n                                    \n                                \n                                \n                                    \n                                        headerSortButton:     StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StyleRules\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StyleRules\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middle\n                                    \n                                \n                                \n                                    \n                                        middle:     StyleRules\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StyleRules\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export type StyleRules = { [name: string]: string };\n\nexport interface DatagridStyles {\n  first?: StyleRules;\n  middle?: StyleRules;\n  last?: StyleRules;\n  group?: StyleRules;\n  header?: StyleRules;\n  headerSortButton?: StyleRules;\n  footer?: StyleRules;\n  actionCell?: StyleRules;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamicHTMLRef.html":{"url":"interfaces/DynamicHTMLRef.html","title":"interface - DynamicHTMLRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamicHTMLRef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        check\n                                \n                                \n                                        destroy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        check\n                                    \n                                \n                                \n                                    \n                                        check:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:15\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destroy\n                                    \n                                \n                                \n                                    \n                                        destroy:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts:16\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector, ElementRef, ComponentFactoryResolver, ComponentFactory, ComponentRef, Type } from '@angular/core';\n\nexport interface ComponentWithSelector {\n  selector: string;\n  component: Type;\n}\nexport class DynamicHTMLOptions {\n  components: Array;\n}\nexport abstract class OnMount {\n  abstract dynamicOnMount(attrs?: Map, content?: string, element?: Element): void;\n}\n\nexport interface DynamicHTMLRef {\n  check: () => void;\n  destroy: () => void;\n}\n\nfunction isBrowserPlatform() {\n  return window != null && window.document != null;\n}\n\n@Injectable()\nexport class DynamicHtmlRendererService {\n\n  private componentFactories = new Map>();\n\n  private componentRefs = new Map>>();\n\n  constructor(private options: DynamicHTMLOptions, private cfr: ComponentFactoryResolver, private injector: Injector) {\n    this.options.components.forEach(({ selector, component }) => {\n      let cf: ComponentFactory;\n      cf = this.cfr.resolveComponentFactory(component);\n      this.componentFactories.set(selector, cf);\n    });\n  }\n\n  renderInnerHTML(elementRef: ElementRef, html: string): DynamicHTMLRef {\n    if (!isBrowserPlatform()) {\n      return {\n        check: () => {},\n        destroy: () => {},\n      };\n    }\n    elementRef.nativeElement.innerHTML = html;\n\n    const componentRefs: Array> = [];\n    this.options.components.forEach(({ selector }) => {\n      const elements = (elementRef.nativeElement as Element).querySelectorAll(selector);\n      Array.prototype.forEach.call(elements, (el: Element) => {\n        const content = el.innerHTML;\n        const cmpRef = this.componentFactories.get(selector).create(this.injector, [], el);\n\n        el.removeAttribute('ng-version');\n\n        if (cmpRef.instance.dynamicOnMount) {\n          const attrsMap = new Map();\n          if (el.hasAttributes()) {\n            Array.prototype.forEach.call(el.attributes, (attr: Attr) => {\n              attrsMap.set(attr.name, attr.value);\n            });\n          }\n          (cmpRef.instance as OnMount).dynamicOnMount(attrsMap, content, el);\n        }\n\n        componentRefs.push(cmpRef);\n      });\n    });\n    this.componentRefs.set(elementRef, componentRefs);\n    return {\n      check: () => componentRefs.forEach(ref => ref.changeDetectorRef.detectChanges()),\n      destroy: () => {\n        componentRefs.forEach(ref => ref.destroy());\n        this.componentRefs.delete(elementRef);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormValidatorModel.html":{"url":"interfaces/FormValidatorModel.html","title":"interface - FormValidatorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormValidatorModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/services/formvalidator.model.ts\n        \n\n            \n                Description\n            \n            \n                The form description model. Use this to have a valid JSON object that can be used\ninstead of the decorators. Each type represents a single decorator. The basic\nstructure looks like this:\n\n            \n\n\n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [field: string]:     |  |  |  |  |  |  |  |  |  |  | \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/services/formvalidator.model.ts:173\n                                        \n                                    \n                        \n                    \n            \n\n    \n\n\n    \n        export type displayGroupType = {\n  'displaygroup': {\n    'name': string;\n    'order'?: number;\n    'description'?: string\n  }\n};\n\n/**\n * This element describes the UI elements label, tooltip, and order.\n */\nexport type displayType = {\n  'display': {\n    'name': string;\n    'order'?: number;\n    'description'?: string\n  }\n};\n\n/**\n * A pipe driven formatting instruction.\n */\nexport type formatType = {\n  'format': {\n    'pipeName': any;\n    'pipeParams'?: any[]\n  }\n};\n/**\n * The field will not appear in autoforms if decorated as hidden. If the parameter\n * is omitted the type returns true due to its pure existence.\n */\nexport type hiddenType = {\n  'hidden'?: boolean\n};\n/**\n * A watermark can be applied. The @see name property is the value that appears\n * in the field. This may not work for specific controls, such as list boxes.\n */\nexport type placeHolderType = {\n  'placeholder': {\n    'name': string;\n  }\n}\n/**\n * The field in rendered as readonly, if possible.\n */\nexport type readonlyType = {\n  'readonly': boolean\n};\n/**\n * This controls the actual control type. The default values are (TypeScript type: decorator type: rendered element):\n *\n * * string: text: &lt;input type=\"text\"&gt;\n * * date: calendar: &lt;input type=\"date\"&gt;\n * * boolean: boolean: &lt;input type=\"checkbox\"&gt;\n * * number: number: &lt;input type=\"number\"&gt;\n *\n * This is the formatting that's autoamtically applied. The template hint goes after and can change any of these values.\n * The allows values are:\n *\n * * any: textarea: &lt;textarea&gt;\n * * array: enum:  &lt;select&gt;\n * * array: list: &lt;select&gt;\n * * any: template: The content of the editor element (does not work with &lt;ac-autoform&gt;)\n *\n */\nexport type templateHintType = {\n  'templatehint': {\n    hint: string;\n  }\n};\n\n/**\n * Base type for validators.\n *\n * Give a private error message in @param msg. If omitted a error message will be generated.\n * Set to active by using @param active. Default is true.\n * Active i18n by using the @param translate. The translation module must be used separately.\n */\nexport type validatorType = {\n  'msg'?: string;\n  'active'?: boolean;\n  'translate'?: boolean;\n}\n/**\n * Compare to fields.\n */\nexport type compareType = {\n  'compare': {\n    'fieldToCompare': string\n  } | validatorType;\n};\n/**\n * Email\n */\nexport type emailType = {\n  'email': validatorType;\n};\n/**\n * Maximum allowed length (string only)\n */\nexport type maxlengthType = {\n  'maxlength': {\n    max: number;\n  } | validatorType;\n};\n/**\n * Minimum allowed length (string only)\n */\nexport type minlengthType = {\n  'minlength': {\n    min: number\n  } | validatorType;\n};\n/**\n * Any regex pattern\n */\nexport type patternType = {\n  'pattern': {\n    pattern: string | RegExp;\n  } | validatorType;\n};\n/**\n * A range for number or Date only.\n */\nexport type rangeType = {\n  'range': {\n    'from': number | Date;\n    'to': number | Date;\n  } | validatorType;\n};\n/**\n * This field is mandatory.\n */\nexport type requiredType = {\n  'required': validatorType;\n};\n/**\n * Maximal and minimal allowed length (string only).\n */\nexport type stringLengthType = {\n  'stringlength': {\n    'min': number;\n    'max': number;\n  } | validatorType;\n};\n\n\n/**\n * The form description model. Use this to have a valid JSON object that can be used\n * instead of the decorators. Each type represents a single decorator. The basic\n * structure looks like this:\n *\n * @example {\n *            \"fieldName\": {\n *               \"display\": {\n *                  \"name\": \"The field's human readible name\"\n *               }\n *            }\n *          }\n *\n * See the different type's descriptions for detailled information.\n *\n */\nexport interface FormValidatorModel {\n  [field: string]: displayType | displayGroupType | formatType | hiddenType | placeHolderType |\n                   compareType | maxlengthType | minlengthType | patternType | stringLengthType |\n                   emailType | requiredType;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ObjectConstructor.html":{"url":"interfaces/ObjectConstructor.html","title":"interface - ObjectConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ObjectConstructor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/utils/object-extensions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     equals\n                                \n                                \n                                     same\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     equals\n                                \n                            \n                            \n                                \n            equals(x: any, y: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/utils/object-extensions.ts:2\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              x\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              y\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     same\n                                \n                            \n                            \n                                \n            same(x: any, y: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/utils/object-extensions.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              x\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              y\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        declare interface ObjectConstructor {\n  equals(x: any, y: any): boolean;\n  same(x: any, y: any): boolean;\n}\n\nObject.same = function (source, target): boolean {\n  if (source === target) {\n    return true;\n  }\n  if (!(source instanceof Object) || !(target instanceof Object)) { return false; }\n  // if they are not strictly equal, they both need to be Objects\n  for (let prop in source) {\n    if (!source.hasOwnProperty(prop)) { continue; }\n    if (source[prop] === undefined || source[prop] === null || source[prop] === '') { continue; }\n    if (typeof source[prop] === 'object' && Object.same(source[prop], target[prop])) { continue; }\n\n    if (typeof source[prop] === 'string' && target[prop].startsWith(source[prop])) { continue; }\n    if (source[prop] === target[prop]) { continue; }\n\n    return false;\n  }\n\n  return true;\n};\n\nObject.equals = function (x: any, y: any): boolean {\n  if (x === y) { return true; }\n  // if both x and y are null or undefined and exactly the same\n\n  if (!(x instanceof Object) || !(y instanceof Object)) { return false; }\n  // if they are not strictly equal, they both need to be Objects\n\n  if (x.constructor !== y.constructor) { return false; }\n  // they must have the exact same prototype chain, the closest we can do is\n  // test there constructor.\n\n  for (var p in x) {\n    if (!x.hasOwnProperty(p)) { continue; }\n    // other properties were tested using x.constructor === y.constructor\n\n    if (!y.hasOwnProperty(p)) { return false; }\n    // allows to compare x[ p ] and y[ p ] when set to undefined\n\n    if (x[p] === y[p]) { continue; }\n    // if they have the same strict value or identity then they are equal\n\n    if (typeof (x[p]) !== 'object') { return false; }\n    // Numbers, Strings, Functions, Booleans must be strictly equal\n\n    if (!Object.equals(x[p], y[p])) { return false; }\n    // Objects and Arrays must be tested recursively\n  }\n\n  for (p in y) {\n    if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) { return false; }\n    // allows x[ p ] to be set to undefined\n  }\n  return true;\n};\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeNodeBaseModel.html":{"url":"interfaces/TreeNodeBaseModel.html","title":"interface - TreeNodeBaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeNodeBaseModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts\n        \n\n            \n                Description\n            \n            \n                The base class.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        options\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     add\n                                \n                                \n                                     hasDirectAncestor\n                                \n                                \n                                     remove\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     add\n                                \n                            \n                            \n                                \n            add(node: TreeNodeBaseModel | [])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNodeBaseModel | []\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     hasDirectAncestor\n                                \n                            \n                            \n                                \n            hasDirectAncestor(node: TreeNodeBaseModel)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNodeBaseModel\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     remove\n                                \n                            \n                            \n                                \n            remove(node: TreeNodeBaseModel)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNodeBaseModel\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     TreeNodeBaseModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreeNodeBaseModel[]\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     TreeNodeOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreeNodeOptions\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     TreeNodeBaseModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreeNodeBaseModel\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts:7\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { TreeNodeOptions } from './treenodeoptions.model';\n\n/**\n * The base class.\n */\nexport interface TreeNodeBaseModel {\n    parent: TreeNodeBaseModel;\n    children: TreeNodeBaseModel[];\n    options: TreeNodeOptions;\n    add(node: TreeNodeBaseModel | TreeNodeBaseModel[]): void;\n    remove(node: TreeNodeBaseModel): boolean;\n    hasDirectAncestor(node: TreeNodeBaseModel): boolean;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _window\n                        \n                        \n                            Compare\n                        \n                        \n                            compareInternalSetup\n                        \n                        \n                            Display\n                        \n                        \n                            DisplayGroup\n                        \n                        \n                            displayGroupInternalSetup\n                        \n                        \n                            displayInternalSetup\n                        \n                        \n                            Email\n                        \n                        \n                            emailInternalSetup\n                        \n                        \n                            formatInternalSetup\n                        \n                        \n                            FormatPipe\n                        \n                        \n                            Hidden\n                        \n                        \n                            hiddenInternalSetup\n                        \n                        \n                            isBrowserPlatform\n                        \n                        \n                            MaxLength\n                        \n                        \n                            maxLengthInternalSetup\n                        \n                        \n                            MinLength\n                        \n                        \n                            minLengthInternalSetup\n                        \n                        \n                            Pattern\n                        \n                        \n                            patternInternalSetup\n                        \n                        \n                            Placeholder\n                        \n                        \n                            placeholderInternalSetup\n                        \n                        \n                            Range\n                        \n                        \n                            rangeInternalSetup\n                        \n                        \n                            Readonly\n                        \n                        \n                            readonlyInternalSetup\n                        \n                        \n                            Required\n                        \n                        \n                            requiredInternalSetup\n                        \n                        \n                            StringLength\n                        \n                        \n                            stringLengthInternalSetup\n                        \n                        \n                            TemplateHint\n                        \n                        \n                            templateHintInternalSetup\n                        \n                        \n                            validateCompare\n                        \n                        \n                            validateRange\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/utils/windowref.ts\n    \n                \n                \n                    \n                        \n                            \n                             _window\n                        \n                    \n                    \n                        \n    _window()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/val-compare.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             Compare\n                        \n                    \n                    \n                        \n    Compare(withProperty: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The compare decorator compares two field's values and\n    shows an error message on the decorated field. The other field (compared to) does\n    not has a decorator nor receives a message.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      withProperty\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : A string that represents the compared field's name.\n    \n                                                    \n                                                    \n                                                      msg\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : A custom message.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             compareInternalSetup\n                        \n                    \n                    \n                        \n    compareInternalSetup(target: undefined, key: undefined, withProperty: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/hint-display.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             Display\n                        \n                    \n                    \n                        \n    Display(name: undefined, order: undefined, description: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The Display decorator.\n    This decorator can be used on fields. It's being used to create label in forms and headers in the grid.\n    Additional parameters are provided to refine forms further.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      name\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      The Name or Label that appears in forms or as header in grids.\n    \n                                                    \n                                                    \n                                                      order\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      If one uses AcAutoForm to create a whole form from a model, this controls the element's order.\n    \n                                                    \n                                                    \n                                                      description\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      A tooltip that can be used optionally.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             displayInternalSetup\n                        \n                    \n                    \n                        \n    displayInternalSetup(target: undefined, key: undefined, name: undefined, order: undefined, description: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/hint-displaygroup.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             DisplayGroup\n                        \n                    \n                    \n                        \n    DisplayGroup(name: undefined, order: undefined, description: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The DisplayGroup decorator. Groups fields in auto forms.\n    Just define a name (that appears as the group's name) and\n    put the very same name on all members of the group.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      name\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      The Name or Label that appears in forms as the groups legend.\n    \n                                                    \n                                                    \n                                                      order\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      If one uses AcAutoForm to create a whole form from a model, this controls the groups order.\n    \n                                                    \n                                                    \n                                                      description\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      A tooltip that can be used optionally.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             displayGroupInternalSetup\n                        \n                    \n                    \n                        \n    displayGroupInternalSetup(target: undefined, key: undefined, name: undefined, order: undefined, description: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/val-email.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             Email\n                        \n                    \n                    \n                        \n    Email(msg: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Validates a field against an email pattern.\n    Based on \"pattern\", so in form one must use hasError('pattern') to get validation results.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      msg\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : A custom message. If not provided \"The field ffff must contain a valid e-mail address.\"\n       will be generated, while ffff is the property name.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             emailInternalSetup\n                        \n                    \n                    \n                        \n    emailInternalSetup(target: undefined, key: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/hint-formatpipe.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             formatInternalSetup\n                        \n                    \n                    \n                        \n    formatInternalSetup(target: undefined, key: undefined, pipe: undefined, pipeParams: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             FormatPipe\n                        \n                    \n                    \n                        \n    FormatPipe(pipe: undefined, pipeParams: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The Format decorator. Provide the name of a Pipe that's being used by the\n    dynamic pipe formatter. Hence, the form does not need to apply forms manually.\n    The reason is that you may create forms automatically and hence can't write\n    actual Pipes somewhere. This applies especially if you create a table and loop\n    through properties.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      readonly\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      Optional, default is true.\n    \n                                                    \n                                                    \n                                                      description\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      A tooltip that can be used optionally.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    projects/svogv/src/lib/decorators/hint-hidden.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             Hidden\n                        \n                    \n                    \n                        \n    Hidden(hide: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The Hidden decorator.\n    The @see DataGrid does not show columns for properties tagged with @Hidden().\n    Fields in forms that render automatically\n    using the @see AcEditor component will render as .\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      hide\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      Optional, default is true.\n    \n                                                    \n                                                    \n                                                      description\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      A tooltip that can be used optionally.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             hiddenInternalSetup\n                        \n                    \n                    \n                        \n    hiddenInternalSetup(target: undefined, key: undefined, hide: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n    \n                \n                \n                    \n                        \n                            \n                             isBrowserPlatform\n                        \n                    \n                    \n                        \n    isBrowserPlatform()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/val-maxlength.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             MaxLength\n                        \n                    \n                    \n                        \n    MaxLength(len: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The maxlength decorator assures that a string field contains not more than a number of characters.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      len\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : the maximum length.\n    \n                                                    \n                                                    \n                                                      msg\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : A custom message.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             maxLengthInternalSetup\n                        \n                    \n                    \n                        \n    maxLengthInternalSetup(target: undefined, key: undefined, len: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/val-minlength.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             MinLength\n                        \n                    \n                    \n                        \n    MinLength(len: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The minlength decorator assures that a string field contains at least a number of characters.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      len\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : the required length.\n    \n                                                    \n                                                    \n                                                      msg\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : A custom message.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             minLengthInternalSetup\n                        \n                    \n                    \n                        \n    minLengthInternalSetup(target: undefined, key: undefined, len: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/val-pattern.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             Pattern\n                        \n                    \n                    \n                        \n    Pattern(pattern: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The decorator assures that a string field fullfilles a regular expression pattern.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      pattern\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : The expression as RegExp.\n    \n                                                    \n                                                    \n                                                      msg\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : A custom message.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             patternInternalSetup\n                        \n                    \n                    \n                        \n    patternInternalSetup(target: undefined, key: undefined, reg: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/hint-placeholder.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             Placeholder\n                        \n                    \n                    \n                        \n    Placeholder(name: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The Placeholder decorator.\n    The placeholder adds the given text as a watermark to any input fields.\n    There is no function in DataGrid.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      name\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      The Name that appears in form fields as a watermark.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             placeholderInternalSetup\n                        \n                    \n                    \n                        \n    placeholderInternalSetup(target: undefined, key: undefined, name: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/val-range.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             Range\n                        \n                    \n                    \n                        \n    Range(from: undefined, to: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Validates a field against an range. Applies to numerical values or dates.\n    The range's values are included in the valid range.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      from\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      The minimum value (included) as number or Date\n    \n                                                    \n                                                    \n                                                      to\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      The maximum value (included) as number or Date\n    \n                                                    \n                                                    \n                                                      msg\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      A custom message. If not provided \"The field [field] does not fall into the range from [from] to [to]\" \n    will be generated, while [field] is the propertie's name.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             rangeInternalSetup\n                        \n                    \n                    \n                        \n    rangeInternalSetup(target: undefined, key: undefined, from: undefined, to: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/hint-readonly.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             Readonly\n                        \n                    \n                    \n                        \n    Readonly(readonly: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The Readonly decorator. The field is readonly in the form. It just renders grayed out\n    and handles the internals using default HTML5 techniques.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      readonly\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      Optional, default is true.\n    \n                                                    \n                                                    \n                                                      description\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      A tooltip that can be used optionally.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             readonlyInternalSetup\n                        \n                    \n                    \n                        \n    readonlyInternalSetup(target: undefined, key: undefined, readonly: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/val-required.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             Required\n                        \n                    \n                    \n                        \n    Required(msg: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                This decorator is for validation of mandatory fields.\n    The default message is 'The field {keyName} is required'.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      msg\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      The error message shown in case of error. A default value is being provided if omitted.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             requiredInternalSetup\n                        \n                    \n                    \n                        \n    requiredInternalSetup(target: undefined, key: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/val-stringlength.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             StringLength\n                        \n                    \n                    \n                        \n    StringLength(min: undefined, max: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The decorator that assures that a string field contains at least a number of characters and a minimum number, too.\n    The default message is 'The field {fieldname} needs at least {minlength} characters'.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      min\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : The required length.\n    \n                                                    \n                                                    \n                                                      max\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : The maximum length.\n    \n                                                    \n                                                    \n                                                      msg\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      : Optionally a custom message.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             stringLengthInternalSetup\n                        \n                    \n                    \n                        \n    stringLengthInternalSetup(target: undefined, key: undefined, min: undefined, max: undefined, msg: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/decorators/hint-templatehint.decorator.ts\n    \n                \n                \n                    \n                        \n                            \n                             TemplateHint\n                        \n                    \n                    \n                        \n    TemplateHint(template: undefined, params: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                The Template decorator.\n    One can define the way a property gets rendered.\n    Currently supported:\n    \n    TextArea\n    Calendar\n    Range\n    Number\n    Text\n    \n    The Calendar creates Date-fielsd. However, in casde of a datatype Date the date field will be created anyway.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      template\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      The Name that appears in form fields as a watermark.\n    \n                                                    \n                                                    \n                                                      params\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      Depending of template some additional values as a dictionary.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             templateHintInternalSetup\n                        \n                    \n                    \n                        \n    templateHintInternalSetup(target: undefined, key: undefined, template: undefined, params: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    projects/svogv/src/lib/services/validators/compare.validator.ts\n    \n                \n                \n                    \n                        \n                            \n                             validateCompare\n                        \n                    \n                    \n                        \n    validateCompare(p: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                A custom validator to compare two fields. This is internally to support the infarstructure\n    and not intendet to being used by custom code.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      p\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      The field's name\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    projects/svogv/src/lib/services/validators/range.validator.ts\n    \n                \n                \n                    \n                        \n                            \n                             validateRange\n                        \n                    \n                    \n                        \n    validateRange(f: undefined, t: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                A custom validator to valdiate a range of numbers or dates. This is internally to support the infarstructure\n    and not intendet to being used by custom code.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      p\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      The field's name\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            provider\n                        \n                        \n                            SVOGV_COMPONENTS\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/svogv.module.ts\n    \n                \n                \n                    \n                        \n                            \n                             provider\n                        \n                    \n                    \n                        \n                            provider:     []\n    \n                        \n                    \n                        \n                            \n                                Type :     []\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             SVOGV_COMPONENTS\n                        \n                    \n                    \n                        \n                            SVOGV_COMPONENTS:     []\n    \n                        \n                    \n                        \n                            \n                                Type :     []\n    \n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareType\n                        \n                        \n                            displayGroupType\n                        \n                        \n                            displayType\n                        \n                        \n                            emailType\n                        \n                        \n                            formatType\n                        \n                        \n                            hiddenType\n                        \n                        \n                            maxlengthType\n                        \n                        \n                            minlengthType\n                        \n                        \n                            patternType\n                        \n                        \n                            placeHolderType\n                        \n                        \n                            rangeType\n                        \n                        \n                            readonlyType\n                        \n                        \n                            requiredType\n                        \n                        \n                            stringLengthType\n                        \n                        \n                            StyleRules\n                        \n                        \n                            templateHintType\n                        \n                        \n                            validatorType\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/services/formvalidator.model.ts\n    \n            \n                \n                    \n                        \n                            \n                            compareType\n                        \n                    \n                        \n                            \n                                Compare to fields.\n    \n                            \n                        \n                    \n                        \n                            compareType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            displayGroupType\n                        \n                    \n                        \n                            \n                                This elements describes the grouping of elements in fieldset-controls. Each\n    field that is decorated in an DisplayGroup with the very same name is grouped\n    into that part. The name appears in the fieldsets legend-control. The\n    description makes a tooltip. If there are more groups the order is controlled\n    by the @see order element.\n    \n                            \n                        \n                    \n                        \n                            displayGroupType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            displayType\n                        \n                    \n                        \n                            \n                                This element describes the UI elements label, tooltip, and order.\n    \n                            \n                        \n                    \n                        \n                            displayType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            emailType\n                        \n                    \n                        \n                            \n                                Email\n    \n                            \n                        \n                    \n                        \n                            emailType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            formatType\n                        \n                    \n                        \n                            \n                                A pipe driven formatting instruction.\n    \n                            \n                        \n                    \n                        \n                            formatType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            hiddenType\n                        \n                    \n                        \n                            \n                                The field will not appear in autoforms if decorated as hidden. If the parameter\n    is omitted the type returns true due to its pure existence.\n    \n                            \n                        \n                    \n                        \n                            hiddenType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            maxlengthType\n                        \n                    \n                        \n                            \n                                Maximum allowed length (string only)\n    \n                            \n                        \n                    \n                        \n                            maxlengthType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            minlengthType\n                        \n                    \n                        \n                            \n                                Minimum allowed length (string only)\n    \n                            \n                        \n                    \n                        \n                            minlengthType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            patternType\n                        \n                    \n                        \n                            \n                                Any regex pattern\n    \n                            \n                        \n                    \n                        \n                            patternType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            placeHolderType\n                        \n                    \n                        \n                            \n                                A watermark can be applied. The @see name property is the value that appears\n    in the field. This may not work for specific controls, such as list boxes.\n    \n                            \n                        \n                    \n                        \n                            placeHolderType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            rangeType\n                        \n                    \n                        \n                            \n                                A range for number or Date only.\n    \n                            \n                        \n                    \n                        \n                            rangeType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            readonlyType\n                        \n                    \n                        \n                            \n                                The field in rendered as readonly, if possible.\n    \n                            \n                        \n                    \n                        \n                            readonlyType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            requiredType\n                        \n                    \n                        \n                            \n                                This field is mandatory.\n    \n                            \n                        \n                    \n                        \n                            requiredType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            stringLengthType\n                        \n                    \n                        \n                            \n                                Maximal and minimal allowed length (string only).\n    \n                            \n                        \n                    \n                        \n                            stringLengthType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            templateHintType\n                        \n                    \n                        \n                            \n                                This controls the actual control type. The default values are (TypeScript type: decorator type: rendered element):\n    \n    string: text: \n    date: calendar: \n    boolean: boolean: \n    number: number: \n    \n    This is the formatting that's autoamtically applied. The template hint goes after and can change any of these values.\n    The allows values are:\n    \n    any: textarea: \n    array: enum:  \n    array: list: \n    any: template: The content of the editor element (does not work with )\n    \n    \n                            \n                        \n                    \n                        \n                            templateHintType:     literal type\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            validatorType\n                        \n                    \n                        \n                            \n                                Base type for validators.\n    Give a private error message in @param msg. If omitted a error message will be generated.\n    Set to active by using @param active. Default is true.\n    Active i18n by using the @param translate. The translation module must be used separately.\n    \n                            \n                        \n                    \n                        \n                            validatorType:     literal type\n    \n                        \n                    \n                \n            \n    \n    projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts\n    \n            \n                \n                    \n                        \n                            \n                            StyleRules\n                        \n                    \n                    \n                        \n                            StyleRules:     literal type\n    \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Direction\n                        \n                        \n                            TreeNodeState\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts\n    \n            \n                \n                    \n                        \n                            \n                            Direction\n                        \n                    \n                            \n                                \n                                    Â Ascending\n                                \n                            \n                            \n                                \n                                    Â Descending\n                                \n                            \n                \n            \n    \n    projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts\n    \n            \n                \n                    \n                        \n                            \n                            TreeNodeState\n                        \n                    \n                        \n                            \n                                The state of node\n    \n                            \n                        \n                            \n                                \n                                    Â undefined\n                                \n                            \n                            \n                                \n                                    Value: 0\n                                \n                            \n                            \n                                \n                                    Â checked\n                                \n                            \n                            \n                                \n                                    Â disabled\n                                \n                            \n                            \n                                \n                                    Â expanded\n                                \n                            \n                            \n                                \n                                    Â selected\n                                \n                            \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n            \n            \n                class\n            \n            \n                DynamicHTMLOptions\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n            \n            \n                class\n            \n            \n                OnMount\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n            \n            \n                injectable\n            \n            \n                DynamicHtmlRendererService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n            \n            \n                interface\n            \n            \n                ComponentWithSelector\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                projects/svogv/src/lib/services/dynamichtmlrenderer.service.ts\n            \n            \n                interface\n            \n            \n                DynamicHTMLRef\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                projects/svogv/src/lib/services/formvalidator-fromjson.service.ts\n            \n            \n                injectable\n            \n            \n                FormValidatorFromJsonService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                projects/svogv/src/lib/services/formvalidator.model.ts\n            \n            \n                interface\n            \n            \n                FormValidatorModel\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                projects/svogv/src/lib/services/formvalidator.service.ts\n            \n            \n                injectable\n            \n            \n                FormValidatorService\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                projects/svogv/src/lib/utils/array-extensions.ts\n            \n            \n                interface\n            \n            \n                Array\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                projects/svogv/src/lib/utils/object-extensions.ts\n            \n            \n                interface\n            \n            \n                ObjectConstructor\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                projects/svogv/src/lib/utils/windowref.ts\n            \n            \n                injectable\n            \n            \n                WindowRef\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/datagrid/datagrid.component.ts\n            \n            \n                component\n            \n            \n                DataGridComponent\n            \n            \n                52 %\n                (13/25)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/datagrid/models/datagrid.model.ts\n            \n            \n                class\n            \n            \n                DataGridModel\n            \n            \n                37 %\n                (10/27)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/datagrid/models/datagridheader.model.ts\n            \n            \n                class\n            \n            \n                DataGridHeaderModel\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/datagrid/models/datagriditem.model.ts\n            \n            \n                class\n            \n            \n                DataGridItemModel\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/datagrid/models/datagridstyle.model.ts\n            \n            \n                interface\n            \n            \n                DatagridStyles\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/datagrid/pagination/datagridpagination.component.ts\n            \n            \n                component\n            \n            \n                DataGridPaginationComponent\n            \n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/datagrid/pipe/formatdata.pipe.ts\n            \n            \n                pipe\n            \n            \n                FormatDataPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/editors/autoform.component.ts\n            \n            \n                component\n            \n            \n                AutoFormComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/editors/editor.component.ts\n            \n            \n                component\n            \n            \n                EditorComponent\n            \n            \n                68 %\n                (15/22)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/treeview/models/texttreenode.model.ts\n            \n            \n                class\n            \n            \n                TextTreeNodeModel\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/treeview/models/treenode.model.ts\n            \n            \n                class\n            \n            \n                TreeNodeModel\n            \n            \n                36 %\n                (7/19)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/treeview/models/treenodebase.model.ts\n            \n            \n                interface\n            \n            \n                TreeNodeBaseModel\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/treeview/models/treenodecomponent.model.ts\n            \n            \n                class\n            \n            \n                TreeNodeComponentModel\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/treeview/models/treenodeoptions.model.ts\n            \n            \n                class\n            \n            \n                TreeNodeOptions\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/treeview/treeview.component.ts\n            \n            \n                component\n            \n            \n                TreeViewComponent\n            \n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                projects/svogv/src/lib/widgets/treeview/treeviewnode/treeviewnode.component.ts\n            \n            \n                component\n            \n            \n                TreeViewNodeComponent\n            \n            \n                22 %\n                (6/27)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
